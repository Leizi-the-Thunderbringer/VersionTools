2025-10-02T06:58:42.8891410Z Current runner version: '2.328.0'
2025-10-02T06:58:42.8917730Z ##[group]Runner Image Provisioner
2025-10-02T06:58:42.8918610Z Hosted Compute Agent
2025-10-02T06:58:42.8919174Z Version: 20250912.392
2025-10-02T06:58:42.8919742Z Commit: d921fda672a98b64f4f82364647e2f10b2267d0b
2025-10-02T06:58:42.8920498Z Build Date: 2025-09-12T15:23:14Z
2025-10-02T06:58:42.8921068Z ##[endgroup]
2025-10-02T06:58:42.8921934Z ##[group]Operating System
2025-10-02T06:58:42.8922627Z Ubuntu
2025-10-02T06:58:42.8923095Z 24.04.3
2025-10-02T06:58:42.8923603Z LTS
2025-10-02T06:58:42.8924074Z ##[endgroup]
2025-10-02T06:58:42.8924593Z ##[group]Runner Image
2025-10-02T06:58:42.8925137Z Image: ubuntu-24.04
2025-10-02T06:58:42.8925690Z Version: 20250922.53.1
2025-10-02T06:58:42.8926704Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250922.53/images/ubuntu/Ubuntu2404-Readme.md
2025-10-02T06:58:42.8928290Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250922.53
2025-10-02T06:58:42.8929400Z ##[endgroup]
2025-10-02T06:58:42.8932179Z ##[group]GITHUB_TOKEN Permissions
2025-10-02T06:58:42.8934526Z Actions: write
2025-10-02T06:58:42.8935106Z Attestations: write
2025-10-02T06:58:42.8935596Z Checks: write
2025-10-02T06:58:42.8936196Z Contents: write
2025-10-02T06:58:42.8936673Z Deployments: write
2025-10-02T06:58:42.8937177Z Discussions: write
2025-10-02T06:58:42.8937749Z Issues: write
2025-10-02T06:58:42.8938238Z Metadata: read
2025-10-02T06:58:42.8938717Z Models: read
2025-10-02T06:58:42.8939238Z Packages: write
2025-10-02T06:58:42.8939749Z Pages: write
2025-10-02T06:58:42.8940217Z PullRequests: write
2025-10-02T06:58:42.8940832Z RepositoryProjects: write
2025-10-02T06:58:42.8941354Z SecurityEvents: write
2025-10-02T06:58:42.8942154Z Statuses: write
2025-10-02T06:58:42.8942743Z ##[endgroup]
2025-10-02T06:58:42.8944844Z Secret source: Actions
2025-10-02T06:58:42.8945940Z Prepare workflow directory
2025-10-02T06:58:42.9331236Z Prepare all required actions
2025-10-02T06:58:42.9388047Z Getting action download info
2025-10-02T06:58:43.2263153Z Download action repository 'actions/checkout@v4' (SHA:08eba0b27e820071cde6df949e0beb9ba4906955)
2025-10-02T06:58:43.4854776Z Complete job name: Code Quality Check
2025-10-02T06:58:43.5644616Z ##[group]Run actions/checkout@v4
2025-10-02T06:58:43.5645473Z with:
2025-10-02T06:58:43.5645909Z   repository: Zixiao-Tech/VersionTools
2025-10-02T06:58:43.5646638Z   token: ***
2025-10-02T06:58:43.5647025Z   ssh-strict: true
2025-10-02T06:58:43.5647432Z   ssh-user: git
2025-10-02T06:58:43.5647848Z   persist-credentials: true
2025-10-02T06:58:43.5648313Z   clean: true
2025-10-02T06:58:43.5648740Z   sparse-checkout-cone-mode: true
2025-10-02T06:58:43.5649248Z   fetch-depth: 1
2025-10-02T06:58:43.5649639Z   fetch-tags: false
2025-10-02T06:58:43.5650051Z   show-progress: true
2025-10-02T06:58:43.5650472Z   lfs: false
2025-10-02T06:58:43.5650848Z   submodules: false
2025-10-02T06:58:43.5651270Z   set-safe-directory: true
2025-10-02T06:58:43.5652399Z ##[endgroup]
2025-10-02T06:58:43.6750105Z Syncing repository: Zixiao-Tech/VersionTools
2025-10-02T06:58:43.6752331Z ##[group]Getting Git version info
2025-10-02T06:58:43.6753175Z Working directory is '/home/runner/work/VersionTools/VersionTools'
2025-10-02T06:58:43.6754184Z [command]/usr/bin/git version
2025-10-02T06:58:43.6898725Z git version 2.51.0
2025-10-02T06:58:43.6925664Z ##[endgroup]
2025-10-02T06:58:43.6947668Z Temporarily overriding HOME='/home/runner/work/_temp/f9b3f542-835a-4e51-a35f-a2d9f59cb96b' before making global git config changes
2025-10-02T06:58:43.6953391Z Adding repository directory to the temporary git global config as a safe directory
2025-10-02T06:58:43.6954621Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/VersionTools/VersionTools
2025-10-02T06:58:43.6991349Z Deleting the contents of '/home/runner/work/VersionTools/VersionTools'
2025-10-02T06:58:43.6995055Z ##[group]Initializing the repository
2025-10-02T06:58:43.6999084Z [command]/usr/bin/git init /home/runner/work/VersionTools/VersionTools
2025-10-02T06:58:43.7127294Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-10-02T06:58:43.7129094Z hint: is subject to change. To configure the initial branch name to use in all
2025-10-02T06:58:43.7130573Z hint: of your new repositories, which will suppress this warning, call:
2025-10-02T06:58:43.7131895Z hint:
2025-10-02T06:58:43.7132675Z hint: 	git config --global init.defaultBranch <name>
2025-10-02T06:58:43.7133315Z hint:
2025-10-02T06:58:43.7133866Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-10-02T06:58:43.7134757Z hint: 'development'. The just-created branch can be renamed via this command:
2025-10-02T06:58:43.7135445Z hint:
2025-10-02T06:58:43.7135828Z hint: 	git branch -m <name>
2025-10-02T06:58:43.7136261Z hint:
2025-10-02T06:58:43.7136849Z hint: Disable this message with "git config set advice.defaultBranchName false"
2025-10-02T06:58:43.7138344Z Initialized empty Git repository in /home/runner/work/VersionTools/VersionTools/.git/
2025-10-02T06:58:43.7144088Z [command]/usr/bin/git remote add origin https://github.com/Zixiao-Tech/VersionTools
2025-10-02T06:58:43.7185059Z ##[endgroup]
2025-10-02T06:58:43.7185818Z ##[group]Disabling automatic garbage collection
2025-10-02T06:58:43.7189247Z [command]/usr/bin/git config --local gc.auto 0
2025-10-02T06:58:43.7219362Z ##[endgroup]
2025-10-02T06:58:43.7220029Z ##[group]Setting up auth
2025-10-02T06:58:43.7226565Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-10-02T06:58:43.7256654Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-10-02T06:58:43.7630610Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-10-02T06:58:43.7659830Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-10-02T06:58:43.7886355Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-10-02T06:58:43.7953717Z ##[endgroup]
2025-10-02T06:58:43.7954954Z ##[group]Fetching the repository
2025-10-02T06:58:43.7971942Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +bc026dd79f178c1866687aca1f3d84bc25841d3f:refs/remotes/origin/main
2025-10-02T06:58:44.3132157Z From https://github.com/Zixiao-Tech/VersionTools
2025-10-02T06:58:44.3133836Z  * [new ref]         bc026dd79f178c1866687aca1f3d84bc25841d3f -> origin/main
2025-10-02T06:58:44.3167665Z ##[endgroup]
2025-10-02T06:58:44.3170510Z ##[group]Determining the checkout info
2025-10-02T06:58:44.3172264Z ##[endgroup]
2025-10-02T06:58:44.3176508Z [command]/usr/bin/git sparse-checkout disable
2025-10-02T06:58:44.3218988Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-10-02T06:58:44.3248879Z ##[group]Checking out the ref
2025-10-02T06:58:44.3253329Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-10-02T06:58:44.3767322Z Switched to a new branch 'main'
2025-10-02T06:58:44.3768730Z branch 'main' set up to track 'origin/main'.
2025-10-02T06:58:44.3780675Z ##[endgroup]
2025-10-02T06:58:44.3818843Z [command]/usr/bin/git log -1 --format=%H
2025-10-02T06:58:44.3840954Z bc026dd79f178c1866687aca1f3d84bc25841d3f
2025-10-02T06:58:44.4055869Z ##[group]Run sudo apt-get update
2025-10-02T06:58:44.4057262Z [36;1msudo apt-get update[0m
2025-10-02T06:58:44.4058651Z [36;1msudo apt-get install -y clang-format cppcheck[0m
2025-10-02T06:58:44.4097874Z shell: /usr/bin/bash -e {0}
2025-10-02T06:58:44.4099063Z ##[endgroup]
2025-10-02T06:58:44.4944517Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
2025-10-02T06:58:44.5325254Z Hit:2 http://azure.archive.ubuntu.com/ubuntu noble InRelease
2025-10-02T06:58:44.5343461Z Get:3 http://azure.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
2025-10-02T06:58:44.5407948Z Get:4 http://azure.archive.ubuntu.com/ubuntu noble-backports InRelease [126 kB]
2025-10-02T06:58:44.5425011Z Get:5 http://azure.archive.ubuntu.com/ubuntu noble-security InRelease [126 kB]
2025-10-02T06:58:44.5463916Z Hit:6 https://packages.microsoft.com/repos/azure-cli noble InRelease
2025-10-02T06:58:44.5790763Z Get:7 https://packages.microsoft.com/ubuntu/24.04/prod noble InRelease [3600 B]
2025-10-02T06:58:44.6640073Z Get:8 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [1475 kB]
2025-10-02T06:58:44.6888296Z Get:9 http://azure.archive.ubuntu.com/ubuntu noble-updates/main Translation-en [285 kB]
2025-10-02T06:58:44.6915023Z Get:10 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Components [175 kB]
2025-10-02T06:58:44.6940019Z Get:11 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 c-n-f Metadata [15.3 kB]
2025-10-02T06:58:44.6954515Z Get:12 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1486 kB]
2025-10-02T06:58:44.7049783Z Get:13 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe Translation-en [300 kB]
2025-10-02T06:58:44.7080619Z Get:14 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Components [377 kB]
2025-10-02T06:58:44.7118072Z Get:15 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 c-n-f Metadata [31.1 kB]
2025-10-02T06:58:44.7131317Z Get:16 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Packages [2034 kB]
2025-10-02T06:58:44.7253592Z Get:17 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted Translation-en [458 kB]
2025-10-02T06:58:44.7705615Z Get:18 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Components [212 B]
2025-10-02T06:58:44.7762349Z Get:19 http://azure.archive.ubuntu.com/ubuntu noble-updates/multiverse Translation-en [6116 B]
2025-10-02T06:58:44.7766380Z Get:20 http://azure.archive.ubuntu.com/ubuntu noble-updates/multiverse amd64 Components [940 B]
2025-10-02T06:58:44.7770212Z Get:21 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 Packages [40.4 kB]
2025-10-02T06:58:44.7774081Z Get:22 http://azure.archive.ubuntu.com/ubuntu noble-backports/main Translation-en [9208 B]
2025-10-02T06:58:44.7783980Z Get:23 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 Components [7148 B]
2025-10-02T06:58:44.7799006Z Get:24 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 c-n-f Metadata [368 B]
2025-10-02T06:58:44.7818737Z Get:25 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Packages [28.9 kB]
2025-10-02T06:58:44.7832558Z Get:26 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe Translation-en [17.5 kB]
2025-10-02T06:58:44.7849204Z Get:27 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Components [11.0 kB]
2025-10-02T06:58:44.7864047Z Get:28 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 c-n-f Metadata [1444 B]
2025-10-02T06:58:44.7875773Z Get:29 http://azure.archive.ubuntu.com/ubuntu noble-backports/restricted amd64 Components [212 B]
2025-10-02T06:58:44.7891428Z Get:30 http://azure.archive.ubuntu.com/ubuntu noble-backports/multiverse amd64 Components [212 B]
2025-10-02T06:58:44.7900413Z Get:31 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Packages [1198 kB]
2025-10-02T06:58:44.8388873Z Get:32 http://azure.archive.ubuntu.com/ubuntu noble-security/main Translation-en [201 kB]
2025-10-02T06:58:44.8410291Z Get:33 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Components [21.5 kB]
2025-10-02T06:58:44.8425550Z Get:34 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 c-n-f Metadata [8744 B]
2025-10-02T06:58:44.8437766Z Get:35 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Packages [881 kB]
2025-10-02T06:58:44.8503538Z Get:36 http://azure.archive.ubuntu.com/ubuntu noble-security/universe Translation-en [196 kB]
2025-10-02T06:58:44.8532465Z Get:37 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Components [52.3 kB]
2025-10-02T06:58:44.8548625Z Get:38 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 c-n-f Metadata [18.0 kB]
2025-10-02T06:58:44.8566880Z Get:39 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Packages [1933 kB]
2025-10-02T06:58:44.8694031Z Get:40 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted Translation-en [438 kB]
2025-10-02T06:58:44.8734619Z Get:41 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Components [208 B]
2025-10-02T06:58:44.8753683Z Get:42 http://azure.archive.ubuntu.com/ubuntu noble-security/multiverse Translation-en [5844 B]
2025-10-02T06:58:44.8766708Z Get:43 http://azure.archive.ubuntu.com/ubuntu noble-security/multiverse amd64 Components [208 B]
2025-10-02T06:58:44.8867358Z Get:44 https://packages.microsoft.com/ubuntu/24.04/prod noble/main arm64 Packages [42.0 kB]
2025-10-02T06:58:44.8925296Z Get:45 https://packages.microsoft.com/ubuntu/24.04/prod noble/main armhf Packages [10.4 kB]
2025-10-02T06:58:44.8981983Z Get:46 https://packages.microsoft.com/ubuntu/24.04/prod noble/main amd64 Packages [58.8 kB]
2025-10-02T06:58:53.5807909Z Fetched 12.2 MB in 1s (8529 kB/s)
2025-10-02T06:58:54.3764614Z Reading package lists...
2025-10-02T06:58:54.4085441Z Reading package lists...
2025-10-02T06:58:54.5974444Z Building dependency tree...
2025-10-02T06:58:54.5982015Z Reading state information...
2025-10-02T06:58:54.7656844Z Suggested packages:
2025-10-02T06:58:54.7657421Z   cppcheck-gui clang clang-tidy
2025-10-02T06:58:54.7909281Z The following NEW packages will be installed:
2025-10-02T06:58:54.7922155Z   clang-format cppcheck
2025-10-02T06:58:54.8108087Z 0 upgraded, 2 newly installed, 0 to remove and 27 not upgraded.
2025-10-02T06:58:54.8108754Z Need to get 2142 kB of archives.
2025-10-02T06:58:54.8109320Z After this operation, 9530 kB of additional disk space will be used.
2025-10-02T06:58:54.8110050Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
2025-10-02T06:58:54.8913511Z Get:2 http://azure.archive.ubuntu.com/ubuntu noble/universe amd64 clang-format amd64 1:18.0-59~exp2 [5970 B]
2025-10-02T06:58:54.9217418Z Get:3 http://azure.archive.ubuntu.com/ubuntu noble/universe amd64 cppcheck amd64 2.13.0-2ubuntu3 [2136 kB]
2025-10-02T06:58:55.2924170Z Fetched 2142 kB in 0s (10.0 MB/s)
2025-10-02T06:58:55.3173365Z Selecting previously unselected package clang-format:amd64.
2025-10-02T06:58:55.3577067Z (Reading database ... 
2025-10-02T06:58:55.3577408Z (Reading database ... 5%
2025-10-02T06:58:55.3577783Z (Reading database ... 10%
2025-10-02T06:58:55.3578031Z (Reading database ... 15%
2025-10-02T06:58:55.3578286Z (Reading database ... 20%
2025-10-02T06:58:55.3578513Z (Reading database ... 25%
2025-10-02T06:58:55.3578746Z (Reading database ... 30%
2025-10-02T06:58:55.3578987Z (Reading database ... 35%
2025-10-02T06:58:55.3579229Z (Reading database ... 40%
2025-10-02T06:58:55.3579592Z (Reading database ... 45%
2025-10-02T06:58:55.3579943Z (Reading database ... 50%
2025-10-02T06:58:55.3836398Z (Reading database ... 55%
2025-10-02T06:58:55.6443023Z (Reading database ... 60%
2025-10-02T06:58:55.8116738Z (Reading database ... 65%
2025-10-02T06:58:56.0467012Z (Reading database ... 70%
2025-10-02T06:58:56.2105680Z (Reading database ... 75%
2025-10-02T06:58:56.4464161Z (Reading database ... 80%
2025-10-02T06:58:56.7959040Z (Reading database ... 85%
2025-10-02T06:58:57.0349630Z (Reading database ... 90%
2025-10-02T06:58:57.2916328Z (Reading database ... 95%
2025-10-02T06:58:57.2916732Z (Reading database ... 100%
2025-10-02T06:58:57.2917166Z (Reading database ... 214164 files and directories currently installed.)
2025-10-02T06:58:57.2960938Z Preparing to unpack .../clang-format_1%3a18.0-59~exp2_amd64.deb ...
2025-10-02T06:58:57.2994060Z Unpacking clang-format:amd64 (1:18.0-59~exp2) ...
2025-10-02T06:58:57.4074878Z Selecting previously unselected package cppcheck.
2025-10-02T06:58:57.4208273Z Preparing to unpack .../cppcheck_2.13.0-2ubuntu3_amd64.deb ...
2025-10-02T06:58:57.4223711Z Unpacking cppcheck (2.13.0-2ubuntu3) ...
2025-10-02T06:58:57.5420840Z Setting up clang-format:amd64 (1:18.0-59~exp2) ...
2025-10-02T06:58:57.5479750Z Setting up cppcheck (2.13.0-2ubuntu3) ...
2025-10-02T06:58:57.5563178Z Processing triggers for man-db (2.12.0-4build2) ...
2025-10-02T07:00:51.6646818Z 
2025-10-02T07:00:51.6647471Z Running kernel seems to be up-to-date.
2025-10-02T07:00:51.6647803Z 
2025-10-02T07:00:51.6647929Z Restarting services...
2025-10-02T07:00:51.6720119Z 
2025-10-02T07:00:51.6720393Z Service restarts being deferred:
2025-10-02T07:00:51.6725114Z  systemctl restart hosted-compute-agent.service
2025-10-02T07:00:51.6725468Z 
2025-10-02T07:00:51.6725802Z No containers need to be restarted.
2025-10-02T07:00:51.6728193Z 
2025-10-02T07:00:51.6728430Z No user sessions are running outdated binaries.
2025-10-02T07:00:51.6728756Z 
2025-10-02T07:00:51.6729048Z No VM guests are running outdated hypervisor (qemu) binaries on this host.
2025-10-02T07:00:52.6764622Z ##[group]Run find src -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror || true
2025-10-02T07:00:52.6765235Z [36;1mfind src -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror || true[0m
2025-10-02T07:00:52.6799308Z shell: /usr/bin/bash -e {0}
2025-10-02T07:00:52.6799524Z ##[endgroup]
2025-10-02T07:00:56.3237506Z src/qt/utils/GitWorker.cpp:7:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3244847Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T07:00:56.3245547Z                                ^
2025-10-02T07:00:56.3246016Z src/qt/utils/GitWorker.cpp:7:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3246627Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T07:00:56.3246981Z                                  ^
2025-10-02T07:00:56.3247513Z src/qt/utils/GitWorker.cpp:7:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3248104Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T07:00:56.3248495Z                                                     ^
2025-10-02T07:00:56.3249217Z src/qt/utils/GitWorker.cpp:7:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3250090Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T07:00:56.3250639Z                                                       ^
2025-10-02T07:00:56.3251360Z src/qt/utils/GitWorker.cpp:7:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3252417Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T07:00:56.3252970Z                                                              ^
2025-10-02T07:00:56.3253721Z src/qt/utils/GitWorker.cpp:8:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3254459Z     : QObject(parent)
2025-10-02T07:00:56.3254775Z                      ^
2025-10-02T07:00:56.3255416Z src/qt/utils/GitWorker.cpp:9:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3256129Z     , m_gitManager(gitManager)
2025-10-02T07:00:56.3256495Z                               ^
2025-10-02T07:00:56.3257096Z src/qt/utils/GitWorker.cpp:10:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3257730Z {
2025-10-02T07:00:56.3257954Z  ^
2025-10-02T07:00:56.3258557Z src/qt/utils/GitWorker.cpp:13:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3259299Z void GitWorker::openRepository(const QString &path)
2025-10-02T07:00:56.3259648Z                                             ^
2025-10-02T07:00:56.3260044Z src/qt/utils/GitWorker.cpp:13:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3260486Z void GitWorker::openRepository(const QString &path)
2025-10-02T07:00:56.3260758Z                                               ^
2025-10-02T07:00:56.3261685Z src/qt/utils/GitWorker.cpp:13:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3262148Z void GitWorker::openRepository(const QString &path)
2025-10-02T07:00:56.3262418Z                                                    ^
2025-10-02T07:00:56.3262805Z src/qt/utils/GitWorker.cpp:15:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3263243Z     emit operationStarted(tr("Opening repository..."));
2025-10-02T07:00:56.3263514Z                                                        ^
2025-10-02T07:00:56.3263896Z src/qt/utils/GitWorker.cpp:17:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3264400Z     auto result = m_gitManager->openRepository(path.toStdString());
2025-10-02T07:00:56.3264706Z                                                                    ^
2025-10-02T07:00:56.3265360Z src/qt/utils/GitWorker.cpp:21:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3265846Z         emit operationFinished(tr("Repository opened"), true);
2025-10-02T07:00:56.3266132Z                                                               ^
2025-10-02T07:00:56.3266531Z src/qt/utils/GitWorker.cpp:31:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3266955Z void GitWorker::refreshStatus()
2025-10-02T07:00:56.3267159Z                                ^
2025-10-02T07:00:56.3267514Z src/qt/utils/GitWorker.cpp:33:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3267942Z     emit operationStarted(tr("Refreshing status..."));
2025-10-02T07:00:56.3268208Z                                                       ^
2025-10-02T07:00:56.3268594Z src/qt/utils/GitWorker.cpp:40:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3269003Z     } catch (const std::exception &e) {
2025-10-02T07:00:56.3269222Z                                  ^
2025-10-02T07:00:56.3269596Z src/qt/utils/GitWorker.cpp:40:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3270008Z     } catch (const std::exception &e) {
2025-10-02T07:00:56.3270225Z                                    ^
2025-10-02T07:00:56.3270593Z src/qt/utils/GitWorker.cpp:46:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3271353Z void GitWorker::stageFiles(const QStringList &files)
2025-10-02T07:00:56.3271948Z                                             ^
2025-10-02T07:00:56.3272604Z src/qt/utils/GitWorker.cpp:46:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3273366Z void GitWorker::stageFiles(const QStringList &files)
2025-10-02T07:00:56.3273800Z                                               ^
2025-10-02T07:00:56.3274456Z src/qt/utils/GitWorker.cpp:46:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3275180Z void GitWorker::stageFiles(const QStringList &files)
2025-10-02T07:00:56.3275636Z                                                     ^
2025-10-02T07:00:56.3276286Z src/qt/utils/GitWorker.cpp:48:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3276985Z     emit operationStarted(tr("Staging files..."));
2025-10-02T07:00:56.3277434Z                                                   ^
2025-10-02T07:00:56.3278158Z src/qt/utils/GitWorker.cpp:51:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3278821Z     for (const QString &file : files) {
2025-10-02T07:00:56.3279183Z                       ^
2025-10-02T07:00:56.3279762Z src/qt/utils/GitWorker.cpp:51:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3280436Z     for (const QString &file : files) {
2025-10-02T07:00:56.3280783Z                         ^
2025-10-02T07:00:56.3281444Z src/qt/utils/GitWorker.cpp:53:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3282257Z     }
2025-10-02T07:00:56.3282409Z      ^
2025-10-02T07:00:56.3282747Z src/qt/utils/GitWorker.cpp:55:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3283198Z     auto result = m_gitManager->addFiles(fileList);
2025-10-02T07:00:56.3283463Z                                                    ^
2025-10-02T07:00:56.3283868Z src/qt/utils/GitWorker.cpp:66:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3284326Z void GitWorker::unstageFiles(const QStringList &files)
2025-10-02T07:00:56.3284601Z                                               ^
2025-10-02T07:00:56.3285004Z src/qt/utils/GitWorker.cpp:66:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3285456Z void GitWorker::unstageFiles(const QStringList &files)
2025-10-02T07:00:56.3285721Z                                                 ^
2025-10-02T07:00:56.3286245Z src/qt/utils/GitWorker.cpp:66:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3286688Z void GitWorker::unstageFiles(const QStringList &files)
2025-10-02T07:00:56.3286956Z                                                       ^
2025-10-02T07:00:56.3287337Z src/qt/utils/GitWorker.cpp:68:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3287761Z     emit operationStarted(tr("Unstaging files..."));
2025-10-02T07:00:56.3288025Z                                                     ^
2025-10-02T07:00:56.3288402Z src/qt/utils/GitWorker.cpp:71:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3288802Z     for (const QString &file : files) {
2025-10-02T07:00:56.3289014Z                       ^
2025-10-02T07:00:56.3289351Z src/qt/utils/GitWorker.cpp:71:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3289737Z     for (const QString &file : files) {
2025-10-02T07:00:56.3289951Z                         ^
2025-10-02T07:00:56.3290318Z src/qt/utils/GitWorker.cpp:73:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3290982Z     }
2025-10-02T07:00:56.3291219Z      ^
2025-10-02T07:00:56.3291884Z src/qt/utils/GitWorker.cpp:75:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3292556Z     auto result = m_gitManager->resetFiles(fileList);
2025-10-02T07:00:56.3292820Z                                                      ^
2025-10-02T07:00:56.3293224Z src/qt/utils/GitWorker.cpp:86:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3293671Z void GitWorker::commitChanges(const QString &message)
2025-10-02T07:00:56.3293934Z                                            ^
2025-10-02T07:00:56.3294319Z src/qt/utils/GitWorker.cpp:86:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3294744Z void GitWorker::commitChanges(const QString &message)
2025-10-02T07:00:56.3295011Z                                              ^
2025-10-02T07:00:56.3295407Z src/qt/utils/GitWorker.cpp:86:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3295858Z void GitWorker::commitChanges(const QString &message)
2025-10-02T07:00:56.3296125Z                                                      ^
2025-10-02T07:00:56.3296520Z src/qt/utils/GitWorker.cpp:88:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3296952Z     emit operationStarted(tr("Creating commit..."));
2025-10-02T07:00:56.3297207Z                                                     ^
2025-10-02T07:00:56.3297595Z src/qt/utils/GitWorker.cpp:90:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3298043Z     auto result = m_gitManager->commit(message.toStdString());
2025-10-02T07:00:56.3298339Z                                                               ^
2025-10-02T07:00:56.3298751Z src/qt/utils/GitWorker.cpp:101:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3299319Z void GitWorker::fetchRepository()
2025-10-02T07:00:56.3299535Z                                  ^
2025-10-02T07:00:56.3299906Z src/qt/utils/GitWorker.cpp:103:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3300356Z     emit operationStarted(tr("Fetching from remote..."));
2025-10-02T07:00:56.3300628Z                                                          ^
2025-10-02T07:00:56.3301023Z src/qt/utils/GitWorker.cpp:105:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3301434Z     auto result = m_gitManager->fetch();
2025-10-02T07:00:56.3301895Z                                         ^
2025-10-02T07:00:56.3302292Z src/qt/utils/GitWorker.cpp:116:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3302703Z void GitWorker::pullRepository()
2025-10-02T07:00:56.3302914Z                                 ^
2025-10-02T07:00:56.3303459Z src/qt/utils/GitWorker.cpp:118:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3303920Z     emit operationStarted(tr("Pulling from remote..."));
2025-10-02T07:00:56.3304192Z                                                         ^
2025-10-02T07:00:56.3304596Z src/qt/utils/GitWorker.cpp:120:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3305015Z     auto result = m_gitManager->pull();
2025-10-02T07:00:56.3305240Z                                        ^
2025-10-02T07:00:56.3305632Z src/qt/utils/GitWorker.cpp:131:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3306041Z void GitWorker::pushRepository()
2025-10-02T07:00:56.3306253Z                                 ^
2025-10-02T07:00:56.3306617Z src/qt/utils/GitWorker.cpp:133:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3307061Z     emit operationStarted(tr("Pushing to remote..."));
2025-10-02T07:00:56.3307338Z                                                       ^
2025-10-02T07:00:56.3307725Z src/qt/utils/GitWorker.cpp:135:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3308130Z     auto result = m_gitManager->push();
2025-10-02T07:00:56.3308348Z                                        ^
2025-10-02T07:00:56.3308750Z src/qt/utils/GitWorker.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3309138Z #include <QObject>
2025-10-02T07:00:56.3309298Z ^
2025-10-02T07:00:56.3309606Z src/qt/utils/GitWorker.h:9:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3309994Z class GitWorker : public QObject
2025-10-02T07:00:56.3310203Z                                 ^
2025-10-02T07:00:56.3310570Z src/qt/utils/GitWorker.h:11:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3310951Z     Q_OBJECT
2025-10-02T07:00:56.3311106Z             ^
2025-10-02T07:00:56.3311423Z src/qt/utils/GitWorker.h:14:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3312168Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:00:56.3312493Z                                  ^
2025-10-02T07:00:56.3312863Z src/qt/utils/GitWorker.h:14:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3313356Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:00:56.3313683Z                                    ^
2025-10-02T07:00:56.3314062Z src/qt/utils/GitWorker.h:14:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3314537Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:00:56.3314865Z                                                       ^
2025-10-02T07:00:56.3315256Z src/qt/utils/GitWorker.h:14:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3315891Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:00:56.3316214Z                                                         ^
2025-10-02T07:00:56.3316603Z src/qt/utils/GitWorker.h:14:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3317083Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:00:56.3317416Z                                                                           ^
2025-10-02T07:00:56.3318007Z src/qt/utils/GitWorker.h:17:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3378584Z     void openRepository(const QString &path);
2025-10-02T07:00:56.3379043Z                                      ^
2025-10-02T07:00:56.3379824Z src/qt/utils/GitWorker.h:17:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3380651Z     void openRepository(const QString &path);
2025-10-02T07:00:56.3381358Z                                        ^
2025-10-02T07:00:56.3382193Z src/qt/utils/GitWorker.h:19:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3382838Z     void stageFiles(const QStringList &files);
2025-10-02T07:00:56.3383201Z                                      ^
2025-10-02T07:00:56.3383773Z src/qt/utils/GitWorker.h:19:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3384391Z     void stageFiles(const QStringList &files);
2025-10-02T07:00:56.3384760Z                                        ^
2025-10-02T07:00:56.3385358Z src/qt/utils/GitWorker.h:20:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3385991Z     void unstageFiles(const QStringList &files);
2025-10-02T07:00:56.3386366Z                                        ^
2025-10-02T07:00:56.3387062Z src/qt/utils/GitWorker.h:20:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3387762Z     void unstageFiles(const QStringList &files);
2025-10-02T07:00:56.3388184Z                                          ^
2025-10-02T07:00:56.3388858Z src/qt/utils/GitWorker.h:21:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3389588Z     void commitChanges(const QString &message);
2025-10-02T07:00:56.3390004Z                                     ^
2025-10-02T07:00:56.3390648Z src/qt/utils/GitWorker.h:21:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3391368Z     void commitChanges(const QString &message);
2025-10-02T07:00:56.3391999Z                                       ^
2025-10-02T07:00:56.3392671Z src/qt/utils/GitWorker.h:24:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3393446Z     void pushRepository();
2025-10-02T07:00:56.3393782Z                           ^
2025-10-02T07:00:56.3394410Z src/qt/utils/GitWorker.h:27:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3395174Z     void repositoryOpened(const QString &path);
2025-10-02T07:00:56.3395600Z                                        ^
2025-10-02T07:00:56.3396261Z src/qt/utils/GitWorker.h:27:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3397022Z     void repositoryOpened(const QString &path);
2025-10-02T07:00:56.3397458Z                                          ^
2025-10-02T07:00:56.3398135Z src/qt/utils/GitWorker.h:29:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3398864Z     void operationStarted(const QString &operation);
2025-10-02T07:00:56.3399137Z                                        ^
2025-10-02T07:00:56.3399518Z src/qt/utils/GitWorker.h:29:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3399965Z     void operationStarted(const QString &operation);
2025-10-02T07:00:56.3400223Z                                          ^
2025-10-02T07:00:56.3400843Z src/qt/utils/GitWorker.h:30:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3401309Z     void operationFinished(const QString &operation, bool success);
2025-10-02T07:00:56.3401910Z                                         ^
2025-10-02T07:00:56.3402313Z src/qt/utils/GitWorker.h:30:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3402768Z     void operationFinished(const QString &operation, bool success);
2025-10-02T07:00:56.3403065Z                                           ^
2025-10-02T07:00:56.3403434Z src/qt/utils/GitWorker.h:31:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3403834Z     void errorOccurred(const QString &error);
2025-10-02T07:00:56.3404063Z                                     ^
2025-10-02T07:00:56.3404425Z src/qt/utils/GitWorker.h:31:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3404947Z     void errorOccurred(const QString &error);
2025-10-02T07:00:56.3405182Z                                       ^
2025-10-02T07:00:56.3405552Z src/qt/utils/GitWorker.h:31:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3405949Z     void errorOccurred(const QString &error);
2025-10-02T07:00:56.3406180Z                                              ^
2025-10-02T07:00:56.3406545Z src/qt/utils/GitWorker.h:34:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3406933Z     GitManager *m_gitManager;
2025-10-02T07:00:56.3407129Z               ^
2025-10-02T07:00:56.3407442Z src/qt/utils/GitWorker.h:34:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3407826Z     GitManager *m_gitManager;
2025-10-02T07:00:56.3408014Z                 ^
2025-10-02T07:00:56.3408372Z src/qt/utils/ThemeManager.h:7:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3408774Z class ThemeManager
2025-10-02T07:00:56.3408958Z                   ^
2025-10-02T07:00:56.3409316Z src/qt/utils/ThemeManager.h:8:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3409713Z {
2025-10-02T07:00:56.3409851Z  ^
2025-10-02T07:00:56.3410171Z src/qt/utils/ThemeManager.h:10:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3410619Z     static void applyModernTheme(QApplication *app);
2025-10-02T07:00:56.3410950Z                                              ^
2025-10-02T07:00:56.3411794Z src/qt/utils/ThemeManager.h:10:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3412537Z     static void applyModernTheme(QApplication *app);
2025-10-02T07:00:56.3412974Z                                                ^
2025-10-02T07:00:56.3413636Z src/qt/utils/ThemeManager.h:11:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3414355Z     static void applyDarkTheme(QApplication *app);
2025-10-02T07:00:56.3414857Z                                            ^
2025-10-02T07:00:56.3415507Z src/qt/utils/ThemeManager.h:11:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3416222Z     static void applyDarkTheme(QApplication *app);
2025-10-02T07:00:56.3416646Z                                              ^
2025-10-02T07:00:56.3417297Z src/qt/utils/ThemeManager.h:12:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3418018Z     static void applyLightTheme(QApplication *app);
2025-10-02T07:00:56.3418452Z                                             ^
2025-10-02T07:00:56.3419097Z src/qt/utils/ThemeManager.h:12:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3419827Z     static void applyLightTheme(QApplication *app);
2025-10-02T07:00:56.3420250Z                                               ^
2025-10-02T07:00:56.3420912Z src/qt/utils/ThemeManager.h:12:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3421964Z     static void applyLightTheme(QApplication *app);
2025-10-02T07:00:56.3422402Z                                                    ^
2025-10-02T07:00:56.3423074Z src/qt/utils/ThemeManager.h:15:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3423830Z     static void setModernPalette(QPalette &palette);
2025-10-02T07:00:56.3424263Z                                          ^
2025-10-02T07:00:56.3424923Z src/qt/utils/ThemeManager.h:15:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3425653Z     static void setModernPalette(QPalette &palette);
2025-10-02T07:00:56.3426089Z                                            ^
2025-10-02T07:00:56.3426741Z src/qt/utils/ThemeManager.h:16:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3427462Z     static void setDarkPalette(QPalette &palette);
2025-10-02T07:00:56.3428035Z                                        ^
2025-10-02T07:00:56.3428693Z src/qt/utils/ThemeManager.h:16:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3429404Z     static void setDarkPalette(QPalette &palette);
2025-10-02T07:00:56.3429820Z                                          ^
2025-10-02T07:00:56.3430464Z src/qt/utils/ThemeManager.h:17:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3431189Z     static void setLightPalette(QPalette &palette);
2025-10-02T07:00:56.3431748Z                                         ^
2025-10-02T07:00:56.3432390Z src/qt/utils/ThemeManager.h:17:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3433110Z     static void setLightPalette(QPalette &palette);
2025-10-02T07:00:56.3433525Z                                           ^
2025-10-02T07:00:56.3434187Z src/qt/utils/ThemeManager.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3434874Z #include "ThemeManager.h"
2025-10-02T07:00:56.3435186Z ^
2025-10-02T07:00:56.3435742Z src/qt/utils/ThemeManager.cpp:7:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3436579Z void ThemeManager::applyModernTheme(QApplication *app)
2025-10-02T07:00:56.3437039Z                                                 ^
2025-10-02T07:00:56.3437710Z src/qt/utils/ThemeManager.cpp:7:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3438481Z void ThemeManager::applyModernTheme(QApplication *app)
2025-10-02T07:00:56.3438931Z                                                   ^
2025-10-02T07:00:56.3439603Z src/qt/utils/ThemeManager.cpp:7:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3440366Z void ThemeManager::applyModernTheme(QApplication *app)
2025-10-02T07:00:56.3440817Z                                                       ^
2025-10-02T07:00:56.3441638Z src/qt/utils/ThemeManager.cpp:19:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3442343Z     app->setPalette(palette);
2025-10-02T07:00:56.3442679Z                              ^
2025-10-02T07:00:56.3443298Z src/qt/utils/ThemeManager.cpp:24:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3444062Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-10-02T07:00:56.3444504Z                                               ^
2025-10-02T07:00:56.3445169Z src/qt/utils/ThemeManager.cpp:24:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3445928Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-10-02T07:00:56.3446364Z                                                 ^
2025-10-02T07:00:56.3447041Z src/qt/utils/ThemeManager.cpp:24:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3447792Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-10-02T07:00:56.3448244Z                                                     ^
2025-10-02T07:00:56.3449084Z src/qt/utils/ThemeManager.cpp:26:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3449822Z     app->setStyle(QStyleFactory::create("Fusion"));
2025-10-02T07:00:56.3450238Z                                                    ^
2025-10-02T07:00:56.3450904Z src/qt/utils/ThemeManager.cpp:33:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3451814Z void ThemeManager::applyLightTheme(QApplication *app)
2025-10-02T07:00:56.3452264Z                                                ^
2025-10-02T07:00:56.3452941Z src/qt/utils/ThemeManager.cpp:33:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3453715Z void ThemeManager::applyLightTheme(QApplication *app)
2025-10-02T07:00:56.3454163Z                                                  ^
2025-10-02T07:00:56.3455016Z src/qt/utils/ThemeManager.cpp:33:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3455807Z void ThemeManager::applyLightTheme(QApplication *app)
2025-10-02T07:00:56.3456265Z                                                      ^
2025-10-02T07:00:56.3456948Z src/qt/utils/ThemeManager.cpp:35:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3457692Z     app->setStyle(QStyleFactory::create("Fusion"));
2025-10-02T07:00:56.3458116Z                                                    ^
2025-10-02T07:00:56.3458664Z src/qt/utils/ThemeManager.cpp:42:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3459150Z void ThemeManager::setModernPalette(QPalette &palette)
2025-10-02T07:00:56.3459416Z                                             ^
2025-10-02T07:00:56.3459819Z src/qt/utils/ThemeManager.cpp:42:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3460284Z void ThemeManager::setModernPalette(QPalette &palette)
2025-10-02T07:00:56.3460556Z                                               ^
2025-10-02T07:00:56.3460966Z src/qt/utils/ThemeManager.cpp:42:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3461426Z void ThemeManager::setModernPalette(QPalette &palette)
2025-10-02T07:00:56.3462389Z                                                       ^
2025-10-02T07:00:56.3462805Z src/qt/utils/ThemeManager.cpp:57:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3463317Z     palette.setColor(QPalette::HighlightedText, QColor(255, 255, 255));
2025-10-02T07:00:56.3463647Z                                                                        ^
2025-10-02T07:00:56.3464068Z src/qt/utils/ThemeManager.cpp:65:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3464530Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-10-02T07:00:56.3464792Z                                           ^
2025-10-02T07:00:56.3465196Z src/qt/utils/ThemeManager.cpp:65:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3465648Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-10-02T07:00:56.3465913Z                                             ^
2025-10-02T07:00:56.3466310Z src/qt/utils/ThemeManager.cpp:65:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3466749Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-10-02T07:00:56.3467015Z                                                     ^
2025-10-02T07:00:56.3467408Z src/qt/utils/ThemeManager.cpp:80:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3467893Z     palette.setColor(QPalette::HighlightedText, QColor(0, 0, 0));
2025-10-02T07:00:56.3468201Z                                                                  ^
2025-10-02T07:00:56.3468608Z src/qt/utils/ThemeManager.cpp:87:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3469062Z void ThemeManager::setLightPalette(QPalette &palette)
2025-10-02T07:00:56.3469470Z                                            ^
2025-10-02T07:00:56.3469867Z src/qt/utils/ThemeManager.cpp:87:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3470311Z void ThemeManager::setLightPalette(QPalette &palette)
2025-10-02T07:00:56.3470574Z                                              ^
2025-10-02T07:00:56.3470964Z src/qt/utils/ThemeManager.cpp:87:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3471409Z void ThemeManager::setLightPalette(QPalette &palette)
2025-10-02T07:00:56.3471863Z                                                      ^
2025-10-02T07:00:56.3472267Z src/qt/utils/ThemeManager.cpp:95:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3472701Z QString ThemeManager::getModernStyleSheet()
2025-10-02T07:00:56.3472936Z                                            ^
2025-10-02T07:00:56.3473480Z src/qt/VersionToolsMainWindow.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3473926Z #include "VersionToolsMainWindow.h"
2025-10-02T07:00:56.3474143Z ^
2025-10-02T07:00:56.3474500Z src/qt/VersionToolsMainWindow.cpp:10:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3474929Z #include <QApplication>
2025-10-02T07:00:56.3475103Z ^
2025-10-02T07:00:56.3475447Z src/qt/VersionToolsMainWindow.cpp:27:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3475969Z VersionToolsMainWindow::VersionToolsMainWindow(QWidget *parent)
2025-10-02T07:00:56.3476281Z                                                       ^
2025-10-02T07:00:56.3476713Z src/qt/VersionToolsMainWindow.cpp:27:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3477226Z VersionToolsMainWindow::VersionToolsMainWindow(QWidget *parent)
2025-10-02T07:00:56.3477780Z                                                         ^
2025-10-02T07:00:56.3478515Z src/qt/VersionToolsMainWindow.cpp:28:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3479235Z     : QMainWindow(parent)
2025-10-02T07:00:56.3479538Z                          ^
2025-10-02T07:00:56.3480185Z src/qt/VersionToolsMainWindow.cpp:29:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3480920Z     , m_centralSplitter(nullptr)
2025-10-02T07:00:56.3481300Z                                 ^
2025-10-02T07:00:56.3482097Z src/qt/VersionToolsMainWindow.cpp:30:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3482828Z     , m_contentStack(nullptr)
2025-10-02T07:00:56.3483151Z                              ^
2025-10-02T07:00:56.3483815Z src/qt/VersionToolsMainWindow.cpp:31:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3484528Z     , m_sidebarWidget(nullptr)
2025-10-02T07:00:56.3484856Z                               ^
2025-10-02T07:00:56.3485523Z src/qt/VersionToolsMainWindow.cpp:32:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3486241Z     , m_changesWidget(nullptr)
2025-10-02T07:00:56.3486560Z      ^
2025-10-02T07:00:56.3487143Z src/qt/VersionToolsMainWindow.cpp:32:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3487866Z     , m_changesWidget(nullptr)
2025-10-02T07:00:56.3488179Z                               ^
2025-10-02T07:00:56.3488833Z src/qt/VersionToolsMainWindow.cpp:33:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3489549Z     , m_historyWidget(nullptr)
2025-10-02T07:00:56.3489860Z                               ^
2025-10-02T07:00:56.3490515Z src/qt/VersionToolsMainWindow.cpp:34:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3491226Z     , m_branchesWidget(nullptr)
2025-10-02T07:00:56.3491682Z                                ^
2025-10-02T07:00:56.3492553Z src/qt/VersionToolsMainWindow.cpp:35:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3493367Z     , m_gitManager(std::make_unique<GitManager>())
2025-10-02T07:00:56.3493753Z      ^
2025-10-02T07:00:56.3494355Z src/qt/VersionToolsMainWindow.cpp:35:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3495042Z     , m_gitManager(std::make_unique<GitManager>())
2025-10-02T07:00:56.3495373Z                                                   ^
2025-10-02T07:00:56.3495809Z src/qt/VersionToolsMainWindow.cpp:36:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3496248Z     , m_gitWorker(nullptr)
2025-10-02T07:00:56.3496437Z                           ^
2025-10-02T07:00:56.3496828Z src/qt/VersionToolsMainWindow.cpp:40:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3497252Z     resize(1400, 900);
2025-10-02T07:00:56.3497546Z                       ^
2025-10-02T07:00:56.3497943Z src/qt/VersionToolsMainWindow.cpp:43:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3498420Z     m_gitWorker = new GitWorker(m_gitManager.get(), this);
2025-10-02T07:00:56.3498698Z                                                           ^
2025-10-02T07:00:56.3499137Z src/qt/VersionToolsMainWindow.cpp:50:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3499556Z     connectSignals();
2025-10-02T07:00:56.3499729Z                      ^
2025-10-02T07:00:56.3500100Z src/qt/VersionToolsMainWindow.cpp:52:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3500512Z     loadSettings();
2025-10-02T07:00:56.3500678Z                    ^
2025-10-02T07:00:56.3501041Z src/qt/VersionToolsMainWindow.cpp:58:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3501650Z         QTimer::singleShot(100, [this, lastRepo]() {
2025-10-02T07:00:56.3501923Z                                                     ^
2025-10-02T07:00:56.3502361Z src/qt/VersionToolsMainWindow.cpp:59:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3502806Z             onRepositoryOpened(lastRepo);
2025-10-02T07:00:56.3503036Z                                          ^
2025-10-02T07:00:56.3503451Z src/qt/VersionToolsMainWindow.cpp:64:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3503920Z VersionToolsMainWindow::~VersionToolsMainWindow()
2025-10-02T07:00:56.3504188Z                                                  ^
2025-10-02T07:00:56.3504604Z src/qt/VersionToolsMainWindow.cpp:69:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3505058Z void VersionToolsMainWindow::createActions()
2025-10-02T07:00:56.3505301Z                                             ^
2025-10-02T07:00:56.3505718Z src/qt/VersionToolsMainWindow.cpp:75:95: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3506309Z     connect(m_openAction, &QAction::triggered, this, &VersionToolsMainWindow::openRepository);
2025-10-02T07:00:56.3506707Z                                                                                               ^
2025-10-02T07:00:56.3507155Z src/qt/VersionToolsMainWindow.cpp:80:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3507747Z     connect(m_cloneAction, &QAction::triggered, this, &VersionToolsMainWindow::cloneRepository);
2025-10-02T07:00:56.3508145Z                                                                                                 ^
2025-10-02T07:00:56.3508601Z src/qt/VersionToolsMainWindow.cpp:85:101: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3509203Z     connect(m_refreshAction, &QAction::triggered, this, &VersionToolsMainWindow::refreshRepository);
2025-10-02T07:00:56.3509623Z                                                                                                     ^
2025-10-02T07:00:56.3510573Z src/qt/VersionToolsMainWindow.cpp:90:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3511709Z     connect(m_settingsAction, &QAction::triggered, this, &VersionToolsMainWindow::showSettings);
2025-10-02T07:00:56.3512398Z                                                                                                 ^
2025-10-02T07:00:56.3513157Z src/qt/VersionToolsMainWindow.cpp:95:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3514021Z     connect(m_exitAction, &QAction::triggered, this, &QWidget::close);
2025-10-02T07:00:56.3514543Z                                                                       ^
2025-10-02T07:00:56.3515287Z src/qt/VersionToolsMainWindow.cpp:100:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3516431Z     connect(m_aboutAction, &QAction::triggered, this, &VersionToolsMainWindow::showAbout);
2025-10-02T07:00:56.3517077Z                                                                                           ^
2025-10-02T07:00:56.3517845Z src/qt/VersionToolsMainWindow.cpp:107:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3518623Z void VersionToolsMainWindow::createMenus()
2025-10-02T07:00:56.3519016Z                                           ^
2025-10-02T07:00:56.3519728Z src/qt/VersionToolsMainWindow.cpp:117:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3520471Z     m_fileMenu->addAction(m_exitAction);
2025-10-02T07:00:56.3520848Z                                         ^
2025-10-02T07:00:56.3521682Z src/qt/VersionToolsMainWindow.cpp:120:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3522459Z     // View menu items will be added by widgets
2025-10-02T07:00:56.3522858Z                                                ^
2025-10-02T07:00:56.3523299Z src/qt/VersionToolsMainWindow.cpp:123:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3523768Z     // Git menu items will be added by widgets
2025-10-02T07:00:56.3523997Z                                               ^
2025-10-02T07:00:56.3524422Z src/qt/VersionToolsMainWindow.cpp:130:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3524884Z void VersionToolsMainWindow::createToolBars()
2025-10-02T07:00:56.3525150Z                                              ^
2025-10-02T07:00:56.3525572Z src/qt/VersionToolsMainWindow.cpp:142:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3526031Z void VersionToolsMainWindow::createStatusBar()
2025-10-02T07:00:56.3526275Z                                               ^
2025-10-02T07:00:56.3526697Z src/qt/VersionToolsMainWindow.cpp:146:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3527176Z     statusBar()->addWidget(m_repositoryLabel);
2025-10-02T07:00:56.3527419Z                                               ^
2025-10-02T07:00:56.3527849Z src/qt/VersionToolsMainWindow.cpp:148:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3528321Z     statusBar()->addPermanentWidget(new QLabel("|"));
2025-10-02T07:00:56.3528584Z                                                      ^
2025-10-02T07:00:56.3529019Z src/qt/VersionToolsMainWindow.cpp:152:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3529480Z     statusBar()->addPermanentWidget(m_branchLabel);
2025-10-02T07:00:56.3529738Z                                                    ^
2025-10-02T07:00:56.3530383Z src/qt/VersionToolsMainWindow.cpp:154:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3531176Z     statusBar()->addPermanentWidget(new QLabel("|"));
2025-10-02T07:00:56.3531727Z                                                      ^
2025-10-02T07:00:56.3532644Z src/qt/VersionToolsMainWindow.cpp:157:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3533127Z     statusBar()->addPermanentWidget(m_statusLabel);
2025-10-02T07:00:56.3533383Z                                                    ^
2025-10-02T07:00:56.3533814Z src/qt/VersionToolsMainWindow.cpp:165:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3534290Z void VersionToolsMainWindow::setupCentralWidget()
2025-10-02T07:00:56.3534553Z                                                  ^
2025-10-02T07:00:56.3534980Z src/qt/VersionToolsMainWindow.cpp:168:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3535423Z     setCentralWidget(m_centralSplitter);
2025-10-02T07:00:56.3535656Z                                         ^
2025-10-02T07:00:56.3536071Z src/qt/VersionToolsMainWindow.cpp:173:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3536653Z     m_centralSplitter->addWidget(m_sidebarWidget);
2025-10-02T07:00:56.3536911Z                                                   ^
2025-10-02T07:00:56.3537335Z src/qt/VersionToolsMainWindow.cpp:177:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3537789Z     m_centralSplitter->addWidget(m_contentStack);
2025-10-02T07:00:56.3538028Z                                                  ^
2025-10-02T07:00:56.3538450Z src/qt/VersionToolsMainWindow.cpp:182:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3538953Z     m_branchesWidget = new BranchesWidget(m_gitManager.get(), this);
2025-10-02T07:00:56.3539268Z                                                                     ^
2025-10-02T07:00:56.3539773Z src/qt/VersionToolsMainWindow.cpp:186:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3540550Z     m_contentStack->addWidget(m_branchesWidget);
2025-10-02T07:00:56.3540971Z                                                 ^
2025-10-02T07:00:56.3541830Z src/qt/VersionToolsMainWindow.cpp:194:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3542504Z void VersionToolsMainWindow::connectSignals()
2025-10-02T07:00:56.3542752Z                                              ^
2025-10-02T07:00:56.3543173Z src/qt/VersionToolsMainWindow.cpp:196:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3543676Z     connect(m_sidebarWidget, &SidebarWidget::selectionChanged,
2025-10-02T07:00:56.3543970Z                                                               ^
2025-10-02T07:00:56.3544410Z src/qt/VersionToolsMainWindow.cpp:197:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3544907Z             this, &VersionToolsMainWindow::onSidebarSelectionChanged);
2025-10-02T07:00:56.3545189Z                  ^
2025-10-02T07:00:56.3545576Z src/qt/VersionToolsMainWindow.cpp:197:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3546092Z             this, &VersionToolsMainWindow::onSidebarSelectionChanged);
2025-10-02T07:00:56.3546394Z                                                                       ^
2025-10-02T07:00:56.3546829Z src/qt/VersionToolsMainWindow.cpp:199:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3547307Z     connect(m_gitWorker, &GitWorker::repositoryOpened,
2025-10-02T07:00:56.3547575Z                                                       ^
2025-10-02T07:00:56.3548008Z src/qt/VersionToolsMainWindow.cpp:201:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3548472Z     connect(m_gitWorker, &GitWorker::statusChanged,
2025-10-02T07:00:56.3548723Z                                                    ^
2025-10-02T07:00:56.3549149Z src/qt/VersionToolsMainWindow.cpp:203:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3549617Z     connect(m_gitWorker, &GitWorker::operationStarted,
2025-10-02T07:00:56.3550235Z                                                       ^
2025-10-02T07:00:56.3550970Z src/qt/VersionToolsMainWindow.cpp:205:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3551921Z     connect(m_gitWorker, &GitWorker::operationFinished,
2025-10-02T07:00:56.3552376Z                                                        ^
2025-10-02T07:00:56.3553113Z src/qt/VersionToolsMainWindow.cpp:209:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3553914Z void VersionToolsMainWindow::openRepository()
2025-10-02T07:00:56.3554327Z                                              ^
2025-10-02T07:00:56.3555050Z src/qt/VersionToolsMainWindow.cpp:211:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3555804Z     QString dir = QFileDialog::getExistingDirectory(
2025-10-02T07:00:56.3556072Z                                                     ^
2025-10-02T07:00:56.3556636Z src/qt/VersionToolsMainWindow.cpp:212:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3557064Z         this,
2025-10-02T07:00:56.3557217Z              ^
2025-10-02T07:00:56.3557579Z src/qt/VersionToolsMainWindow.cpp:213:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3558021Z         tr("Open Git Repository"),
2025-10-02T07:00:56.3558229Z                                   ^
2025-10-02T07:00:56.3558635Z src/qt/VersionToolsMainWindow.cpp:214:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3559069Z         QDir::homePath(),
2025-10-02T07:00:56.3559250Z                          ^
2025-10-02T07:00:56.3559640Z src/qt/VersionToolsMainWindow.cpp:215:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3560150Z         QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks
2025-10-02T07:00:56.3560468Z                                                                     ^
2025-10-02T07:00:56.3560913Z src/qt/VersionToolsMainWindow.cpp:216:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3561337Z     );
2025-10-02T07:00:56.3561626Z       ^
2025-10-02T07:00:56.3561986Z src/qt/VersionToolsMainWindow.cpp:223:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3562459Z void VersionToolsMainWindow::cloneRepository()
2025-10-02T07:00:56.3562710Z                                               ^
2025-10-02T07:00:56.3563151Z src/qt/VersionToolsMainWindow.cpp:226:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3563646Z     QMessageBox::information(this, tr("Clone Repository"), 
2025-10-02T07:00:56.3563932Z                                                           ^
2025-10-02T07:00:56.3564374Z src/qt/VersionToolsMainWindow.cpp:230:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3564862Z void VersionToolsMainWindow::refreshRepository()
2025-10-02T07:00:56.3565126Z                                                 ^
2025-10-02T07:00:56.3565555Z src/qt/VersionToolsMainWindow.cpp:237:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3566022Z void VersionToolsMainWindow::showSettings()
2025-10-02T07:00:56.3566271Z                                            ^
2025-10-02T07:00:56.3566698Z src/qt/VersionToolsMainWindow.cpp:243:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3567153Z void VersionToolsMainWindow::showAbout()
2025-10-02T07:00:56.3567382Z                                         ^
2025-10-02T07:00:56.3567801Z src/qt/VersionToolsMainWindow.cpp:245:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3568288Z     QMessageBox::about(this, tr("About Version Tools"),
2025-10-02T07:00:56.3568558Z                                                        ^
2025-10-02T07:00:56.3569116Z src/qt/VersionToolsMainWindow.cpp:246:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3569558Z         tr("<h2>Version Tools 1.0.0</h2>"
2025-10-02T07:00:56.3569795Z                                          ^
2025-10-02T07:00:56.3570211Z src/qt/VersionToolsMainWindow.cpp:247:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3570734Z            "<p>A modern Git GUI application built with Qt and C++.</p>"
2025-10-02T07:00:56.3571029Z                                                                        ^
2025-10-02T07:00:56.3571610Z src/qt/VersionToolsMainWindow.cpp:248:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3572320Z            "<p>Copyright © 2024 VersionTools Project</p>"
2025-10-02T07:00:56.3572784Z src/qt/VersionToolsMainWindow.cpp:249:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3573365Z            "<p>Built with Qt %1</p>").arg(QT_VERSION_STR));
2025-10-02T07:00:56.3573627Z                                      ^
2025-10-02T07:00:56.3574050Z src/qt/VersionToolsMainWindow.cpp:252:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3574584Z void VersionToolsMainWindow::onSidebarSelectionChanged(int index)
2025-10-02T07:00:56.3574913Z                                                                  ^
2025-10-02T07:00:56.3575355Z src/qt/VersionToolsMainWindow.cpp:255:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3575804Z         m_contentStack->setCurrentIndex(index);
2025-10-02T07:00:56.3576050Z                                                ^
2025-10-02T07:00:56.3576473Z src/qt/VersionToolsMainWindow.cpp:265:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3577012Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-10-02T07:00:56.3577346Z                                                              ^
2025-10-02T07:00:56.3577790Z src/qt/VersionToolsMainWindow.cpp:265:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3578319Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-10-02T07:00:56.3578645Z                                                                ^
2025-10-02T07:00:56.3579087Z src/qt/VersionToolsMainWindow.cpp:265:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3579610Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-10-02T07:00:56.3579941Z                                                                     ^
2025-10-02T07:00:56.3580377Z src/qt/VersionToolsMainWindow.cpp:269:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3580806Z     updateStatusBar();
2025-10-02T07:00:56.3580986Z                       ^
2025-10-02T07:00:56.3581413Z src/qt/VersionToolsMainWindow.cpp:273:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3582037Z     settings.setValue("lastRepository", path);
2025-10-02T07:00:56.3582279Z                                               ^
2025-10-02T07:00:56.3582709Z src/qt/VersionToolsMainWindow.cpp:276:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3583170Z     m_sidebarWidget->setRepositoryPath(path);
2025-10-02T07:00:56.3583411Z                                              ^
2025-10-02T07:00:56.3583831Z src/qt/VersionToolsMainWindow.cpp:281:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3584281Z     m_branchesWidget->setRepository(path);
2025-10-02T07:00:56.3584515Z                                           ^
2025-10-02T07:00:56.3584932Z src/qt/VersionToolsMainWindow.cpp:287:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3585433Z void VersionToolsMainWindow::onRepositoryStatusChanged()
2025-10-02T07:00:56.3585724Z                                                         ^
2025-10-02T07:00:56.3586284Z src/qt/VersionToolsMainWindow.cpp:290:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3586715Z     updateStatusBar();
2025-10-02T07:00:56.3586889Z                       ^
2025-10-02T07:00:56.3587268Z src/qt/VersionToolsMainWindow.cpp:297:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3587820Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-10-02T07:00:56.3588182Z                                                                 ^
2025-10-02T07:00:56.3588616Z src/qt/VersionToolsMainWindow.cpp:297:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3589172Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-10-02T07:00:56.3589697Z                                                                   ^
2025-10-02T07:00:56.3590590Z src/qt/VersionToolsMainWindow.cpp:297:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3591688Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-10-02T07:00:56.3592308Z                                                                             ^
2025-10-02T07:00:56.3593070Z src/qt/VersionToolsMainWindow.cpp:304:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3594117Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-10-02T07:00:56.3594814Z                                                                  ^
2025-10-02T07:00:56.3595560Z src/qt/VersionToolsMainWindow.cpp:304:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3596589Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-10-02T07:00:56.3597282Z                                                                    ^
2025-10-02T07:00:56.3598033Z src/qt/VersionToolsMainWindow.cpp:304:92: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3599068Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-10-02T07:00:56.3599773Z                                                                                            ^
2025-10-02T07:00:56.3600526Z src/qt/VersionToolsMainWindow.cpp:306:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3601257Z     Q_UNUSED(operation)
2025-10-02T07:00:56.3601665Z                        ^
2025-10-02T07:00:56.3602334Z src/qt/VersionToolsMainWindow.cpp:313:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3602793Z         QTimer::singleShot(3000, [this]() {
2025-10-02T07:00:56.3603025Z                                            ^
2025-10-02T07:00:56.3603448Z src/qt/VersionToolsMainWindow.cpp:314:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3603905Z             m_statusLabel->setText(tr("Ready"));
2025-10-02T07:00:56.3604153Z                                                 ^
2025-10-02T07:00:56.3604578Z src/qt/VersionToolsMainWindow.cpp:319:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3605060Z void VersionToolsMainWindow::updateWindowTitle()
2025-10-02T07:00:56.3605317Z                                                 ^
2025-10-02T07:00:56.3605738Z src/qt/VersionToolsMainWindow.cpp:321:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3606181Z     QString title = "Version Tools";
2025-10-02T07:00:56.3606393Z                                     ^
2025-10-02T07:00:56.3606804Z src/qt/VersionToolsMainWindow.cpp:325:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3607238Z         title += " - " + dir.dirName();
2025-10-02T07:00:56.3607461Z                                        ^
2025-10-02T07:00:56.3607886Z src/qt/VersionToolsMainWindow.cpp:330:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3608458Z     }
2025-10-02T07:00:56.3608601Z      ^
2025-10-02T07:00:56.3608956Z src/qt/VersionToolsMainWindow.cpp:335:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3609429Z void VersionToolsMainWindow::updateStatusBar()
2025-10-02T07:00:56.3609679Z                                               ^
2025-10-02T07:00:56.3610103Z src/qt/VersionToolsMainWindow.cpp:347:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3610562Z void VersionToolsMainWindow::loadSettings()
2025-10-02T07:00:56.3610799Z                                            ^
2025-10-02T07:00:56.3611221Z src/qt/VersionToolsMainWindow.cpp:350:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3611828Z     settings.beginGroup("MainWindow");
2025-10-02T07:00:56.3612059Z                                       ^
2025-10-02T07:00:56.3612606Z src/qt/VersionToolsMainWindow.cpp:354:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3613111Z     restoreState(settings.value("state").toByteArray());
2025-10-02T07:00:56.3613387Z                                                         ^
2025-10-02T07:00:56.3613830Z src/qt/VersionToolsMainWindow.cpp:359:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3614252Z     }
2025-10-02T07:00:56.3614384Z      ^
2025-10-02T07:00:56.3614806Z src/qt/VersionToolsMainWindow.cpp:364:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3615589Z void VersionToolsMainWindow::saveSettings()
2025-10-02T07:00:56.3616000Z                                            ^
2025-10-02T07:00:56.3616708Z src/qt/VersionToolsMainWindow.cpp:367:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3617463Z     settings.beginGroup("MainWindow");
2025-10-02T07:00:56.3617850Z                                       ^
2025-10-02T07:00:56.3618552Z src/qt/VersionToolsMainWindow.cpp:371:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3619319Z     settings.setValue("state", saveState());
2025-10-02T07:00:56.3619710Z                                             ^
2025-10-02T07:00:56.3620422Z src/qt/VersionToolsMainWindow.cpp:376:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3621123Z     }
2025-10-02T07:00:56.3621351Z      ^
2025-10-02T07:00:56.3622096Z src/qt/VersionToolsMainWindow.cpp:381:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3622947Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-10-02T07:00:56.3623439Z                                                    ^
2025-10-02T07:00:56.3624168Z src/qt/VersionToolsMainWindow.cpp:381:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3625024Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-10-02T07:00:56.3625523Z                                                      ^
2025-10-02T07:00:56.3625997Z src/qt/VersionToolsMainWindow.cpp:381:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3626502Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-10-02T07:00:56.3626794Z                                                            ^
2025-10-02T07:00:56.3627224Z src/qt/VersionToolsMainWindow.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3627644Z #include <QMainWindow>
2025-10-02T07:00:56.3627815Z ^
2025-10-02T07:00:56.3628160Z src/qt/VersionToolsMainWindow.h:26:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3628628Z class VersionToolsMainWindow : public QMainWindow
2025-10-02T07:00:56.3628892Z                                                  ^
2025-10-02T07:00:56.3629316Z src/qt/VersionToolsMainWindow.h:28:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3629866Z     Q_OBJECT
2025-10-02T07:00:56.3630013Z             ^
2025-10-02T07:00:56.3630366Z src/qt/VersionToolsMainWindow.h:31:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3630827Z     VersionToolsMainWindow(QWidget *parent = nullptr);
2025-10-02T07:00:56.3631089Z                                   ^
2025-10-02T07:00:56.3631622Z src/qt/VersionToolsMainWindow.h:31:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3632103Z     VersionToolsMainWindow(QWidget *parent = nullptr);
2025-10-02T07:00:56.3632362Z                                     ^
2025-10-02T07:00:56.3632764Z src/qt/VersionToolsMainWindow.h:32:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3633192Z     ~VersionToolsMainWindow();
2025-10-02T07:00:56.3633390Z                               ^
2025-10-02T07:00:56.3633903Z src/qt/VersionToolsMainWindow.h:35:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3634698Z     void closeEvent(QCloseEvent *event) override;
2025-10-02T07:00:56.3635108Z                                ^
2025-10-02T07:00:56.3635779Z src/qt/VersionToolsMainWindow.h:35:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3636533Z     void closeEvent(QCloseEvent *event) override;
2025-10-02T07:00:56.3636938Z                                  ^
2025-10-02T07:00:56.3637606Z src/qt/VersionToolsMainWindow.h:35:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3638193Z     void closeEvent(QCloseEvent *event) override;
2025-10-02T07:00:56.3638448Z                                                  ^
2025-10-02T07:00:56.3638871Z src/qt/VersionToolsMainWindow.h:44:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3639325Z     void onRepositoryOpened(const QString &path);
2025-10-02T07:00:56.3639581Z                                          ^
2025-10-02T07:00:56.3639998Z src/qt/VersionToolsMainWindow.h:44:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3640444Z     void onRepositoryOpened(const QString &path);
2025-10-02T07:00:56.3640689Z                                            ^
2025-10-02T07:00:56.3641094Z src/qt/VersionToolsMainWindow.h:46:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3641698Z     void onGitOperationStarted(const QString &operation);
2025-10-02T07:00:56.3641979Z                                             ^
2025-10-02T07:00:56.3642390Z src/qt/VersionToolsMainWindow.h:46:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3642859Z     void onGitOperationStarted(const QString &operation);
2025-10-02T07:00:56.3643127Z                                               ^
2025-10-02T07:00:56.3643546Z src/qt/VersionToolsMainWindow.h:47:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3644063Z     void onGitOperationFinished(const QString &operation, bool success);
2025-10-02T07:00:56.3644384Z                                              ^
2025-10-02T07:00:56.3644793Z src/qt/VersionToolsMainWindow.h:47:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3645603Z     void onGitOperationFinished(const QString &operation, bool success);
2025-10-02T07:00:56.3646156Z                                                ^
2025-10-02T07:00:56.3646851Z src/qt/VersionToolsMainWindow.h:47:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3647620Z     void onGitOperationFinished(const QString &operation, bool success);
2025-10-02T07:00:56.3647949Z                                                                         ^
2025-10-02T07:00:56.3648385Z src/qt/VersionToolsMainWindow.h:62:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3648966Z     QSplitter *m_centralSplitter;
2025-10-02T07:00:56.3649170Z              ^
2025-10-02T07:00:56.3649528Z src/qt/VersionToolsMainWindow.h:62:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3649949Z     QSplitter *m_centralSplitter;
2025-10-02T07:00:56.3650151Z                ^
2025-10-02T07:00:56.3650505Z src/qt/VersionToolsMainWindow.h:63:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3650932Z     QStackedWidget *m_contentStack;
2025-10-02T07:00:56.3651142Z                   ^
2025-10-02T07:00:56.3651611Z src/qt/VersionToolsMainWindow.h:63:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3652051Z     QStackedWidget *m_contentStack;
2025-10-02T07:00:56.3652253Z                     ^
2025-10-02T07:00:56.3652621Z src/qt/VersionToolsMainWindow.h:64:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3653146Z     SidebarWidget *m_sidebarWidget;
2025-10-02T07:00:56.3653361Z                  ^
2025-10-02T07:00:56.3653713Z src/qt/VersionToolsMainWindow.h:64:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3654137Z     SidebarWidget *m_sidebarWidget;
2025-10-02T07:00:56.3654340Z                    ^
2025-10-02T07:00:56.3654698Z src/qt/VersionToolsMainWindow.h:65:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3655120Z     ChangesWidget *m_changesWidget;
2025-10-02T07:00:56.3655316Z                  ^
2025-10-02T07:00:56.3655667Z src/qt/VersionToolsMainWindow.h:65:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3656086Z     ChangesWidget *m_changesWidget;
2025-10-02T07:00:56.3656289Z                    ^
2025-10-02T07:00:56.3656812Z src/qt/VersionToolsMainWindow.h:66:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3657527Z     HistoryWidget *m_historyWidget;
2025-10-02T07:00:56.3657881Z                  ^
2025-10-02T07:00:56.3658482Z src/qt/VersionToolsMainWindow.h:66:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3659201Z     HistoryWidget *m_historyWidget;
2025-10-02T07:00:56.3659534Z                    ^
2025-10-02T07:00:56.3660120Z src/qt/VersionToolsMainWindow.h:67:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3660553Z     BranchesWidget *m_branchesWidget;
2025-10-02T07:00:56.3660775Z                   ^
2025-10-02T07:00:56.3661134Z src/qt/VersionToolsMainWindow.h:67:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3661687Z     BranchesWidget *m_branchesWidget;
2025-10-02T07:00:56.3661901Z                     ^
2025-10-02T07:00:56.3662263Z src/qt/VersionToolsMainWindow.h:67:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3662692Z     BranchesWidget *m_branchesWidget;
2025-10-02T07:00:56.3662918Z                                      ^
2025-10-02T07:00:56.3663331Z src/qt/VersionToolsMainWindow.h:70:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3663750Z     QMenu *m_fileMenu;
2025-10-02T07:00:56.3663917Z          ^
2025-10-02T07:00:56.3664268Z src/qt/VersionToolsMainWindow.h:70:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3664679Z     QMenu *m_fileMenu;
2025-10-02T07:00:56.3664851Z            ^
2025-10-02T07:00:56.3665197Z src/qt/VersionToolsMainWindow.h:71:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3665609Z     QMenu *m_viewMenu;
2025-10-02T07:00:56.3665770Z          ^
2025-10-02T07:00:56.3666118Z src/qt/VersionToolsMainWindow.h:71:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3666529Z     QMenu *m_viewMenu;
2025-10-02T07:00:56.3666688Z            ^
2025-10-02T07:00:56.3667040Z src/qt/VersionToolsMainWindow.h:72:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3667591Z     QMenu *m_gitMenu;
2025-10-02T07:00:56.3667756Z          ^
2025-10-02T07:00:56.3668094Z src/qt/VersionToolsMainWindow.h:72:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3668505Z     QMenu *m_gitMenu;
2025-10-02T07:00:56.3668661Z            ^
2025-10-02T07:00:56.3669008Z src/qt/VersionToolsMainWindow.h:73:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3669555Z     QMenu *m_helpMenu;
2025-10-02T07:00:56.3669833Z          ^
2025-10-02T07:00:56.3670419Z src/qt/VersionToolsMainWindow.h:73:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3671116Z     QMenu *m_helpMenu;
2025-10-02T07:00:56.3671393Z            ^
2025-10-02T07:00:56.3672115Z src/qt/VersionToolsMainWindow.h:73:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3672606Z     QMenu *m_helpMenu;
2025-10-02T07:00:56.3672902Z                       ^
2025-10-02T07:00:56.3673278Z src/qt/VersionToolsMainWindow.h:75:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3673696Z     QAction *m_openAction;
2025-10-02T07:00:56.3673872Z            ^
2025-10-02T07:00:56.3674218Z src/qt/VersionToolsMainWindow.h:75:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3674627Z     QAction *m_openAction;
2025-10-02T07:00:56.3674805Z              ^
2025-10-02T07:00:56.3675152Z src/qt/VersionToolsMainWindow.h:76:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3675572Z     QAction *m_cloneAction;
2025-10-02T07:00:56.3675752Z            ^
2025-10-02T07:00:56.3676104Z src/qt/VersionToolsMainWindow.h:76:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3676525Z     QAction *m_cloneAction;
2025-10-02T07:00:56.3676706Z              ^
2025-10-02T07:00:56.3677063Z src/qt/VersionToolsMainWindow.h:77:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3677486Z     QAction *m_refreshAction;
2025-10-02T07:00:56.3677678Z            ^
2025-10-02T07:00:56.3678023Z src/qt/VersionToolsMainWindow.h:77:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3678445Z     QAction *m_refreshAction;
2025-10-02T07:00:56.3678630Z              ^
2025-10-02T07:00:56.3679104Z src/qt/VersionToolsMainWindow.h:78:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3679825Z     QAction *m_settingsAction;
2025-10-02T07:00:56.3680141Z            ^
2025-10-02T07:00:56.3680738Z src/qt/VersionToolsMainWindow.h:78:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3681190Z     QAction *m_settingsAction;
2025-10-02T07:00:56.3681412Z              ^
2025-10-02T07:00:56.3681893Z src/qt/VersionToolsMainWindow.h:79:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3682324Z     QAction *m_exitAction;
2025-10-02T07:00:56.3682503Z            ^
2025-10-02T07:00:56.3682853Z src/qt/VersionToolsMainWindow.h:79:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3683271Z     QAction *m_exitAction;
2025-10-02T07:00:56.3683445Z              ^
2025-10-02T07:00:56.3683798Z src/qt/VersionToolsMainWindow.h:80:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3684212Z     QAction *m_aboutAction;
2025-10-02T07:00:56.3684391Z            ^
2025-10-02T07:00:56.3684733Z src/qt/VersionToolsMainWindow.h:80:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3685150Z     QAction *m_aboutAction;
2025-10-02T07:00:56.3685324Z              ^
2025-10-02T07:00:56.3685674Z src/qt/VersionToolsMainWindow.h:81:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3686094Z     QAction *m_aboutQtAction;
2025-10-02T07:00:56.3686279Z            ^
2025-10-02T07:00:56.3686760Z src/qt/VersionToolsMainWindow.h:81:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3687179Z     QAction *m_aboutQtAction;
2025-10-02T07:00:56.3687366Z              ^
2025-10-02T07:00:56.3687712Z src/qt/VersionToolsMainWindow.h:81:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3688131Z     QAction *m_aboutQtAction;
2025-10-02T07:00:56.3688321Z                              ^
2025-10-02T07:00:56.3688695Z src/qt/VersionToolsMainWindow.h:84:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3689113Z     QToolBar *m_mainToolBar;
2025-10-02T07:00:56.3689294Z             ^
2025-10-02T07:00:56.3689646Z src/qt/VersionToolsMainWindow.h:84:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3690060Z     QToolBar *m_mainToolBar;
2025-10-02T07:00:56.3690247Z               ^
2025-10-02T07:00:56.3690744Z src/qt/VersionToolsMainWindow.h:84:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3691183Z     QToolBar *m_mainToolBar;
2025-10-02T07:00:56.3691378Z                             ^
2025-10-02T07:00:56.3691891Z src/qt/VersionToolsMainWindow.h:87:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3692317Z     QLabel *m_repositoryLabel;
2025-10-02T07:00:56.3692501Z           ^
2025-10-02T07:00:56.3692848Z src/qt/VersionToolsMainWindow.h:87:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3693263Z     QLabel *m_repositoryLabel;
2025-10-02T07:00:56.3693452Z             ^
2025-10-02T07:00:56.3693798Z src/qt/VersionToolsMainWindow.h:88:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3694214Z     QLabel *m_branchLabel;
2025-10-02T07:00:56.3694394Z           ^
2025-10-02T07:00:56.3694743Z src/qt/VersionToolsMainWindow.h:88:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3695167Z     QLabel *m_branchLabel;
2025-10-02T07:00:56.3695340Z             ^
2025-10-02T07:00:56.3695687Z src/qt/VersionToolsMainWindow.h:89:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3696102Z     QLabel *m_statusLabel;
2025-10-02T07:00:56.3696279Z           ^
2025-10-02T07:00:56.3696619Z src/qt/VersionToolsMainWindow.h:89:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3697037Z     QLabel *m_statusLabel;
2025-10-02T07:00:56.3697212Z             ^
2025-10-02T07:00:56.3697556Z src/qt/VersionToolsMainWindow.h:90:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3697983Z     QProgressBar *m_progressBar;
2025-10-02T07:00:56.3698182Z                 ^
2025-10-02T07:00:56.3698541Z src/qt/VersionToolsMainWindow.h:90:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3698962Z     QProgressBar *m_progressBar;
2025-10-02T07:00:56.3699166Z                   ^
2025-10-02T07:00:56.3699522Z src/qt/VersionToolsMainWindow.h:90:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3699939Z     QProgressBar *m_progressBar;
2025-10-02T07:00:56.3700141Z                                 ^
2025-10-02T07:00:56.3700528Z src/qt/VersionToolsMainWindow.h:94:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3700945Z     GitWorker *m_gitWorker;
2025-10-02T07:00:56.3701126Z              ^
2025-10-02T07:00:56.3701596Z src/qt/VersionToolsMainWindow.h:94:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3702018Z     GitWorker *m_gitWorker;
2025-10-02T07:00:56.3702199Z                ^
2025-10-02T07:00:56.3702656Z src/qt/widgets/ChangesWidget.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3703064Z #include <QWidget>
2025-10-02T07:00:56.3703225Z ^
2025-10-02T07:00:56.3703563Z src/qt/widgets/ChangesWidget.h:23:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3704121Z class ChangesWidget : public QWidget
2025-10-02T07:00:56.3704340Z                                     ^
2025-10-02T07:00:56.3704739Z src/qt/widgets/ChangesWidget.h:25:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3705147Z     Q_OBJECT
2025-10-02T07:00:56.3705293Z             ^
2025-10-02T07:00:56.3705639Z src/qt/widgets/ChangesWidget.h:28:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3706167Z     explicit ChangesWidget(GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:00:56.3706507Z                                      ^
2025-10-02T07:00:56.3706901Z src/qt/widgets/ChangesWidget.h:28:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3707543Z     explicit ChangesWidget(GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:00:56.3708263Z                                        ^
2025-10-02T07:00:56.3708958Z src/qt/widgets/ChangesWidget.h:28:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3709843Z     explicit ChangesWidget(GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:00:56.3710411Z                                                           ^
2025-10-02T07:00:56.3711116Z src/qt/widgets/ChangesWidget.h:28:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3712133Z     explicit ChangesWidget(GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:00:56.3712718Z                                                             ^
2025-10-02T07:00:56.3713428Z src/qt/widgets/ChangesWidget.h:30:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3714088Z     void setRepository(const QString &path);
2025-10-02T07:00:56.3714327Z                                     ^
2025-10-02T07:00:56.3714723Z src/qt/widgets/ChangesWidget.h:30:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3715156Z     void setRepository(const QString &path);
2025-10-02T07:00:56.3715383Z                                       ^
2025-10-02T07:00:56.3715781Z src/qt/widgets/ChangesWidget.h:31:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3716198Z     void refreshChanges();
2025-10-02T07:00:56.3716381Z                           ^
2025-10-02T07:00:56.3716753Z src/qt/widgets/ChangesWidget.h:37:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3717195Z     void onFileItemChanged(QListWidgetItem *item);
2025-10-02T07:00:56.3717451Z                                           ^
2025-10-02T07:00:56.3717844Z src/qt/widgets/ChangesWidget.h:37:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3718287Z     void onFileItemChanged(QListWidgetItem *item);
2025-10-02T07:00:56.3718545Z                                             ^
2025-10-02T07:00:56.3718942Z src/qt/widgets/ChangesWidget.h:39:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3719361Z     void showCommitDialog();
2025-10-02T07:00:56.3719553Z                             ^
2025-10-02T07:00:56.3719928Z src/qt/widgets/ChangesWidget.h:45:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3720353Z     void stageFile(const QString &filePath);
2025-10-02T07:00:56.3720581Z                                 ^
2025-10-02T07:00:56.3720968Z src/qt/widgets/ChangesWidget.h:45:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3721392Z     void stageFile(const QString &filePath);
2025-10-02T07:00:56.3721750Z                                   ^
2025-10-02T07:00:56.3722136Z src/qt/widgets/ChangesWidget.h:46:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3722570Z     void unstageFile(const QString &filePath);
2025-10-02T07:00:56.3722937Z                                   ^
2025-10-02T07:00:56.3723328Z src/qt/widgets/ChangesWidget.h:46:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3723768Z     void unstageFile(const QString &filePath);
2025-10-02T07:00:56.3724010Z                                     ^
2025-10-02T07:00:56.3724414Z src/qt/widgets/ChangesWidget.h:48:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3724838Z     GitManager *m_gitManager;
2025-10-02T07:00:56.3725029Z               ^
2025-10-02T07:00:56.3725377Z src/qt/widgets/ChangesWidget.h:48:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3725788Z     GitManager *m_gitManager;
2025-10-02T07:00:56.3725973Z                 ^
2025-10-02T07:00:56.3726326Z src/qt/widgets/ChangesWidget.h:52:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3726735Z     QVBoxLayout *m_layout;
2025-10-02T07:00:56.3727021Z                ^
2025-10-02T07:00:56.3727371Z src/qt/widgets/ChangesWidget.h:52:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3727775Z     QVBoxLayout *m_layout;
2025-10-02T07:00:56.3727955Z                  ^
2025-10-02T07:00:56.3728301Z src/qt/widgets/ChangesWidget.h:53:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3728709Z     QToolBar *m_toolbar;
2025-10-02T07:00:56.3728881Z             ^
2025-10-02T07:00:56.3729222Z src/qt/widgets/ChangesWidget.h:53:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3729628Z     QToolBar *m_toolbar;
2025-10-02T07:00:56.3729797Z               ^
2025-10-02T07:00:56.3730142Z src/qt/widgets/ChangesWidget.h:54:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3730547Z     QSplitter *m_splitter;
2025-10-02T07:00:56.3730726Z              ^
2025-10-02T07:00:56.3731066Z src/qt/widgets/ChangesWidget.h:54:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3731611Z     QSplitter *m_splitter;
2025-10-02T07:00:56.3731794Z                ^
2025-10-02T07:00:56.3732153Z src/qt/widgets/ChangesWidget.h:54:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3749514Z     QSplitter *m_splitter;
2025-10-02T07:00:56.3749781Z                           ^
2025-10-02T07:00:56.3750198Z src/qt/widgets/ChangesWidget.h:57:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3750650Z     QWidget *m_fileListPanel;
2025-10-02T07:00:56.3750853Z            ^
2025-10-02T07:00:56.3751213Z src/qt/widgets/ChangesWidget.h:57:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3751769Z     QWidget *m_fileListPanel;
2025-10-02T07:00:56.3751970Z              ^
2025-10-02T07:00:56.3752337Z src/qt/widgets/ChangesWidget.h:58:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3752774Z     QListWidget *m_stagedList;
2025-10-02T07:00:56.3752971Z                ^
2025-10-02T07:00:56.3753329Z src/qt/widgets/ChangesWidget.h:58:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3753742Z     QListWidget *m_stagedList;
2025-10-02T07:00:56.3753931Z                  ^
2025-10-02T07:00:56.3754274Z src/qt/widgets/ChangesWidget.h:59:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3754689Z     QListWidget *m_unstagedList;
2025-10-02T07:00:56.3754914Z                ^
2025-10-02T07:00:56.3755264Z src/qt/widgets/ChangesWidget.h:59:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3755685Z     QListWidget *m_unstagedList;
2025-10-02T07:00:56.3755877Z                  ^
2025-10-02T07:00:56.3756226Z src/qt/widgets/ChangesWidget.h:59:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3756628Z     QListWidget *m_unstagedList;
2025-10-02T07:00:56.3757021Z                                 ^
2025-10-02T07:00:56.3757401Z src/qt/widgets/ChangesWidget.h:62:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3757811Z     QWidget *m_diffPanel;
2025-10-02T07:00:56.3757990Z            ^
2025-10-02T07:00:56.3758334Z src/qt/widgets/ChangesWidget.h:62:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3758737Z     QWidget *m_diffPanel;
2025-10-02T07:00:56.3758912Z              ^
2025-10-02T07:00:56.3759261Z src/qt/widgets/ChangesWidget.h:63:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3759664Z     QTextEdit *m_diffView;
2025-10-02T07:00:56.3759844Z              ^
2025-10-02T07:00:56.3760180Z src/qt/widgets/ChangesWidget.h:63:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3760584Z     QTextEdit *m_diffView;
2025-10-02T07:00:56.3760757Z                ^
2025-10-02T07:00:56.3761209Z src/qt/widgets/ChangesWidget.h:63:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3761745Z     QTextEdit *m_diffView;
2025-10-02T07:00:56.3761935Z                           ^
2025-10-02T07:00:56.3762324Z src/qt/widgets/ChangesWidget.h:66:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3762759Z     QPushButton *m_stageAllButton;
2025-10-02T07:00:56.3762972Z                ^
2025-10-02T07:00:56.3763324Z src/qt/widgets/ChangesWidget.h:66:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3763741Z     QPushButton *m_stageAllButton;
2025-10-02T07:00:56.3763943Z                  ^
2025-10-02T07:00:56.3764294Z src/qt/widgets/ChangesWidget.h:67:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3764709Z     QPushButton *m_unstageAllButton;
2025-10-02T07:00:56.3764915Z                ^
2025-10-02T07:00:56.3765269Z src/qt/widgets/ChangesWidget.h:67:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3765683Z     QPushButton *m_unstageAllButton;
2025-10-02T07:00:56.3765893Z                  ^
2025-10-02T07:00:56.3766232Z src/qt/widgets/ChangesWidget.h:68:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3766643Z     QPushButton *m_commitButton;
2025-10-02T07:00:56.3766847Z                ^
2025-10-02T07:00:56.3767187Z src/qt/widgets/ChangesWidget.h:68:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3767601Z     QPushButton *m_commitButton;
2025-10-02T07:00:56.3767795Z                  ^
2025-10-02T07:00:56.3768139Z src/qt/widgets/ChangesWidget.h:68:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3768545Z     QPushButton *m_commitButton;
2025-10-02T07:00:56.3768748Z                                 ^
2025-10-02T07:00:56.3769139Z src/qt/widgets/ChangesWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3769587Z #include "ChangesWidget.h"
2025-10-02T07:00:56.3769772Z ^
2025-10-02T07:00:56.3770107Z src/qt/widgets/ChangesWidget.cpp:5:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3770594Z ChangesWidget::ChangesWidget(QWidget *parent)
2025-10-02T07:00:56.3770838Z                                     ^
2025-10-02T07:00:56.3771249Z src/qt/widgets/ChangesWidget.cpp:5:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3771809Z ChangesWidget::ChangesWidget(QWidget *parent)
2025-10-02T07:00:56.3772057Z                                       ^
2025-10-02T07:00:56.3772472Z src/qt/widgets/ChangesWidget.cpp:5:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3772916Z ChangesWidget::ChangesWidget(QWidget *parent)
2025-10-02T07:00:56.3773160Z                                              ^
2025-10-02T07:00:56.3773568Z src/qt/widgets/ChangesWidget.cpp:6:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3774100Z     : QWidget(parent)
2025-10-02T07:00:56.3774271Z                      ^
2025-10-02T07:00:56.3774641Z src/qt/widgets/ChangesWidget.cpp:8:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3775069Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:00:56.3775290Z         ^
2025-10-02T07:00:56.3775634Z src/qt/widgets/ChangesWidget.cpp:8:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3776057Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:00:56.3776274Z           ^
2025-10-02T07:00:56.3776528Z src/qt/widgets/HistoryWidget.h:9:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3776588Z     Q_OBJECT
2025-10-02T07:00:56.3776651Z             ^
2025-10-02T07:00:56.3776902Z src/qt/widgets/HistoryWidget.h:12:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3777117Z     explicit HistoryWidget(QWidget *parent = nullptr);
2025-10-02T07:00:56.3777198Z                                   ^
2025-10-02T07:00:56.3777457Z src/qt/widgets/HistoryWidget.h:12:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3777575Z     explicit HistoryWidget(QWidget *parent = nullptr);
2025-10-02T07:00:56.3777645Z                                     ^
2025-10-02T07:00:56.3777908Z src/qt/widgets/HistoryWidget.h:12:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3778017Z     explicit HistoryWidget(QWidget *parent = nullptr);
2025-10-02T07:00:56.3778095Z                                                       ^
2025-10-02T07:00:56.3778355Z src/qt/widgets/HistoryWidget.h:15:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3778503Z     void commitSelected(const QString& commitHash);
2025-10-02T07:00:56.3778579Z                                                    ^
2025-10-02T07:00:56.3778857Z src/qt/widgets/BranchesWidget.h:9:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3778945Z class BranchesWidget : public QWidget
2025-10-02T07:00:56.3779013Z                                      ^
2025-10-02T07:00:56.3779276Z src/qt/widgets/BranchesWidget.h:11:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3779343Z     Q_OBJECT
2025-10-02T07:00:56.3779402Z             ^
2025-10-02T07:00:56.3779662Z src/qt/widgets/BranchesWidget.h:14:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3779910Z     explicit BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:00:56.3779986Z                                                     ^
2025-10-02T07:00:56.3780240Z src/qt/widgets/BranchesWidget.h:14:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3780484Z     explicit BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:00:56.3780562Z                                                       ^
2025-10-02T07:00:56.3780816Z src/qt/widgets/BranchesWidget.h:14:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3781047Z     explicit BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:00:56.3781132Z                                                                          ^
2025-10-02T07:00:56.3781419Z src/qt/widgets/BranchesWidget.h:14:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3781755Z     explicit BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:00:56.3781842Z                                                                            ^
2025-10-02T07:00:56.3782112Z src/qt/widgets/BranchesWidget.h:15:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3782207Z     ~BranchesWidget() override = default;
2025-10-02T07:00:56.3782393Z                                          ^
2025-10-02T07:00:56.3782651Z src/qt/widgets/BranchesWidget.h:18:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3782754Z     void branchChanged(const QString &branchName);
2025-10-02T07:00:56.3782824Z                                     ^
2025-10-02T07:00:56.3783081Z src/qt/widgets/BranchesWidget.h:18:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3783185Z     void branchChanged(const QString &branchName);
2025-10-02T07:00:56.3783258Z                                       ^
2025-10-02T07:00:56.3783513Z src/qt/widgets/BranchesWidget.h:18:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3783611Z     void branchChanged(const QString &branchName);
2025-10-02T07:00:56.3783689Z                                                   ^
2025-10-02T07:00:56.3784047Z src/qt/widgets/BranchesWidget.h:21:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3784169Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:00:56.3784235Z                             ^
2025-10-02T07:00:56.3784516Z src/qt/widgets/BranchesWidget.h:21:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3784607Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:00:56.3784672Z                               ^
2025-10-02T07:00:56.3784943Z src/qt/widgets/SidebarWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3785020Z #include "SidebarWidget.h"
2025-10-02T07:00:56.3785078Z ^
2025-10-02T07:00:56.3785350Z src/qt/widgets/SidebarWidget.cpp:11:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3785455Z SidebarWidget::SidebarWidget(QWidget *parent)
2025-10-02T07:00:56.3785521Z                                     ^
2025-10-02T07:00:56.3785785Z src/qt/widgets/SidebarWidget.cpp:11:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3785894Z SidebarWidget::SidebarWidget(QWidget *parent)
2025-10-02T07:00:56.3785961Z                                       ^
2025-10-02T07:00:56.3786222Z src/qt/widgets/SidebarWidget.cpp:12:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3786295Z     : QWidget(parent)
2025-10-02T07:00:56.3786356Z                      ^
2025-10-02T07:00:56.3786612Z src/qt/widgets/SidebarWidget.cpp:13:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3786686Z     , m_layout(nullptr)
2025-10-02T07:00:56.3786749Z                        ^
2025-10-02T07:00:56.3787010Z src/qt/widgets/SidebarWidget.cpp:14:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3787089Z     , m_repositoryLabel(nullptr)
2025-10-02T07:00:56.3787159Z                                 ^
2025-10-02T07:00:56.3787422Z src/qt/widgets/SidebarWidget.cpp:15:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3787502Z     , m_branchLabel(nullptr)
2025-10-02T07:00:56.3787572Z                             ^
2025-10-02T07:00:56.3787828Z src/qt/widgets/SidebarWidget.cpp:16:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3787902Z     , m_navigationList(nullptr)
2025-10-02T07:00:56.3787969Z                                ^
2025-10-02T07:00:56.3788225Z src/qt/widgets/SidebarWidget.cpp:17:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3788296Z     , m_statusLabel(nullptr)
2025-10-02T07:00:56.3788356Z      ^
2025-10-02T07:00:56.3788618Z src/qt/widgets/SidebarWidget.cpp:17:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3788689Z     , m_statusLabel(nullptr)
2025-10-02T07:00:56.3788752Z                             ^
2025-10-02T07:00:56.3789016Z src/qt/widgets/SidebarWidget.cpp:18:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3789170Z     , m_changesItem(nullptr)
2025-10-02T07:00:56.3789231Z                             ^
2025-10-02T07:00:56.3789492Z src/qt/widgets/SidebarWidget.cpp:19:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3789562Z     , m_historyItem(nullptr)
2025-10-02T07:00:56.3789624Z                             ^
2025-10-02T07:00:56.3789880Z src/qt/widgets/SidebarWidget.cpp:20:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3789960Z     , m_branchesItem(nullptr)
2025-10-02T07:00:56.3790025Z                              ^
2025-10-02T07:00:56.3790280Z src/qt/widgets/SidebarWidget.cpp:21:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3790355Z     , m_remotesItem(nullptr)
2025-10-02T07:00:56.3790412Z      ^
2025-10-02T07:00:56.3790665Z src/qt/widgets/SidebarWidget.cpp:21:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3790816Z     , m_remotesItem(nullptr)
2025-10-02T07:00:56.3790880Z                             ^
2025-10-02T07:00:56.3791138Z src/qt/widgets/SidebarWidget.cpp:22:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3791209Z     , m_tagsItem(nullptr)
2025-10-02T07:00:56.3791277Z                          ^
2025-10-02T07:00:56.3791632Z src/qt/widgets/SidebarWidget.cpp:23:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3791708Z     , m_stashesItem(nullptr)
2025-10-02T07:00:56.3791771Z                             ^
2025-10-02T07:00:56.3792046Z src/qt/widgets/SidebarWidget.cpp:29:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3792128Z void SidebarWidget::setupUI()
2025-10-02T07:00:56.3792192Z                              ^
2025-10-02T07:00:56.3792466Z src/qt/widgets/SidebarWidget.cpp:117:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3792600Z     connect(m_navigationList, &QListWidget::itemClicked,
2025-10-02T07:00:56.3792680Z                                                         ^
2025-10-02T07:00:56.3792950Z src/qt/widgets/SidebarWidget.cpp:121:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3793050Z void SidebarWidget::createNavigationItems()
2025-10-02T07:00:56.3793121Z                                            ^
2025-10-02T07:00:56.3793385Z src/qt/widgets/SidebarWidget.cpp:159:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3793528Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-10-02T07:00:56.3793604Z                                                    ^
2025-10-02T07:00:56.3793872Z src/qt/widgets/SidebarWidget.cpp:159:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3794004Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-10-02T07:00:56.3794081Z                                                      ^
2025-10-02T07:00:56.3794348Z src/qt/widgets/SidebarWidget.cpp:159:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3794484Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-10-02T07:00:56.3794566Z                                                           ^
2025-10-02T07:00:56.3794828Z src/qt/widgets/SidebarWidget.cpp:172:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3795006Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-10-02T07:00:56.3795085Z                                                               ^
2025-10-02T07:00:56.3795348Z src/qt/widgets/SidebarWidget.cpp:172:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3795520Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-10-02T07:00:56.3795602Z                                                                 ^
2025-10-02T07:00:56.3795993Z src/qt/widgets/SidebarWidget.cpp:172:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3796172Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-10-02T07:00:56.3796253Z                                                                        ^
2025-10-02T07:00:56.3796525Z src/qt/widgets/SidebarWidget.cpp:180:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3796816Z             branchText += QString(" (%1↑ %2↓)")
2025-10-02T07:00:56.3797084Z src/qt/widgets/SidebarWidget.cpp:181:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3797168Z                          .arg(status.aheadCount)
2025-10-02T07:00:56.3797241Z                                                 ^
2025-10-02T07:00:56.3797511Z src/qt/widgets/SidebarWidget.cpp:193:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3797609Z void SidebarWidget::updateStatusCounts()
2025-10-02T07:00:56.3797791Z                                         ^
2025-10-02T07:00:56.3798068Z src/qt/widgets/SidebarWidget.cpp:199:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3798185Z     for (const auto &change : m_currentStatus.changes) {
2025-10-02T07:00:56.3798247Z                    ^
2025-10-02T07:00:56.3798522Z src/qt/widgets/SidebarWidget.cpp:199:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3798639Z     for (const auto &change : m_currentStatus.changes) {
2025-10-02T07:00:56.3798700Z                      ^
2025-10-02T07:00:56.3798968Z src/qt/widgets/SidebarWidget.cpp:232:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3799101Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-10-02T07:00:56.3799178Z                                                  ^
2025-10-02T07:00:56.3799450Z src/qt/widgets/SidebarWidget.cpp:232:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3799584Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-10-02T07:00:56.3799658Z                                                    ^
2025-10-02T07:00:56.3799920Z src/qt/widgets/SidebarWidget.cpp:232:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3800046Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-10-02T07:00:56.3800124Z                                                         ^
2025-10-02T07:00:56.3800378Z src/qt/widgets/SidebarWidget.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3800449Z #include <QWidget>
2025-10-02T07:00:56.3800507Z ^
2025-10-02T07:00:56.3800764Z src/qt/widgets/SidebarWidget.h:15:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3800851Z class SidebarWidget : public QWidget
2025-10-02T07:00:56.3800926Z                                     ^
2025-10-02T07:00:56.3801182Z src/qt/widgets/SidebarWidget.h:17:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3801246Z     Q_OBJECT
2025-10-02T07:00:56.3801309Z             ^
2025-10-02T07:00:56.3801667Z src/qt/widgets/SidebarWidget.h:20:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3801791Z     explicit SidebarWidget(QWidget *parent = nullptr);
2025-10-02T07:00:56.3801859Z                                   ^
2025-10-02T07:00:56.3802279Z src/qt/widgets/SidebarWidget.h:20:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3802473Z     explicit SidebarWidget(QWidget *parent = nullptr);
2025-10-02T07:00:56.3802542Z                                     ^
2025-10-02T07:00:56.3802803Z src/qt/widgets/SidebarWidget.h:22:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3802908Z     void setRepositoryPath(const QString &path);
2025-10-02T07:00:56.3802978Z                                         ^
2025-10-02T07:00:56.3803431Z src/qt/widgets/SidebarWidget.h:22:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3803534Z     void setRepositoryPath(const QString &path);
2025-10-02T07:00:56.3803604Z                                           ^
2025-10-02T07:00:56.3803865Z src/qt/widgets/SidebarWidget.h:23:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3804007Z     void updateStatus(const VersionTools::GitStatus &status);
2025-10-02T07:00:56.3804081Z                                                    ^
2025-10-02T07:00:56.3804336Z src/qt/widgets/SidebarWidget.h:23:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3804471Z     void updateStatus(const VersionTools::GitStatus &status);
2025-10-02T07:00:56.3804544Z                                                      ^
2025-10-02T07:00:56.3804901Z src/qt/widgets/SidebarWidget.h:23:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3805042Z     void updateStatus(const VersionTools::GitStatus &status);
2025-10-02T07:00:56.3805122Z                                                              ^
2025-10-02T07:00:56.3805373Z src/qt/widgets/SidebarWidget.h:26:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3805459Z     void selectionChanged(int index);
2025-10-02T07:00:56.3805527Z                                      ^
2025-10-02T07:00:56.3805777Z src/qt/widgets/SidebarWidget.h:29:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3805878Z     void onItemClicked(QListWidgetItem *item);
2025-10-02T07:00:56.3805945Z                                       ^
2025-10-02T07:00:56.3806194Z src/qt/widgets/SidebarWidget.h:29:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3806286Z     void onItemClicked(QListWidgetItem *item);
2025-10-02T07:00:56.3806359Z                                         ^
2025-10-02T07:00:56.3806617Z src/qt/widgets/SidebarWidget.h:29:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3806708Z     void onItemClicked(QListWidgetItem *item);
2025-10-02T07:00:56.3806785Z                                               ^
2025-10-02T07:00:56.3807034Z src/qt/widgets/SidebarWidget.h:36:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3807107Z     QVBoxLayout *m_layout;
2025-10-02T07:00:56.3807170Z                ^
2025-10-02T07:00:56.3807417Z src/qt/widgets/SidebarWidget.h:36:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3807487Z     QVBoxLayout *m_layout;
2025-10-02T07:00:56.3807548Z                  ^
2025-10-02T07:00:56.3807801Z src/qt/widgets/SidebarWidget.h:37:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3807879Z     QLabel *m_repositoryLabel;
2025-10-02T07:00:56.3807937Z           ^
2025-10-02T07:00:56.3808194Z src/qt/widgets/SidebarWidget.h:37:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3808273Z     QLabel *m_repositoryLabel;
2025-10-02T07:00:56.3808331Z             ^
2025-10-02T07:00:56.3808583Z src/qt/widgets/SidebarWidget.h:38:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3808653Z     QLabel *m_branchLabel;
2025-10-02T07:00:56.3808711Z           ^
2025-10-02T07:00:56.3808964Z src/qt/widgets/SidebarWidget.h:38:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3809033Z     QLabel *m_branchLabel;
2025-10-02T07:00:56.3809091Z             ^
2025-10-02T07:00:56.3809345Z src/qt/widgets/SidebarWidget.h:39:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3809424Z     QListWidget *m_navigationList;
2025-10-02T07:00:56.3809482Z                ^
2025-10-02T07:00:56.3809738Z src/qt/widgets/SidebarWidget.h:39:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3809898Z     QListWidget *m_navigationList;
2025-10-02T07:00:56.3809956Z                  ^
2025-10-02T07:00:56.3810209Z src/qt/widgets/SidebarWidget.h:40:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3810278Z     QLabel *m_statusLabel;
2025-10-02T07:00:56.3810336Z           ^
2025-10-02T07:00:56.3810583Z src/qt/widgets/SidebarWidget.h:40:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3810657Z     QLabel *m_statusLabel;
2025-10-02T07:00:56.3810715Z             ^
2025-10-02T07:00:56.3810962Z src/qt/widgets/SidebarWidget.h:46:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3811047Z     QListWidgetItem *m_changesItem;
2025-10-02T07:00:56.3811107Z                    ^
2025-10-02T07:00:56.3811351Z src/qt/widgets/SidebarWidget.h:46:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3811640Z     QListWidgetItem *m_changesItem;
2025-10-02T07:00:56.3811716Z                      ^
2025-10-02T07:00:56.3811983Z src/qt/widgets/SidebarWidget.h:47:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3812066Z     QListWidgetItem *m_historyItem;
2025-10-02T07:00:56.3812131Z                    ^
2025-10-02T07:00:56.3812383Z src/qt/widgets/SidebarWidget.h:47:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3812463Z     QListWidgetItem *m_historyItem;
2025-10-02T07:00:56.3812528Z                      ^
2025-10-02T07:00:56.3812780Z src/qt/widgets/SidebarWidget.h:48:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3812860Z     QListWidgetItem *m_branchesItem;
2025-10-02T07:00:56.3812917Z                    ^
2025-10-02T07:00:56.3813169Z src/qt/widgets/SidebarWidget.h:48:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3813248Z     QListWidgetItem *m_branchesItem;
2025-10-02T07:00:56.3813320Z                      ^
2025-10-02T07:00:56.3813572Z src/qt/widgets/SidebarWidget.h:49:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3813650Z     QListWidgetItem *m_remotesItem;
2025-10-02T07:00:56.3813709Z                    ^
2025-10-02T07:00:56.3813960Z src/qt/widgets/SidebarWidget.h:49:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3814038Z     QListWidgetItem *m_remotesItem;
2025-10-02T07:00:56.3814095Z                      ^
2025-10-02T07:00:56.3814341Z src/qt/widgets/SidebarWidget.h:50:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3814426Z     QListWidgetItem *m_tagsItem;
2025-10-02T07:00:56.3814485Z                    ^
2025-10-02T07:00:56.3814731Z src/qt/widgets/SidebarWidget.h:50:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3814812Z     QListWidgetItem *m_tagsItem;
2025-10-02T07:00:56.3814872Z                      ^
2025-10-02T07:00:56.3815125Z src/qt/widgets/SidebarWidget.h:51:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3815205Z     QListWidgetItem *m_stashesItem;
2025-10-02T07:00:56.3815265Z                    ^
2025-10-02T07:00:56.3815513Z src/qt/widgets/SidebarWidget.h:51:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3815588Z     QListWidgetItem *m_stashesItem;
2025-10-02T07:00:56.3815650Z                      ^
2025-10-02T07:00:56.3815923Z src/qt/widgets/BranchesWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3815999Z #include "BranchesWidget.h"
2025-10-02T07:00:56.3816062Z ^
2025-10-02T07:00:56.3816336Z src/qt/widgets/BranchesWidget.cpp:6:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3816573Z BranchesWidget::BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:00:56.3816659Z                                                        ^
2025-10-02T07:00:56.3817049Z src/qt/widgets/BranchesWidget.cpp:6:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3817269Z BranchesWidget::BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:00:56.3817349Z                                                          ^
2025-10-02T07:00:56.3817622Z src/qt/widgets/BranchesWidget.cpp:6:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3817838Z BranchesWidget::BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:00:56.3817923Z                                                                             ^
2025-10-02T07:00:56.3818191Z src/qt/widgets/BranchesWidget.cpp:6:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3818405Z BranchesWidget::BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:00:56.3818646Z                                                                               ^
2025-10-02T07:00:56.3818932Z src/qt/widgets/BranchesWidget.cpp:7:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3819001Z     : QWidget(parent)
2025-10-02T07:00:56.3819061Z                      ^
2025-10-02T07:00:56.3819328Z src/qt/widgets/BranchesWidget.cpp:8:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3819401Z     , m_gitManager(gitManager)
2025-10-02T07:00:56.3819465Z                               ^
2025-10-02T07:00:56.3819725Z src/qt/widgets/BranchesWidget.cpp:10:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3819818Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:00:56.3819877Z         ^
2025-10-02T07:00:56.3820144Z src/qt/widgets/BranchesWidget.cpp:10:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3820229Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:00:56.3820296Z           ^
2025-10-02T07:00:56.3820556Z src/qt/widgets/HistoryWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3820635Z #include "HistoryWidget.h"
2025-10-02T07:00:56.3820692Z ^
2025-10-02T07:00:56.3820954Z src/qt/widgets/HistoryWidget.cpp:5:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3821058Z HistoryWidget::HistoryWidget(QWidget *parent)
2025-10-02T07:00:56.3821131Z                                     ^
2025-10-02T07:00:56.3821396Z src/qt/widgets/HistoryWidget.cpp:5:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3821595Z HistoryWidget::HistoryWidget(QWidget *parent)
2025-10-02T07:00:56.3821670Z                                       ^
2025-10-02T07:00:56.3821946Z src/qt/widgets/HistoryWidget.cpp:5:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3822049Z HistoryWidget::HistoryWidget(QWidget *parent)
2025-10-02T07:00:56.3822135Z                                              ^
2025-10-02T07:00:56.3822401Z src/qt/widgets/HistoryWidget.cpp:6:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3822470Z     : QWidget(parent)
2025-10-02T07:00:56.3822531Z                      ^
2025-10-02T07:00:56.3822805Z src/qt/widgets/HistoryWidget.cpp:8:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3822888Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:00:56.3822946Z         ^
2025-10-02T07:00:56.3823227Z src/qt/widgets/HistoryWidget.cpp:8:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3823310Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:00:56.3823368Z           ^
2025-10-02T07:00:56.3823572Z src/qt/main.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3823645Z #include <QApplication>
2025-10-02T07:00:56.3823702Z ^
2025-10-02T07:00:56.3823900Z src/qt/main.cpp:8:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3824100Z int main(int argc, char *argv[])
2025-10-02T07:00:56.3824162Z                        ^
2025-10-02T07:00:56.3824348Z src/qt/main.cpp:8:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3824426Z int main(int argc, char *argv[])
2025-10-02T07:00:56.3824491Z                          ^
2025-10-02T07:00:56.3824674Z src/qt/main.cpp:8:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3824747Z int main(int argc, char *argv[])
2025-10-02T07:00:56.3824817Z                                 ^
2025-10-02T07:00:56.3825008Z src/qt/main.cpp:10:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3825089Z     QApplication app(argc, argv);
2025-10-02T07:00:56.3825160Z                                  ^
2025-10-02T07:00:56.3825448Z src/qt/main.cpp:16:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3825568Z     app.setOrganizationDomain("versiontools.dev");
2025-10-02T07:00:56.3825649Z                                                   ^
2025-10-02T07:00:56.3825839Z src/qt/main.cpp:19:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3825975Z     app.setWindowIcon(QIcon(":/icons/versiontools.png"));
2025-10-02T07:00:56.3826051Z                                                          ^
2025-10-02T07:00:56.3826247Z src/qt/main.cpp:22:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3826350Z     ThemeManager::applyModernTheme(&app);
2025-10-02T07:00:56.3826418Z                                          ^
2025-10-02T07:00:56.3826614Z src/qt/main.cpp:26:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3826682Z     window.show();
2025-10-02T07:00:56.3826742Z                   ^
2025-10-02T07:00:56.3827023Z src/qt/dialogs/SettingsDialog.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3827105Z #include "SettingsDialog.h"
2025-10-02T07:00:56.3827161Z ^
2025-10-02T07:00:56.3827426Z src/qt/dialogs/SettingsDialog.cpp:6:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3827542Z SettingsDialog::SettingsDialog(QWidget *parent)
2025-10-02T07:00:56.3827609Z                                       ^
2025-10-02T07:00:56.3827874Z src/qt/dialogs/SettingsDialog.cpp:6:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3827984Z SettingsDialog::SettingsDialog(QWidget *parent)
2025-10-02T07:00:56.3828050Z                                         ^
2025-10-02T07:00:56.3828311Z src/qt/dialogs/SettingsDialog.cpp:6:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3828417Z SettingsDialog::SettingsDialog(QWidget *parent)
2025-10-02T07:00:56.3828490Z                                                ^
2025-10-02T07:00:56.3828755Z src/qt/dialogs/SettingsDialog.cpp:7:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3828826Z     : QDialog(parent)
2025-10-02T07:00:56.3828891Z                      ^
2025-10-02T07:00:56.3829153Z src/qt/dialogs/SettingsDialog.cpp:11:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3829234Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:00:56.3829298Z         ^
2025-10-02T07:00:56.3829567Z src/qt/dialogs/SettingsDialog.cpp:11:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3829648Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:00:56.3829715Z           ^
2025-10-02T07:00:56.3829979Z src/qt/dialogs/SettingsDialog.cpp:14:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3830225Z     auto *buttonBox = new QDialogButtonBox(QDialogButtonBox::Ok | QDialogButtonBox::Cancel, this);
2025-10-02T07:00:56.3830284Z         ^
2025-10-02T07:00:56.3830641Z src/qt/dialogs/SettingsDialog.cpp:14:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3830878Z     auto *buttonBox = new QDialogButtonBox(QDialogButtonBox::Ok | QDialogButtonBox::Cancel, this);
2025-10-02T07:00:56.3830938Z           ^
2025-10-02T07:00:56.3831208Z src/qt/dialogs/SettingsDialog.h:5:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3831297Z class SettingsDialog : public QDialog
2025-10-02T07:00:56.3831364Z                                      ^
2025-10-02T07:00:56.3831722Z src/qt/dialogs/SettingsDialog.h:7:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3831784Z     Q_OBJECT
2025-10-02T07:00:56.3831846Z             ^
2025-10-02T07:00:56.3832120Z src/qt/dialogs/SettingsDialog.h:10:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3832239Z     explicit SettingsDialog(QWidget *parent = nullptr);
2025-10-02T07:00:56.3832413Z                                    ^
2025-10-02T07:00:56.3832682Z src/qt/dialogs/SettingsDialog.h:10:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3832798Z     explicit SettingsDialog(QWidget *parent = nullptr);
2025-10-02T07:00:56.3832864Z                                      ^
2025-10-02T07:00:56.3833120Z src/core/GitUtils.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3833185Z #include <string>
2025-10-02T07:00:56.3833240Z ^
2025-10-02T07:00:56.3833451Z src/core/GitUtils.h:12:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3833521Z class GitUtils {
2025-10-02T07:00:56.3833580Z                 ^
2025-10-02T07:00:56.3833787Z src/core/GitUtils.h:23:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3833904Z     static std::string toUpper(const std::string& str);
2025-10-02T07:00:56.3833982Z                                                        ^
2025-10-02T07:00:56.3834196Z src/core/GitUtils.h:32:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3834409Z     static std::string makeRelativePath(const std::string& from, const std::string& to);
2025-10-02T07:00:56.3834495Z                                                                                         ^
2025-10-02T07:00:56.3834701Z src/core/GitUtils.h:41:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3834815Z     static std::string formatFileSize(size_t bytes);
2025-10-02T07:00:56.3834896Z                                                     ^
2025-10-02T07:00:56.3835101Z src/core/GitUtils.h:48:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3835267Z     static std::string getRemoteFromBranch(const std::string& branchName);
2025-10-02T07:00:56.3835352Z                                                                           ^
2025-10-02T07:00:56.3835562Z src/core/GitUtils.h:55:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3835667Z     static bool isSshUrl(const std::string& url);
2025-10-02T07:00:56.3835748Z                                                  ^
2025-10-02T07:00:56.3835953Z src/core/GitUtils.h:61:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3836093Z     static std::string extractHunkHeader(const std::string& line);
2025-10-02T07:00:56.3836180Z                                                                   ^
2025-10-02T07:00:56.3836386Z src/core/GitUtils.h:66:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3836570Z     static std::vector<std::string> parseGitConfigLine(const std::string& line);
2025-10-02T07:00:56.3836657Z                                                                                 ^
2025-10-02T07:00:56.3836876Z src/core/GitUtils.h:72:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3837156Z     static std::string detectFileEncoding(const std::string& filePath);
2025-10-02T07:00:56.3837239Z                                                                        ^
2025-10-02T07:00:56.3837462Z src/core/GitUtils.h:77:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3837651Z     static std::string formatDuration(const std::chrono::milliseconds& duration);
2025-10-02T07:00:56.3837734Z                                                                                  ^
2025-10-02T07:00:56.3837954Z src/core/GitUtils.h:85:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3838011Z }
2025-10-02T07:00:56.3838068Z  ^
2025-10-02T07:00:56.3878097Z src/core/GitTypes.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3878244Z #include <string>
2025-10-02T07:00:56.3878367Z ^
2025-10-02T07:00:56.3879064Z src/core/GitTypes.h:11:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3879229Z enum class FileStatus {
2025-10-02T07:00:56.3879359Z                        ^
2025-10-02T07:00:56.3879820Z src/core/GitTypes.h:12:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3879955Z     Untracked,
2025-10-02T07:00:56.3880079Z               ^
2025-10-02T07:00:56.3880526Z src/core/GitTypes.h:13:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3880660Z     Modified,
2025-10-02T07:00:56.3880784Z              ^
2025-10-02T07:00:56.3881220Z src/core/GitTypes.h:14:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3881353Z     Added,
2025-10-02T07:00:56.3881672Z           ^
2025-10-02T07:00:56.3882117Z src/core/GitTypes.h:15:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3882195Z     Deleted,
2025-10-02T07:00:56.3882274Z             ^
2025-10-02T07:00:56.3882566Z src/core/GitTypes.h:16:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3882648Z     Renamed,
2025-10-02T07:00:56.3882728Z             ^
2025-10-02T07:00:56.3882998Z src/core/GitTypes.h:17:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3883075Z     Copied,
2025-10-02T07:00:56.3883146Z            ^
2025-10-02T07:00:56.3883423Z src/core/GitTypes.h:18:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3883501Z     Conflicted,
2025-10-02T07:00:56.3883574Z                ^
2025-10-02T07:00:56.3883830Z src/core/GitTypes.h:19:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3883903Z     Ignored
2025-10-02T07:00:56.3883973Z            ^
2025-10-02T07:00:56.3884232Z src/core/GitTypes.h:22:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3884324Z enum class ChangeType {
2025-10-02T07:00:56.3884402Z                        ^
2025-10-02T07:00:56.3884658Z src/core/GitTypes.h:23:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3884743Z     Addition,
2025-10-02T07:00:56.3884815Z              ^
2025-10-02T07:00:56.3885064Z src/core/GitTypes.h:24:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3885145Z     Deletion,
2025-10-02T07:00:56.3885217Z              ^
2025-10-02T07:00:56.3885466Z src/core/GitTypes.h:25:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3885550Z     Modification
2025-10-02T07:00:56.3885622Z                 ^
2025-10-02T07:00:56.3885874Z src/core/GitTypes.h:37:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3886038Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-10-02T07:00:56.3886124Z                           ^
2025-10-02T07:00:56.3886388Z src/core/GitTypes.h:37:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3886552Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-10-02T07:00:56.3886799Z                                                           ^
2025-10-02T07:00:56.3887016Z src/core/GitTypes.h:117:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3887132Z     std::string date;  // Date string for display
2025-10-02T07:00:56.3887198Z                      ^
2025-10-02T07:00:56.3887412Z src/core/GitTypes.h:146:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3887472Z }
2025-10-02T07:00:56.3887528Z  ^
2025-10-02T07:00:56.3928404Z src/core/GitManager.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3928624Z #include "GitTypes.h"
2025-10-02T07:00:56.3928745Z ^
2025-10-02T07:00:56.3929226Z src/core/GitManager.h:12:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3929390Z enum class GitCommandResult {
2025-10-02T07:00:56.3929758Z                              ^
2025-10-02T07:00:56.3930256Z src/core/GitManager.h:13:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3930382Z     Success,
2025-10-02T07:00:56.3930504Z             ^
2025-10-02T07:00:56.3930959Z src/core/GitManager.h:14:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3931090Z     Failed,
2025-10-02T07:00:56.3931212Z            ^
2025-10-02T07:00:56.3931858Z src/core/GitManager.h:15:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3931995Z     NotFound,
2025-10-02T07:00:56.3932117Z              ^
2025-10-02T07:00:56.3932571Z src/core/GitManager.h:16:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3932727Z     InvalidRepository,
2025-10-02T07:00:56.3932854Z                       ^
2025-10-02T07:00:56.3933303Z src/core/GitManager.h:17:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3933446Z     NetworkError,
2025-10-02T07:00:56.3933604Z                  ^
2025-10-02T07:00:56.3934055Z src/core/GitManager.h:18:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3934202Z     PermissionDenied,
2025-10-02T07:00:56.3934334Z                      ^
2025-10-02T07:00:56.3934795Z src/core/GitManager.h:19:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3934920Z     Cancelled
2025-10-02T07:00:56.3935048Z              ^
2025-10-02T07:00:56.3935502Z src/core/GitManager.h:26:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3935641Z     int exitCode = 0;
2025-10-02T07:00:56.3935773Z                      ^
2025-10-02T07:00:56.3936229Z src/core/GitManager.h:28:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3936595Z     bool isSuccess() const { return result == GitCommandResult::Success; }
2025-10-02T07:00:56.3936731Z                             ^
2025-10-02T07:00:56.3937117Z src/core/GitManager.h:28:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3937382Z     bool isSuccess() const { return result == GitCommandResult::Success; }
2025-10-02T07:00:56.3937517Z                                                                         ^
2025-10-02T07:00:56.3937887Z src/core/GitManager.h:29:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3938125Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-10-02T07:00:56.3938232Z                            ^
2025-10-02T07:00:56.3938600Z src/core/GitManager.h:29:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3938830Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-10-02T07:00:56.3938962Z                                                                    ^
2025-10-02T07:00:56.3939336Z src/core/GitManager.h:35:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3939607Z class GitManager {
2025-10-02T07:00:56.3939708Z                   ^
2025-10-02T07:00:56.3940071Z src/core/GitManager.h:42:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3940460Z     GitOperationResult cloneRepository(const std::string& url, const std::string& path, 
2025-10-02T07:00:56.3940598Z                                                                                        ^
2025-10-02T07:00:56.3940962Z src/core/GitManager.h:45:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3941176Z     bool isValidRepository(const std::string& path) const;
2025-10-02T07:00:56.3941306Z                                                           ^
2025-10-02T07:00:56.3941799Z src/core/GitManager.h:51:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3941961Z     std::string getRepositoryPath() const;
2025-10-02T07:00:56.3942222Z                                           ^
2025-10-02T07:00:56.3942600Z src/core/GitManager.h:60:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3942875Z     GitOperationResult commitWithFiles(const std::string& message, 
2025-10-02T07:00:56.3943025Z                                                                   ^
2025-10-02T07:00:56.3943394Z src/core/GitManager.h:61:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3943570Z                                      const std::vector<std::string>& files);
2025-10-02T07:00:56.3943707Z                                                                             ^
2025-10-02T07:00:56.3944071Z src/core/GitManager.h:64:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3944304Z     std::vector<GitCommit> getCommitHistory(int maxCount = 100, 
2025-10-02T07:00:56.3944433Z                                                                ^
2025-10-02T07:00:56.3944811Z src/core/GitManager.h:65:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3945019Z                                           GitLogOptions options = GitLogOptions::None,
2025-10-02T07:00:56.3945161Z                                                                                       ^
2025-10-02T07:00:56.3945530Z src/core/GitManager.h:66:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3945699Z                                           const std::string& branch = "",
2025-10-02T07:00:56.3945834Z                                                                          ^
2025-10-02T07:00:56.3946198Z src/core/GitManager.h:69:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3946453Z     std::vector<GitCommit> getCommitRange(const std::string& fromHash, 
2025-10-02T07:00:56.3946599Z                                                                       ^
2025-10-02T07:00:56.3946968Z src/core/GitManager.h:70:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3947131Z                                         const std::string& toHash) const;
2025-10-02T07:00:56.3947273Z                                                                          ^
2025-10-02T07:00:56.3947636Z src/core/GitManager.h:74:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3947868Z     GitOperationResult createBranch(const std::string& name, 
2025-10-02T07:00:56.3947998Z                                                             ^
2025-10-02T07:00:56.3948359Z src/core/GitManager.h:80:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3948624Z     GitOperationResult rebaseBranch(const std::string& branchName);
2025-10-02T07:00:56.3948763Z                                                                    ^
2025-10-02T07:00:56.3949131Z src/core/GitManager.h:87:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3949603Z     GitOperationResult fetch(const std::string& remote = "origin", 
2025-10-02T07:00:56.3949737Z                                                                   ^
2025-10-02T07:00:56.3950120Z src/core/GitManager.h:89:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3950379Z     GitOperationResult pull(const std::string& remote = "origin", 
2025-10-02T07:00:56.3950512Z                                                                  ^
2025-10-02T07:00:56.3950885Z src/core/GitManager.h:90:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3951040Z                           const std::string& branch = "",
2025-10-02T07:00:56.3951165Z                                                          ^
2025-10-02T07:00:56.3951665Z src/core/GitManager.h:92:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3952063Z     GitOperationResult push(const std::string& remote = "origin", 
2025-10-02T07:00:56.3952201Z                                                                  ^
2025-10-02T07:00:56.3952572Z src/core/GitManager.h:93:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3952719Z                           const std::string& branch = "",
2025-10-02T07:00:56.3952842Z                                                          ^
2025-10-02T07:00:56.3953210Z src/core/GitManager.h:94:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3953339Z                           bool force = false,
2025-10-02T07:00:56.3953456Z                                              ^
2025-10-02T07:00:56.3953827Z src/core/GitManager.h:95:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3954019Z                           ProgressCallback progressCallback = nullptr);
2025-10-02T07:00:56.3954155Z                                                                        ^
2025-10-02T07:00:56.3954546Z src/core/GitManager.h:102:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3954789Z     GitDiff getDiffBetweenCommits(const std::string& fromHash, 
2025-10-02T07:00:56.3954935Z                                                               ^
2025-10-02T07:00:56.3955321Z src/core/GitManager.h:103:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3955468Z                                 const std::string& toHash,
2025-10-02T07:00:56.3955593Z                                                           ^
2025-10-02T07:00:56.3955965Z src/core/GitManager.h:104:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3956139Z                                 const std::string& filePath = "") const;
2025-10-02T07:00:56.3956272Z                                                                         ^
2025-10-02T07:00:56.3956648Z src/core/GitManager.h:108:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3957053Z     GitOperationResult createTag(const std::string& name, const std::string& message = "",
2025-10-02T07:00:56.3957198Z                                                                                           ^
2025-10-02T07:00:56.3957578Z src/core/GitManager.h:111:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3957862Z     GitOperationResult pushTags(const std::string& remote = "origin");
2025-10-02T07:00:56.3957995Z                                                                       ^
2025-10-02T07:00:56.3958367Z src/core/GitManager.h:119:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3958515Z     GitOperationResult stashClear();
2025-10-02T07:00:56.3958626Z                                     ^
2025-10-02T07:00:56.3959044Z src/core/GitManager.h:122:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3959367Z     GitOperationResult setConfig(const std::string& key, const std::string& value, 
2025-10-02T07:00:56.3959584Z                                                                                   ^
2025-10-02T07:00:56.3959826Z src/core/GitManager.h:125:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3960049Z     GitOperationResult setUserInfo(const std::string& name, const std::string& email,
2025-10-02T07:00:56.3960136Z                                                                                      ^
2025-10-02T07:00:56.3960364Z src/core/GitManager.h:126:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3960451Z                                  bool global = false);
2025-10-02T07:00:56.3960543Z                                                       ^
2025-10-02T07:00:56.3960766Z src/core/GitManager.h:132:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3960854Z     std::string getLastError() const;
2025-10-02T07:00:56.3960998Z                                      ^
2025-10-02T07:00:56.3961224Z src/core/GitManager.h:135:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3961426Z     std::future<GitOperationResult> cloneRepositoryAsync(const std::string& url, 
2025-10-02T07:00:56.3961663Z                                                                                 ^
2025-10-02T07:00:56.3961905Z src/core/GitManager.h:136:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3962010Z                                                        const std::string& path,
2025-10-02T07:00:56.3962097Z                                                                                ^
2025-10-02T07:00:56.3962323Z src/core/GitManager.h:138:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3962528Z     std::future<GitOperationResult> fetchAsync(const std::string& remote = "origin",
2025-10-02T07:00:56.3962630Z                                                                                     ^
2025-10-02T07:00:56.3962856Z src/core/GitManager.h:140:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3963048Z     std::future<GitOperationResult> pullAsync(const std::string& remote = "origin",
2025-10-02T07:00:56.3963134Z                                                                                    ^
2025-10-02T07:00:56.3963356Z src/core/GitManager.h:141:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3963452Z                                             const std::string& branch = "",
2025-10-02T07:00:56.3963539Z                                                                            ^
2025-10-02T07:00:56.3963756Z src/core/GitManager.h:143:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3963944Z     std::future<GitOperationResult> pushAsync(const std::string& remote = "origin",
2025-10-02T07:00:56.3964036Z                                                                                    ^
2025-10-02T07:00:56.3964253Z src/core/GitManager.h:144:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3964348Z                                             const std::string& branch = "",
2025-10-02T07:00:56.3964432Z                                                                            ^
2025-10-02T07:00:56.3964661Z src/core/GitManager.h:145:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3964751Z                                             bool force = false,
2025-10-02T07:00:56.3964829Z                                                                ^
2025-10-02T07:00:56.3965057Z src/core/GitManager.h:146:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3965179Z                                             ProgressCallback progressCallback = nullptr);
2025-10-02T07:00:56.3965388Z                                                                                          ^
2025-10-02T07:00:56.3965617Z src/core/GitManager.h:150:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3965746Z     void setProgressCallback(ProgressCallback callback);
2025-10-02T07:00:56.3965836Z                                                         ^
2025-10-02T07:00:56.3966062Z src/core/GitManager.h:154:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3966149Z     std::unique_ptr<Impl> pImpl;
2025-10-02T07:00:56.3966220Z                                 ^
2025-10-02T07:00:56.3966444Z src/core/GitManager.h:156:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3966644Z     GitOperationResult executeGitCommand(const std::vector<std::string>& args,
2025-10-02T07:00:56.3966724Z                                                                               ^
2025-10-02T07:00:56.3967048Z src/core/GitManager.h:157:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3967155Z                                        const std::string& workingDir = "",
2025-10-02T07:00:56.3967235Z                                                                           ^
2025-10-02T07:00:56.3967458Z src/core/GitManager.h:158:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3967587Z                                        ProgressCallback progressCallback = nullptr) const;
2025-10-02T07:00:56.3967672Z                                                                                           ^
2025-10-02T07:00:56.3967887Z src/core/GitManager.h:160:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3968040Z     std::vector<std::string> parseGitOutput(const std::string& output, 
2025-10-02T07:00:56.3968116Z                                                                       ^
2025-10-02T07:00:56.3968345Z src/core/GitManager.h:168:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.3968413Z }
2025-10-02T07:00:56.3968473Z  ^
2025-10-02T07:00:56.4147659Z src/core/GitManager.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4147843Z #include "GitManager.h"
2025-10-02T07:00:56.4147965Z ^
2025-10-02T07:00:56.4148458Z src/core/GitManager.cpp:20:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4148637Z class GitManager::Impl {
2025-10-02T07:00:56.4148770Z                         ^
2025-10-02T07:00:56.4149252Z src/core/GitManager.cpp:59:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4149549Z GitManager::GitManager(const std::string& repositoryPath) 
2025-10-02T07:00:56.4149709Z                                                          ^
2025-10-02T07:00:56.4150187Z src/core/GitManager.cpp:60:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4150444Z     : pImpl(std::make_unique<Impl>(repositoryPath)) {
2025-10-02T07:00:56.4150606Z                                                      ^
2025-10-02T07:00:56.4151082Z src/core/GitManager.cpp:70:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4151233Z     args.push_back(path);
2025-10-02T07:00:56.4151370Z                          ^
2025-10-02T07:00:56.4152057Z src/core/GitManager.cpp:79:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4152599Z GitOperationResult GitManager::cloneRepository(const std::string& url, const std::string& path,
2025-10-02T07:00:56.4152785Z                                                                                                ^
2025-10-02T07:00:56.4153258Z src/core/GitManager.cpp:81:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4153555Z     std::vector<std::string> args = {"clone", "--progress", url, path};
2025-10-02T07:00:56.4154050Z                                                                        ^
2025-10-02T07:00:56.4154532Z src/core/GitManager.cpp:93:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4154655Z     }
2025-10-02T07:00:56.4154776Z      ^
2025-10-02T07:00:56.4155277Z src/core/GitManager.cpp:118:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4155907Z     return std::filesystem::exists(headPath) && std::filesystem::exists(objectsPath) && std::filesystem::exists(refsPath);
2025-10-02T07:00:56.4156086Z                                                                                        ^
2025-10-02T07:00:56.4156603Z src/core/GitManager.cpp:155:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4156754Z     }
2025-10-02T07:00:56.4156915Z      ^
2025-10-02T07:00:56.4157421Z src/core/GitManager.cpp:158:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4157777Z     auto lines = parseGitOutput(result.output);
2025-10-02T07:00:56.4157924Z                                                ^
2025-10-02T07:00:56.4158422Z src/core/GitManager.cpp:161:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4158622Z         std::string branchLine = lines[0].substr(3);
2025-10-02T07:00:56.4158770Z                                                     ^
2025-10-02T07:00:56.4159262Z src/core/GitManager.cpp:165:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4159417Z         std::smatch matches;
2025-10-02T07:00:56.4159549Z                             ^
2025-10-02T07:00:56.4160067Z src/core/GitManager.cpp:171:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4160191Z             }
2025-10-02T07:00:56.4160314Z              ^
2025-10-02T07:00:56.4160810Z src/core/GitManager.cpp:177:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4160985Z                 std::sregex_iterator end;
2025-10-02T07:00:56.4161125Z                                          ^
2025-10-02T07:00:56.4161751Z src/core/GitManager.cpp:188:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4161880Z     }
2025-10-02T07:00:56.4162001Z      ^
2025-10-02T07:00:56.4162486Z src/core/GitManager.cpp:206:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4162612Z     }
2025-10-02T07:00:56.4162733Z      ^
2025-10-02T07:00:56.4163219Z src/core/GitManager.cpp:215:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4163341Z     }
2025-10-02T07:00:56.4163469Z      ^
2025-10-02T07:00:56.4163958Z src/core/GitManager.cpp:221:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4164076Z     }
2025-10-02T07:00:56.4164201Z      ^
2025-10-02T07:00:56.4164693Z src/core/GitManager.cpp:227:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4164821Z     }
2025-10-02T07:00:56.4164947Z      ^
2025-10-02T07:00:56.4165433Z src/core/GitManager.cpp:239:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4165553Z     }
2025-10-02T07:00:56.4165673Z      ^
2025-10-02T07:00:56.4166167Z src/core/GitManager.cpp:242:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4166399Z     args.insert(args.end(), files.begin(), files.end());
2025-10-02T07:00:56.4166551Z                                                         ^
2025-10-02T07:00:56.4167049Z src/core/GitManager.cpp:254:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4167170Z     }
2025-10-02T07:00:56.4167291Z      ^
2025-10-02T07:00:56.4167769Z src/core/GitManager.cpp:260:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4167958Z     args.insert(args.end(), files.begin(), files.end());
2025-10-02T07:00:56.4168273Z                                                         ^
2025-10-02T07:00:56.4168677Z src/core/GitManager.cpp:268:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4168781Z     }
2025-10-02T07:00:56.4168876Z      ^
2025-10-02T07:00:56.4169270Z src/core/GitManager.cpp:271:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4169464Z     args.insert(args.end(), files.begin(), files.end());
2025-10-02T07:00:56.4169586Z                                                         ^
2025-10-02T07:00:56.4169977Z src/core/GitManager.cpp:284:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4170074Z     }
2025-10-02T07:00:56.4170174Z      ^
2025-10-02T07:00:56.4170565Z src/core/GitManager.cpp:289:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4170895Z GitOperationResult GitManager::commitWithFiles(const std::string& message, 
2025-10-02T07:00:56.4171160Z                                                                           ^
2025-10-02T07:00:56.4171683Z src/core/GitManager.cpp:295:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4171782Z     }
2025-10-02T07:00:56.4171883Z      ^
2025-10-02T07:00:56.4172273Z src/core/GitManager.cpp:301:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4172527Z std::vector<GitCommit> GitManager::getCommitHistory(int maxCount,
2025-10-02T07:00:56.4172661Z                                                                  ^
2025-10-02T07:00:56.4173054Z src/core/GitManager.cpp:302:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4173209Z                                                    GitLogOptions options,
2025-10-02T07:00:56.4173345Z                                                                          ^
2025-10-02T07:00:56.4173744Z src/core/GitManager.cpp:303:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4173918Z                                                    const std::string& branch,
2025-10-02T07:00:56.4174068Z                                                                              ^
2025-10-02T07:00:56.4174467Z src/core/GitManager.cpp:305:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4174803Z     std::vector<std::string> args = {"log", "--pretty=format:%H|%h|%an|%ae|%s|%ct|%P", "-z"};
2025-10-02T07:00:56.4174950Z                                                                                              ^
2025-10-02T07:00:56.4175350Z src/core/GitManager.cpp:309:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4175449Z     }
2025-10-02T07:00:56.4175547Z      ^
2025-10-02T07:00:56.4175829Z src/core/GitManager.cpp:313:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4175887Z     }
2025-10-02T07:00:56.4175946Z      ^
2025-10-02T07:00:56.4176189Z src/core/GitManager.cpp:317:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4176256Z     }
2025-10-02T07:00:56.4176312Z      ^
2025-10-02T07:00:56.4176554Z src/core/GitManager.cpp:321:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4176615Z     }
2025-10-02T07:00:56.4176671Z      ^
2025-10-02T07:00:56.4176898Z src/core/GitManager.cpp:325:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4176955Z     }
2025-10-02T07:00:56.4177023Z      ^
2025-10-02T07:00:56.4177245Z src/core/GitManager.cpp:330:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4177301Z     }
2025-10-02T07:00:56.4177361Z      ^
2025-10-02T07:00:56.4177591Z src/core/GitManager.cpp:351:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4177796Z     auto result = executeGitCommand({"show", "--pretty=format:%H|%h|%an|%ae|%s|%B|%ct|%P", 
2025-10-02T07:00:56.4178043Z                                                                                           ^
2025-10-02T07:00:56.4178274Z src/core/GitManager.cpp:355:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4178331Z     }
2025-10-02T07:00:56.4178391Z      ^
2025-10-02T07:00:56.4178617Z src/core/GitManager.cpp:360:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4178848Z GitOperationResult GitManager::executeGitCommand(const std::vector<std::string>& args,
2025-10-02T07:00:56.4178939Z                                                                                       ^
2025-10-02T07:00:56.4179172Z src/core/GitManager.cpp:361:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4179272Z                                                const std::string& workingDir,
2025-10-02T07:00:56.4179358Z                                                                              ^
2025-10-02T07:00:56.4179690Z src/core/GitManager.cpp:364:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4179867Z     std::string dir = workingDir.empty() ? pImpl->repositoryPath : workingDir;
2025-10-02T07:00:56.4179954Z                                                                               ^
2025-10-02T07:00:56.4180181Z src/core/GitManager.cpp:367:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4180289Z     auto result = cmd.execute(gitCommand, args, dir);
2025-10-02T07:00:56.4180363Z                                                      ^
2025-10-02T07:00:56.4180596Z src/core/GitManager.cpp:378:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4180654Z     }
2025-10-02T07:00:56.4180710Z      ^
2025-10-02T07:00:56.4180944Z src/core/GitManager.cpp:383:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4181127Z std::vector<std::string> GitManager::parseGitOutput(const std::string& output, 
2025-10-02T07:00:56.4181208Z                                                                               ^
2025-10-02T07:00:56.4181439Z src/core/GitManager.cpp:400:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4181765Z     commit.message = parts[4];  // Use the subject as the full message
2025-10-02T07:00:56.4181834Z                               ^
2025-10-02T07:00:56.4182075Z src/core/GitManager.cpp:501:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4182313Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url, 
2025-10-02T07:00:56.4182397Z                                                                                         ^
2025-10-02T07:00:56.4182628Z src/core/GitManager.cpp:502:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4182737Z                                                                const std::string& path,
2025-10-02T07:00:56.4182826Z                                                                                        ^
2025-10-02T07:00:56.4183054Z src/core/GitManager.cpp:504:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4183237Z     return std::async(std::launch::async, [this, url, path, progressCallback]() {
2025-10-02T07:00:56.4183308Z                                          ^
2025-10-02T07:00:56.4183535Z src/core/GitManager.cpp:504:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4183709Z     return std::async(std::launch::async, [this, url, path, progressCallback]() {
2025-10-02T07:00:56.4183792Z                                                                                  ^
2025-10-02T07:00:56.4184019Z src/core/GitManager.cpp:505:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4184153Z         return cloneRepository(url, path, progressCallback);
2025-10-02T07:00:56.4184355Z                                                             ^
2025-10-02T07:00:56.4184602Z src/core/GitManager.cpp:520:117: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4185028Z     std::vector<std::string> args = {"for-each-ref", "--format=%(refname:short)|%(objectname:short)|%(committerdate:iso)|%(upstream:short)|%(upstream:track)|%(subject)"};
2025-10-02T07:00:56.4185128Z                                                                                                                     ^
2025-10-02T07:00:56.4185373Z src/core/GitManager.cpp:536:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4185455Z         if (line.empty()) continue;
2025-10-02T07:00:56.4185520Z                          ^
2025-10-02T07:00:56.4185750Z src/core/GitManager.cpp:539:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4185829Z         if (parts.size() < 6) continue;
2025-10-02T07:00:56.4186002Z                              ^
2025-10-02T07:00:56.4186256Z src/core/GitManager.cpp:645:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4186333Z         if (line.empty()) continue;
2025-10-02T07:00:56.4186401Z                          ^
2025-10-02T07:00:56.4186637Z src/core/GitManager.cpp:648:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4186718Z         if (parts.size() < 4) continue;
2025-10-02T07:00:56.4186785Z                              ^
2025-10-02T07:00:56.4187021Z src/core/GitManager.cpp:769:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4187094Z         if (line.empty()) continue;
2025-10-02T07:00:56.4187156Z                          ^
2025-10-02T07:00:56.4187392Z src/core/GitManager.cpp:796:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4187541Z             } else if (line.substr(0, 4) == "diff" || line.substr(0, 5) == "index" ||
2025-10-02T07:00:56.4187635Z                                                                                      ^
2025-10-02T07:00:56.4187873Z src/core/GitManager.cpp:797:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4187995Z                       line.substr(0, 3) == "+++" || line.substr(0, 3) == "---") {
2025-10-02T07:00:56.4188073Z                                                    ^
2025-10-02T07:00:56.4188306Z src/core/GitManager.cpp:822:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4188380Z         if (file.empty()) continue;
2025-10-02T07:00:56.4188440Z                          ^
2025-10-02T07:00:56.4188674Z src/core/GitManager.cpp:825:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4188757Z         if (fileParts.size() < 2) continue;
2025-10-02T07:00:56.4188823Z                                  ^
2025-10-02T07:00:56.4189052Z src/core/GitManager.cpp:862:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4189140Z             if (line.empty()) continue;
2025-10-02T07:00:56.4189203Z                              ^
2025-10-02T07:00:56.4189429Z src/core/GitManager.cpp:895:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4189578Z                 } else if (line.substr(0, 4) == "diff" || line.substr(0, 5) == "index" ||
2025-10-02T07:00:56.4189664Z                                                                                          ^
2025-10-02T07:00:56.4189892Z src/core/GitManager.cpp:896:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4190015Z                           line.substr(0, 3) == "+++" || line.substr(0, 3) == "---") {
2025-10-02T07:00:56.4190097Z                                                        ^
2025-10-02T07:00:56.4190342Z src/core/GitManager.cpp:1001:112: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4190697Z         "for-each-ref --format='%(refname:short)|%(objectname:short)|%(taggerdate:short)|%(subject)' refs/tags"
2025-10-02T07:00:56.4190790Z                                                                                                                ^
2025-10-02T07:00:56.4191031Z src/core/GitManager.cpp:1039:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4191285Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-10-02T07:00:56.4191378Z                                                                                              ^
2025-10-02T07:00:56.4191831Z src/core/GitManager.cpp:1082:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4191896Z }
2025-10-02T07:00:56.4191961Z  ^
2025-10-02T07:00:56.4201346Z src/core/SystemCommand.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4201462Z #include <string>
2025-10-02T07:00:56.4201923Z ^
2025-10-02T07:00:56.4202362Z src/core/SystemCommand.h:14:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4202478Z     bool success() const { return exitCode == 0; }
2025-10-02T07:00:56.4202549Z                           ^
2025-10-02T07:00:56.4202793Z src/core/SystemCommand.h:14:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4202896Z     bool success() const { return exitCode == 0; }
2025-10-02T07:00:56.4202969Z                                                 ^
2025-10-02T07:00:56.4203206Z src/core/SystemCommand.h:19:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4203277Z class SystemCommand {
2025-10-02T07:00:56.4204692Z                      ^
2025-10-02T07:00:56.4205159Z src/core/SystemCommand.h:22:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4205279Z     ~SystemCommand();
2025-10-02T07:00:56.4205382Z                      ^
2025-10-02T07:00:56.4205816Z src/core/SystemCommand.h:25:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4206084Z     SystemCommandResult execute(const std::string& command, 
2025-10-02T07:00:56.4206211Z                                                            ^
2025-10-02T07:00:56.4206615Z src/core/SystemCommand.h:26:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4206792Z                                const std::vector<std::string>& args = {},
2025-10-02T07:00:56.4206929Z                                                                          ^
2025-10-02T07:00:56.4207342Z src/core/SystemCommand.h:27:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4207525Z                                const std::string& workingDirectory = "");
2025-10-02T07:00:56.4207656Z                                                                          ^
2025-10-02T07:00:56.4208070Z src/core/SystemCommand.h:30:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4208388Z     SystemCommandResult executeWithCallback(const std::string& command,
2025-10-02T07:00:56.4208525Z                                                                        ^
2025-10-02T07:00:56.4208932Z src/core/SystemCommand.h:31:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4209110Z                                            const std::vector<std::string>& args,
2025-10-02T07:00:56.4209248Z                                                                                 ^
2025-10-02T07:00:56.4209646Z src/core/SystemCommand.h:32:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4209818Z                                            OutputCallback outputCallback,
2025-10-02T07:00:56.4209971Z                                                                          ^
2025-10-02T07:00:56.4210371Z src/core/SystemCommand.h:33:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4210817Z                                            const std::string& workingDirectory = "");
2025-10-02T07:00:56.4210960Z                                                                                      ^
2025-10-02T07:00:56.4211358Z src/core/SystemCommand.h:36:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4211695Z     void executeAsync(const std::string& command,
2025-10-02T07:00:56.4211820Z                                                  ^
2025-10-02T07:00:56.4212244Z src/core/SystemCommand.h:37:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4212422Z                      const std::vector<std::string>& args,
2025-10-02T07:00:56.4212566Z                                                           ^
2025-10-02T07:00:56.4213041Z src/core/SystemCommand.h:38:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4213499Z                      std::function<void(const SystemCommandResult&)> callback,
2025-10-02T07:00:56.4213653Z                                                                               ^
2025-10-02T07:00:56.4214070Z src/core/SystemCommand.h:39:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4214265Z                      const std::string& workingDirectory = "");
2025-10-02T07:00:56.4214397Z                                                                ^
2025-10-02T07:00:56.4214820Z src/core/SystemCommand.h:42:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4214940Z     void cancel();
2025-10-02T07:00:56.4215057Z                   ^
2025-10-02T07:00:56.4215466Z src/core/SystemCommand.h:46:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4215626Z     void clearEnvironmentVariables();
2025-10-02T07:00:56.4215747Z                                      ^
2025-10-02T07:00:56.4216190Z src/core/SystemCommand.h:49:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4216332Z     void setTimeout(int timeoutMs);
2025-10-02T07:00:56.4216452Z                                    ^
2025-10-02T07:00:56.4216864Z src/core/SystemCommand.h:52:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4217123Z     static bool isCommandAvailable(const std::string& command);
2025-10-02T07:00:56.4217280Z                                                                ^
2025-10-02T07:00:56.4217702Z src/core/SystemCommand.h:55:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4217860Z     static std::string getGitCommand();
2025-10-02T07:00:56.4217977Z                                        ^
2025-10-02T07:00:56.4218389Z src/core/SystemCommand.h:62:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4218667Z     SystemCommandResult executeWindows(const std::string& command,
2025-10-02T07:00:56.4218807Z                                                                   ^
2025-10-02T07:00:56.4219224Z src/core/SystemCommand.h:66:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4219485Z     SystemCommandResult executeUnix(const std::string& command,
2025-10-02T07:00:56.4219614Z                                                                ^
2025-10-02T07:00:56.4220020Z src/core/SystemCommand.h:72:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:00:56.4220123Z }
2025-10-02T07:00:56.4220230Z  ^
2025-10-02T07:00:56.5614453Z ##[group]Run cppcheck --enable=all --suppress=missingIncludeSystem src/core/ || true
2025-10-02T07:00:56.5615051Z [36;1mcppcheck --enable=all --suppress=missingIncludeSystem src/core/ || true[0m
2025-10-02T07:00:56.5647016Z shell: /usr/bin/bash -e {0}
2025-10-02T07:00:56.5647302Z ##[endgroup]
2025-10-02T07:00:56.5953201Z Checking src/core/GitManager.cpp ...
2025-10-02T07:00:57.2895067Z src/core/GitManager.cpp:27:5: style: Class 'Impl' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
2025-10-02T07:00:57.2896010Z     Impl(const std::string& repoPath) : repositoryPath(repoPath) {
2025-10-02T07:00:57.2896447Z     ^
2025-10-02T07:00:57.3011404Z src/core/GitManager.cpp:785:35: style: Condition '!line.empty()' is always true [knownConditionTrueFalse]
2025-10-02T07:00:57.3012492Z         } else if (currentHunk && !line.empty()) {
2025-10-02T07:00:57.3012907Z                                   ^
2025-10-02T07:00:57.3013609Z src/core/GitManager.cpp:769:23: note: Assuming that condition 'line.empty()' is not redundant
2025-10-02T07:00:57.3014121Z         if (line.empty()) continue;
2025-10-02T07:00:57.3014400Z                       ^
2025-10-02T07:00:57.3014782Z src/core/GitManager.cpp:785:35: note: Condition '!line.empty()' is always true
2025-10-02T07:00:57.3015264Z         } else if (currentHunk && !line.empty()) {
2025-10-02T07:00:57.3015574Z                                   ^
2025-10-02T07:00:57.3016112Z src/core/GitManager.cpp:880:39: style: Condition '!line.empty()' is always true [knownConditionTrueFalse]
2025-10-02T07:00:57.3016701Z             } else if (currentHunk && !line.empty()) {
2025-10-02T07:00:57.3017019Z                                       ^
2025-10-02T07:00:57.3017503Z src/core/GitManager.cpp:862:27: note: Assuming that condition 'line.empty()' is not redundant
2025-10-02T07:00:57.3018026Z             if (line.empty()) continue;
2025-10-02T07:00:57.3018312Z                           ^
2025-10-02T07:00:57.3018709Z src/core/GitManager.cpp:880:39: note: Condition '!line.empty()' is always true
2025-10-02T07:00:57.3019184Z             } else if (currentHunk && !line.empty()) {
2025-10-02T07:00:57.3019501Z                                       ^
2025-10-02T07:00:57.3066043Z src/core/GitManager.cpp:394:15: style: Local variable 'commit' shadows outer function [shadowFunction]
2025-10-02T07:00:57.3066924Z     GitCommit commit;
2025-10-02T07:00:57.3067316Z               ^
2025-10-02T07:00:57.3067793Z src/core/GitManager.h:59:24: note: Shadowed declaration
2025-10-02T07:00:57.3068676Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-10-02T07:00:57.3069418Z                        ^
2025-10-02T07:00:57.3069925Z src/core/GitManager.cpp:394:15: note: Shadow variable
2025-10-02T07:00:57.3070460Z     GitCommit commit;
2025-10-02T07:00:57.3070836Z               ^
2025-10-02T07:00:57.3071921Z src/core/GitManager.cpp:580:23: style: Local variable 'commit' shadows outer function [shadowFunction]
2025-10-02T07:00:57.3072871Z             GitCommit commit;
2025-10-02T07:00:57.3073286Z                       ^
2025-10-02T07:00:57.3073771Z src/core/GitManager.h:59:24: note: Shadowed declaration
2025-10-02T07:00:57.3074499Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-10-02T07:00:57.3075065Z                        ^
2025-10-02T07:00:57.3075478Z src/core/GitManager.cpp:580:23: note: Shadow variable
2025-10-02T07:00:57.3075952Z             GitCommit commit;
2025-10-02T07:00:57.3076267Z                       ^
2025-10-02T07:00:57.3076823Z src/core/GitManager.cpp:650:18: style: Local variable 'stash' shadows outer function [shadowFunction]
2025-10-02T07:00:57.3077542Z         GitStash stash;
2025-10-02T07:00:57.3077849Z                  ^
2025-10-02T07:00:57.3078264Z src/core/GitManager.h:115:24: note: Shadowed declaration
2025-10-02T07:00:57.3079121Z     GitOperationResult stash(const std::string& message = "", bool includeUntracked = false);
2025-10-02T07:00:57.3079847Z                        ^
2025-10-02T07:00:57.3080852Z src/core/GitManager.cpp:650:18: note: Shadow variable
2025-10-02T07:00:57.3081424Z         GitStash stash;
2025-10-02T07:00:57.3082000Z                  ^
2025-10-02T07:00:57.3082996Z src/core/GitManager.cpp:546:20: performance: Inefficient usage of string::find() in condition; string::starts_with() could be faster. [stlIfStrFind]
2025-10-02T07:00:57.3084290Z         if (branch.name.find("origin/") == 0 || branch.name.find("remotes/") == 0) {
2025-10-02T07:00:57.3085326Z                    ^
2025-10-02T07:00:57.3086225Z src/core/GitManager.cpp:549:24: performance: Inefficient usage of string::find() in condition; string::starts_with() could be faster. [stlIfStrFind]
2025-10-02T07:00:57.3087252Z             if (branch.name.find("remotes/") == 0) {
2025-10-02T07:00:57.3087687Z                        ^
2025-10-02T07:00:57.3193968Z Checking src/core/GitManager.cpp: USE_LIBGIT2...
2025-10-02T07:00:58.0428025Z Checking src/core/GitManager.cpp: _WIN32...
2025-10-02T07:00:58.7512495Z 1/3 files checked 56% done
2025-10-02T07:00:58.7513552Z Checking src/core/GitUtils.cpp ...
2025-10-02T07:00:58.7980464Z src/core/GitUtils.cpp:339:18: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use resize() or pop_back() instead. [uselessCallsSubstr]
2025-10-02T07:00:58.7982544Z         result = result.substr(0, result.length() - 4);
2025-10-02T07:00:58.7983091Z                  ^
2025-10-02T07:00:58.7984002Z src/core/GitUtils.cpp:226:5: style: Consider using std::all_of or std::none_of algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:00:58.7985040Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-10-02T07:00:58.7985535Z     ^
2025-10-02T07:00:58.7986011Z src/core/GitUtils.cpp:434:21: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:00:58.7986572Z         if (c == 0) {
2025-10-02T07:00:58.7986784Z                     ^
2025-10-02T07:00:58.7987305Z src/core/GitUtils.cpp:468:13: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:00:58.7987869Z             count++;
2025-10-02T07:00:58.7988076Z             ^
2025-10-02T07:00:58.7988561Z src/core/GitUtils.cpp:481:13: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:00:58.7989115Z             count++;
2025-10-02T07:00:58.7989325Z             ^
2025-10-02T07:00:58.8008016Z 2/3 files checked 80% done
2025-10-02T07:00:58.8008391Z Checking src/core/SystemCommand.cpp ...
2025-10-02T07:00:58.8180732Z src/core/SystemCommand.cpp:305:21: style: Local variable 'bytesRead' shadows outer variable [shadowVariable]
2025-10-02T07:00:58.8181797Z             ssize_t bytesRead;
2025-10-02T07:00:58.8182147Z                     ^
2025-10-02T07:00:58.8182549Z src/core/SystemCommand.cpp:293:17: note: Shadowed declaration
2025-10-02T07:00:58.8182942Z         ssize_t bytesRead;
2025-10-02T07:00:58.8183171Z                 ^
2025-10-02T07:00:58.8183481Z src/core/SystemCommand.cpp:305:21: note: Shadow variable
2025-10-02T07:00:58.8184010Z             ssize_t bytesRead;
2025-10-02T07:00:58.8184397Z                     ^
2025-10-02T07:00:58.8185158Z src/core/SystemCommand.cpp:320:33: style: Local variable 'result' shadows outer variable [shadowVariable]
2025-10-02T07:00:58.8185726Z             SystemCommandResult result;
2025-10-02T07:00:58.8186016Z                                 ^
2025-10-02T07:00:58.8186377Z src/core/SystemCommand.cpp:290:15: note: Shadowed declaration
2025-10-02T07:00:58.8186814Z         pid_t result = waitpid(pid, &status, WNOHANG);
2025-10-02T07:00:58.8187134Z               ^
2025-10-02T07:00:58.8187426Z src/core/SystemCommand.cpp:320:33: note: Shadow variable
2025-10-02T07:00:58.8187799Z             SystemCommandResult result;
2025-10-02T07:00:58.8188086Z                                 ^
2025-10-02T07:00:58.8188716Z src/core/SystemCommand.cpp:244:19: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:00:58.8189791Z             cArgs.push_back(const_cast<char*>(arg.c_str()));
2025-10-02T07:00:58.8190203Z                   ^
2025-10-02T07:00:58.8203472Z Checking src/core/SystemCommand.cpp: _WIN32...
2025-10-02T07:00:58.8345636Z src/core/SystemCommand.cpp:416:73: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:00:58.8346589Z         if (GetFileAttributes(path.c_str()) != INVALID_FILE_ATTRIBUTES) {
2025-10-02T07:00:58.8347441Z                                                                         ^
2025-10-02T07:00:58.8361248Z 3/3 files checked 100% done
2025-10-02T07:00:58.8362828Z src/core/GitManager.cpp:65:0: style: The function 'initRepository' is never used. [unusedFunction]
2025-10-02T07:00:58.8364030Z GitOperationResult GitManager::initRepository(const std::string& path, bool bare) {
2025-10-02T07:00:58.8364819Z ^
2025-10-02T07:00:58.8365508Z src/core/GitManager.cpp:90:0: style: The function 'openRepository' is never used. [unusedFunction]
2025-10-02T07:00:58.8366617Z GitOperationResult GitManager::openRepository(const std::string& path) {
2025-10-02T07:00:58.8367347Z ^
2025-10-02T07:00:58.8368039Z src/core/GitManager.cpp:121:0: style: The function 'getRepositoryInfo' is never used. [unusedFunction]
2025-10-02T07:00:58.8369012Z GitRepository GitManager::getRepositoryInfo() const {
2025-10-02T07:00:58.8369579Z ^
2025-10-02T07:00:58.8370451Z src/core/GitManager.cpp:232:0: style: The function 'getRepositoryPath' is never used. [unusedFunction]
2025-10-02T07:00:58.8371687Z std::string GitManager::getRepositoryPath() const {
2025-10-02T07:00:58.8372454Z ^
2025-10-02T07:00:58.8373178Z src/core/GitManager.cpp:247:0: style: The function 'addAllFiles' is never used. [unusedFunction]
2025-10-02T07:00:58.8374213Z GitOperationResult GitManager::addAllFiles() {
2025-10-02T07:00:58.8374787Z ^
2025-10-02T07:00:58.8375489Z src/core/GitManager.cpp:251:0: style: The function 'removeFiles' is never used. [unusedFunction]
2025-10-02T07:00:58.8376698Z GitOperationResult GitManager::removeFiles(const std::vector<std::string>& files, bool cached) {
2025-10-02T07:00:58.8377570Z ^
2025-10-02T07:00:58.8378268Z src/core/GitManager.cpp:265:0: style: The function 'resetFiles' is never used. [unusedFunction]
2025-10-02T07:00:58.8379388Z GitOperationResult GitManager::resetFiles(const std::vector<std::string>& files) {
2025-10-02T07:00:58.8380285Z ^
2025-10-02T07:00:58.8427780Z src/core/GitManager.cpp:276:0: style: The function 'resetHard' is never used. [unusedFunction]
2025-10-02T07:00:58.8428702Z GitOperationResult GitManager::resetHard(const std::string& commitHash) {
2025-10-02T07:00:58.8429195Z ^
2025-10-02T07:00:58.8429545Z src/core/GitManager.cpp:289:0: style: The function 'commitWithFiles' is never used. [unusedFunction]
2025-10-02T07:00:58.8430101Z GitOperationResult GitManager::commitWithFiles(const std::string& message,
2025-10-02T07:00:58.8430426Z ^
2025-10-02T07:00:58.8430767Z src/core/GitManager.cpp:301:0: style: The function 'getCommitHistory' is never used. [unusedFunction]
2025-10-02T07:00:58.8431262Z std::vector<GitCommit> GitManager::getCommitHistory(int maxCount,
2025-10-02T07:00:58.8431795Z ^
2025-10-02T07:00:58.8432219Z src/core/GitManager.cpp:350:0: style: The function 'getCommit' is never used. [unusedFunction]
2025-10-02T07:00:58.8432723Z std::optional<GitCommit> GitManager::getCommit(const std::string& hash) const {
2025-10-02T07:00:58.8433050Z ^
2025-10-02T07:00:58.8433358Z src/core/GitManager.cpp:477:0: style: The function 'getLastError' is never used. [unusedFunction]
2025-10-02T07:00:58.8433768Z std::string GitManager::getLastError() const {
2025-10-02T07:00:58.8434018Z ^
2025-10-02T07:00:58.8434352Z src/core/GitManager.cpp:481:0: style: The function 'hasUncommittedChanges' is never used. [unusedFunction]
2025-10-02T07:00:58.8434807Z bool GitManager::hasUncommittedChanges() const {
2025-10-02T07:00:58.8435043Z ^
2025-10-02T07:00:58.8435363Z src/core/GitManager.cpp:485:0: style: The function 'hasUnstagedChanges' is never used. [unusedFunction]
2025-10-02T07:00:58.8436063Z bool GitManager::hasUnstagedChanges() const {
2025-10-02T07:00:58.8436302Z ^
2025-10-02T07:00:58.8436620Z src/core/GitManager.cpp:489:0: style: The function 'hasStagedChanges' is never used. [unusedFunction]
2025-10-02T07:00:58.8437054Z bool GitManager::hasStagedChanges() const {
2025-10-02T07:00:58.8437273Z ^
2025-10-02T07:00:58.8437582Z src/core/GitManager.cpp:493:0: style: The function 'setLogCallback' is never used. [unusedFunction]
2025-10-02T07:00:58.8438157Z void GitManager::setLogCallback(LogCallback callback) {
2025-10-02T07:00:58.8438411Z ^
2025-10-02T07:00:58.8438737Z src/core/GitManager.cpp:497:0: style: The function 'setProgressCallback' is never used. [unusedFunction]
2025-10-02T07:00:58.8439249Z void GitManager::setProgressCallback(ProgressCallback callback) {
2025-10-02T07:00:58.8439537Z ^
2025-10-02T07:00:58.8439878Z src/core/GitManager.cpp:501:0: style: The function 'cloneRepositoryAsync' is never used. [unusedFunction]
2025-10-02T07:00:58.8440568Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url,
2025-10-02T07:00:58.8440930Z ^
2025-10-02T07:00:58.8441228Z src/core/GitManager.cpp:513:0: style: The function 'getBranches' is never used. [unusedFunction]
2025-10-02T07:00:58.8441956Z std::vector<GitBranch> GitManager::getBranches(bool includeRemote) const {
2025-10-02T07:00:58.8442263Z ^
2025-10-02T07:00:58.8442557Z src/core/GitManager.cpp:606:0: style: The function 'createBranch' is never used. [unusedFunction]
2025-10-02T07:00:58.8443145Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-10-02T07:00:58.8443553Z ^
2025-10-02T07:00:58.8443857Z src/core/GitManager.cpp:617:0: style: The function 'deleteBranch' is never used. [unusedFunction]
2025-10-02T07:00:58.8444377Z GitOperationResult GitManager::deleteBranch(const std::string& name, bool force) {
2025-10-02T07:00:58.8444733Z ^
2025-10-02T07:00:58.8445053Z src/core/GitManager.cpp:627:0: style: The function 'checkoutBranch' is never used. [unusedFunction]
2025-10-02T07:00:58.8445567Z GitOperationResult GitManager::checkoutBranch(const std::string& name) {
2025-10-02T07:00:58.8445886Z ^
2025-10-02T07:00:58.8446184Z src/core/GitManager.cpp:632:0: style: The function 'getStashes' is never used. [unusedFunction]
2025-10-02T07:00:58.8446612Z std::vector<GitStash> GitManager::getStashes() const {
2025-10-02T07:00:58.8446859Z ^
2025-10-02T07:00:58.8447148Z src/core/GitManager.cpp:677:0: style: The function 'stash' is never used. [unusedFunction]
2025-10-02T07:00:58.8447704Z GitOperationResult GitManager::stash(const std::string& message, bool includeUntracked) {
2025-10-02T07:00:58.8448076Z ^
2025-10-02T07:00:58.8448374Z src/core/GitManager.cpp:692:0: style: The function 'stashPop' is never used. [unusedFunction]
2025-10-02T07:00:58.8448851Z GitOperationResult GitManager::stashPop(int index) {
2025-10-02T07:00:58.8449116Z ^
2025-10-02T07:00:58.8449423Z src/core/GitManager.cpp:702:0: style: The function 'stashApply' is never used. [unusedFunction]
2025-10-02T07:00:58.8449872Z GitOperationResult GitManager::stashApply(int index) {
2025-10-02T07:00:58.8450132Z ^
2025-10-02T07:00:58.8450429Z src/core/GitManager.cpp:712:0: style: The function 'stashDrop' is never used. [unusedFunction]
2025-10-02T07:00:58.8450855Z GitOperationResult GitManager::stashDrop(int index) {
2025-10-02T07:00:58.8451114Z ^
2025-10-02T07:00:58.8451409Z src/core/GitManager.cpp:722:0: style: The function 'stashClear' is never used. [unusedFunction]
2025-10-02T07:00:58.8452092Z GitOperationResult GitManager::stashClear() {
2025-10-02T07:00:58.8452333Z ^
2025-10-02T07:00:58.8452642Z src/core/GitManager.cpp:727:0: style: The function 'getCommitDiff' is never used. [unusedFunction]
2025-10-02T07:00:58.8453138Z GitDiff GitManager::getCommitDiff(const std::string& commitHash) const {
2025-10-02T07:00:58.8453444Z ^
2025-10-02T07:00:58.8453768Z src/core/GitManager.cpp:810:0: style: The function 'getCommitDiffAll' is never used. [unusedFunction]
2025-10-02T07:00:58.8454442Z std::vector<GitDiff> GitManager::getCommitDiffAll(const std::string& commitHash) const {
2025-10-02T07:00:58.8454806Z ^
2025-10-02T07:00:58.8455101Z src/core/GitManager.cpp:913:0: style: The function 'getRemotes' is never used. [unusedFunction]
2025-10-02T07:00:58.8455521Z std::vector<GitRemote> GitManager::getRemotes() const {
2025-10-02T07:00:58.8455773Z ^
2025-10-02T07:00:58.8456060Z src/core/GitManager.cpp:959:0: style: The function 'addRemote' is never used. [unusedFunction]
2025-10-02T07:00:58.8456713Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-10-02T07:00:58.8457085Z ^
2025-10-02T07:00:58.8457397Z src/core/GitManager.cpp:971:0: style: The function 'removeRemote' is never used. [unusedFunction]
2025-10-02T07:00:58.8457887Z GitOperationResult GitManager::removeRemote(const std::string& name) {
2025-10-02T07:00:58.8458223Z ^
2025-10-02T07:00:58.8458540Z src/core/GitManager.cpp:983:0: style: The function 'renameRemote' is never used. [unusedFunction]
2025-10-02T07:00:58.8459148Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-10-02T07:00:58.8459559Z ^
2025-10-02T07:00:58.8459853Z src/core/GitManager.cpp:996:0: style: The function 'getTags' is never used. [unusedFunction]
2025-10-02T07:00:58.8460260Z std::vector<GitTag> GitManager::getTags() const {
2025-10-02T07:00:58.8460492Z ^
2025-10-02T07:00:58.8460793Z src/core/GitManager.cpp:1039:0: style: The function 'createTag' is never used. [unusedFunction]
2025-10-02T07:00:58.8461354Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-10-02T07:00:58.8462051Z ^
2025-10-02T07:00:58.8462371Z src/core/GitManager.cpp:1065:0: style: The function 'deleteTag' is never used. [unusedFunction]
2025-10-02T07:00:58.8462851Z GitOperationResult GitManager::deleteTag(const std::string& name) {
2025-10-02T07:00:58.8463156Z ^
2025-10-02T07:00:58.8463455Z src/core/GitManager.cpp:1077:0: style: The function 'pushTags' is never used. [unusedFunction]
2025-10-02T07:00:58.8463943Z GitOperationResult GitManager::pushTags(const std::string& remote) {
2025-10-02T07:00:58.8464254Z ^
2025-10-02T07:00:58.8464543Z src/core/GitManager.h:29:0: style: The function 'hasError' is never used. [unusedFunction]
2025-10-02T07:00:58.8464988Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-10-02T07:00:58.8465267Z ^
2025-10-02T07:00:58.8465541Z src/core/GitTypes.h:37:0: style: The function 'isMerge' is never used. [unusedFunction]
2025-10-02T07:00:58.8465951Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-10-02T07:00:58.8466215Z ^
2025-10-02T07:00:58.8466479Z src/core/GitUtils.cpp:48:0: style: The function 'join' is never used. [unusedFunction]
2025-10-02T07:00:58.8466983Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-10-02T07:00:58.8467389Z ^
2025-10-02T07:00:58.8467673Z src/core/GitUtils.cpp:73:0: style: The function 'toUpper' is never used. [unusedFunction]
2025-10-02T07:00:58.8468094Z std::string GitUtils::toUpper(const std::string& str) {
2025-10-02T07:00:58.8468340Z ^
2025-10-02T07:00:58.8468638Z src/core/GitUtils.cpp:80:0: style: The function 'normalizePath' is never used. [unusedFunction]
2025-10-02T07:00:58.8469082Z std::string GitUtils::normalizePath(const std::string& path) {
2025-10-02T07:00:58.8469358Z ^
2025-10-02T07:00:58.8469646Z src/core/GitUtils.cpp:89:0: style: The function 'getFileName' is never used. [unusedFunction]
2025-10-02T07:00:58.8470072Z std::string GitUtils::getFileName(const std::string& path) {
2025-10-02T07:00:58.8470335Z ^
2025-10-02T07:00:58.8470619Z src/core/GitUtils.cpp:99:0: style: The function 'getDirectory' is never used. [unusedFunction]
2025-10-02T07:00:58.8471050Z std::string GitUtils::getDirectory(const std::string& path) {
2025-10-02T07:00:58.8471316Z ^
2025-10-02T07:00:58.8471823Z src/core/GitUtils.cpp:104:0: style: The function 'joinPaths' is never used. [unusedFunction]
2025-10-02T07:00:58.8472476Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-10-02T07:00:58.8472818Z ^
2025-10-02T07:00:58.8473129Z src/core/GitUtils.cpp:109:0: style: The function 'isAbsolutePath' is never used. [unusedFunction]
2025-10-02T07:00:58.8473575Z bool GitUtils::isAbsolutePath(const std::string& path) {
2025-10-02T07:00:58.8473836Z ^
2025-10-02T07:00:58.8474148Z src/core/GitUtils.cpp:114:0: style: The function 'makeRelativePath' is never used. [unusedFunction]
2025-10-02T07:00:58.8474793Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-10-02T07:00:58.8475142Z ^
2025-10-02T07:00:58.8475438Z src/core/GitUtils.cpp:124:0: style: The function 'shortenHash' is never used. [unusedFunction]
2025-10-02T07:00:58.8475905Z std::string GitUtils::shortenHash(const std::string& hash, int length) {
2025-10-02T07:00:58.8476205Z ^
2025-10-02T07:00:58.8476501Z src/core/GitUtils.cpp:131:0: style: The function 'isValidHash' is never used. [unusedFunction]
2025-10-02T07:00:58.8476941Z bool GitUtils::isValidHash(const std::string& hash) {
2025-10-02T07:00:58.8477211Z ^
2025-10-02T07:00:58.8477540Z src/core/GitUtils.cpp:139:0: style: The function 'formatCommitMessage' is never used. [unusedFunction]
2025-10-02T07:00:58.8478087Z std::string GitUtils::formatCommitMessage(const std::string& message, int maxLength) {
2025-10-02T07:00:58.8478443Z ^
2025-10-02T07:00:58.8478738Z src/core/GitUtils.cpp:156:0: style: The function 'formatAuthor' is never used. [unusedFunction]
2025-10-02T07:00:58.8479254Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-10-02T07:00:58.8479593Z ^
2025-10-02T07:00:58.8479905Z src/core/GitUtils.cpp:169:0: style: The function 'formatTimestamp' is never used. [unusedFunction]
2025-10-02T07:00:58.8480454Z std::string GitUtils::formatTimestamp(const std::chrono::system_clock::time_point& timestamp) {
2025-10-02T07:00:58.8480836Z ^
2025-10-02T07:00:58.8481158Z src/core/GitUtils.cpp:176:0: style: The function 'formatRelativeTime' is never used. [unusedFunction]
2025-10-02T07:00:58.8481960Z std::string GitUtils::formatRelativeTime(const std::chrono::system_clock::time_point& timestamp) {
2025-10-02T07:00:58.8482347Z ^
2025-10-02T07:00:58.8482658Z src/core/GitUtils.cpp:221:0: style: The function 'isValidBranchName' is never used. [unusedFunction]
2025-10-02T07:00:58.8483115Z bool GitUtils::isValidBranchName(const std::string& name) {
2025-10-02T07:00:58.8483389Z ^
2025-10-02T07:00:58.8483714Z src/core/GitUtils.cpp:235:0: style: The function 'sanitizeBranchName' is never used. [unusedFunction]
2025-10-02T07:00:58.8484190Z std::string GitUtils::sanitizeBranchName(const std::string& name) {
2025-10-02T07:00:58.8484480Z ^
2025-10-02T07:00:58.8484793Z src/core/GitUtils.cpp:258:0: style: The function 'getShortBranchName' is never used. [unusedFunction]
2025-10-02T07:00:58.8485278Z std::string GitUtils::getShortBranchName(const std::string& fullName) {
2025-10-02T07:00:58.8485581Z ^
2025-10-02T07:00:58.8485885Z src/core/GitUtils.cpp:271:0: style: The function 'isRemoteBranch' is never used. [unusedFunction]
2025-10-02T07:00:58.8486347Z bool GitUtils::isRemoteBranch(const std::string& branchName) {
2025-10-02T07:00:58.8486622Z ^
2025-10-02T07:00:58.8486948Z src/core/GitUtils.cpp:275:0: style: The function 'getRemoteFromBranch' is never used. [unusedFunction]
2025-10-02T07:00:58.8487453Z std::string GitUtils::getRemoteFromBranch(const std::string& branchName) {
2025-10-02T07:00:58.8487766Z ^
2025-10-02T07:00:58.8488077Z src/core/GitUtils.cpp:290:0: style: The function 'isValidGitUrl' is never used. [unusedFunction]
2025-10-02T07:00:58.8488508Z bool GitUtils::isValidGitUrl(const std::string& url) {
2025-10-02T07:00:58.8488764Z ^
2025-10-02T07:00:58.8489094Z src/core/GitUtils.cpp:313:0: style: The function 'extractRepoNameFromUrl' is never used. [unusedFunction]
2025-10-02T07:00:58.8489607Z std::string GitUtils::extractRepoNameFromUrl(const std::string& url) {
2025-10-02T07:00:58.8489902Z ^
2025-10-02T07:00:58.8490340Z src/core/GitUtils.cpp:351:0: style: The function 'normalizeGitUrl' is never used. [unusedFunction]
2025-10-02T07:00:58.8490806Z std::string GitUtils::normalizeGitUrl(const std::string& url) {
2025-10-02T07:00:58.8491075Z ^
2025-10-02T07:00:58.8491364Z src/core/GitUtils.cpp:371:0: style: The function 'isHttpsUrl' is never used. [unusedFunction]
2025-10-02T07:00:58.8492024Z bool GitUtils::isHttpsUrl(const std::string& url) {
2025-10-02T07:00:58.8492274Z ^
2025-10-02T07:00:58.8492687Z src/core/GitUtils.cpp:375:0: style: The function 'isSshUrl' is never used. [unusedFunction]
2025-10-02T07:00:58.8493087Z bool GitUtils::isSshUrl(const std::string& url) {
2025-10-02T07:00:58.8493325Z ^
2025-10-02T07:00:58.8493616Z src/core/GitUtils.cpp:380:0: style: The function 'isValidEmail' is never used. [unusedFunction]
2025-10-02T07:00:58.8494040Z bool GitUtils::isValidEmail(const std::string& email) {
2025-10-02T07:00:58.8494290Z ^
2025-10-02T07:00:58.8494624Z src/core/GitUtils.cpp:385:0: style: The function 'isValidCommitMessage' is never used. [unusedFunction]
2025-10-02T07:00:58.8495115Z bool GitUtils::isValidCommitMessage(const std::string& message) {
2025-10-02T07:00:58.8495403Z ^
2025-10-02T07:00:58.8495690Z src/core/GitUtils.cpp:399:0: style: The function 'isBinaryFile' is never used. [unusedFunction]
2025-10-02T07:00:58.8496121Z bool GitUtils::isBinaryFile(const std::string& filePath) {
2025-10-02T07:00:58.8496387Z ^
2025-10-02T07:00:58.8496699Z src/core/GitUtils.cpp:404:0: style: The function 'detectFileEncoding' is never used. [unusedFunction]
2025-10-02T07:00:58.8497201Z std::string GitUtils::detectFileEncoding(const std::string& filePath) {
2025-10-02T07:00:58.8497496Z ^
2025-10-02T07:00:58.8497803Z src/core/GitUtils.cpp:443:0: style: The function 'colorizeGitDiff' is never used. [unusedFunction]
2025-10-02T07:00:58.8498255Z std::string GitUtils::colorizeGitDiff(const std::string& diff) {
2025-10-02T07:00:58.8498536Z ^
2025-10-02T07:00:58.8498842Z src/core/GitUtils.cpp:462:0: style: The function 'countLinesAdded' is never used. [unusedFunction]
2025-10-02T07:00:58.8499282Z int GitUtils::countLinesAdded(const std::string& diff) {
2025-10-02T07:00:58.8499540Z ^
2025-10-02T07:00:58.8499850Z src/core/GitUtils.cpp:475:0: style: The function 'countLinesRemoved' is never used. [unusedFunction]
2025-10-02T07:00:58.8500301Z int GitUtils::countLinesRemoved(const std::string& diff) {
2025-10-02T07:00:58.8500560Z ^
2025-10-02T07:00:58.8500871Z src/core/GitUtils.cpp:488:0: style: The function 'extractHunkHeader' is never used. [unusedFunction]
2025-10-02T07:00:58.8501343Z std::string GitUtils::extractHunkHeader(const std::string& line) {
2025-10-02T07:00:58.8501860Z ^
2025-10-02T07:00:58.8502183Z src/core/GitUtils.cpp:499:0: style: The function 'formatProgress' is never used. [unusedFunction]
2025-10-02T07:00:58.8502733Z std::string GitUtils::formatProgress(int current, int total, const std::string& operation) {
2025-10-02T07:00:58.8503097Z ^
2025-10-02T07:00:58.8503419Z src/core/GitUtils.cpp:515:0: style: The function 'formatTransferSpeed' is never used. [unusedFunction]
2025-10-02T07:00:58.8503917Z std::string GitUtils::formatTransferSpeed(size_t bytesPerSecond) {
2025-10-02T07:00:58.8504202Z ^
2025-10-02T07:00:58.8504511Z src/core/GitUtils.cpp:519:0: style: The function 'formatDuration' is never used. [unusedFunction]
2025-10-02T07:00:58.8505021Z std::string GitUtils::formatDuration(const std::chrono::milliseconds& duration) {
2025-10-02T07:00:58.8505353Z ^
2025-10-02T07:00:58.8505715Z src/core/SystemCommand.cpp:343:0: style: The function 'executeWithCallback' is never used. [unusedFunction]
2025-10-02T07:00:58.8506408Z SystemCommandResult SystemCommand::executeWithCallback(const std::string& command, const std::vector<std::string>& args,
2025-10-02T07:00:58.8506879Z ^
2025-10-02T07:00:58.8507199Z src/core/SystemCommand.cpp:358:0: style: The function 'executeAsync' is never used. [unusedFunction]
2025-10-02T07:00:58.8507772Z void SystemCommand::executeAsync(const std::string& command, const std::vector<std::string>& args,
2025-10-02T07:00:58.8508160Z ^
2025-10-02T07:00:58.8508646Z src/core/SystemCommand.cpp:383:0: style: The function 'setEnvironmentVariable' is never used. [unusedFunction]
2025-10-02T07:00:58.8509269Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-10-02T07:00:58.8509654Z ^
2025-10-02T07:00:58.8510022Z src/core/SystemCommand.cpp:387:0: style: The function 'clearEnvironmentVariables' is never used. [unusedFunction]
2025-10-02T07:00:58.8510719Z void SystemCommand::clearEnvironmentVariables() {
2025-10-02T07:00:58.8510974Z ^
2025-10-02T07:00:58.8511297Z src/core/SystemCommand.cpp:391:0: style: The function 'setTimeout' is never used. [unusedFunction]
2025-10-02T07:00:58.8511964Z void SystemCommand::setTimeout(int timeoutMs) {
2025-10-02T07:00:58.8512206Z ^
2025-10-02T07:00:58.8512535Z src/core/SystemCommand.cpp:405:0: style: The function 'getGitCommand' is never used. [unusedFunction]
2025-10-02T07:00:58.8512974Z std::string SystemCommand::getGitCommand() {
2025-10-02T07:00:58.8513199Z ^
2025-10-02T07:00:58.8513509Z src/core/SystemCommand.h:14:0: style: The function 'success' is never used. [unusedFunction]
2025-10-02T07:00:58.8513910Z     bool success() const { return exitCode == 0; }
2025-10-02T07:00:58.8514151Z ^
2025-10-02T07:00:58.8514526Z nofile:0:0: information: Active checkers: 161/592 (use --checkers-report=<filename> to see details) [checkersReport]
2025-10-02T07:00:58.8514899Z 
2025-10-02T07:00:58.8583510Z Post job cleanup.
2025-10-02T07:00:58.9521793Z [command]/usr/bin/git version
2025-10-02T07:00:58.9557645Z git version 2.51.0
2025-10-02T07:00:58.9602702Z Temporarily overriding HOME='/home/runner/work/_temp/df3f2427-34df-4e4c-8adf-8a60f0c9a8e4' before making global git config changes
2025-10-02T07:00:58.9603917Z Adding repository directory to the temporary git global config as a safe directory
2025-10-02T07:00:58.9609345Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/VersionTools/VersionTools
2025-10-02T07:00:58.9650456Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-10-02T07:00:58.9683144Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-10-02T07:00:58.9911094Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-10-02T07:00:58.9931901Z http.https://github.com/.extraheader
2025-10-02T07:00:58.9944245Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-10-02T07:00:58.9974679Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-10-02T07:00:59.0295545Z Cleaning up orphan processes
