2025-10-02T06:52:37.5775488Z Current runner version: '2.328.0'
2025-10-02T06:52:37.5812878Z ##[group]Runner Image Provisioner
2025-10-02T06:52:37.5814528Z Hosted Compute Agent
2025-10-02T06:52:37.5816106Z Version: 20250912.392
2025-10-02T06:52:37.5817210Z Commit: d921fda672a98b64f4f82364647e2f10b2267d0b
2025-10-02T06:52:37.5818371Z Build Date: 2025-09-12T15:23:14Z
2025-10-02T06:52:37.5819547Z ##[endgroup]
2025-10-02T06:52:37.5820461Z ##[group]Operating System
2025-10-02T06:52:37.5821570Z Ubuntu
2025-10-02T06:52:37.5822517Z 24.04.3
2025-10-02T06:52:37.5823278Z LTS
2025-10-02T06:52:37.5824056Z ##[endgroup]
2025-10-02T06:52:37.5825209Z ##[group]Runner Image
2025-10-02T06:52:37.5826436Z Image: ubuntu-24.04
2025-10-02T06:52:37.5827347Z Version: 20250922.53.1
2025-10-02T06:52:37.5829318Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250922.53/images/ubuntu/Ubuntu2404-Readme.md
2025-10-02T06:52:37.5832105Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250922.53
2025-10-02T06:52:37.5834152Z ##[endgroup]
2025-10-02T06:52:37.5838711Z ##[group]GITHUB_TOKEN Permissions
2025-10-02T06:52:37.5842110Z Actions: write
2025-10-02T06:52:37.5843043Z Attestations: write
2025-10-02T06:52:37.5843921Z Checks: write
2025-10-02T06:52:37.5844600Z Contents: write
2025-10-02T06:52:37.5845505Z Deployments: write
2025-10-02T06:52:37.5846032Z Discussions: write
2025-10-02T06:52:37.5846590Z Issues: write
2025-10-02T06:52:37.5847197Z Metadata: read
2025-10-02T06:52:37.5847688Z Models: read
2025-10-02T06:52:37.5848213Z Packages: write
2025-10-02T06:52:37.5848859Z Pages: write
2025-10-02T06:52:37.5849464Z PullRequests: write
2025-10-02T06:52:37.5850092Z RepositoryProjects: write
2025-10-02T06:52:37.5850747Z SecurityEvents: write
2025-10-02T06:52:37.5851454Z Statuses: write
2025-10-02T06:52:37.5851951Z ##[endgroup]
2025-10-02T06:52:37.5854290Z Secret source: Actions
2025-10-02T06:52:37.5855609Z Prepare workflow directory
2025-10-02T06:52:37.6239847Z Prepare all required actions
2025-10-02T06:52:37.6296587Z Getting action download info
2025-10-02T06:52:37.9488868Z Download action repository 'actions/checkout@v4' (SHA:08eba0b27e820071cde6df949e0beb9ba4906955)
2025-10-02T06:52:38.3871276Z Complete job name: Code Quality Check
2025-10-02T06:52:38.4666984Z ##[group]Run actions/checkout@v4
2025-10-02T06:52:38.4667816Z with:
2025-10-02T06:52:38.4668233Z   repository: Zixiao-Tech/VersionTools
2025-10-02T06:52:38.4668929Z   token: ***
2025-10-02T06:52:38.4669305Z   ssh-strict: true
2025-10-02T06:52:38.4669684Z   ssh-user: git
2025-10-02T06:52:38.4670075Z   persist-credentials: true
2025-10-02T06:52:38.4670507Z   clean: true
2025-10-02T06:52:38.4670895Z   sparse-checkout-cone-mode: true
2025-10-02T06:52:38.4671364Z   fetch-depth: 1
2025-10-02T06:52:38.4671741Z   fetch-tags: false
2025-10-02T06:52:38.4672134Z   show-progress: true
2025-10-02T06:52:38.4672529Z   lfs: false
2025-10-02T06:52:38.4672888Z   submodules: false
2025-10-02T06:52:38.4673281Z   set-safe-directory: true
2025-10-02T06:52:38.4673934Z ##[endgroup]
2025-10-02T06:52:38.5834298Z Syncing repository: Zixiao-Tech/VersionTools
2025-10-02T06:52:38.5837057Z ##[group]Getting Git version info
2025-10-02T06:52:38.5838156Z Working directory is '/home/runner/work/VersionTools/VersionTools'
2025-10-02T06:52:38.5839609Z [command]/usr/bin/git version
2025-10-02T06:52:38.5968124Z git version 2.51.0
2025-10-02T06:52:38.5996924Z ##[endgroup]
2025-10-02T06:52:38.6023776Z Temporarily overriding HOME='/home/runner/work/_temp/50697041-fad3-4be2-947f-cd3247e1856b' before making global git config changes
2025-10-02T06:52:38.6026684Z Adding repository directory to the temporary git global config as a safe directory
2025-10-02T06:52:38.6028693Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/VersionTools/VersionTools
2025-10-02T06:52:38.6075130Z Deleting the contents of '/home/runner/work/VersionTools/VersionTools'
2025-10-02T06:52:38.6079374Z ##[group]Initializing the repository
2025-10-02T06:52:38.6083848Z [command]/usr/bin/git init /home/runner/work/VersionTools/VersionTools
2025-10-02T06:52:38.6265081Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-10-02T06:52:38.6266995Z hint: is subject to change. To configure the initial branch name to use in all
2025-10-02T06:52:38.6268588Z hint: of your new repositories, which will suppress this warning, call:
2025-10-02T06:52:38.6269797Z hint:
2025-10-02T06:52:38.6270652Z hint: 	git config --global init.defaultBranch <name>
2025-10-02T06:52:38.6271565Z hint:
2025-10-02T06:52:38.6272500Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-10-02T06:52:38.6274353Z hint: 'development'. The just-created branch can be renamed via this command:
2025-10-02T06:52:38.6275913Z hint:
2025-10-02T06:52:38.6276579Z hint: 	git branch -m <name>
2025-10-02T06:52:38.6277373Z hint:
2025-10-02T06:52:38.6278391Z hint: Disable this message with "git config set advice.defaultBranchName false"
2025-10-02T06:52:38.6280238Z Initialized empty Git repository in /home/runner/work/VersionTools/VersionTools/.git/
2025-10-02T06:52:38.6283668Z [command]/usr/bin/git remote add origin https://github.com/Zixiao-Tech/VersionTools
2025-10-02T06:52:38.6328614Z ##[endgroup]
2025-10-02T06:52:38.6329928Z ##[group]Disabling automatic garbage collection
2025-10-02T06:52:38.6332608Z [command]/usr/bin/git config --local gc.auto 0
2025-10-02T06:52:38.6365673Z ##[endgroup]
2025-10-02T06:52:38.6366875Z ##[group]Setting up auth
2025-10-02T06:52:38.6373539Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-10-02T06:52:38.6410092Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-10-02T06:52:38.6797550Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-10-02T06:52:38.6832363Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-10-02T06:52:38.7082922Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-10-02T06:52:38.7130765Z ##[endgroup]
2025-10-02T06:52:38.7132055Z ##[group]Fetching the repository
2025-10-02T06:52:38.7141257Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +3138547846f7fd27ed918cc5f57c1cb3dbe6b509:refs/remotes/origin/main
2025-10-02T06:52:39.3536706Z From https://github.com/Zixiao-Tech/VersionTools
2025-10-02T06:52:39.3539813Z  * [new ref]         3138547846f7fd27ed918cc5f57c1cb3dbe6b509 -> origin/main
2025-10-02T06:52:39.3568970Z ##[endgroup]
2025-10-02T06:52:39.3570335Z ##[group]Determining the checkout info
2025-10-02T06:52:39.3571770Z ##[endgroup]
2025-10-02T06:52:39.3576514Z [command]/usr/bin/git sparse-checkout disable
2025-10-02T06:52:39.3618045Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-10-02T06:52:39.3646594Z ##[group]Checking out the ref
2025-10-02T06:52:39.3650069Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-10-02T06:52:39.4239982Z Switched to a new branch 'main'
2025-10-02T06:52:39.4241600Z branch 'main' set up to track 'origin/main'.
2025-10-02T06:52:39.4253831Z ##[endgroup]
2025-10-02T06:52:39.4294118Z [command]/usr/bin/git log -1 --format=%H
2025-10-02T06:52:39.4319157Z 3138547846f7fd27ed918cc5f57c1cb3dbe6b509
2025-10-02T06:52:39.4554289Z ##[group]Run sudo apt-get update
2025-10-02T06:52:39.4556070Z [36;1msudo apt-get update[0m
2025-10-02T06:52:39.4557475Z [36;1msudo apt-get install -y clang-format cppcheck[0m
2025-10-02T06:52:39.4596675Z shell: /usr/bin/bash -e {0}
2025-10-02T06:52:39.4597798Z ##[endgroup]
2025-10-02T06:52:39.5959882Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
2025-10-02T06:52:39.6499138Z Hit:6 https://packages.microsoft.com/repos/azure-cli noble InRelease
2025-10-02T06:52:39.6511888Z Hit:2 http://azure.archive.ubuntu.com/ubuntu noble InRelease
2025-10-02T06:52:39.6515593Z Get:7 https://packages.microsoft.com/ubuntu/24.04/prod noble InRelease [3600 B]
2025-10-02T06:52:39.6531507Z Get:3 http://azure.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
2025-10-02T06:52:39.6567600Z Get:4 http://azure.archive.ubuntu.com/ubuntu noble-backports InRelease [126 kB]
2025-10-02T06:52:39.6612988Z Get:5 http://azure.archive.ubuntu.com/ubuntu noble-security InRelease [126 kB]
2025-10-02T06:52:39.9528247Z Get:8 https://packages.microsoft.com/ubuntu/24.04/prod noble/main arm64 Packages [42.0 kB]
2025-10-02T06:52:39.9751012Z Get:9 https://packages.microsoft.com/ubuntu/24.04/prod noble/main armhf Packages [10.4 kB]
2025-10-02T06:52:39.9798111Z Get:10 https://packages.microsoft.com/ubuntu/24.04/prod noble/main amd64 Packages [58.8 kB]
2025-10-02T06:52:40.0003586Z Get:11 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [1475 kB]
2025-10-02T06:52:40.0087223Z Get:12 http://azure.archive.ubuntu.com/ubuntu noble-updates/main Translation-en [285 kB]
2025-10-02T06:52:40.0210993Z Get:13 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Components [175 kB]
2025-10-02T06:52:40.0229622Z Get:14 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 c-n-f Metadata [15.3 kB]
2025-10-02T06:52:40.0242598Z Get:15 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1486 kB]
2025-10-02T06:52:40.0337588Z Get:16 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe Translation-en [300 kB]
2025-10-02T06:52:40.0362996Z Get:17 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Components [377 kB]
2025-10-02T06:52:40.0396990Z Get:18 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 c-n-f Metadata [31.1 kB]
2025-10-02T06:52:40.0406758Z Get:19 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Packages [2034 kB]
2025-10-02T06:52:40.0557624Z Get:20 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted Translation-en [458 kB]
2025-10-02T06:52:40.0976189Z Get:21 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Components [212 B]
2025-10-02T06:52:40.0986309Z Get:22 http://azure.archive.ubuntu.com/ubuntu noble-updates/multiverse Translation-en [6116 B]
2025-10-02T06:52:40.0997889Z Get:23 http://azure.archive.ubuntu.com/ubuntu noble-updates/multiverse amd64 Components [940 B]
2025-10-02T06:52:40.1008618Z Get:24 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 Packages [40.4 kB]
2025-10-02T06:52:40.1024033Z Get:25 http://azure.archive.ubuntu.com/ubuntu noble-backports/main Translation-en [9208 B]
2025-10-02T06:52:40.1030409Z Get:26 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 Components [7148 B]
2025-10-02T06:52:40.1038157Z Get:27 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 c-n-f Metadata [368 B]
2025-10-02T06:52:40.1048145Z Get:28 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Packages [28.9 kB]
2025-10-02T06:52:40.1058747Z Get:29 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe Translation-en [17.5 kB]
2025-10-02T06:52:40.1069448Z Get:30 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Components [11.0 kB]
2025-10-02T06:52:40.1111650Z Get:31 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 c-n-f Metadata [1444 B]
2025-10-02T06:52:40.1113454Z Get:32 http://azure.archive.ubuntu.com/ubuntu noble-backports/restricted amd64 Components [212 B]
2025-10-02T06:52:40.1114513Z Get:33 http://azure.archive.ubuntu.com/ubuntu noble-backports/multiverse amd64 Components [212 B]
2025-10-02T06:52:40.1127340Z Get:34 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Packages [1198 kB]
2025-10-02T06:52:40.1619876Z Get:35 http://azure.archive.ubuntu.com/ubuntu noble-security/main Translation-en [201 kB]
2025-10-02T06:52:40.1639836Z Get:36 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Components [21.5 kB]
2025-10-02T06:52:40.1652327Z Get:37 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 c-n-f Metadata [8744 B]
2025-10-02T06:52:40.1663805Z Get:38 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Packages [881 kB]
2025-10-02T06:52:40.1725997Z Get:39 http://azure.archive.ubuntu.com/ubuntu noble-security/universe Translation-en [196 kB]
2025-10-02T06:52:40.1747369Z Get:40 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Components [52.3 kB]
2025-10-02T06:52:40.1764673Z Get:41 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 c-n-f Metadata [18.0 kB]
2025-10-02T06:52:40.1774220Z Get:42 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Packages [1933 kB]
2025-10-02T06:52:40.1895113Z Get:43 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted Translation-en [438 kB]
2025-10-02T06:52:40.1926153Z Get:44 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Components [208 B]
2025-10-02T06:52:40.1936221Z Get:45 http://azure.archive.ubuntu.com/ubuntu noble-security/multiverse Translation-en [5844 B]
2025-10-02T06:52:40.1946594Z Get:46 http://azure.archive.ubuntu.com/ubuntu noble-security/multiverse amd64 Components [208 B]
2025-10-02T06:52:50.0827104Z Fetched 12.2 MB in 2s (7390 kB/s)
2025-10-02T06:52:50.9407998Z Reading package lists...
2025-10-02T06:52:50.9749098Z Reading package lists...
2025-10-02T06:52:51.1910823Z Building dependency tree...
2025-10-02T06:52:51.1918702Z Reading state information...
2025-10-02T06:52:51.4084632Z Suggested packages:
2025-10-02T06:52:51.4085439Z   cppcheck-gui clang clang-tidy
2025-10-02T06:52:51.4310008Z The following NEW packages will be installed:
2025-10-02T06:52:51.4322356Z   clang-format cppcheck
2025-10-02T06:52:51.4522628Z 0 upgraded, 2 newly installed, 0 to remove and 27 not upgraded.
2025-10-02T06:52:51.4523319Z Need to get 2142 kB of archives.
2025-10-02T06:52:51.5101022Z After this operation, 9530 kB of additional disk space will be used.
2025-10-02T06:52:51.5101826Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
2025-10-02T06:52:51.5102512Z Get:2 http://azure.archive.ubuntu.com/ubuntu noble/universe amd64 clang-format amd64 1:18.0-59~exp2 [5970 B]
2025-10-02T06:52:51.5522430Z Get:3 http://azure.archive.ubuntu.com/ubuntu noble/universe amd64 cppcheck amd64 2.13.0-2ubuntu3 [2136 kB]
2025-10-02T06:52:52.0957999Z Fetched 2142 kB in 0s (6622 kB/s)
2025-10-02T06:52:52.1743911Z Selecting previously unselected package clang-format:amd64.
2025-10-02T06:52:52.2943554Z (Reading database ... 
2025-10-02T06:52:52.2944029Z (Reading database ... 5%
2025-10-02T06:52:52.2944632Z (Reading database ... 10%
2025-10-02T06:52:52.2945193Z (Reading database ... 15%
2025-10-02T06:52:52.2945526Z (Reading database ... 20%
2025-10-02T06:52:52.2945838Z (Reading database ... 25%
2025-10-02T06:52:52.2946157Z (Reading database ... 30%
2025-10-02T06:52:52.2946583Z (Reading database ... 35%
2025-10-02T06:52:52.2946901Z (Reading database ... 40%
2025-10-02T06:52:52.2947496Z (Reading database ... 45%
2025-10-02T06:52:52.2947852Z (Reading database ... 50%
2025-10-02T06:52:52.4149735Z (Reading database ... 55%
2025-10-02T06:52:52.9327178Z (Reading database ... 60%
2025-10-02T06:52:53.4322216Z (Reading database ... 65%
2025-10-02T06:52:53.9126597Z (Reading database ... 70%
2025-10-02T06:52:54.4007346Z (Reading database ... 75%
2025-10-02T06:52:54.9029740Z (Reading database ... 80%
2025-10-02T06:52:55.4478498Z (Reading database ... 85%
2025-10-02T06:52:56.0795999Z (Reading database ... 90%
2025-10-02T06:52:57.0009502Z (Reading database ... 95%
2025-10-02T06:52:57.0009868Z (Reading database ... 100%
2025-10-02T06:52:57.0010292Z (Reading database ... 214164 files and directories currently installed.)
2025-10-02T06:52:57.0059042Z Preparing to unpack .../clang-format_1%3a18.0-59~exp2_amd64.deb ...
2025-10-02T06:52:57.0092419Z Unpacking clang-format:amd64 (1:18.0-59~exp2) ...
2025-10-02T06:52:57.1169413Z Selecting previously unselected package cppcheck.
2025-10-02T06:52:57.1331012Z Preparing to unpack .../cppcheck_2.13.0-2ubuntu3_amd64.deb ...
2025-10-02T06:52:57.1371017Z Unpacking cppcheck (2.13.0-2ubuntu3) ...
2025-10-02T06:52:57.2534252Z Setting up clang-format:amd64 (1:18.0-59~exp2) ...
2025-10-02T06:52:57.2577773Z Setting up cppcheck (2.13.0-2ubuntu3) ...
2025-10-02T06:52:57.2629759Z Processing triggers for man-db (2.12.0-4build2) ...
2025-10-02T06:54:15.3636601Z 
2025-10-02T06:54:15.3637084Z Running kernel seems to be up-to-date.
2025-10-02T06:54:15.3637479Z 
2025-10-02T06:54:15.3637584Z Restarting services...
2025-10-02T06:54:15.3713462Z 
2025-10-02T06:54:15.3713897Z Service restarts being deferred:
2025-10-02T06:54:15.3718406Z  systemctl restart hosted-compute-agent.service
2025-10-02T06:54:15.3718764Z 
2025-10-02T06:54:15.3719288Z No containers need to be restarted.
2025-10-02T06:54:15.3719561Z 
2025-10-02T06:54:15.3720041Z No user sessions are running outdated binaries.
2025-10-02T06:54:15.3720309Z 
2025-10-02T06:54:15.3720495Z No VM guests are running outdated hypervisor (qemu) binaries on this host.
2025-10-02T06:54:16.6190777Z ##[group]Run find src -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror || true
2025-10-02T06:54:16.6191487Z [36;1mfind src -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror || true[0m
2025-10-02T06:54:16.6227087Z shell: /usr/bin/bash -e {0}
2025-10-02T06:54:16.6227317Z ##[endgroup]
2025-10-02T06:54:20.3004281Z src/qt/utils/GitWorker.cpp:7:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3010621Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T06:54:20.3011258Z                                ^
2025-10-02T06:54:20.3012085Z src/qt/utils/GitWorker.cpp:7:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3013163Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T06:54:20.3013788Z                                  ^
2025-10-02T06:54:20.3014672Z src/qt/utils/GitWorker.cpp:7:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3015905Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T06:54:20.3016560Z                                                     ^
2025-10-02T06:54:20.3017419Z src/qt/utils/GitWorker.cpp:7:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3018444Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T06:54:20.3019050Z                                                       ^
2025-10-02T06:54:20.3019854Z src/qt/utils/GitWorker.cpp:7:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3020725Z GitWorker::GitWorker(GitManager *gitManager, QObject *parent)
2025-10-02T06:54:20.3021232Z                                                              ^
2025-10-02T06:54:20.3021906Z src/qt/utils/GitWorker.cpp:8:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3022508Z     : QObject(parent)
2025-10-02T06:54:20.3022700Z                      ^
2025-10-02T06:54:20.3023068Z src/qt/utils/GitWorker.cpp:9:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3023465Z     , m_gitManager(gitManager)
2025-10-02T06:54:20.3023666Z                               ^
2025-10-02T06:54:20.3024020Z src/qt/utils/GitWorker.cpp:10:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3024404Z {
2025-10-02T06:54:20.3024539Z  ^
2025-10-02T06:54:20.3025068Z src/qt/utils/GitWorker.cpp:13:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3025571Z void GitWorker::openRepository(const QString &path)
2025-10-02T06:54:20.3026037Z                                             ^
2025-10-02T06:54:20.3026714Z src/qt/utils/GitWorker.cpp:13:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3027468Z void GitWorker::openRepository(const QString &path)
2025-10-02T06:54:20.3027918Z                                               ^
2025-10-02T06:54:20.3028670Z src/qt/utils/GitWorker.cpp:13:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3029141Z void GitWorker::openRepository(const QString &path)
2025-10-02T06:54:20.3029461Z                                                    ^
2025-10-02T06:54:20.3029874Z src/qt/utils/GitWorker.cpp:15:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3030328Z     emit operationStarted(tr("Opening repository..."));
2025-10-02T06:54:20.3030608Z                                                        ^
2025-10-02T06:54:20.3031005Z src/qt/utils/GitWorker.cpp:17:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3031492Z     auto result = m_gitManager->openRepository(path.toStdString());
2025-10-02T06:54:20.3031809Z                                                                    ^
2025-10-02T06:54:20.3032466Z src/qt/utils/GitWorker.cpp:21:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3032948Z         emit operationFinished(tr("Repository opened"), true);
2025-10-02T06:54:20.3033242Z                                                               ^
2025-10-02T06:54:20.3033645Z src/qt/utils/GitWorker.cpp:31:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3034077Z void GitWorker::refreshStatus()
2025-10-02T06:54:20.3034287Z                                ^
2025-10-02T06:54:20.3034645Z src/qt/utils/GitWorker.cpp:33:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3035322Z     emit operationStarted(tr("Refreshing status..."));
2025-10-02T06:54:20.3035589Z                                                       ^
2025-10-02T06:54:20.3035995Z src/qt/utils/GitWorker.cpp:40:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3036419Z     } catch (const std::exception &e) {
2025-10-02T06:54:20.3036725Z                                  ^
2025-10-02T06:54:20.3037402Z src/qt/utils/GitWorker.cpp:40:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3038141Z     } catch (const std::exception &e) {
2025-10-02T06:54:20.3038511Z                                    ^
2025-10-02T06:54:20.3039143Z src/qt/utils/GitWorker.cpp:46:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3039907Z void GitWorker::stageFiles(const QStringList &files)
2025-10-02T06:54:20.3040357Z                                             ^
2025-10-02T06:54:20.3041010Z src/qt/utils/GitWorker.cpp:46:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3041752Z void GitWorker::stageFiles(const QStringList &files)
2025-10-02T06:54:20.3042191Z                                               ^
2025-10-02T06:54:20.3042853Z src/qt/utils/GitWorker.cpp:46:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3043596Z void GitWorker::stageFiles(const QStringList &files)
2025-10-02T06:54:20.3044053Z                                                     ^
2025-10-02T06:54:20.3044858Z src/qt/utils/GitWorker.cpp:48:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3045588Z     emit operationStarted(tr("Staging files..."));
2025-10-02T06:54:20.3046047Z                                                   ^
2025-10-02T06:54:20.3046789Z src/qt/utils/GitWorker.cpp:51:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3047476Z     for (const QString &file : files) {
2025-10-02T06:54:20.3047842Z                       ^
2025-10-02T06:54:20.3048428Z src/qt/utils/GitWorker.cpp:51:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3049120Z     for (const QString &file : files) {
2025-10-02T06:54:20.3049526Z                         ^
2025-10-02T06:54:20.3050138Z src/qt/utils/GitWorker.cpp:53:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3051003Z     }
2025-10-02T06:54:20.3051250Z      ^
2025-10-02T06:54:20.3051609Z src/qt/utils/GitWorker.cpp:55:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3052037Z     auto result = m_gitManager->addFiles(fileList);
2025-10-02T06:54:20.3052302Z                                                    ^
2025-10-02T06:54:20.3052693Z src/qt/utils/GitWorker.cpp:66:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3053151Z void GitWorker::unstageFiles(const QStringList &files)
2025-10-02T06:54:20.3053432Z                                               ^
2025-10-02T06:54:20.3053824Z src/qt/utils/GitWorker.cpp:66:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3054268Z void GitWorker::unstageFiles(const QStringList &files)
2025-10-02T06:54:20.3054536Z                                                 ^
2025-10-02T06:54:20.3055386Z src/qt/utils/GitWorker.cpp:66:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3055855Z void GitWorker::unstageFiles(const QStringList &files)
2025-10-02T06:54:20.3056131Z                                                       ^
2025-10-02T06:54:20.3056666Z src/qt/utils/GitWorker.cpp:68:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3057429Z     emit operationStarted(tr("Unstaging files..."));
2025-10-02T06:54:20.3057875Z                                                     ^
2025-10-02T06:54:20.3058547Z src/qt/utils/GitWorker.cpp:71:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3059244Z     for (const QString &file : files) {
2025-10-02T06:54:20.3059606Z                       ^
2025-10-02T06:54:20.3060199Z src/qt/utils/GitWorker.cpp:71:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3060891Z     for (const QString &file : files) {
2025-10-02T06:54:20.3061267Z                         ^
2025-10-02T06:54:20.3061890Z src/qt/utils/GitWorker.cpp:73:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3062545Z     }
2025-10-02T06:54:20.3062781Z      ^
2025-10-02T06:54:20.3063320Z src/qt/utils/GitWorker.cpp:75:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3064067Z     auto result = m_gitManager->resetFiles(fileList);
2025-10-02T06:54:20.3064508Z                                                      ^
2025-10-02T06:54:20.3065272Z src/qt/utils/GitWorker.cpp:86:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3065731Z void GitWorker::commitChanges(const QString &message)
2025-10-02T06:54:20.3066002Z                                            ^
2025-10-02T06:54:20.3066392Z src/qt/utils/GitWorker.cpp:86:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3066822Z void GitWorker::commitChanges(const QString &message)
2025-10-02T06:54:20.3067092Z                                              ^
2025-10-02T06:54:20.3067479Z src/qt/utils/GitWorker.cpp:86:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3067911Z void GitWorker::commitChanges(const QString &message)
2025-10-02T06:54:20.3068171Z                                                      ^
2025-10-02T06:54:20.3068558Z src/qt/utils/GitWorker.cpp:88:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3068985Z     emit operationStarted(tr("Creating commit..."));
2025-10-02T06:54:20.3069236Z                                                     ^
2025-10-02T06:54:20.3069621Z src/qt/utils/GitWorker.cpp:90:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3070071Z     auto result = m_gitManager->commit(message.toStdString());
2025-10-02T06:54:20.3070373Z                                                               ^
2025-10-02T06:54:20.3070782Z src/qt/utils/GitWorker.cpp:101:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3071355Z void GitWorker::fetchRepository()
2025-10-02T06:54:20.3071574Z                                  ^
2025-10-02T06:54:20.3071948Z src/qt/utils/GitWorker.cpp:103:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3072399Z     emit operationStarted(tr("Fetching from remote..."));
2025-10-02T06:54:20.3072674Z                                                          ^
2025-10-02T06:54:20.3073075Z src/qt/utils/GitWorker.cpp:105:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3073484Z     auto result = m_gitManager->fetch();
2025-10-02T06:54:20.3073722Z                                         ^
2025-10-02T06:54:20.3074118Z src/qt/utils/GitWorker.cpp:116:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3074529Z void GitWorker::pullRepository()
2025-10-02T06:54:20.3074950Z                                 ^
2025-10-02T06:54:20.3075537Z src/qt/utils/GitWorker.cpp:118:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3076005Z     emit operationStarted(tr("Pulling from remote..."));
2025-10-02T06:54:20.3076280Z                                                         ^
2025-10-02T06:54:20.3076678Z src/qt/utils/GitWorker.cpp:120:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3077088Z     auto result = m_gitManager->pull();
2025-10-02T06:54:20.3077311Z                                        ^
2025-10-02T06:54:20.3077706Z src/qt/utils/GitWorker.cpp:131:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3078128Z void GitWorker::pushRepository()
2025-10-02T06:54:20.3078347Z                                 ^
2025-10-02T06:54:20.3078720Z src/qt/utils/GitWorker.cpp:133:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3079169Z     emit operationStarted(tr("Pushing to remote..."));
2025-10-02T06:54:20.3079453Z                                                       ^
2025-10-02T06:54:20.3079861Z src/qt/utils/GitWorker.cpp:135:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3080276Z     auto result = m_gitManager->push();
2025-10-02T06:54:20.3080501Z                                        ^
2025-10-02T06:54:20.3080925Z src/qt/utils/GitWorker.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3081311Z #include <QObject>
2025-10-02T06:54:20.3081478Z ^
2025-10-02T06:54:20.3081794Z src/qt/utils/GitWorker.h:9:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3082195Z class GitWorker : public QObject
2025-10-02T06:54:20.3082399Z                                 ^
2025-10-02T06:54:20.3082765Z src/qt/utils/GitWorker.h:11:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3083139Z     Q_OBJECT
2025-10-02T06:54:20.3083300Z             ^
2025-10-02T06:54:20.3083623Z src/qt/utils/GitWorker.h:14:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3084113Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T06:54:20.3084441Z                                  ^
2025-10-02T06:54:20.3085016Z src/qt/utils/GitWorker.h:14:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3085515Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T06:54:20.3085836Z                                    ^
2025-10-02T06:54:20.3086205Z src/qt/utils/GitWorker.h:14:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3086683Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T06:54:20.3087013Z                                                       ^
2025-10-02T06:54:20.3087407Z src/qt/utils/GitWorker.h:14:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3088018Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T06:54:20.3088349Z                                                         ^
2025-10-02T06:54:20.3088734Z src/qt/utils/GitWorker.h:14:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3089215Z     explicit GitWorker(GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T06:54:20.3089546Z                                                                           ^
2025-10-02T06:54:20.3089950Z src/qt/utils/GitWorker.h:17:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3090371Z     void openRepository(const QString &path);
2025-10-02T06:54:20.3090611Z                                      ^
2025-10-02T06:54:20.3090994Z src/qt/utils/GitWorker.h:17:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3091407Z     void openRepository(const QString &path);
2025-10-02T06:54:20.3091764Z                                        ^
2025-10-02T06:54:20.3092144Z src/qt/utils/GitWorker.h:19:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3157790Z     void stageFiles(const QStringList &files);
2025-10-02T06:54:20.3158283Z                                      ^
2025-10-02T06:54:20.3158944Z src/qt/utils/GitWorker.h:19:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3159745Z     void stageFiles(const QStringList &files);
2025-10-02T06:54:20.3160231Z                                        ^
2025-10-02T06:54:20.3160952Z src/qt/utils/GitWorker.h:20:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3161635Z     void unstageFiles(const QStringList &files);
2025-10-02T06:54:20.3162026Z                                        ^
2025-10-02T06:54:20.3162627Z src/qt/utils/GitWorker.h:20:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3163311Z     void unstageFiles(const QStringList &files);
2025-10-02T06:54:20.3163678Z                                          ^
2025-10-02T06:54:20.3164273Z src/qt/utils/GitWorker.h:21:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3165150Z     void commitChanges(const QString &message);
2025-10-02T06:54:20.3165588Z                                     ^
2025-10-02T06:54:20.3166147Z src/qt/utils/GitWorker.h:21:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3166834Z     void commitChanges(const QString &message);
2025-10-02T06:54:20.3167217Z                                       ^
2025-10-02T06:54:20.3167787Z src/qt/utils/GitWorker.h:24:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3168432Z     void pushRepository();
2025-10-02T06:54:20.3168772Z                           ^
2025-10-02T06:54:20.3169369Z src/qt/utils/GitWorker.h:27:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3170101Z     void repositoryOpened(const QString &path);
2025-10-02T06:54:20.3170537Z                                        ^
2025-10-02T06:54:20.3171208Z src/qt/utils/GitWorker.h:27:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3171952Z     void repositoryOpened(const QString &path);
2025-10-02T06:54:20.3172379Z                                          ^
2025-10-02T06:54:20.3173052Z src/qt/utils/GitWorker.h:29:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3173818Z     void operationStarted(const QString &operation);
2025-10-02T06:54:20.3174291Z                                        ^
2025-10-02T06:54:20.3175215Z src/qt/utils/GitWorker.h:29:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3175977Z     void operationStarted(const QString &operation);
2025-10-02T06:54:20.3176435Z                                          ^
2025-10-02T06:54:20.3177533Z src/qt/utils/GitWorker.h:30:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3178401Z     void operationFinished(const QString &operation, bool success);
2025-10-02T06:54:20.3178951Z                                         ^
2025-10-02T06:54:20.3179618Z src/qt/utils/GitWorker.h:30:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3180426Z     void operationFinished(const QString &operation, bool success);
2025-10-02T06:54:20.3180964Z                                           ^
2025-10-02T06:54:20.3181630Z src/qt/utils/GitWorker.h:31:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3182324Z     void errorOccurred(const QString &error);
2025-10-02T06:54:20.3182731Z                                     ^
2025-10-02T06:54:20.3183359Z src/qt/utils/GitWorker.h:31:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3184272Z     void errorOccurred(const QString &error);
2025-10-02T06:54:20.3184688Z                                       ^
2025-10-02T06:54:20.3185562Z src/qt/utils/GitWorker.h:31:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3186273Z     void errorOccurred(const QString &error);
2025-10-02T06:54:20.3186678Z                                              ^
2025-10-02T06:54:20.3187334Z src/qt/utils/GitWorker.h:34:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3188006Z     GitManager *m_gitManager;
2025-10-02T06:54:20.3188342Z               ^
2025-10-02T06:54:20.3188888Z src/qt/utils/GitWorker.h:34:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3189554Z     GitManager *m_gitManager;
2025-10-02T06:54:20.3189874Z                 ^
2025-10-02T06:54:20.3190460Z src/qt/utils/ThemeManager.h:7:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3191144Z class ThemeManager
2025-10-02T06:54:20.3191437Z                   ^
2025-10-02T06:54:20.3192031Z src/qt/utils/ThemeManager.h:8:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3192700Z {
2025-10-02T06:54:20.3192934Z  ^
2025-10-02T06:54:20.3193484Z src/qt/utils/ThemeManager.h:10:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3194256Z     static void applyModernTheme(QApplication *app);
2025-10-02T06:54:20.3194841Z                                              ^
2025-10-02T06:54:20.3195534Z src/qt/utils/ThemeManager.h:10:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3196295Z     static void applyModernTheme(QApplication *app);
2025-10-02T06:54:20.3196737Z                                                ^
2025-10-02T06:54:20.3197415Z src/qt/utils/ThemeManager.h:11:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3198152Z     static void applyDarkTheme(QApplication *app);
2025-10-02T06:54:20.3198598Z                                            ^
2025-10-02T06:54:20.3199262Z src/qt/utils/ThemeManager.h:11:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3199999Z     static void applyDarkTheme(QApplication *app);
2025-10-02T06:54:20.3200437Z                                              ^
2025-10-02T06:54:20.3201100Z src/qt/utils/ThemeManager.h:12:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3201850Z     static void applyLightTheme(QApplication *app);
2025-10-02T06:54:20.3202294Z                                             ^
2025-10-02T06:54:20.3202958Z src/qt/utils/ThemeManager.h:12:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3203705Z     static void applyLightTheme(QApplication *app);
2025-10-02T06:54:20.3204142Z                                               ^
2025-10-02T06:54:20.3204949Z src/qt/utils/ThemeManager.h:12:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3205898Z     static void applyLightTheme(QApplication *app);
2025-10-02T06:54:20.3206345Z                                                    ^
2025-10-02T06:54:20.3207023Z src/qt/utils/ThemeManager.h:15:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3207795Z     static void setModernPalette(QPalette &palette);
2025-10-02T06:54:20.3208242Z                                          ^
2025-10-02T06:54:20.3208921Z src/qt/utils/ThemeManager.h:15:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3209682Z     static void setModernPalette(QPalette &palette);
2025-10-02T06:54:20.3210135Z                                            ^
2025-10-02T06:54:20.3210837Z src/qt/utils/ThemeManager.h:16:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3211597Z     static void setDarkPalette(QPalette &palette);
2025-10-02T06:54:20.3212351Z                                        ^
2025-10-02T06:54:20.3213045Z src/qt/utils/ThemeManager.h:16:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3213791Z     static void setDarkPalette(QPalette &palette);
2025-10-02T06:54:20.3214226Z                                          ^
2025-10-02T06:54:20.3215031Z src/qt/utils/ThemeManager.h:17:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3215793Z     static void setLightPalette(QPalette &palette);
2025-10-02T06:54:20.3216227Z                                         ^
2025-10-02T06:54:20.3216911Z src/qt/utils/ThemeManager.h:17:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3217647Z     static void setLightPalette(QPalette &palette);
2025-10-02T06:54:20.3218086Z                                           ^
2025-10-02T06:54:20.3218897Z src/qt/utils/ThemeManager.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3219623Z #include "ThemeManager.h"
2025-10-02T06:54:20.3219954Z ^
2025-10-02T06:54:20.3220517Z src/qt/utils/ThemeManager.cpp:6:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3221407Z void ThemeManager::applyModernTheme(QApplication *app)
2025-10-02T06:54:20.3221878Z                                                 ^
2025-10-02T06:54:20.3222586Z src/qt/utils/ThemeManager.cpp:6:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3223391Z void ThemeManager::applyModernTheme(QApplication *app)
2025-10-02T06:54:20.3223869Z                                                   ^
2025-10-02T06:54:20.3224563Z src/qt/utils/ThemeManager.cpp:6:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3225474Z void ThemeManager::applyModernTheme(QApplication *app)
2025-10-02T06:54:20.3225961Z                                                       ^
2025-10-02T06:54:20.3226674Z src/qt/utils/ThemeManager.cpp:18:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3227410Z     app->setPalette(palette);
2025-10-02T06:54:20.3227758Z                              ^
2025-10-02T06:54:20.3228402Z src/qt/utils/ThemeManager.cpp:23:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3229196Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-10-02T06:54:20.3229657Z                                               ^
2025-10-02T06:54:20.3230180Z src/qt/utils/ThemeManager.cpp:23:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3230638Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-10-02T06:54:20.3230926Z                                                 ^
2025-10-02T06:54:20.3231349Z src/qt/utils/ThemeManager.cpp:23:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3231814Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-10-02T06:54:20.3232096Z                                                     ^
2025-10-02T06:54:20.3232661Z src/qt/utils/ThemeManager.cpp:25:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3233117Z     app->setStyle(QStyleFactory::create("Fusion"));
2025-10-02T06:54:20.3233373Z                                                    ^
2025-10-02T06:54:20.3233777Z src/qt/utils/ThemeManager.cpp:32:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3234241Z void ThemeManager::applyLightTheme(QApplication *app)
2025-10-02T06:54:20.3234515Z                                                ^
2025-10-02T06:54:20.3235277Z src/qt/utils/ThemeManager.cpp:32:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3235736Z void ThemeManager::applyLightTheme(QApplication *app)
2025-10-02T06:54:20.3236009Z                                                  ^
2025-10-02T06:54:20.3236549Z src/qt/utils/ThemeManager.cpp:32:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3237022Z void ThemeManager::applyLightTheme(QApplication *app)
2025-10-02T06:54:20.3237296Z                                                      ^
2025-10-02T06:54:20.3237699Z src/qt/utils/ThemeManager.cpp:34:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3238142Z     app->setStyle(QStyleFactory::create("Fusion"));
2025-10-02T06:54:20.3238393Z                                                    ^
2025-10-02T06:54:20.3238797Z src/qt/utils/ThemeManager.cpp:41:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3239265Z void ThemeManager::setModernPalette(QPalette &palette)
2025-10-02T06:54:20.3239533Z                                             ^
2025-10-02T06:54:20.3239946Z src/qt/utils/ThemeManager.cpp:41:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3240403Z void ThemeManager::setModernPalette(QPalette &palette)
2025-10-02T06:54:20.3240685Z                                               ^
2025-10-02T06:54:20.3241089Z src/qt/utils/ThemeManager.cpp:41:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3241546Z void ThemeManager::setModernPalette(QPalette &palette)
2025-10-02T06:54:20.3241823Z                                                       ^
2025-10-02T06:54:20.3242227Z src/qt/utils/ThemeManager.cpp:56:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3242737Z     palette.setColor(QPalette::HighlightedText, QColor(255, 255, 255));
2025-10-02T06:54:20.3243067Z                                                                        ^
2025-10-02T06:54:20.3243491Z src/qt/utils/ThemeManager.cpp:64:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3243941Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-10-02T06:54:20.3244211Z                                           ^
2025-10-02T06:54:20.3244614Z src/qt/utils/ThemeManager.cpp:64:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3245351Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-10-02T06:54:20.3245624Z                                             ^
2025-10-02T06:54:20.3246023Z src/qt/utils/ThemeManager.cpp:64:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3246661Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-10-02T06:54:20.3247122Z                                                     ^
2025-10-02T06:54:20.3247852Z src/qt/utils/ThemeManager.cpp:79:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3248709Z     palette.setColor(QPalette::HighlightedText, QColor(0, 0, 0));
2025-10-02T06:54:20.3249238Z                                                                  ^
2025-10-02T06:54:20.3250014Z src/qt/utils/ThemeManager.cpp:86:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3250835Z void ThemeManager::setLightPalette(QPalette &palette)
2025-10-02T06:54:20.3251507Z                                            ^
2025-10-02T06:54:20.3252203Z src/qt/utils/ThemeManager.cpp:86:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3253009Z void ThemeManager::setLightPalette(QPalette &palette)
2025-10-02T06:54:20.3253475Z                                              ^
2025-10-02T06:54:20.3254159Z src/qt/utils/ThemeManager.cpp:86:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3255096Z void ThemeManager::setLightPalette(QPalette &palette)
2025-10-02T06:54:20.3255562Z                                                      ^
2025-10-02T06:54:20.3256275Z src/qt/utils/ThemeManager.cpp:94:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3257057Z QString ThemeManager::getModernStyleSheet()
2025-10-02T06:54:20.3257476Z                                            ^
2025-10-02T06:54:20.3258424Z src/qt/VersionToolsMainWindow.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3259215Z #include "VersionToolsMainWindow.h"
2025-10-02T06:54:20.3259589Z ^
2025-10-02T06:54:20.3260204Z src/qt/VersionToolsMainWindow.cpp:10:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3260967Z #include <QApplication>
2025-10-02T06:54:20.3261267Z ^
2025-10-02T06:54:20.3261881Z src/qt/VersionToolsMainWindow.cpp:27:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3262809Z VersionToolsMainWindow::VersionToolsMainWindow(QWidget *parent)
2025-10-02T06:54:20.3263353Z                                                       ^
2025-10-02T06:54:20.3264099Z src/qt/VersionToolsMainWindow.cpp:27:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3265161Z VersionToolsMainWindow::VersionToolsMainWindow(QWidget *parent)
2025-10-02T06:54:20.3265740Z                                                         ^
2025-10-02T06:54:20.3266504Z src/qt/VersionToolsMainWindow.cpp:28:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3266958Z     : QMainWindow(parent)
2025-10-02T06:54:20.3267142Z                          ^
2025-10-02T06:54:20.3267536Z src/qt/VersionToolsMainWindow.cpp:29:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3267980Z     , m_centralSplitter(nullptr)
2025-10-02T06:54:20.3268196Z                                 ^
2025-10-02T06:54:20.3268606Z src/qt/VersionToolsMainWindow.cpp:30:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3269042Z     , m_contentStack(nullptr)
2025-10-02T06:54:20.3269244Z                              ^
2025-10-02T06:54:20.3269637Z src/qt/VersionToolsMainWindow.cpp:31:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3270067Z     , m_sidebarWidget(nullptr)
2025-10-02T06:54:20.3270272Z                               ^
2025-10-02T06:54:20.3270674Z src/qt/VersionToolsMainWindow.cpp:32:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3271106Z     , m_changesWidget(nullptr)
2025-10-02T06:54:20.3271311Z      ^
2025-10-02T06:54:20.3271680Z src/qt/VersionToolsMainWindow.cpp:32:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3272117Z     , m_changesWidget(nullptr)
2025-10-02T06:54:20.3272324Z                               ^
2025-10-02T06:54:20.3272725Z src/qt/VersionToolsMainWindow.cpp:33:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3273161Z     , m_historyWidget(nullptr)
2025-10-02T06:54:20.3273352Z                               ^
2025-10-02T06:54:20.3273749Z src/qt/VersionToolsMainWindow.cpp:34:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3274182Z     , m_branchesWidget(nullptr)
2025-10-02T06:54:20.3274382Z                                ^
2025-10-02T06:54:20.3275278Z src/qt/VersionToolsMainWindow.cpp:35:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3275762Z     , m_gitManager(std::make_unique<GitManager>())
2025-10-02T06:54:20.3276008Z      ^
2025-10-02T06:54:20.3276373Z src/qt/VersionToolsMainWindow.cpp:35:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3276836Z     , m_gitManager(std::make_unique<GitManager>())
2025-10-02T06:54:20.3277084Z                                                   ^
2025-10-02T06:54:20.3277523Z src/qt/VersionToolsMainWindow.cpp:36:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3277959Z     , m_gitWorker(nullptr)
2025-10-02T06:54:20.3278147Z                           ^
2025-10-02T06:54:20.3278731Z src/qt/VersionToolsMainWindow.cpp:40:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3279469Z     resize(1400, 900);
2025-10-02T06:54:20.3279939Z                       ^
2025-10-02T06:54:20.3280629Z src/qt/VersionToolsMainWindow.cpp:43:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3281475Z     m_gitWorker = new GitWorker(m_gitManager.get(), this);
2025-10-02T06:54:20.3281955Z                                                           ^
2025-10-02T06:54:20.3282706Z src/qt/VersionToolsMainWindow.cpp:50:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3283448Z     connectSignals();
2025-10-02T06:54:20.3283733Z                      ^
2025-10-02T06:54:20.3284397Z src/qt/VersionToolsMainWindow.cpp:52:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3285291Z     loadSettings();
2025-10-02T06:54:20.3285577Z                    ^
2025-10-02T06:54:20.3286249Z src/qt/VersionToolsMainWindow.cpp:58:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3287056Z         QTimer::singleShot(100, [this, lastRepo]() {
2025-10-02T06:54:20.3287512Z                                                     ^
2025-10-02T06:54:20.3288266Z src/qt/VersionToolsMainWindow.cpp:59:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3289040Z             onRepositoryOpened(lastRepo);
2025-10-02T06:54:20.3289434Z                                          ^
2025-10-02T06:54:20.3290168Z src/qt/VersionToolsMainWindow.cpp:64:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3291009Z VersionToolsMainWindow::~VersionToolsMainWindow()
2025-10-02T06:54:20.3291468Z                                                  ^
2025-10-02T06:54:20.3292212Z src/qt/VersionToolsMainWindow.cpp:69:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3293007Z void VersionToolsMainWindow::createActions()
2025-10-02T06:54:20.3293433Z                                             ^
2025-10-02T06:54:20.3294139Z src/qt/VersionToolsMainWindow.cpp:75:95: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3295354Z     connect(m_openAction, &QAction::triggered, this, &VersionToolsMainWindow::openRepository);
2025-10-02T06:54:20.3295797Z                                                                                               ^
2025-10-02T06:54:20.3296249Z src/qt/VersionToolsMainWindow.cpp:80:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3296860Z     connect(m_cloneAction, &QAction::triggered, this, &VersionToolsMainWindow::cloneRepository);
2025-10-02T06:54:20.3297270Z                                                                                                 ^
2025-10-02T06:54:20.3297743Z src/qt/VersionToolsMainWindow.cpp:85:101: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3298460Z     connect(m_refreshAction, &QAction::triggered, this, &VersionToolsMainWindow::refreshRepository);
2025-10-02T06:54:20.3299194Z                                                                                                     ^
2025-10-02T06:54:20.3300188Z src/qt/VersionToolsMainWindow.cpp:90:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3301228Z     connect(m_settingsAction, &QAction::triggered, this, &VersionToolsMainWindow::showSettings);
2025-10-02T06:54:20.3301935Z                                                                                                 ^
2025-10-02T06:54:20.3302720Z src/qt/VersionToolsMainWindow.cpp:95:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3303402Z     connect(m_exitAction, &QAction::triggered, this, &QWidget::close);
2025-10-02T06:54:20.3303725Z                                                                       ^
2025-10-02T06:54:20.3304176Z src/qt/VersionToolsMainWindow.cpp:100:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3305094Z     connect(m_aboutAction, &QAction::triggered, this, &VersionToolsMainWindow::showAbout);
2025-10-02T06:54:20.3305505Z                                                                                           ^
2025-10-02T06:54:20.3305961Z src/qt/VersionToolsMainWindow.cpp:107:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3306433Z void VersionToolsMainWindow::createMenus()
2025-10-02T06:54:20.3306674Z                                           ^
2025-10-02T06:54:20.3307099Z src/qt/VersionToolsMainWindow.cpp:117:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3307551Z     m_fileMenu->addAction(m_exitAction);
2025-10-02T06:54:20.3307781Z                                         ^
2025-10-02T06:54:20.3308208Z src/qt/VersionToolsMainWindow.cpp:120:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3308660Z     // View menu items will be added by widgets
2025-10-02T06:54:20.3308907Z                                                ^
2025-10-02T06:54:20.3309347Z src/qt/VersionToolsMainWindow.cpp:123:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3309810Z     // Git menu items will be added by widgets
2025-10-02T06:54:20.3310042Z                                               ^
2025-10-02T06:54:20.3310479Z src/qt/VersionToolsMainWindow.cpp:130:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3310954Z void VersionToolsMainWindow::createToolBars()
2025-10-02T06:54:20.3311251Z                                              ^
2025-10-02T06:54:20.3311675Z src/qt/VersionToolsMainWindow.cpp:142:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3312140Z void VersionToolsMainWindow::createStatusBar()
2025-10-02T06:54:20.3312392Z                                               ^
2025-10-02T06:54:20.3312824Z src/qt/VersionToolsMainWindow.cpp:146:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3313296Z     statusBar()->addWidget(m_repositoryLabel);
2025-10-02T06:54:20.3313542Z                                               ^
2025-10-02T06:54:20.3313966Z src/qt/VersionToolsMainWindow.cpp:148:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3314445Z     statusBar()->addPermanentWidget(new QLabel("|"));
2025-10-02T06:54:20.3314845Z                                                      ^
2025-10-02T06:54:20.3315283Z src/qt/VersionToolsMainWindow.cpp:152:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3315751Z     statusBar()->addPermanentWidget(m_branchLabel);
2025-10-02T06:54:20.3316011Z                                                    ^
2025-10-02T06:54:20.3316442Z src/qt/VersionToolsMainWindow.cpp:154:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3316909Z     statusBar()->addPermanentWidget(new QLabel("|"));
2025-10-02T06:54:20.3317172Z                                                      ^
2025-10-02T06:54:20.3317732Z src/qt/VersionToolsMainWindow.cpp:157:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3318204Z     statusBar()->addPermanentWidget(m_statusLabel);
2025-10-02T06:54:20.3318461Z                                                    ^
2025-10-02T06:54:20.3318889Z src/qt/VersionToolsMainWindow.cpp:165:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3319371Z void VersionToolsMainWindow::setupCentralWidget()
2025-10-02T06:54:20.3319635Z                                                  ^
2025-10-02T06:54:20.3320068Z src/qt/VersionToolsMainWindow.cpp:168:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3320516Z     setCentralWidget(m_centralSplitter);
2025-10-02T06:54:20.3320754Z                                         ^
2025-10-02T06:54:20.3321191Z src/qt/VersionToolsMainWindow.cpp:173:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3321816Z     m_centralSplitter->addWidget(m_sidebarWidget);
2025-10-02T06:54:20.3322102Z                                                   ^
2025-10-02T06:54:20.3322543Z src/qt/VersionToolsMainWindow.cpp:177:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3323011Z     m_centralSplitter->addWidget(m_contentStack);
2025-10-02T06:54:20.3323264Z                                                  ^
2025-10-02T06:54:20.3323696Z src/qt/VersionToolsMainWindow.cpp:182:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3324217Z     m_branchesWidget = new BranchesWidget(m_gitManager.get(), this);
2025-10-02T06:54:20.3324532Z                                                                     ^
2025-10-02T06:54:20.3325087Z src/qt/VersionToolsMainWindow.cpp:186:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3325546Z     m_contentStack->addWidget(m_branchesWidget);
2025-10-02T06:54:20.3325807Z                                                 ^
2025-10-02T06:54:20.3326237Z src/qt/VersionToolsMainWindow.cpp:194:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3326712Z void VersionToolsMainWindow::connectSignals()
2025-10-02T06:54:20.3326969Z                                              ^
2025-10-02T06:54:20.3327394Z src/qt/VersionToolsMainWindow.cpp:196:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3327897Z     connect(m_sidebarWidget, &SidebarWidget::selectionChanged,
2025-10-02T06:54:20.3328199Z                                                               ^
2025-10-02T06:54:20.3328644Z src/qt/VersionToolsMainWindow.cpp:197:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3329158Z             this, &VersionToolsMainWindow::onSidebarSelectionChanged);
2025-10-02T06:54:20.3329445Z                  ^
2025-10-02T06:54:20.3329832Z src/qt/VersionToolsMainWindow.cpp:197:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3330346Z             this, &VersionToolsMainWindow::onSidebarSelectionChanged);
2025-10-02T06:54:20.3330655Z                                                                       ^
2025-10-02T06:54:20.3331099Z src/qt/VersionToolsMainWindow.cpp:199:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3331579Z     connect(m_gitWorker, &GitWorker::repositoryOpened,
2025-10-02T06:54:20.3331861Z                                                       ^
2025-10-02T06:54:20.3332292Z src/qt/VersionToolsMainWindow.cpp:201:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3332763Z     connect(m_gitWorker, &GitWorker::statusChanged,
2025-10-02T06:54:20.3333023Z                                                    ^
2025-10-02T06:54:20.3333455Z src/qt/VersionToolsMainWindow.cpp:203:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3333938Z     connect(m_gitWorker, &GitWorker::operationStarted,
2025-10-02T06:54:20.3334349Z                                                       ^
2025-10-02T06:54:20.3335208Z src/qt/VersionToolsMainWindow.cpp:205:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3336063Z     connect(m_gitWorker, &GitWorker::operationFinished,
2025-10-02T06:54:20.3336539Z                                                        ^
2025-10-02T06:54:20.3337295Z src/qt/VersionToolsMainWindow.cpp:209:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3338114Z void VersionToolsMainWindow::openRepository()
2025-10-02T06:54:20.3338558Z                                              ^
2025-10-02T06:54:20.3339307Z src/qt/VersionToolsMainWindow.cpp:211:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3340140Z     QString dir = QFileDialog::getExistingDirectory(
2025-10-02T06:54:20.3340600Z                                                     ^
2025-10-02T06:54:20.3341538Z src/qt/VersionToolsMainWindow.cpp:212:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3342293Z         this,
2025-10-02T06:54:20.3342556Z              ^
2025-10-02T06:54:20.3343204Z src/qt/VersionToolsMainWindow.cpp:213:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3343970Z         tr("Open Git Repository"),
2025-10-02T06:54:20.3344332Z                                   ^
2025-10-02T06:54:20.3345181Z src/qt/VersionToolsMainWindow.cpp:214:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3345952Z         QDir::homePath(),
2025-10-02T06:54:20.3346261Z                          ^
2025-10-02T06:54:20.3346948Z src/qt/VersionToolsMainWindow.cpp:215:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3347877Z         QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks
2025-10-02T06:54:20.3348417Z                                                                     ^
2025-10-02T06:54:20.3349198Z src/qt/VersionToolsMainWindow.cpp:216:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3349975Z     );
2025-10-02T06:54:20.3350218Z       ^
2025-10-02T06:54:20.3350742Z src/qt/VersionToolsMainWindow.cpp:223:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3351226Z void VersionToolsMainWindow::cloneRepository()
2025-10-02T06:54:20.3351487Z                                               ^
2025-10-02T06:54:20.3351919Z src/qt/VersionToolsMainWindow.cpp:226:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3352420Z     QMessageBox::information(this, tr("Clone Repository"), 
2025-10-02T06:54:20.3352703Z                                                           ^
2025-10-02T06:54:20.3353148Z src/qt/VersionToolsMainWindow.cpp:230:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3353636Z void VersionToolsMainWindow::refreshRepository()
2025-10-02T06:54:20.3353909Z                                                 ^
2025-10-02T06:54:20.3354340Z src/qt/VersionToolsMainWindow.cpp:237:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3354954Z void VersionToolsMainWindow::showSettings()
2025-10-02T06:54:20.3355207Z                                            ^
2025-10-02T06:54:20.3355637Z src/qt/VersionToolsMainWindow.cpp:243:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3356108Z void VersionToolsMainWindow::showAbout()
2025-10-02T06:54:20.3356343Z                                         ^
2025-10-02T06:54:20.3356772Z src/qt/VersionToolsMainWindow.cpp:245:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3357256Z     QMessageBox::about(this, tr("About Version Tools"),
2025-10-02T06:54:20.3357530Z                                                        ^
2025-10-02T06:54:20.3358131Z src/qt/VersionToolsMainWindow.cpp:246:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3358574Z         tr("<h2>Version Tools 1.0.0</h2>"
2025-10-02T06:54:20.3358801Z                                          ^
2025-10-02T06:54:20.3359220Z src/qt/VersionToolsMainWindow.cpp:247:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3359879Z            "<p>A modern Git GUI application built with Qt and C++.</p>"
2025-10-02T06:54:20.3360408Z                                                                        ^
2025-10-02T06:54:20.3361178Z src/qt/VersionToolsMainWindow.cpp:248:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3362329Z            "<p>Copyright © 2024 VersionTools Project</p>"
2025-10-02T06:54:20.3363132Z src/qt/VersionToolsMainWindow.cpp:249:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3364135Z            "<p>Built with Qt %1</p>").arg(QT_VERSION_STR));
2025-10-02T06:54:20.3364611Z                                      ^
2025-10-02T06:54:20.3365500Z src/qt/VersionToolsMainWindow.cpp:252:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3366442Z void VersionToolsMainWindow::onSidebarSelectionChanged(int index)
2025-10-02T06:54:20.3367005Z                                                                  ^
2025-10-02T06:54:20.3367762Z src/qt/VersionToolsMainWindow.cpp:255:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3368554Z         m_contentStack->setCurrentIndex(index);
2025-10-02T06:54:20.3368964Z                                                ^
2025-10-02T06:54:20.3369715Z src/qt/VersionToolsMainWindow.cpp:265:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3370660Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-10-02T06:54:20.3371251Z                                                              ^
2025-10-02T06:54:20.3372021Z src/qt/VersionToolsMainWindow.cpp:265:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3372952Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-10-02T06:54:20.3373528Z                                                                ^
2025-10-02T06:54:20.3374135Z src/qt/VersionToolsMainWindow.cpp:265:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3374680Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-10-02T06:54:20.3375147Z                                                                     ^
2025-10-02T06:54:20.3375600Z src/qt/VersionToolsMainWindow.cpp:269:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3376049Z     updateStatusBar();
2025-10-02T06:54:20.3376229Z                       ^
2025-10-02T06:54:20.3376623Z src/qt/VersionToolsMainWindow.cpp:273:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3377093Z     settings.setValue("lastRepository", path);
2025-10-02T06:54:20.3377354Z                                               ^
2025-10-02T06:54:20.3377785Z src/qt/VersionToolsMainWindow.cpp:276:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3378248Z     m_sidebarWidget->setRepositoryPath(path);
2025-10-02T06:54:20.3378500Z                                              ^
2025-10-02T06:54:20.3378927Z src/qt/VersionToolsMainWindow.cpp:281:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3379397Z     m_branchesWidget->setRepository(path);
2025-10-02T06:54:20.3379633Z                                           ^
2025-10-02T06:54:20.3380313Z src/qt/VersionToolsMainWindow.cpp:287:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3381195Z void VersionToolsMainWindow::onRepositoryStatusChanged()
2025-10-02T06:54:20.3381701Z                                                         ^
2025-10-02T06:54:20.3382763Z src/qt/VersionToolsMainWindow.cpp:290:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3383519Z     updateStatusBar();
2025-10-02T06:54:20.3383821Z                       ^
2025-10-02T06:54:20.3384484Z src/qt/VersionToolsMainWindow.cpp:297:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3385635Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-10-02T06:54:20.3386266Z                                                                 ^
2025-10-02T06:54:20.3387017Z src/qt/VersionToolsMainWindow.cpp:297:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3387599Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-10-02T06:54:20.3387964Z                                                                   ^
2025-10-02T06:54:20.3388611Z src/qt/VersionToolsMainWindow.cpp:297:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3389183Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-10-02T06:54:20.3389549Z                                                                             ^
2025-10-02T06:54:20.3389999Z src/qt/VersionToolsMainWindow.cpp:304:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3390611Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-10-02T06:54:20.3391042Z                                                                  ^
2025-10-02T06:54:20.3391482Z src/qt/VersionToolsMainWindow.cpp:304:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3392100Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-10-02T06:54:20.3392519Z                                                                    ^
2025-10-02T06:54:20.3392963Z src/qt/VersionToolsMainWindow.cpp:304:92: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3393579Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-10-02T06:54:20.3393992Z                                                                                            ^
2025-10-02T06:54:20.3394452Z src/qt/VersionToolsMainWindow.cpp:306:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3395049Z     Q_UNUSED(operation)
2025-10-02T06:54:20.3395371Z                        ^
2025-10-02T06:54:20.3395764Z src/qt/VersionToolsMainWindow.cpp:313:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3396212Z         QTimer::singleShot(3000, [this]() {
2025-10-02T06:54:20.3396447Z                                            ^
2025-10-02T06:54:20.3396874Z src/qt/VersionToolsMainWindow.cpp:314:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3397352Z             m_statusLabel->setText(tr("Ready"));
2025-10-02T06:54:20.3397597Z                                                 ^
2025-10-02T06:54:20.3398027Z src/qt/VersionToolsMainWindow.cpp:319:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3398504Z void VersionToolsMainWindow::updateWindowTitle()
2025-10-02T06:54:20.3398758Z                                                 ^
2025-10-02T06:54:20.3399190Z src/qt/VersionToolsMainWindow.cpp:321:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3399631Z     QString title = "Version Tools";
2025-10-02T06:54:20.3399850Z                                     ^
2025-10-02T06:54:20.3400266Z src/qt/VersionToolsMainWindow.cpp:325:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3400710Z         title += " - " + dir.dirName();
2025-10-02T06:54:20.3400938Z                                        ^
2025-10-02T06:54:20.3401370Z src/qt/VersionToolsMainWindow.cpp:330:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3401957Z     }
2025-10-02T06:54:20.3402095Z      ^
2025-10-02T06:54:20.3402456Z src/qt/VersionToolsMainWindow.cpp:335:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3402928Z void VersionToolsMainWindow::updateStatusBar()
2025-10-02T06:54:20.3403188Z                                               ^
2025-10-02T06:54:20.3403615Z src/qt/VersionToolsMainWindow.cpp:347:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3404073Z void VersionToolsMainWindow::loadSettings()
2025-10-02T06:54:20.3404321Z                                            ^
2025-10-02T06:54:20.3404856Z src/qt/VersionToolsMainWindow.cpp:350:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3405309Z     settings.beginGroup("MainWindow");
2025-10-02T06:54:20.3405534Z                                       ^
2025-10-02T06:54:20.3406077Z src/qt/VersionToolsMainWindow.cpp:354:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3406568Z     restoreState(settings.value("state").toByteArray());
2025-10-02T06:54:20.3406851Z                                                         ^
2025-10-02T06:54:20.3407287Z src/qt/VersionToolsMainWindow.cpp:359:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3407706Z     }
2025-10-02T06:54:20.3407847Z      ^
2025-10-02T06:54:20.3408202Z src/qt/VersionToolsMainWindow.cpp:364:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3408665Z void VersionToolsMainWindow::saveSettings()
2025-10-02T06:54:20.3408914Z                                            ^
2025-10-02T06:54:20.3409332Z src/qt/VersionToolsMainWindow.cpp:367:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3409782Z     settings.beginGroup("MainWindow");
2025-10-02T06:54:20.3410017Z                                       ^
2025-10-02T06:54:20.3410519Z src/qt/VersionToolsMainWindow.cpp:371:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3411309Z     settings.setValue("state", saveState());
2025-10-02T06:54:20.3411724Z                                             ^
2025-10-02T06:54:20.3412467Z src/qt/VersionToolsMainWindow.cpp:376:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3413208Z     }
2025-10-02T06:54:20.3413450Z      ^
2025-10-02T06:54:20.3414076Z src/qt/VersionToolsMainWindow.cpp:381:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3415107Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-10-02T06:54:20.3415615Z                                                    ^
2025-10-02T06:54:20.3416381Z src/qt/VersionToolsMainWindow.cpp:381:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3417265Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-10-02T06:54:20.3417786Z                                                      ^
2025-10-02T06:54:20.3418548Z src/qt/VersionToolsMainWindow.cpp:381:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3419419Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-10-02T06:54:20.3419932Z                                                            ^
2025-10-02T06:54:20.3420654Z src/qt/VersionToolsMainWindow.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3421088Z #include <QMainWindow>
2025-10-02T06:54:20.3421269Z ^
2025-10-02T06:54:20.3421626Z src/qt/VersionToolsMainWindow.h:26:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3422096Z class VersionToolsMainWindow : public QMainWindow
2025-10-02T06:54:20.3422358Z                                                  ^
2025-10-02T06:54:20.3422787Z src/qt/VersionToolsMainWindow.h:28:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3423343Z     Q_OBJECT
2025-10-02T06:54:20.3423498Z             ^
2025-10-02T06:54:20.3423868Z src/qt/VersionToolsMainWindow.h:31:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3424344Z     VersionToolsMainWindow(QWidget *parent = nullptr);
2025-10-02T06:54:20.3424620Z                                   ^
2025-10-02T06:54:20.3425173Z src/qt/VersionToolsMainWindow.h:31:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3425656Z     VersionToolsMainWindow(QWidget *parent = nullptr);
2025-10-02T06:54:20.3425919Z                                     ^
2025-10-02T06:54:20.3426329Z src/qt/VersionToolsMainWindow.h:32:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3426760Z     ~VersionToolsMainWindow();
2025-10-02T06:54:20.3426972Z                               ^
2025-10-02T06:54:20.3427484Z src/qt/VersionToolsMainWindow.h:35:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3427959Z     void closeEvent(QCloseEvent *event) override;
2025-10-02T06:54:20.3428210Z                                ^
2025-10-02T06:54:20.3428606Z src/qt/VersionToolsMainWindow.h:35:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3429059Z     void closeEvent(QCloseEvent *event) override;
2025-10-02T06:54:20.3429301Z                                  ^
2025-10-02T06:54:20.3429704Z src/qt/VersionToolsMainWindow.h:35:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3430146Z     void closeEvent(QCloseEvent *event) override;
2025-10-02T06:54:20.3430398Z                                                  ^
2025-10-02T06:54:20.3430819Z src/qt/VersionToolsMainWindow.h:44:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3431263Z     void onRepositoryOpened(const QString &path);
2025-10-02T06:54:20.3431527Z                                          ^
2025-10-02T06:54:20.3431951Z src/qt/VersionToolsMainWindow.h:44:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3432408Z     void onRepositoryOpened(const QString &path);
2025-10-02T06:54:20.3432656Z                                            ^
2025-10-02T06:54:20.3433069Z src/qt/VersionToolsMainWindow.h:46:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3433549Z     void onGitOperationStarted(const QString &operation);
2025-10-02T06:54:20.3433826Z                                             ^
2025-10-02T06:54:20.3434250Z src/qt/VersionToolsMainWindow.h:46:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3434859Z     void onGitOperationStarted(const QString &operation);
2025-10-02T06:54:20.3435145Z                                               ^
2025-10-02T06:54:20.3435569Z src/qt/VersionToolsMainWindow.h:47:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3436101Z     void onGitOperationFinished(const QString &operation, bool success);
2025-10-02T06:54:20.3436429Z                                              ^
2025-10-02T06:54:20.3436839Z src/qt/VersionToolsMainWindow.h:47:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3437362Z     void onGitOperationFinished(const QString &operation, bool success);
2025-10-02T06:54:20.3437683Z                                                ^
2025-10-02T06:54:20.3438103Z src/qt/VersionToolsMainWindow.h:47:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3438623Z     void onGitOperationFinished(const QString &operation, bool success);
2025-10-02T06:54:20.3438955Z                                                                         ^
2025-10-02T06:54:20.3439396Z src/qt/VersionToolsMainWindow.h:62:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3439958Z     QSplitter *m_centralSplitter;
2025-10-02T06:54:20.3440171Z              ^
2025-10-02T06:54:20.3440529Z src/qt/VersionToolsMainWindow.h:62:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3440962Z     QSplitter *m_centralSplitter;
2025-10-02T06:54:20.3441165Z                ^
2025-10-02T06:54:20.3441529Z src/qt/VersionToolsMainWindow.h:63:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3441971Z     QStackedWidget *m_contentStack;
2025-10-02T06:54:20.3442185Z                   ^
2025-10-02T06:54:20.3442555Z src/qt/VersionToolsMainWindow.h:63:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3442981Z     QStackedWidget *m_contentStack;
2025-10-02T06:54:20.3443193Z                     ^
2025-10-02T06:54:20.3443563Z src/qt/VersionToolsMainWindow.h:64:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3444107Z     SidebarWidget *m_sidebarWidget;
2025-10-02T06:54:20.3444328Z                  ^
2025-10-02T06:54:20.3444688Z src/qt/VersionToolsMainWindow.h:64:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3445239Z     SidebarWidget *m_sidebarWidget;
2025-10-02T06:54:20.3445443Z                    ^
2025-10-02T06:54:20.3445812Z src/qt/VersionToolsMainWindow.h:65:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3446237Z     ChangesWidget *m_changesWidget;
2025-10-02T06:54:20.3446446Z                  ^
2025-10-02T06:54:20.3446804Z src/qt/VersionToolsMainWindow.h:65:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3447230Z     ChangesWidget *m_changesWidget;
2025-10-02T06:54:20.3447438Z                    ^
2025-10-02T06:54:20.3447800Z src/qt/VersionToolsMainWindow.h:66:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3448228Z     HistoryWidget *m_historyWidget;
2025-10-02T06:54:20.3448440Z                  ^
2025-10-02T06:54:20.3448801Z src/qt/VersionToolsMainWindow.h:66:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3449222Z     HistoryWidget *m_historyWidget;
2025-10-02T06:54:20.3449464Z                    ^
2025-10-02T06:54:20.3449831Z src/qt/VersionToolsMainWindow.h:67:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3450264Z     BranchesWidget *m_branchesWidget;
2025-10-02T06:54:20.3450487Z                   ^
2025-10-02T06:54:20.3450845Z src/qt/VersionToolsMainWindow.h:67:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3451280Z     BranchesWidget *m_branchesWidget;
2025-10-02T06:54:20.3451492Z                     ^
2025-10-02T06:54:20.3451858Z src/qt/VersionToolsMainWindow.h:67:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3452284Z     BranchesWidget *m_branchesWidget;
2025-10-02T06:54:20.3452511Z                                      ^
2025-10-02T06:54:20.3452943Z src/qt/VersionToolsMainWindow.h:70:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3453359Z     QMenu *m_fileMenu;
2025-10-02T06:54:20.3453534Z          ^
2025-10-02T06:54:20.3453882Z src/qt/VersionToolsMainWindow.h:70:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3454298Z     QMenu *m_fileMenu;
2025-10-02T06:54:20.3454467Z            ^
2025-10-02T06:54:20.3454929Z src/qt/VersionToolsMainWindow.h:71:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3455343Z     QMenu *m_viewMenu;
2025-10-02T06:54:20.3455516Z          ^
2025-10-02T06:54:20.3455866Z src/qt/VersionToolsMainWindow.h:71:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3456276Z     QMenu *m_viewMenu;
2025-10-02T06:54:20.3456445Z            ^
2025-10-02T06:54:20.3456799Z src/qt/VersionToolsMainWindow.h:72:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3457334Z     QMenu *m_gitMenu;
2025-10-02T06:54:20.3457502Z          ^
2025-10-02T06:54:20.3457850Z src/qt/VersionToolsMainWindow.h:72:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3458255Z     QMenu *m_gitMenu;
2025-10-02T06:54:20.3458421Z            ^
2025-10-02T06:54:20.3458773Z src/qt/VersionToolsMainWindow.h:73:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3459182Z     QMenu *m_helpMenu;
2025-10-02T06:54:20.3459356Z          ^
2025-10-02T06:54:20.3459702Z src/qt/VersionToolsMainWindow.h:73:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3460120Z     QMenu *m_helpMenu;
2025-10-02T06:54:20.3460287Z            ^
2025-10-02T06:54:20.3460640Z src/qt/VersionToolsMainWindow.h:73:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3461054Z     QMenu *m_helpMenu;
2025-10-02T06:54:20.3461340Z                       ^
2025-10-02T06:54:20.3461718Z src/qt/VersionToolsMainWindow.h:75:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3462137Z     QAction *m_openAction;
2025-10-02T06:54:20.3462327Z            ^
2025-10-02T06:54:20.3462672Z src/qt/VersionToolsMainWindow.h:75:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3463101Z     QAction *m_openAction;
2025-10-02T06:54:20.3463283Z              ^
2025-10-02T06:54:20.3463645Z src/qt/VersionToolsMainWindow.h:76:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3464069Z     QAction *m_cloneAction;
2025-10-02T06:54:20.3464253Z            ^
2025-10-02T06:54:20.3464607Z src/qt/VersionToolsMainWindow.h:76:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3465200Z     QAction *m_cloneAction;
2025-10-02T06:54:20.3465386Z              ^
2025-10-02T06:54:20.3465744Z src/qt/VersionToolsMainWindow.h:77:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3466178Z     QAction *m_refreshAction;
2025-10-02T06:54:20.3466367Z            ^
2025-10-02T06:54:20.3466727Z src/qt/VersionToolsMainWindow.h:77:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3467150Z     QAction *m_refreshAction;
2025-10-02T06:54:20.3467342Z              ^
2025-10-02T06:54:20.3467702Z src/qt/VersionToolsMainWindow.h:78:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3468126Z     QAction *m_settingsAction;
2025-10-02T06:54:20.3468320Z            ^
2025-10-02T06:54:20.3468667Z src/qt/VersionToolsMainWindow.h:78:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3469095Z     QAction *m_settingsAction;
2025-10-02T06:54:20.3469283Z              ^
2025-10-02T06:54:20.3469640Z src/qt/VersionToolsMainWindow.h:79:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3470068Z     QAction *m_exitAction;
2025-10-02T06:54:20.3470246Z            ^
2025-10-02T06:54:20.3470600Z src/qt/VersionToolsMainWindow.h:79:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3471013Z     QAction *m_exitAction;
2025-10-02T06:54:20.3471196Z              ^
2025-10-02T06:54:20.3471545Z src/qt/VersionToolsMainWindow.h:80:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3471966Z     QAction *m_aboutAction;
2025-10-02T06:54:20.3472145Z            ^
2025-10-02T06:54:20.3472503Z src/qt/VersionToolsMainWindow.h:80:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3472924Z     QAction *m_aboutAction;
2025-10-02T06:54:20.3473108Z              ^
2025-10-02T06:54:20.3473468Z src/qt/VersionToolsMainWindow.h:81:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3473889Z     QAction *m_aboutQtAction;
2025-10-02T06:54:20.3474088Z            ^
2025-10-02T06:54:20.3474554Z src/qt/VersionToolsMainWindow.h:81:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3475072Z     QAction *m_aboutQtAction;
2025-10-02T06:54:20.3475259Z              ^
2025-10-02T06:54:20.3475617Z src/qt/VersionToolsMainWindow.h:81:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3476040Z     QAction *m_aboutQtAction;
2025-10-02T06:54:20.3476229Z                              ^
2025-10-02T06:54:20.3476619Z src/qt/VersionToolsMainWindow.h:84:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3477038Z     QToolBar *m_mainToolBar;
2025-10-02T06:54:20.3477231Z             ^
2025-10-02T06:54:20.3477584Z src/qt/VersionToolsMainWindow.h:84:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3478011Z     QToolBar *m_mainToolBar;
2025-10-02T06:54:20.3478201Z               ^
2025-10-02T06:54:20.3478676Z src/qt/VersionToolsMainWindow.h:84:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3479111Z     QToolBar *m_mainToolBar;
2025-10-02T06:54:20.3479297Z                             ^
2025-10-02T06:54:20.3479679Z src/qt/VersionToolsMainWindow.h:87:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3480103Z     QLabel *m_repositoryLabel;
2025-10-02T06:54:20.3480299Z           ^
2025-10-02T06:54:20.3480645Z src/qt/VersionToolsMainWindow.h:87:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3481068Z     QLabel *m_repositoryLabel;
2025-10-02T06:54:20.3481262Z             ^
2025-10-02T06:54:20.3481612Z src/qt/VersionToolsMainWindow.h:88:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3482037Z     QLabel *m_branchLabel;
2025-10-02T06:54:20.3482216Z           ^
2025-10-02T06:54:20.3482572Z src/qt/VersionToolsMainWindow.h:88:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3483021Z     QLabel *m_branchLabel;
2025-10-02T06:54:20.3483212Z             ^
2025-10-02T06:54:20.3483562Z src/qt/VersionToolsMainWindow.h:89:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3483982Z     QLabel *m_statusLabel;
2025-10-02T06:54:20.3484163Z           ^
2025-10-02T06:54:20.3484506Z src/qt/VersionToolsMainWindow.h:89:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3485029Z     QLabel *m_statusLabel;
2025-10-02T06:54:20.3485205Z             ^
2025-10-02T06:54:20.3485557Z src/qt/VersionToolsMainWindow.h:90:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3485984Z     QProgressBar *m_progressBar;
2025-10-02T06:54:20.3486191Z                 ^
2025-10-02T06:54:20.3486551Z src/qt/VersionToolsMainWindow.h:90:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3486978Z     QProgressBar *m_progressBar;
2025-10-02T06:54:20.3487189Z                   ^
2025-10-02T06:54:20.3487549Z src/qt/VersionToolsMainWindow.h:90:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3487977Z     QProgressBar *m_progressBar;
2025-10-02T06:54:20.3488179Z                                 ^
2025-10-02T06:54:20.3488576Z src/qt/VersionToolsMainWindow.h:94:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3488994Z     GitWorker *m_gitWorker;
2025-10-02T06:54:20.3489183Z              ^
2025-10-02T06:54:20.3489541Z src/qt/VersionToolsMainWindow.h:94:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3489957Z     GitWorker *m_gitWorker;
2025-10-02T06:54:20.3490147Z                ^
2025-10-02T06:54:20.3490499Z src/qt/widgets/ChangesWidget.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3490913Z #include <QWidget>
2025-10-02T06:54:20.3491076Z ^
2025-10-02T06:54:20.3491422Z src/qt/widgets/ChangesWidget.h:23:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3492008Z class ChangesWidget : public QWidget
2025-10-02T06:54:20.3492236Z                                     ^
2025-10-02T06:54:20.3492637Z src/qt/widgets/ChangesWidget.h:25:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3493040Z     Q_OBJECT
2025-10-02T06:54:20.3493191Z             ^
2025-10-02T06:54:20.3493532Z src/qt/widgets/ChangesWidget.h:28:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3494065Z     explicit ChangesWidget(GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T06:54:20.3494407Z                                      ^
2025-10-02T06:54:20.3494914Z src/qt/widgets/ChangesWidget.h:28:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3495447Z     explicit ChangesWidget(GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T06:54:20.3495904Z                                        ^
2025-10-02T06:54:20.3496315Z src/qt/widgets/ChangesWidget.h:28:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3496836Z     explicit ChangesWidget(GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T06:54:20.3497181Z                                                           ^
2025-10-02T06:54:20.3497599Z src/qt/widgets/ChangesWidget.h:28:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3498119Z     explicit ChangesWidget(GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T06:54:20.3498469Z                                                             ^
2025-10-02T06:54:20.3498883Z src/qt/widgets/ChangesWidget.h:30:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3499322Z     void setRepository(const QString &path);
2025-10-02T06:54:20.3499559Z                                     ^
2025-10-02T06:54:20.3499972Z src/qt/widgets/ChangesWidget.h:30:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3500420Z     void setRepository(const QString &path);
2025-10-02T06:54:20.3500667Z                                       ^
2025-10-02T06:54:20.3501073Z src/qt/widgets/ChangesWidget.h:31:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3501492Z     void refreshChanges();
2025-10-02T06:54:20.3501687Z                           ^
2025-10-02T06:54:20.3502064Z src/qt/widgets/ChangesWidget.h:37:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3502513Z     void onFileItemChanged(QListWidgetItem *item);
2025-10-02T06:54:20.3502770Z                                           ^
2025-10-02T06:54:20.3503178Z src/qt/widgets/ChangesWidget.h:37:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3503625Z     void onFileItemChanged(QListWidgetItem *item);
2025-10-02T06:54:20.3503889Z                                             ^
2025-10-02T06:54:20.3504302Z src/qt/widgets/ChangesWidget.h:39:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3504813Z     void showCommitDialog();
2025-10-02T06:54:20.3505020Z                             ^
2025-10-02T06:54:20.3505401Z src/qt/widgets/ChangesWidget.h:45:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3505833Z     void stageFile(const QString &filePath);
2025-10-02T06:54:20.3506065Z                                 ^
2025-10-02T06:54:20.3506458Z src/qt/widgets/ChangesWidget.h:45:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3506895Z     void stageFile(const QString &filePath);
2025-10-02T06:54:20.3507123Z                                   ^
2025-10-02T06:54:20.3507519Z src/qt/widgets/ChangesWidget.h:46:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3507949Z     void unstageFile(const QString &filePath);
2025-10-02T06:54:20.3508352Z                                   ^
2025-10-02T06:54:20.3508748Z src/qt/widgets/ChangesWidget.h:46:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3509183Z     void unstageFile(const QString &filePath);
2025-10-02T06:54:20.3509420Z                                     ^
2025-10-02T06:54:20.3509816Z src/qt/widgets/ChangesWidget.h:48:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3510236Z     GitManager *m_gitManager;
2025-10-02T06:54:20.3510431Z               ^
2025-10-02T06:54:20.3510784Z src/qt/widgets/ChangesWidget.h:48:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3511194Z     GitManager *m_gitManager;
2025-10-02T06:54:20.3511390Z                 ^
2025-10-02T06:54:20.3511745Z src/qt/widgets/ChangesWidget.h:52:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3512154Z     QVBoxLayout *m_layout;
2025-10-02T06:54:20.3512458Z                ^
2025-10-02T06:54:20.3512818Z src/qt/widgets/ChangesWidget.h:52:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3513230Z     QVBoxLayout *m_layout;
2025-10-02T06:54:20.3513411Z                  ^
2025-10-02T06:54:20.3513764Z src/qt/widgets/ChangesWidget.h:53:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3514168Z     QToolBar *m_toolbar;
2025-10-02T06:54:20.3514350Z             ^
2025-10-02T06:54:20.3514866Z src/qt/widgets/ChangesWidget.h:53:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3515277Z     QToolBar *m_toolbar;
2025-10-02T06:54:20.3515458Z               ^
2025-10-02T06:54:20.3515804Z src/qt/widgets/ChangesWidget.h:54:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3516218Z     QSplitter *m_splitter;
2025-10-02T06:54:20.3516400Z              ^
2025-10-02T06:54:20.3516756Z src/qt/widgets/ChangesWidget.h:54:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3517168Z     QSplitter *m_splitter;
2025-10-02T06:54:20.3517352Z                ^
2025-10-02T06:54:20.3517703Z src/qt/widgets/ChangesWidget.h:54:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3518110Z     QSplitter *m_splitter;
2025-10-02T06:54:20.3518300Z                           ^
2025-10-02T06:54:20.3518673Z src/qt/widgets/ChangesWidget.h:57:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3519099Z     QWidget *m_fileListPanel;
2025-10-02T06:54:20.3519290Z            ^
2025-10-02T06:54:20.3519639Z src/qt/widgets/ChangesWidget.h:57:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3520052Z     QWidget *m_fileListPanel;
2025-10-02T06:54:20.3520245Z              ^
2025-10-02T06:54:20.3520593Z src/qt/widgets/ChangesWidget.h:58:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3539955Z     QListWidget *m_stagedList;
2025-10-02T06:54:20.3540323Z                ^
2025-10-02T06:54:20.3540745Z src/qt/widgets/ChangesWidget.h:58:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3541203Z     QListWidget *m_stagedList;
2025-10-02T06:54:20.3541406Z                  ^
2025-10-02T06:54:20.3541782Z src/qt/widgets/ChangesWidget.h:59:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3542209Z     QListWidget *m_unstagedList;
2025-10-02T06:54:20.3542476Z                ^
2025-10-02T06:54:20.3542836Z src/qt/widgets/ChangesWidget.h:59:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3543249Z     QListWidget *m_unstagedList;
2025-10-02T06:54:20.3543454Z                  ^
2025-10-02T06:54:20.3543800Z src/qt/widgets/ChangesWidget.h:59:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3544214Z     QListWidget *m_unstagedList;
2025-10-02T06:54:20.3544648Z                                 ^
2025-10-02T06:54:20.3545184Z src/qt/widgets/ChangesWidget.h:62:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3545601Z     QWidget *m_diffPanel;
2025-10-02T06:54:20.3545786Z            ^
2025-10-02T06:54:20.3546139Z src/qt/widgets/ChangesWidget.h:62:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3546542Z     QWidget *m_diffPanel;
2025-10-02T06:54:20.3546722Z              ^
2025-10-02T06:54:20.3547063Z src/qt/widgets/ChangesWidget.h:63:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3547471Z     QTextEdit *m_diffView;
2025-10-02T06:54:20.3547650Z              ^
2025-10-02T06:54:20.3547998Z src/qt/widgets/ChangesWidget.h:63:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3548407Z     QTextEdit *m_diffView;
2025-10-02T06:54:20.3548592Z                ^
2025-10-02T06:54:20.3549064Z src/qt/widgets/ChangesWidget.h:63:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3549521Z     QTextEdit *m_diffView;
2025-10-02T06:54:20.3549711Z                           ^
2025-10-02T06:54:20.3550077Z src/qt/widgets/ChangesWidget.h:66:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3550495Z     QPushButton *m_stageAllButton;
2025-10-02T06:54:20.3550705Z                ^
2025-10-02T06:54:20.3551052Z src/qt/widgets/ChangesWidget.h:66:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3551471Z     QPushButton *m_stageAllButton;
2025-10-02T06:54:20.3551676Z                  ^
2025-10-02T06:54:20.3552033Z src/qt/widgets/ChangesWidget.h:67:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3552454Z     QPushButton *m_unstageAllButton;
2025-10-02T06:54:20.3552674Z                ^
2025-10-02T06:54:20.3553024Z src/qt/widgets/ChangesWidget.h:67:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3553447Z     QPushButton *m_unstageAllButton;
2025-10-02T06:54:20.3553660Z                  ^
2025-10-02T06:54:20.3554012Z src/qt/widgets/ChangesWidget.h:68:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3554439Z     QPushButton *m_commitButton;
2025-10-02T06:54:20.3554643Z                ^
2025-10-02T06:54:20.3555107Z src/qt/widgets/ChangesWidget.h:68:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3555524Z     QPushButton *m_commitButton;
2025-10-02T06:54:20.3555722Z                  ^
2025-10-02T06:54:20.3556067Z src/qt/widgets/ChangesWidget.h:68:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3556481Z     QPushButton *m_commitButton;
2025-10-02T06:54:20.3556691Z                                 ^
2025-10-02T06:54:20.3557080Z src/qt/widgets/HistoryWidget.h:9:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3557490Z     Q_OBJECT
2025-10-02T06:54:20.3557647Z             ^
2025-10-02T06:54:20.3557998Z src/qt/widgets/HistoryWidget.h:12:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3558461Z     explicit HistoryWidget(QWidget *parent = nullptr);
2025-10-02T06:54:20.3558735Z                                   ^
2025-10-02T06:54:20.3559135Z src/qt/widgets/HistoryWidget.h:12:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3559593Z     explicit HistoryWidget(QWidget *parent = nullptr);
2025-10-02T06:54:20.3559857Z                                     ^
2025-10-02T06:54:20.3560259Z src/qt/widgets/HistoryWidget.h:12:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3560714Z     explicit HistoryWidget(QWidget *parent = nullptr);
2025-10-02T06:54:20.3560977Z                                                       ^
2025-10-02T06:54:20.3561396Z src/qt/widgets/HistoryWidget.h:15:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3561982Z     void commitSelected(const QString& commitHash);
2025-10-02T06:54:20.3562246Z                                                    ^
2025-10-02T06:54:20.3562665Z src/qt/widgets/SidebarWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3563089Z #include "SidebarWidget.h"
2025-10-02T06:54:20.3563285Z ^
2025-10-02T06:54:20.3563636Z src/qt/widgets/SidebarWidget.cpp:11:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3564168Z SidebarWidget::SidebarWidget(QWidget *parent)
2025-10-02T06:54:20.3564414Z                                     ^
2025-10-02T06:54:20.3564690Z src/qt/widgets/SidebarWidget.cpp:11:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3564968Z SidebarWidget::SidebarWidget(QWidget *parent)
2025-10-02T06:54:20.3565038Z                                       ^
2025-10-02T06:54:20.3565445Z src/qt/widgets/SidebarWidget.cpp:12:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3565520Z     : QWidget(parent)
2025-10-02T06:54:20.3565583Z                      ^
2025-10-02T06:54:20.3565858Z src/qt/widgets/SidebarWidget.cpp:13:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3565929Z     , m_layout(nullptr)
2025-10-02T06:54:20.3565993Z                        ^
2025-10-02T06:54:20.3566254Z src/qt/widgets/SidebarWidget.cpp:14:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3566341Z     , m_repositoryLabel(nullptr)
2025-10-02T06:54:20.3566406Z                                 ^
2025-10-02T06:54:20.3566671Z src/qt/widgets/SidebarWidget.cpp:15:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3566755Z     , m_branchLabel(nullptr)
2025-10-02T06:54:20.3566820Z                             ^
2025-10-02T06:54:20.3567084Z src/qt/widgets/SidebarWidget.cpp:16:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3567172Z     , m_navigationList(nullptr)
2025-10-02T06:54:20.3567237Z                                ^
2025-10-02T06:54:20.3567499Z src/qt/widgets/SidebarWidget.cpp:17:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3567571Z     , m_statusLabel(nullptr)
2025-10-02T06:54:20.3567637Z      ^
2025-10-02T06:54:20.3567896Z src/qt/widgets/SidebarWidget.cpp:17:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3567966Z     , m_statusLabel(nullptr)
2025-10-02T06:54:20.3568038Z                             ^
2025-10-02T06:54:20.3568296Z src/qt/widgets/SidebarWidget.cpp:18:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3568369Z     , m_changesItem(nullptr)
2025-10-02T06:54:20.3568438Z                             ^
2025-10-02T06:54:20.3568704Z src/qt/widgets/SidebarWidget.cpp:19:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3568778Z     , m_historyItem(nullptr)
2025-10-02T06:54:20.3568843Z                             ^
2025-10-02T06:54:20.3569106Z src/qt/widgets/SidebarWidget.cpp:20:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3569179Z     , m_branchesItem(nullptr)
2025-10-02T06:54:20.3569246Z                              ^
2025-10-02T06:54:20.3569514Z src/qt/widgets/SidebarWidget.cpp:21:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3569585Z     , m_remotesItem(nullptr)
2025-10-02T06:54:20.3569645Z      ^
2025-10-02T06:54:20.3569903Z src/qt/widgets/SidebarWidget.cpp:21:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3569979Z     , m_remotesItem(nullptr)
2025-10-02T06:54:20.3570042Z                             ^
2025-10-02T06:54:20.3570307Z src/qt/widgets/SidebarWidget.cpp:22:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3570501Z     , m_tagsItem(nullptr)
2025-10-02T06:54:20.3570565Z                          ^
2025-10-02T06:54:20.3570826Z src/qt/widgets/SidebarWidget.cpp:23:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3570904Z     , m_stashesItem(nullptr)
2025-10-02T06:54:20.3570967Z                             ^
2025-10-02T06:54:20.3571227Z src/qt/widgets/SidebarWidget.cpp:29:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3571308Z void SidebarWidget::setupUI()
2025-10-02T06:54:20.3571377Z                              ^
2025-10-02T06:54:20.3571646Z src/qt/widgets/SidebarWidget.cpp:117:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3571782Z     connect(m_navigationList, &QListWidget::itemClicked,
2025-10-02T06:54:20.3571869Z                                                         ^
2025-10-02T06:54:20.3572218Z src/qt/widgets/SidebarWidget.cpp:121:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3572330Z void SidebarWidget::createNavigationItems()
2025-10-02T06:54:20.3572409Z                                            ^
2025-10-02T06:54:20.3572669Z src/qt/widgets/SidebarWidget.cpp:159:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3572813Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-10-02T06:54:20.3572898Z                                                    ^
2025-10-02T06:54:20.3573162Z src/qt/widgets/SidebarWidget.cpp:159:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3573300Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-10-02T06:54:20.3573377Z                                                      ^
2025-10-02T06:54:20.3573648Z src/qt/widgets/SidebarWidget.cpp:159:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3573786Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-10-02T06:54:20.3573872Z                                                           ^
2025-10-02T06:54:20.3574148Z src/qt/widgets/SidebarWidget.cpp:172:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3574326Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-10-02T06:54:20.3574412Z                                                               ^
2025-10-02T06:54:20.3574683Z src/qt/widgets/SidebarWidget.cpp:172:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3574958Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-10-02T06:54:20.3575043Z                                                                 ^
2025-10-02T06:54:20.3575315Z src/qt/widgets/SidebarWidget.cpp:172:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3575484Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-10-02T06:54:20.3575578Z                                                                        ^
2025-10-02T06:54:20.3575840Z src/qt/widgets/SidebarWidget.cpp:180:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3576186Z             branchText += QString(" (%1↑ %2↓)")
2025-10-02T06:54:20.3576464Z src/qt/widgets/SidebarWidget.cpp:181:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3576551Z                          .arg(status.aheadCount)
2025-10-02T06:54:20.3576631Z                                                 ^
2025-10-02T06:54:20.3576900Z src/qt/widgets/SidebarWidget.cpp:193:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3577000Z void SidebarWidget::updateStatusCounts()
2025-10-02T06:54:20.3577077Z                                         ^
2025-10-02T06:54:20.3577344Z src/qt/widgets/SidebarWidget.cpp:199:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3577660Z     for (const auto &change : m_currentStatus.changes) {
2025-10-02T06:54:20.3577735Z                    ^
2025-10-02T06:54:20.3577999Z src/qt/widgets/SidebarWidget.cpp:199:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3578113Z     for (const auto &change : m_currentStatus.changes) {
2025-10-02T06:54:20.3578177Z                      ^
2025-10-02T06:54:20.3578450Z src/qt/widgets/SidebarWidget.cpp:232:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3578580Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-10-02T06:54:20.3578655Z                                                  ^
2025-10-02T06:54:20.3578925Z src/qt/widgets/SidebarWidget.cpp:232:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3579050Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-10-02T06:54:20.3579126Z                                                    ^
2025-10-02T06:54:20.3579509Z src/qt/widgets/SidebarWidget.cpp:232:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3579640Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-10-02T06:54:20.3579719Z                                                         ^
2025-10-02T06:54:20.3579983Z src/qt/widgets/SidebarWidget.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3580052Z #include <QWidget>
2025-10-02T06:54:20.3580112Z ^
2025-10-02T06:54:20.3580373Z src/qt/widgets/SidebarWidget.h:15:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3580465Z class SidebarWidget : public QWidget
2025-10-02T06:54:20.3580535Z                                     ^
2025-10-02T06:54:20.3580795Z src/qt/widgets/SidebarWidget.h:17:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3580867Z     Q_OBJECT
2025-10-02T06:54:20.3580927Z             ^
2025-10-02T06:54:20.3581181Z src/qt/widgets/SidebarWidget.h:20:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3581302Z     explicit SidebarWidget(QWidget *parent = nullptr);
2025-10-02T06:54:20.3581375Z                                   ^
2025-10-02T06:54:20.3581624Z src/qt/widgets/SidebarWidget.h:20:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3581737Z     explicit SidebarWidget(QWidget *parent = nullptr);
2025-10-02T06:54:20.3581811Z                                     ^
2025-10-02T06:54:20.3582063Z src/qt/widgets/SidebarWidget.h:22:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3582169Z     void setRepositoryPath(const QString &path);
2025-10-02T06:54:20.3582242Z                                         ^
2025-10-02T06:54:20.3582493Z src/qt/widgets/SidebarWidget.h:22:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3582594Z     void setRepositoryPath(const QString &path);
2025-10-02T06:54:20.3582677Z                                           ^
2025-10-02T06:54:20.3582941Z src/qt/widgets/SidebarWidget.h:23:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3583087Z     void updateStatus(const VersionTools::GitStatus &status);
2025-10-02T06:54:20.3583164Z                                                    ^
2025-10-02T06:54:20.3583423Z src/qt/widgets/SidebarWidget.h:23:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3583555Z     void updateStatus(const VersionTools::GitStatus &status);
2025-10-02T06:54:20.3583631Z                                                      ^
2025-10-02T06:54:20.3583887Z src/qt/widgets/SidebarWidget.h:23:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3584016Z     void updateStatus(const VersionTools::GitStatus &status);
2025-10-02T06:54:20.3584096Z                                                              ^
2025-10-02T06:54:20.3584361Z src/qt/widgets/SidebarWidget.h:26:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3584539Z     void selectionChanged(int index);
2025-10-02T06:54:20.3584608Z                                      ^
2025-10-02T06:54:20.3584971Z src/qt/widgets/SidebarWidget.h:29:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3585070Z     void onItemClicked(QListWidgetItem *item);
2025-10-02T06:54:20.3585138Z                                       ^
2025-10-02T06:54:20.3585390Z src/qt/widgets/SidebarWidget.h:29:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3585492Z     void onItemClicked(QListWidgetItem *item);
2025-10-02T06:54:20.3585560Z                                         ^
2025-10-02T06:54:20.3585812Z src/qt/widgets/SidebarWidget.h:29:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3585914Z     void onItemClicked(QListWidgetItem *item);
2025-10-02T06:54:20.3586106Z                                               ^
2025-10-02T06:54:20.3586363Z src/qt/widgets/SidebarWidget.h:36:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3586444Z     QVBoxLayout *m_layout;
2025-10-02T06:54:20.3586505Z                ^
2025-10-02T06:54:20.3586755Z src/qt/widgets/SidebarWidget.h:36:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3586831Z     QVBoxLayout *m_layout;
2025-10-02T06:54:20.3586898Z                  ^
2025-10-02T06:54:20.3587150Z src/qt/widgets/SidebarWidget.h:37:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3587231Z     QLabel *m_repositoryLabel;
2025-10-02T06:54:20.3587298Z           ^
2025-10-02T06:54:20.3587550Z src/qt/widgets/SidebarWidget.h:37:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3587628Z     QLabel *m_repositoryLabel;
2025-10-02T06:54:20.3587697Z             ^
2025-10-02T06:54:20.3587957Z src/qt/widgets/SidebarWidget.h:38:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3588029Z     QLabel *m_branchLabel;
2025-10-02T06:54:20.3588089Z           ^
2025-10-02T06:54:20.3588345Z src/qt/widgets/SidebarWidget.h:38:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3588418Z     QLabel *m_branchLabel;
2025-10-02T06:54:20.3588477Z             ^
2025-10-02T06:54:20.3588737Z src/qt/widgets/SidebarWidget.h:39:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3588823Z     QListWidget *m_navigationList;
2025-10-02T06:54:20.3588883Z                ^
2025-10-02T06:54:20.3589151Z src/qt/widgets/SidebarWidget.h:39:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3589241Z     QListWidget *m_navigationList;
2025-10-02T06:54:20.3589301Z                  ^
2025-10-02T06:54:20.3589558Z src/qt/widgets/SidebarWidget.h:40:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3589640Z     QLabel *m_statusLabel;
2025-10-02T06:54:20.3589699Z           ^
2025-10-02T06:54:20.3589952Z src/qt/widgets/SidebarWidget.h:40:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3590029Z     QLabel *m_statusLabel;
2025-10-02T06:54:20.3590088Z             ^
2025-10-02T06:54:20.3590338Z src/qt/widgets/SidebarWidget.h:46:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3590418Z     QListWidgetItem *m_changesItem;
2025-10-02T06:54:20.3590486Z                    ^
2025-10-02T06:54:20.3590738Z src/qt/widgets/SidebarWidget.h:46:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3590817Z     QListWidgetItem *m_changesItem;
2025-10-02T06:54:20.3590885Z                      ^
2025-10-02T06:54:20.3591135Z src/qt/widgets/SidebarWidget.h:47:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3591221Z     QListWidgetItem *m_historyItem;
2025-10-02T06:54:20.3591400Z                    ^
2025-10-02T06:54:20.3591658Z src/qt/widgets/SidebarWidget.h:47:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3591738Z     QListWidgetItem *m_historyItem;
2025-10-02T06:54:20.3591800Z                      ^
2025-10-02T06:54:20.3592058Z src/qt/widgets/SidebarWidget.h:48:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3592138Z     QListWidgetItem *m_branchesItem;
2025-10-02T06:54:20.3592199Z                    ^
2025-10-02T06:54:20.3592455Z src/qt/widgets/SidebarWidget.h:48:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3592538Z     QListWidgetItem *m_branchesItem;
2025-10-02T06:54:20.3592600Z                      ^
2025-10-02T06:54:20.3592850Z src/qt/widgets/SidebarWidget.h:49:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3593011Z     QListWidgetItem *m_remotesItem;
2025-10-02T06:54:20.3593081Z                    ^
2025-10-02T06:54:20.3593331Z src/qt/widgets/SidebarWidget.h:49:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3593416Z     QListWidgetItem *m_remotesItem;
2025-10-02T06:54:20.3593480Z                      ^
2025-10-02T06:54:20.3593729Z src/qt/widgets/SidebarWidget.h:50:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3593816Z     QListWidgetItem *m_tagsItem;
2025-10-02T06:54:20.3593877Z                    ^
2025-10-02T06:54:20.3594128Z src/qt/widgets/SidebarWidget.h:50:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3594208Z     QListWidgetItem *m_tagsItem;
2025-10-02T06:54:20.3594275Z                      ^
2025-10-02T06:54:20.3594525Z src/qt/widgets/SidebarWidget.h:51:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3594603Z     QListWidgetItem *m_stashesItem;
2025-10-02T06:54:20.3594677Z                    ^
2025-10-02T06:54:20.3595028Z src/qt/widgets/SidebarWidget.h:51:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3595109Z     QListWidgetItem *m_stashesItem;
2025-10-02T06:54:20.3595180Z                      ^
2025-10-02T06:54:20.3595380Z src/qt/main.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3595455Z #include <QApplication>
2025-10-02T06:54:20.3595516Z ^
2025-10-02T06:54:20.3595716Z src/qt/main.cpp:8:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3595792Z int main(int argc, char *argv[])
2025-10-02T06:54:20.3595856Z                        ^
2025-10-02T06:54:20.3596049Z src/qt/main.cpp:8:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3596124Z int main(int argc, char *argv[])
2025-10-02T06:54:20.3596187Z                          ^
2025-10-02T06:54:20.3596378Z src/qt/main.cpp:8:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3596461Z int main(int argc, char *argv[])
2025-10-02T06:54:20.3596530Z                                 ^
2025-10-02T06:54:20.3596722Z src/qt/main.cpp:10:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3596808Z     QApplication app(argc, argv);
2025-10-02T06:54:20.3596873Z                                  ^
2025-10-02T06:54:20.3597062Z src/qt/main.cpp:16:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3597184Z     app.setOrganizationDomain("versiontools.dev");
2025-10-02T06:54:20.3597260Z                                                   ^
2025-10-02T06:54:20.3597449Z src/qt/main.cpp:19:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3597590Z     app.setWindowIcon(QIcon(":/icons/versiontools.png"));
2025-10-02T06:54:20.3597679Z                                                          ^
2025-10-02T06:54:20.3597873Z src/qt/main.cpp:22:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3598091Z     ThemeManager::applyModernTheme(&app);
2025-10-02T06:54:20.3598170Z                                          ^
2025-10-02T06:54:20.3598362Z src/qt/main.cpp:26:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3598428Z     window.show();
2025-10-02T06:54:20.3598494Z                   ^
2025-10-02T06:54:20.3598773Z src/core/GitUtils.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3598840Z #include <string>
2025-10-02T06:54:20.3598905Z ^
2025-10-02T06:54:20.3599123Z src/core/GitUtils.h:12:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3599191Z class GitUtils {
2025-10-02T06:54:20.3599250Z                 ^
2025-10-02T06:54:20.3599464Z src/core/GitUtils.h:23:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3599697Z     static std::string toUpper(const std::string& str);
2025-10-02T06:54:20.3599792Z                                                        ^
2025-10-02T06:54:20.3600014Z src/core/GitUtils.h:32:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3600236Z     static std::string makeRelativePath(const std::string& from, const std::string& to);
2025-10-02T06:54:20.3600323Z                                                                                         ^
2025-10-02T06:54:20.3600535Z src/core/GitUtils.h:41:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3600655Z     static std::string formatFileSize(size_t bytes);
2025-10-02T06:54:20.3600733Z                                                     ^
2025-10-02T06:54:20.3600943Z src/core/GitUtils.h:48:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3601120Z     static std::string getRemoteFromBranch(const std::string& branchName);
2025-10-02T06:54:20.3601208Z                                                                           ^
2025-10-02T06:54:20.3601419Z src/core/GitUtils.h:55:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3601522Z     static bool isSshUrl(const std::string& url);
2025-10-02T06:54:20.3601602Z                                                  ^
2025-10-02T06:54:20.3601807Z src/core/GitUtils.h:61:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3601953Z     static std::string extractHunkHeader(const std::string& line);
2025-10-02T06:54:20.3602047Z                                                                   ^
2025-10-02T06:54:20.3602257Z src/core/GitUtils.h:66:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3602448Z     static std::vector<std::string> parseGitConfigLine(const std::string& line);
2025-10-02T06:54:20.3602537Z                                                                                 ^
2025-10-02T06:54:20.3602766Z src/core/GitUtils.h:72:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3602928Z     static std::string detectFileEncoding(const std::string& filePath);
2025-10-02T06:54:20.3603015Z                                                                        ^
2025-10-02T06:54:20.3603229Z src/core/GitUtils.h:77:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3603414Z     static std::string formatDuration(const std::chrono::milliseconds& duration);
2025-10-02T06:54:20.3603503Z                                                                                  ^
2025-10-02T06:54:20.3603718Z src/core/GitUtils.h:85:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3603780Z }
2025-10-02T06:54:20.3603838Z  ^
2025-10-02T06:54:20.3852325Z src/core/GitTypes.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3852518Z #include <string>
2025-10-02T06:54:20.3853238Z ^
2025-10-02T06:54:20.3853850Z src/core/GitTypes.h:11:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3854044Z enum class FileStatus {
2025-10-02T06:54:20.3854207Z                        ^
2025-10-02T06:54:20.3854970Z src/core/GitTypes.h:12:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3855138Z     Untracked,
2025-10-02T06:54:20.3855292Z               ^
2025-10-02T06:54:20.3855863Z src/core/GitTypes.h:13:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3856022Z     Modified,
2025-10-02T06:54:20.3856175Z              ^
2025-10-02T06:54:20.3856729Z src/core/GitTypes.h:14:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3856892Z     Added,
2025-10-02T06:54:20.3857046Z           ^
2025-10-02T06:54:20.3857597Z src/core/GitTypes.h:15:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3857760Z     Deleted,
2025-10-02T06:54:20.3858141Z             ^
2025-10-02T06:54:20.3858697Z src/core/GitTypes.h:16:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3858861Z     Renamed,
2025-10-02T06:54:20.3859014Z             ^
2025-10-02T06:54:20.3859566Z src/core/GitTypes.h:17:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3859723Z     Copied,
2025-10-02T06:54:20.3859883Z            ^
2025-10-02T06:54:20.3860429Z src/core/GitTypes.h:18:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3860595Z     Conflicted,
2025-10-02T06:54:20.3860746Z                ^
2025-10-02T06:54:20.3861086Z src/core/GitTypes.h:19:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3861184Z     Ignored
2025-10-02T06:54:20.3861283Z            ^
2025-10-02T06:54:20.3861558Z src/core/GitTypes.h:22:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3861659Z enum class ChangeType {
2025-10-02T06:54:20.3861745Z                        ^
2025-10-02T06:54:20.3862020Z src/core/GitTypes.h:23:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3862099Z     Addition,
2025-10-02T06:54:20.3862175Z              ^
2025-10-02T06:54:20.3862444Z src/core/GitTypes.h:24:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3862529Z     Deletion,
2025-10-02T06:54:20.3862605Z              ^
2025-10-02T06:54:20.3862879Z src/core/GitTypes.h:25:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3862967Z     Modification
2025-10-02T06:54:20.3863043Z                 ^
2025-10-02T06:54:20.3863312Z src/core/GitTypes.h:37:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3863483Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-10-02T06:54:20.3863579Z                           ^
2025-10-02T06:54:20.3863857Z src/core/GitTypes.h:37:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3864018Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-10-02T06:54:20.3864126Z                                                           ^
2025-10-02T06:54:20.3864411Z src/core/GitTypes.h:117:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3864602Z     std::string date;  // Date string for display
2025-10-02T06:54:20.3864687Z                      ^
2025-10-02T06:54:20.3865110Z src/core/GitTypes.h:146:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3865187Z }
2025-10-02T06:54:20.3865266Z  ^
2025-10-02T06:54:20.3903876Z src/core/GitManager.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3904035Z #include "GitTypes.h"
2025-10-02T06:54:20.3904157Z ^
2025-10-02T06:54:20.3904661Z src/core/GitManager.h:12:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3905354Z enum class GitCommandResult {
2025-10-02T06:54:20.3905495Z                              ^
2025-10-02T06:54:20.3905992Z src/core/GitManager.h:13:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3906123Z     Success,
2025-10-02T06:54:20.3906248Z             ^
2025-10-02T06:54:20.3906732Z src/core/GitManager.h:14:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3906860Z     Failed,
2025-10-02T06:54:20.3906985Z            ^
2025-10-02T06:54:20.3907464Z src/core/GitManager.h:15:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3907589Z     NotFound,
2025-10-02T06:54:20.3907714Z              ^
2025-10-02T06:54:20.3908191Z src/core/GitManager.h:16:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3908353Z     InvalidRepository,
2025-10-02T06:54:20.3908479Z                       ^
2025-10-02T06:54:20.3909163Z src/core/GitManager.h:17:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3909321Z     NetworkError,
2025-10-02T06:54:20.3909447Z                  ^
2025-10-02T06:54:20.3909917Z src/core/GitManager.h:18:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3910072Z     PermissionDenied,
2025-10-02T06:54:20.3910240Z                      ^
2025-10-02T06:54:20.3910730Z src/core/GitManager.h:19:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3910869Z     Cancelled
2025-10-02T06:54:20.3910994Z              ^
2025-10-02T06:54:20.3911466Z src/core/GitManager.h:26:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3911579Z     int exitCode = 0;
2025-10-02T06:54:20.3911692Z                      ^
2025-10-02T06:54:20.3912083Z src/core/GitManager.h:28:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3912417Z     bool isSuccess() const { return result == GitCommandResult::Success; }
2025-10-02T06:54:20.3912541Z                             ^
2025-10-02T06:54:20.3912930Z src/core/GitManager.h:28:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3913216Z     bool isSuccess() const { return result == GitCommandResult::Success; }
2025-10-02T06:54:20.3913362Z                                                                         ^
2025-10-02T06:54:20.3913749Z src/core/GitManager.h:29:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3913998Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-10-02T06:54:20.3914109Z                            ^
2025-10-02T06:54:20.3914500Z src/core/GitManager.h:29:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3914883Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-10-02T06:54:20.3915023Z                                                                    ^
2025-10-02T06:54:20.3915428Z src/core/GitManager.h:35:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3915545Z class GitManager {
2025-10-02T06:54:20.3915653Z                   ^
2025-10-02T06:54:20.3916042Z src/core/GitManager.h:42:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3916446Z     GitOperationResult cloneRepository(const std::string& url, const std::string& path, 
2025-10-02T06:54:20.3916591Z                                                                                        ^
2025-10-02T06:54:20.3916981Z src/core/GitManager.h:45:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3917204Z     bool isValidRepository(const std::string& path) const;
2025-10-02T06:54:20.3917332Z                                                           ^
2025-10-02T06:54:20.3917720Z src/core/GitManager.h:51:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3918090Z     std::string getRepositoryPath() const;
2025-10-02T06:54:20.3918210Z                                           ^
2025-10-02T06:54:20.3918591Z src/core/GitManager.h:60:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3918880Z     GitOperationResult commitWithFiles(const std::string& message, 
2025-10-02T06:54:20.3919012Z                                                                   ^
2025-10-02T06:54:20.3919397Z src/core/GitManager.h:61:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3919576Z                                      const std::vector<std::string>& files);
2025-10-02T06:54:20.3919716Z                                                                             ^
2025-10-02T06:54:20.3920102Z src/core/GitManager.h:64:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3920343Z     std::vector<GitCommit> getCommitHistory(int maxCount = 100, 
2025-10-02T06:54:20.3920645Z                                                                ^
2025-10-02T06:54:20.3921034Z src/core/GitManager.h:65:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3921246Z                                           GitLogOptions options = GitLogOptions::None,
2025-10-02T06:54:20.3921413Z                                                                                       ^
2025-10-02T06:54:20.3921798Z src/core/GitManager.h:66:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3921970Z                                           const std::string& branch = "",
2025-10-02T06:54:20.3922109Z                                                                          ^
2025-10-02T06:54:20.3922485Z src/core/GitManager.h:69:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3922752Z     std::vector<GitCommit> getCommitRange(const std::string& fromHash, 
2025-10-02T06:54:20.3922892Z                                                                       ^
2025-10-02T06:54:20.3923274Z src/core/GitManager.h:70:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3923444Z                                         const std::string& toHash) const;
2025-10-02T06:54:20.3923576Z                                                                          ^
2025-10-02T06:54:20.3923952Z src/core/GitManager.h:74:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3924202Z     GitOperationResult createBranch(const std::string& name, 
2025-10-02T06:54:20.3924329Z                                                             ^
2025-10-02T06:54:20.3924826Z src/core/GitManager.h:80:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3925100Z     GitOperationResult rebaseBranch(const std::string& branchName);
2025-10-02T06:54:20.3925239Z                                                                    ^
2025-10-02T06:54:20.3925631Z src/core/GitManager.h:87:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3925900Z     GitOperationResult fetch(const std::string& remote = "origin", 
2025-10-02T06:54:20.3926035Z                                                                   ^
2025-10-02T06:54:20.3926428Z src/core/GitManager.h:89:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3926693Z     GitOperationResult pull(const std::string& remote = "origin", 
2025-10-02T06:54:20.3926831Z                                                                  ^
2025-10-02T06:54:20.3927212Z src/core/GitManager.h:90:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3927370Z                           const std::string& branch = "",
2025-10-02T06:54:20.3927502Z                                                          ^
2025-10-02T06:54:20.3927880Z src/core/GitManager.h:92:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3928306Z     GitOperationResult push(const std::string& remote = "origin", 
2025-10-02T06:54:20.3928439Z                                                                  ^
2025-10-02T06:54:20.3928821Z src/core/GitManager.h:93:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3928970Z                           const std::string& branch = "",
2025-10-02T06:54:20.3929093Z                                                          ^
2025-10-02T06:54:20.3929485Z src/core/GitManager.h:94:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3929615Z                           bool force = false,
2025-10-02T06:54:20.3929733Z                                              ^
2025-10-02T06:54:20.3930116Z src/core/GitManager.h:95:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3930307Z                           ProgressCallback progressCallback = nullptr);
2025-10-02T06:54:20.3930595Z                                                                        ^
2025-10-02T06:54:20.3931003Z src/core/GitManager.h:102:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3931249Z     GitDiff getDiffBetweenCommits(const std::string& fromHash, 
2025-10-02T06:54:20.3931376Z                                                               ^
2025-10-02T06:54:20.3931777Z src/core/GitManager.h:103:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3931924Z                                 const std::string& toHash,
2025-10-02T06:54:20.3932120Z                                                           ^
2025-10-02T06:54:20.3932516Z src/core/GitManager.h:104:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3932686Z                                 const std::string& filePath = "") const;
2025-10-02T06:54:20.3932830Z                                                                         ^
2025-10-02T06:54:20.3933222Z src/core/GitManager.h:108:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3933645Z     GitOperationResult createTag(const std::string& name, const std::string& message = "",
2025-10-02T06:54:20.3933793Z                                                                                           ^
2025-10-02T06:54:20.3934179Z src/core/GitManager.h:111:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3934476Z     GitOperationResult pushTags(const std::string& remote = "origin");
2025-10-02T06:54:20.3934609Z                                                                       ^
2025-10-02T06:54:20.3935140Z src/core/GitManager.h:119:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3935291Z     GitOperationResult stashClear();
2025-10-02T06:54:20.3935409Z                                     ^
2025-10-02T06:54:20.3935802Z src/core/GitManager.h:122:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3936169Z     GitOperationResult setConfig(const std::string& key, const std::string& value, 
2025-10-02T06:54:20.3936328Z                                                                                   ^
2025-10-02T06:54:20.3936711Z src/core/GitManager.h:125:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3937081Z     GitOperationResult setUserInfo(const std::string& name, const std::string& email,
2025-10-02T06:54:20.3937222Z                                                                                      ^
2025-10-02T06:54:20.3937607Z src/core/GitManager.h:126:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3937753Z                                  bool global = false);
2025-10-02T06:54:20.3937880Z                                                       ^
2025-10-02T06:54:20.3938116Z src/core/GitManager.h:132:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3938344Z     std::string getLastError() const;
2025-10-02T06:54:20.3938414Z                                      ^
2025-10-02T06:54:20.3938630Z src/core/GitManager.h:135:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3938834Z     std::future<GitOperationResult> cloneRepositoryAsync(const std::string& url, 
2025-10-02T06:54:20.3938918Z                                                                                 ^
2025-10-02T06:54:20.3939146Z src/core/GitManager.h:136:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3939253Z                                                        const std::string& path,
2025-10-02T06:54:20.3939343Z                                                                                ^
2025-10-02T06:54:20.3939567Z src/core/GitManager.h:138:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3939879Z     std::future<GitOperationResult> fetchAsync(const std::string& remote = "origin",
2025-10-02T06:54:20.3939973Z                                                                                     ^
2025-10-02T06:54:20.3940206Z src/core/GitManager.h:140:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3940404Z     std::future<GitOperationResult> pullAsync(const std::string& remote = "origin",
2025-10-02T06:54:20.3940493Z                                                                                    ^
2025-10-02T06:54:20.3940715Z src/core/GitManager.h:141:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3940816Z                                             const std::string& branch = "",
2025-10-02T06:54:20.3940907Z                                                                            ^
2025-10-02T06:54:20.3941136Z src/core/GitManager.h:143:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3941343Z     std::future<GitOperationResult> pushAsync(const std::string& remote = "origin",
2025-10-02T06:54:20.3941434Z                                                                                    ^
2025-10-02T06:54:20.3941659Z src/core/GitManager.h:144:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3941760Z                                             const std::string& branch = "",
2025-10-02T06:54:20.3941848Z                                                                            ^
2025-10-02T06:54:20.3942068Z src/core/GitManager.h:145:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3942158Z                                             bool force = false,
2025-10-02T06:54:20.3942244Z                                                                ^
2025-10-02T06:54:20.3942463Z src/core/GitManager.h:146:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3942591Z                                             ProgressCallback progressCallback = nullptr);
2025-10-02T06:54:20.3942685Z                                                                                          ^
2025-10-02T06:54:20.3942908Z src/core/GitManager.h:150:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3943038Z     void setProgressCallback(ProgressCallback callback);
2025-10-02T06:54:20.3943116Z                                                         ^
2025-10-02T06:54:20.3943341Z src/core/GitManager.h:154:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3943427Z     std::unique_ptr<Impl> pImpl;
2025-10-02T06:54:20.3943495Z                                 ^
2025-10-02T06:54:20.3943718Z src/core/GitManager.h:156:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3943914Z     GitOperationResult executeGitCommand(const std::vector<std::string>& args,
2025-10-02T06:54:20.3944003Z                                                                               ^
2025-10-02T06:54:20.3944316Z src/core/GitManager.h:157:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3944419Z                                        const std::string& workingDir = "",
2025-10-02T06:54:20.3944501Z                                                                           ^
2025-10-02T06:54:20.3944860Z src/core/GitManager.h:158:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3945002Z                                        ProgressCallback progressCallback = nullptr) const;
2025-10-02T06:54:20.3945092Z                                                                                           ^
2025-10-02T06:54:20.3945309Z src/core/GitManager.h:160:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3945469Z     std::vector<std::string> parseGitOutput(const std::string& output, 
2025-10-02T06:54:20.3945667Z                                                                       ^
2025-10-02T06:54:20.3945894Z src/core/GitManager.h:168:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.3945960Z }
2025-10-02T06:54:20.3946020Z  ^
2025-10-02T06:54:20.4125862Z src/core/GitManager.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4126078Z #include "GitManager.h"
2025-10-02T06:54:20.4126202Z ^
2025-10-02T06:54:20.4126711Z src/core/GitManager.cpp:20:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4126974Z class GitManager::Impl {
2025-10-02T06:54:20.4127107Z                         ^
2025-10-02T06:54:20.4127606Z src/core/GitManager.cpp:59:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4127913Z GitManager::GitManager(const std::string& repositoryPath) 
2025-10-02T06:54:20.4128077Z                                                          ^
2025-10-02T06:54:20.4128614Z src/core/GitManager.cpp:60:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4128849Z     : pImpl(std::make_unique<Impl>(repositoryPath)) {
2025-10-02T06:54:20.4129011Z                                                      ^
2025-10-02T06:54:20.4129490Z src/core/GitManager.cpp:70:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4129641Z     args.push_back(path);
2025-10-02T06:54:20.4129780Z                          ^
2025-10-02T06:54:20.4130266Z src/core/GitManager.cpp:79:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4130824Z GitOperationResult GitManager::cloneRepository(const std::string& url, const std::string& path,
2025-10-02T06:54:20.4131039Z                                                                                                ^
2025-10-02T06:54:20.4131551Z src/core/GitManager.cpp:81:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4131879Z     std::vector<std::string> args = {"clone", "--progress", url, path};
2025-10-02T06:54:20.4132034Z                                                                        ^
2025-10-02T06:54:20.4132472Z src/core/GitManager.cpp:93:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4132587Z     }
2025-10-02T06:54:20.4132701Z      ^
2025-10-02T06:54:20.4133149Z src/core/GitManager.cpp:118:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4133719Z     return std::filesystem::exists(headPath) && std::filesystem::exists(objectsPath) && std::filesystem::exists(refsPath);
2025-10-02T06:54:20.4133886Z                                                                                        ^
2025-10-02T06:54:20.4134328Z src/core/GitManager.cpp:155:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4134435Z     }
2025-10-02T06:54:20.4134545Z      ^
2025-10-02T06:54:20.4135149Z src/core/GitManager.cpp:158:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4135734Z     auto lines = parseGitOutput(result.output);
2025-10-02T06:54:20.4135861Z                                                ^
2025-10-02T06:54:20.4136309Z src/core/GitManager.cpp:161:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4136490Z         std::string branchLine = lines[0].substr(3);
2025-10-02T06:54:20.4136623Z                                                     ^
2025-10-02T06:54:20.4137073Z src/core/GitManager.cpp:165:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4137208Z         std::smatch matches;
2025-10-02T06:54:20.4137327Z                             ^
2025-10-02T06:54:20.4137765Z src/core/GitManager.cpp:171:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4137882Z             }
2025-10-02T06:54:20.4137993Z              ^
2025-10-02T06:54:20.4138601Z src/core/GitManager.cpp:177:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4138768Z                 std::sregex_iterator end;
2025-10-02T06:54:20.4138899Z                                          ^
2025-10-02T06:54:20.4139331Z src/core/GitManager.cpp:188:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4139446Z     }
2025-10-02T06:54:20.4139555Z      ^
2025-10-02T06:54:20.4139984Z src/core/GitManager.cpp:206:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4140095Z     }
2025-10-02T06:54:20.4140208Z      ^
2025-10-02T06:54:20.4140641Z src/core/GitManager.cpp:215:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4140748Z     }
2025-10-02T06:54:20.4140860Z      ^
2025-10-02T06:54:20.4141290Z src/core/GitManager.cpp:221:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4141399Z     }
2025-10-02T06:54:20.4141509Z      ^
2025-10-02T06:54:20.4141964Z src/core/GitManager.cpp:227:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4142075Z     }
2025-10-02T06:54:20.4142181Z      ^
2025-10-02T06:54:20.4142590Z src/core/GitManager.cpp:239:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4142688Z     }
2025-10-02T06:54:20.4142784Z      ^
2025-10-02T06:54:20.4143176Z src/core/GitManager.cpp:242:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4143379Z     args.insert(args.end(), files.begin(), files.end());
2025-10-02T06:54:20.4143532Z                                                         ^
2025-10-02T06:54:20.4143928Z src/core/GitManager.cpp:254:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4144025Z     }
2025-10-02T06:54:20.4144121Z      ^
2025-10-02T06:54:20.4144518Z src/core/GitManager.cpp:260:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4144850Z     args.insert(args.end(), files.begin(), files.end());
2025-10-02T06:54:20.4144976Z                                                         ^
2025-10-02T06:54:20.4145370Z src/core/GitManager.cpp:268:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4145472Z     }
2025-10-02T06:54:20.4145570Z      ^
2025-10-02T06:54:20.4145963Z src/core/GitManager.cpp:271:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4146153Z     args.insert(args.end(), files.begin(), files.end());
2025-10-02T06:54:20.4146274Z                                                         ^
2025-10-02T06:54:20.4146661Z src/core/GitManager.cpp:284:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4146762Z     }
2025-10-02T06:54:20.4146859Z      ^
2025-10-02T06:54:20.4147251Z src/core/GitManager.cpp:289:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4147595Z GitOperationResult GitManager::commitWithFiles(const std::string& message, 
2025-10-02T06:54:20.4147905Z                                                                           ^
2025-10-02T06:54:20.4148301Z src/core/GitManager.cpp:295:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4148398Z     }
2025-10-02T06:54:20.4148500Z      ^
2025-10-02T06:54:20.4148891Z src/core/GitManager.cpp:301:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4149147Z std::vector<GitCommit> GitManager::getCommitHistory(int maxCount,
2025-10-02T06:54:20.4149288Z                                                                  ^
2025-10-02T06:54:20.4149682Z src/core/GitManager.cpp:302:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4149838Z                                                    GitLogOptions options,
2025-10-02T06:54:20.4149973Z                                                                          ^
2025-10-02T06:54:20.4150557Z src/core/GitManager.cpp:303:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4150723Z                                                    const std::string& branch,
2025-10-02T06:54:20.4150860Z                                                                              ^
2025-10-02T06:54:20.4151261Z src/core/GitManager.cpp:305:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4151598Z     std::vector<std::string> args = {"log", "--pretty=format:%H|%h|%an|%ae|%s|%ct|%P", "-z"};
2025-10-02T06:54:20.4151742Z                                                                                              ^
2025-10-02T06:54:20.4152144Z src/core/GitManager.cpp:309:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4152242Z     }
2025-10-02T06:54:20.4152338Z      ^
2025-10-02T06:54:20.4152797Z src/core/GitManager.cpp:313:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4152903Z     }
2025-10-02T06:54:20.4153000Z      ^
2025-10-02T06:54:20.4153392Z src/core/GitManager.cpp:317:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4153495Z     }
2025-10-02T06:54:20.4153589Z      ^
2025-10-02T06:54:20.4154001Z src/core/GitManager.cpp:321:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4154097Z     }
2025-10-02T06:54:20.4154193Z      ^
2025-10-02T06:54:20.4154595Z src/core/GitManager.cpp:325:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4154819Z     }
2025-10-02T06:54:20.4154924Z      ^
2025-10-02T06:54:20.4155320Z src/core/GitManager.cpp:330:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4155423Z     }
2025-10-02T06:54:20.4155492Z      ^
2025-10-02T06:54:20.4155735Z src/core/GitManager.cpp:351:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4155957Z     auto result = executeGitCommand({"show", "--pretty=format:%H|%h|%an|%ae|%s|%B|%ct|%P", 
2025-10-02T06:54:20.4156046Z                                                                                           ^
2025-10-02T06:54:20.4156274Z src/core/GitManager.cpp:355:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4156338Z     }
2025-10-02T06:54:20.4156399Z      ^
2025-10-02T06:54:20.4156635Z src/core/GitManager.cpp:360:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4156873Z GitOperationResult GitManager::executeGitCommand(const std::vector<std::string>& args,
2025-10-02T06:54:20.4156966Z                                                                                       ^
2025-10-02T06:54:20.4157199Z src/core/GitManager.cpp:361:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4157303Z                                                const std::string& workingDir,
2025-10-02T06:54:20.4157532Z                                                                              ^
2025-10-02T06:54:20.4157764Z src/core/GitManager.cpp:364:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4157938Z     std::string dir = workingDir.empty() ? pImpl->repositoryPath : workingDir;
2025-10-02T06:54:20.4158027Z                                                                               ^
2025-10-02T06:54:20.4158256Z src/core/GitManager.cpp:367:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4158369Z     auto result = cmd.execute(gitCommand, args, dir);
2025-10-02T06:54:20.4158449Z                                                      ^
2025-10-02T06:54:20.4158678Z src/core/GitManager.cpp:378:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4158738Z     }
2025-10-02T06:54:20.4158796Z      ^
2025-10-02T06:54:20.4159131Z src/core/GitManager.cpp:383:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4159324Z std::vector<std::string> GitManager::parseGitOutput(const std::string& output, 
2025-10-02T06:54:20.4159404Z                                                                               ^
2025-10-02T06:54:20.4159637Z src/core/GitManager.cpp:400:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4159789Z     commit.message = parts[4];  // Use the subject as the full message
2025-10-02T06:54:20.4159859Z                               ^
2025-10-02T06:54:20.4160093Z src/core/GitManager.cpp:501:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4160329Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url, 
2025-10-02T06:54:20.4160414Z                                                                                         ^
2025-10-02T06:54:20.4160668Z src/core/GitManager.cpp:502:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4160778Z                                                                const std::string& path,
2025-10-02T06:54:20.4160862Z                                                                                        ^
2025-10-02T06:54:20.4161097Z src/core/GitManager.cpp:504:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4161282Z     return std::async(std::launch::async, [this, url, path, progressCallback]() {
2025-10-02T06:54:20.4161371Z                                          ^
2025-10-02T06:54:20.4161610Z src/core/GitManager.cpp:504:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4161784Z     return std::async(std::launch::async, [this, url, path, progressCallback]() {
2025-10-02T06:54:20.4161877Z                                                                                  ^
2025-10-02T06:54:20.4162115Z src/core/GitManager.cpp:505:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4162247Z         return cloneRepository(url, path, progressCallback);
2025-10-02T06:54:20.4162328Z                                                             ^
2025-10-02T06:54:20.4162567Z src/core/GitManager.cpp:520:117: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4163030Z     std::vector<std::string> args = {"for-each-ref", "--format=%(refname:short)|%(objectname:short)|%(committerdate:iso)|%(upstream:short)|%(upstream:track)|%(subject)"};
2025-10-02T06:54:20.4163134Z                                                                                                                     ^
2025-10-02T06:54:20.4163377Z src/core/GitManager.cpp:536:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4163457Z         if (line.empty()) continue;
2025-10-02T06:54:20.4163526Z                          ^
2025-10-02T06:54:20.4163759Z src/core/GitManager.cpp:539:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4163940Z         if (parts.size() < 6) continue;
2025-10-02T06:54:20.4164007Z                              ^
2025-10-02T06:54:20.4164243Z src/core/GitManager.cpp:645:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4164325Z         if (line.empty()) continue;
2025-10-02T06:54:20.4164388Z                          ^
2025-10-02T06:54:20.4164615Z src/core/GitManager.cpp:648:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4164848Z         if (parts.size() < 4) continue;
2025-10-02T06:54:20.4164916Z                              ^
2025-10-02T06:54:20.4165147Z src/core/GitManager.cpp:769:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4165220Z         if (line.empty()) continue;
2025-10-02T06:54:20.4165288Z                          ^
2025-10-02T06:54:20.4165517Z src/core/GitManager.cpp:796:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4165788Z             } else if (line.substr(0, 4) == "diff" || line.substr(0, 5) == "index" ||
2025-10-02T06:54:20.4165883Z                                                                                      ^
2025-10-02T06:54:20.4166117Z src/core/GitManager.cpp:797:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4166239Z                       line.substr(0, 3) == "+++" || line.substr(0, 3) == "---") {
2025-10-02T06:54:20.4166323Z                                                    ^
2025-10-02T06:54:20.4166552Z src/core/GitManager.cpp:822:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4166627Z         if (file.empty()) continue;
2025-10-02T06:54:20.4166689Z                          ^
2025-10-02T06:54:20.4166922Z src/core/GitManager.cpp:825:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4167006Z         if (fileParts.size() < 2) continue;
2025-10-02T06:54:20.4167077Z                                  ^
2025-10-02T06:54:20.4167317Z src/core/GitManager.cpp:862:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4167395Z             if (line.empty()) continue;
2025-10-02T06:54:20.4167458Z                              ^
2025-10-02T06:54:20.4167699Z src/core/GitManager.cpp:895:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4167842Z                 } else if (line.substr(0, 4) == "diff" || line.substr(0, 5) == "index" ||
2025-10-02T06:54:20.4167929Z                                                                                          ^
2025-10-02T06:54:20.4168167Z src/core/GitManager.cpp:896:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4168289Z                           line.substr(0, 3) == "+++" || line.substr(0, 3) == "---") {
2025-10-02T06:54:20.4168369Z                                                        ^
2025-10-02T06:54:20.4168619Z src/core/GitManager.cpp:1001:112: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4168881Z         "for-each-ref --format='%(refname:short)|%(objectname:short)|%(taggerdate:short)|%(subject)' refs/tags"
2025-10-02T06:54:20.4168976Z                                                                                                                ^
2025-10-02T06:54:20.4169216Z src/core/GitManager.cpp:1039:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4169472Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-10-02T06:54:20.4169563Z                                                                                              ^
2025-10-02T06:54:20.4169797Z src/core/GitManager.cpp:1082:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4169868Z }
2025-10-02T06:54:20.4169926Z  ^
2025-10-02T06:54:20.4179909Z src/core/SystemCommand.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4180301Z #include <string>
2025-10-02T06:54:20.4180401Z ^
2025-10-02T06:54:20.4180827Z src/core/SystemCommand.h:14:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4181004Z     bool success() const { return exitCode == 0; }
2025-10-02T06:54:20.4181112Z                           ^
2025-10-02T06:54:20.4181516Z src/core/SystemCommand.h:14:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4181683Z     bool success() const { return exitCode == 0; }
2025-10-02T06:54:20.4181836Z                                                 ^
2025-10-02T06:54:20.4182243Z src/core/SystemCommand.h:19:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4182361Z class SystemCommand {
2025-10-02T06:54:20.4182471Z                      ^
2025-10-02T06:54:20.4182869Z src/core/SystemCommand.h:22:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4183107Z     ~SystemCommand();
2025-10-02T06:54:20.4183219Z                      ^
2025-10-02T06:54:20.4183616Z src/core/SystemCommand.h:25:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4183867Z     SystemCommandResult execute(const std::string& command, 
2025-10-02T06:54:20.4184011Z                                                            ^
2025-10-02T06:54:20.4184410Z src/core/SystemCommand.h:26:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4184586Z                                const std::vector<std::string>& args = {},
2025-10-02T06:54:20.4184889Z                                                                          ^
2025-10-02T06:54:20.4185307Z src/core/SystemCommand.h:27:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4185491Z                                const std::string& workingDirectory = "");
2025-10-02T06:54:20.4185634Z                                                                          ^
2025-10-02T06:54:20.4186050Z src/core/SystemCommand.h:30:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4186355Z     SystemCommandResult executeWithCallback(const std::string& command,
2025-10-02T06:54:20.4186490Z                                                                        ^
2025-10-02T06:54:20.4186897Z src/core/SystemCommand.h:31:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4187067Z                                            const std::vector<std::string>& args,
2025-10-02T06:54:20.4187204Z                                                                                 ^
2025-10-02T06:54:20.4187606Z src/core/SystemCommand.h:32:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4187770Z                                            OutputCallback outputCallback,
2025-10-02T06:54:20.4187908Z                                                                          ^
2025-10-02T06:54:20.4188333Z src/core/SystemCommand.h:33:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4188519Z                                            const std::string& workingDirectory = "");
2025-10-02T06:54:20.4188658Z                                                                                      ^
2025-10-02T06:54:20.4189058Z src/core/SystemCommand.h:36:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4189228Z     void executeAsync(const std::string& command,
2025-10-02T06:54:20.4189347Z                                                  ^
2025-10-02T06:54:20.4189751Z src/core/SystemCommand.h:37:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4189909Z                      const std::vector<std::string>& args,
2025-10-02T06:54:20.4190036Z                                                           ^
2025-10-02T06:54:20.4190435Z src/core/SystemCommand.h:38:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4190854Z                      std::function<void(const SystemCommandResult&)> callback,
2025-10-02T06:54:20.4190992Z                                                                               ^
2025-10-02T06:54:20.4191405Z src/core/SystemCommand.h:39:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4191586Z                      const std::string& workingDirectory = "");
2025-10-02T06:54:20.4191714Z                                                                ^
2025-10-02T06:54:20.4192114Z src/core/SystemCommand.h:42:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4192230Z     void cancel();
2025-10-02T06:54:20.4192330Z                   ^
2025-10-02T06:54:20.4192727Z src/core/SystemCommand.h:46:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4193022Z     void clearEnvironmentVariables();
2025-10-02T06:54:20.4193144Z                                      ^
2025-10-02T06:54:20.4193545Z src/core/SystemCommand.h:49:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4193676Z     void setTimeout(int timeoutMs);
2025-10-02T06:54:20.4193791Z                                    ^
2025-10-02T06:54:20.4194186Z src/core/SystemCommand.h:52:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4194423Z     static bool isCommandAvailable(const std::string& command);
2025-10-02T06:54:20.4194566Z                                                                ^
2025-10-02T06:54:20.4195081Z src/core/SystemCommand.h:55:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4195180Z     static std::string getGitCommand();
2025-10-02T06:54:20.4195257Z                                        ^
2025-10-02T06:54:20.4195497Z src/core/SystemCommand.h:62:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4195661Z     SystemCommandResult executeWindows(const std::string& command,
2025-10-02T06:54:20.4195749Z                                                                   ^
2025-10-02T06:54:20.4195980Z src/core/SystemCommand.h:66:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4196128Z     SystemCommandResult executeUnix(const std::string& command,
2025-10-02T06:54:20.4196213Z                                                                ^
2025-10-02T06:54:20.4196449Z src/core/SystemCommand.h:72:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T06:54:20.4196509Z }
2025-10-02T06:54:20.4196567Z  ^
2025-10-02T06:54:20.6254963Z ##[group]Run cppcheck --enable=all --suppress=missingIncludeSystem src/core/ || true
2025-10-02T06:54:20.6255262Z [36;1mcppcheck --enable=all --suppress=missingIncludeSystem src/core/ || true[0m
2025-10-02T06:54:20.6288162Z shell: /usr/bin/bash -e {0}
2025-10-02T06:54:20.6288261Z ##[endgroup]
2025-10-02T06:54:20.6568823Z Checking src/core/GitManager.cpp ...
2025-10-02T06:54:21.3700424Z src/core/GitManager.cpp:27:5: style: Class 'Impl' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
2025-10-02T06:54:21.3701418Z     Impl(const std::string& repoPath) : repositoryPath(repoPath) {
2025-10-02T06:54:21.3701846Z     ^
2025-10-02T06:54:21.3817112Z src/core/GitManager.cpp:785:35: style: Condition '!line.empty()' is always true [knownConditionTrueFalse]
2025-10-02T06:54:21.3818096Z         } else if (currentHunk && !line.empty()) {
2025-10-02T06:54:21.3818582Z                                   ^
2025-10-02T06:54:21.3819176Z src/core/GitManager.cpp:769:23: note: Assuming that condition 'line.empty()' is not redundant
2025-10-02T06:54:21.3819754Z         if (line.empty()) continue;
2025-10-02T06:54:21.3820070Z                       ^
2025-10-02T06:54:21.3820444Z src/core/GitManager.cpp:785:35: note: Condition '!line.empty()' is always true
2025-10-02T06:54:21.3821352Z         } else if (currentHunk && !line.empty()) {
2025-10-02T06:54:21.3821659Z                                   ^
2025-10-02T06:54:21.3822196Z src/core/GitManager.cpp:880:39: style: Condition '!line.empty()' is always true [knownConditionTrueFalse]
2025-10-02T06:54:21.3822775Z             } else if (currentHunk && !line.empty()) {
2025-10-02T06:54:21.3823085Z                                       ^
2025-10-02T06:54:21.3823562Z src/core/GitManager.cpp:862:27: note: Assuming that condition 'line.empty()' is not redundant
2025-10-02T06:54:21.3824058Z             if (line.empty()) continue;
2025-10-02T06:54:21.3824337Z                           ^
2025-10-02T06:54:21.3824987Z src/core/GitManager.cpp:880:39: note: Condition '!line.empty()' is always true
2025-10-02T06:54:21.3825499Z             } else if (currentHunk && !line.empty()) {
2025-10-02T06:54:21.3825810Z                                       ^
2025-10-02T06:54:21.3872249Z src/core/GitManager.cpp:394:15: style: Local variable 'commit' shadows outer function [shadowFunction]
2025-10-02T06:54:21.3873094Z     GitCommit commit;
2025-10-02T06:54:21.3873341Z               ^
2025-10-02T06:54:21.3873618Z src/core/GitManager.h:59:24: note: Shadowed declaration
2025-10-02T06:54:21.3874151Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-10-02T06:54:21.3874579Z                        ^
2025-10-02T06:54:21.3875184Z src/core/GitManager.cpp:394:15: note: Shadow variable
2025-10-02T06:54:21.3875728Z     GitCommit commit;
2025-10-02T06:54:21.3876077Z               ^
2025-10-02T06:54:21.3876727Z src/core/GitManager.cpp:580:23: style: Local variable 'commit' shadows outer function [shadowFunction]
2025-10-02T06:54:21.3877257Z             GitCommit commit;
2025-10-02T06:54:21.3877498Z                       ^
2025-10-02T06:54:21.3877785Z src/core/GitManager.h:59:24: note: Shadowed declaration
2025-10-02T06:54:21.3878282Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-10-02T06:54:21.3878693Z                        ^
2025-10-02T06:54:21.3878982Z src/core/GitManager.cpp:580:23: note: Shadow variable
2025-10-02T06:54:21.3879319Z             GitCommit commit;
2025-10-02T06:54:21.3879558Z                       ^
2025-10-02T06:54:21.3880004Z src/core/GitManager.cpp:650:18: style: Local variable 'stash' shadows outer function [shadowFunction]
2025-10-02T06:54:21.3880458Z         GitStash stash;
2025-10-02T06:54:21.3880637Z                  ^
2025-10-02T06:54:21.3880878Z src/core/GitManager.h:115:24: note: Shadowed declaration
2025-10-02T06:54:21.3881331Z     GitOperationResult stash(const std::string& message = "", bool includeUntracked = false);
2025-10-02T06:54:21.3881716Z                        ^
2025-10-02T06:54:21.3882268Z src/core/GitManager.cpp:650:18: note: Shadow variable
2025-10-02T06:54:21.3882578Z         GitStash stash;
2025-10-02T06:54:21.3882870Z                  ^
2025-10-02T06:54:21.3883723Z src/core/GitManager.cpp:546:20: performance: Inefficient usage of string::find() in condition; string::starts_with() could be faster. [stlIfStrFind]
2025-10-02T06:54:21.3884473Z         if (branch.name.find("origin/") == 0 || branch.name.find("remotes/") == 0) {
2025-10-02T06:54:21.3884896Z                    ^
2025-10-02T06:54:21.3885403Z src/core/GitManager.cpp:549:24: performance: Inefficient usage of string::find() in condition; string::starts_with() could be faster. [stlIfStrFind]
2025-10-02T06:54:21.3885963Z             if (branch.name.find("remotes/") == 0) {
2025-10-02T06:54:21.3886217Z                        ^
2025-10-02T06:54:21.3993470Z Checking src/core/GitManager.cpp: USE_LIBGIT2...
2025-10-02T06:54:22.1191342Z Checking src/core/GitManager.cpp: _WIN32...
2025-10-02T06:54:22.8384162Z 1/3 files checked 56% done
2025-10-02T06:54:22.8384643Z Checking src/core/GitUtils.cpp ...
2025-10-02T06:54:22.8867501Z src/core/GitUtils.cpp:339:18: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use resize() or pop_back() instead. [uselessCallsSubstr]
2025-10-02T06:54:22.8869778Z         result = result.substr(0, result.length() - 4);
2025-10-02T06:54:22.8870359Z                  ^
2025-10-02T06:54:22.8871382Z src/core/GitUtils.cpp:226:5: style: Consider using std::all_of or std::none_of algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T06:54:22.8872187Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-10-02T06:54:22.8872560Z     ^
2025-10-02T06:54:22.8873114Z src/core/GitUtils.cpp:434:21: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T06:54:22.8873764Z         if (c == 0) {
2025-10-02T06:54:22.8874006Z                     ^
2025-10-02T06:54:22.8874596Z src/core/GitUtils.cpp:468:13: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T06:54:22.8875543Z             count++;
2025-10-02T06:54:22.8875790Z             ^
2025-10-02T06:54:22.8876353Z src/core/GitUtils.cpp:481:13: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T06:54:22.8877010Z             count++;
2025-10-02T06:54:22.8877255Z             ^
2025-10-02T06:54:22.8896227Z 2/3 files checked 80% done
2025-10-02T06:54:22.8896668Z Checking src/core/SystemCommand.cpp ...
2025-10-02T06:54:22.9073660Z src/core/SystemCommand.cpp:305:21: style: Local variable 'bytesRead' shadows outer variable [shadowVariable]
2025-10-02T06:54:22.9074339Z             ssize_t bytesRead;
2025-10-02T06:54:22.9074594Z                     ^
2025-10-02T06:54:22.9075198Z src/core/SystemCommand.cpp:293:17: note: Shadowed declaration
2025-10-02T06:54:22.9075605Z         ssize_t bytesRead;
2025-10-02T06:54:22.9075840Z                 ^
2025-10-02T06:54:22.9076160Z src/core/SystemCommand.cpp:305:21: note: Shadow variable
2025-10-02T06:54:22.9076526Z             ssize_t bytesRead;
2025-10-02T06:54:22.9076898Z                     ^
2025-10-02T06:54:22.9077674Z src/core/SystemCommand.cpp:320:33: style: Local variable 'result' shadows outer variable [shadowVariable]
2025-10-02T06:54:22.9078460Z             SystemCommandResult result;
2025-10-02T06:54:22.9078752Z                                 ^
2025-10-02T06:54:22.9079119Z src/core/SystemCommand.cpp:290:15: note: Shadowed declaration
2025-10-02T06:54:22.9079560Z         pid_t result = waitpid(pid, &status, WNOHANG);
2025-10-02T06:54:22.9079875Z               ^
2025-10-02T06:54:22.9080170Z src/core/SystemCommand.cpp:320:33: note: Shadow variable
2025-10-02T06:54:22.9080540Z             SystemCommandResult result;
2025-10-02T06:54:22.9080830Z                                 ^
2025-10-02T06:54:22.9081467Z src/core/SystemCommand.cpp:244:19: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T06:54:22.9082559Z             cArgs.push_back(const_cast<char*>(arg.c_str()));
2025-10-02T06:54:22.9082898Z                   ^
2025-10-02T06:54:22.9097495Z Checking src/core/SystemCommand.cpp: _WIN32...
2025-10-02T06:54:22.9244399Z src/core/SystemCommand.cpp:416:73: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T06:54:22.9245586Z         if (GetFileAttributes(path.c_str()) != INVALID_FILE_ATTRIBUTES) {
2025-10-02T06:54:22.9246057Z                                                                         ^
2025-10-02T06:54:22.9256621Z 3/3 files checked 100% done
2025-10-02T06:54:22.9259026Z src/core/GitManager.cpp:65:0: style: The function 'initRepository' is never used. [unusedFunction]
2025-10-02T06:54:22.9260198Z GitOperationResult GitManager::initRepository(const std::string& path, bool bare) {
2025-10-02T06:54:22.9260959Z ^
2025-10-02T06:54:22.9261594Z src/core/GitManager.cpp:90:0: style: The function 'openRepository' is never used. [unusedFunction]
2025-10-02T06:54:22.9262570Z GitOperationResult GitManager::openRepository(const std::string& path) {
2025-10-02T06:54:22.9263253Z ^
2025-10-02T06:54:22.9263896Z src/core/GitManager.cpp:121:0: style: The function 'getRepositoryInfo' is never used. [unusedFunction]
2025-10-02T06:54:22.9264996Z GitRepository GitManager::getRepositoryInfo() const {
2025-10-02T06:54:22.9265921Z ^
2025-10-02T06:54:22.9266528Z src/core/GitManager.cpp:232:0: style: The function 'getRepositoryPath' is never used. [unusedFunction]
2025-10-02T06:54:22.9267356Z std::string GitManager::getRepositoryPath() const {
2025-10-02T06:54:22.9267796Z ^
2025-10-02T06:54:22.9268346Z src/core/GitManager.cpp:247:0: style: The function 'addAllFiles' is never used. [unusedFunction]
2025-10-02T06:54:22.9269127Z GitOperationResult GitManager::addAllFiles() {
2025-10-02T06:54:22.9269549Z ^
2025-10-02T06:54:22.9270115Z src/core/GitManager.cpp:251:0: style: The function 'removeFiles' is never used. [unusedFunction]
2025-10-02T06:54:22.9271168Z GitOperationResult GitManager::removeFiles(const std::vector<std::string>& files, bool cached) {
2025-10-02T06:54:22.9271879Z ^
2025-10-02T06:54:22.9272416Z src/core/GitManager.cpp:265:0: style: The function 'resetFiles' is never used. [unusedFunction]
2025-10-02T06:54:22.9273370Z GitOperationResult GitManager::resetFiles(const std::vector<std::string>& files) {
2025-10-02T06:54:22.9274023Z ^
2025-10-02T06:54:22.9274563Z src/core/GitManager.cpp:276:0: style: The function 'resetHard' is never used. [unusedFunction]
2025-10-02T06:54:22.9275647Z GitOperationResult GitManager::resetHard(const std::string& commitHash) {
2025-10-02T06:54:22.9276240Z ^
2025-10-02T06:54:22.9276821Z src/core/GitManager.cpp:289:0: style: The function 'commitWithFiles' is never used. [unusedFunction]
2025-10-02T06:54:22.9277776Z GitOperationResult GitManager::commitWithFiles(const std::string& message,
2025-10-02T06:54:22.9278358Z ^
2025-10-02T06:54:22.9278955Z src/core/GitManager.cpp:301:0: style: The function 'getCommitHistory' is never used. [unusedFunction]
2025-10-02T06:54:22.9279847Z std::vector<GitCommit> GitManager::getCommitHistory(int maxCount,
2025-10-02T06:54:22.9280371Z ^
2025-10-02T06:54:22.9280920Z src/core/GitManager.cpp:350:0: style: The function 'getCommit' is never used. [unusedFunction]
2025-10-02T06:54:22.9281827Z std::optional<GitCommit> GitManager::getCommit(const std::string& hash) const {
2025-10-02T06:54:22.9282435Z ^
2025-10-02T06:54:22.9282933Z src/core/GitManager.cpp:477:0: style: The function 'getLastError' is never used. [unusedFunction]
2025-10-02T06:54:22.9283629Z std::string GitManager::getLastError() const {
2025-10-02T06:54:22.9284022Z ^
2025-10-02T06:54:22.9284575Z src/core/GitManager.cpp:481:0: style: The function 'hasUncommittedChanges' is never used. [unusedFunction]
2025-10-02T06:54:22.9285574Z bool GitManager::hasUncommittedChanges() const {
2025-10-02T06:54:22.9286007Z ^
2025-10-02T06:54:22.9286616Z src/core/GitManager.cpp:485:0: style: The function 'hasUnstagedChanges' is never used. [unusedFunction]
2025-10-02T06:54:22.9287593Z bool GitManager::hasUnstagedChanges() const {
2025-10-02T06:54:22.9287949Z ^
2025-10-02T06:54:22.9288413Z src/core/GitManager.cpp:489:0: style: The function 'hasStagedChanges' is never used. [unusedFunction]
2025-10-02T06:54:22.9289152Z bool GitManager::hasStagedChanges() const {
2025-10-02T06:54:22.9289485Z ^
2025-10-02T06:54:22.9289934Z src/core/GitManager.cpp:493:0: style: The function 'setLogCallback' is never used. [unusedFunction]
2025-10-02T06:54:22.9290563Z void GitManager::setLogCallback(LogCallback callback) {
2025-10-02T06:54:22.9290941Z ^
2025-10-02T06:54:22.9291447Z src/core/GitManager.cpp:497:0: style: The function 'setProgressCallback' is never used. [unusedFunction]
2025-10-02T06:54:22.9292264Z void GitManager::setProgressCallback(ProgressCallback callback) {
2025-10-02T06:54:22.9292721Z ^
2025-10-02T06:54:22.9293250Z src/core/GitManager.cpp:501:0: style: The function 'cloneRepositoryAsync' is never used. [unusedFunction]
2025-10-02T06:54:22.9294239Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url,
2025-10-02T06:54:22.9294986Z ^
2025-10-02T06:54:22.9295502Z src/core/GitManager.cpp:513:0: style: The function 'getBranches' is never used. [unusedFunction]
2025-10-02T06:54:22.9296286Z std::vector<GitBranch> GitManager::getBranches(bool includeRemote) const {
2025-10-02T06:54:22.9297040Z ^
2025-10-02T06:54:22.9297525Z src/core/GitManager.cpp:606:0: style: The function 'createBranch' is never used. [unusedFunction]
2025-10-02T06:54:22.9298477Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-10-02T06:54:22.9299163Z ^
2025-10-02T06:54:22.9299657Z src/core/GitManager.cpp:617:0: style: The function 'deleteBranch' is never used. [unusedFunction]
2025-10-02T06:54:22.9300504Z GitOperationResult GitManager::deleteBranch(const std::string& name, bool force) {
2025-10-02T06:54:22.9301039Z ^
2025-10-02T06:54:22.9301532Z src/core/GitManager.cpp:627:0: style: The function 'checkoutBranch' is never used. [unusedFunction]
2025-10-02T06:54:22.9302348Z GitOperationResult GitManager::checkoutBranch(const std::string& name) {
2025-10-02T06:54:22.9302894Z ^
2025-10-02T06:54:22.9303485Z src/core/GitManager.cpp:632:0: style: The function 'getStashes' is never used. [unusedFunction]
2025-10-02T06:54:22.9304234Z std::vector<GitStash> GitManager::getStashes() const {
2025-10-02T06:54:22.9304668Z ^
2025-10-02T06:54:22.9305365Z src/core/GitManager.cpp:677:0: style: The function 'stash' is never used. [unusedFunction]
2025-10-02T06:54:22.9306242Z GitOperationResult GitManager::stash(const std::string& message, bool includeUntracked) {
2025-10-02T06:54:22.9306818Z ^
2025-10-02T06:54:22.9307290Z src/core/GitManager.cpp:692:0: style: The function 'stashPop' is never used. [unusedFunction]
2025-10-02T06:54:22.9307972Z GitOperationResult GitManager::stashPop(int index) {
2025-10-02T06:54:22.9308391Z ^
2025-10-02T06:54:22.9308889Z src/core/GitManager.cpp:702:0: style: The function 'stashApply' is never used. [unusedFunction]
2025-10-02T06:54:22.9309622Z GitOperationResult GitManager::stashApply(int index) {
2025-10-02T06:54:22.9310055Z ^
2025-10-02T06:54:22.9310528Z src/core/GitManager.cpp:712:0: style: The function 'stashDrop' is never used. [unusedFunction]
2025-10-02T06:54:22.9311269Z GitOperationResult GitManager::stashDrop(int index) {
2025-10-02T06:54:22.9311719Z ^
2025-10-02T06:54:22.9312232Z src/core/GitManager.cpp:722:0: style: The function 'stashClear' is never used. [unusedFunction]
2025-10-02T06:54:22.9312935Z GitOperationResult GitManager::stashClear() {
2025-10-02T06:54:22.9313341Z ^
2025-10-02T06:54:22.9313864Z src/core/GitManager.cpp:727:0: style: The function 'getCommitDiff' is never used. [unusedFunction]
2025-10-02T06:54:22.9314866Z GitDiff GitManager::getCommitDiff(const std::string& commitHash) const {
2025-10-02T06:54:22.9315394Z ^
2025-10-02T06:54:22.9315934Z src/core/GitManager.cpp:810:0: style: The function 'getCommitDiffAll' is never used. [unusedFunction]
2025-10-02T06:54:22.9317089Z std::vector<GitDiff> GitManager::getCommitDiffAll(const std::string& commitHash) const {
2025-10-02T06:54:22.9317669Z ^
2025-10-02T06:54:22.9318012Z src/core/GitManager.cpp:913:0: style: The function 'getRemotes' is never used. [unusedFunction]
2025-10-02T06:54:22.9318455Z std::vector<GitRemote> GitManager::getRemotes() const {
2025-10-02T06:54:22.9318723Z ^
2025-10-02T06:54:22.9319029Z src/core/GitManager.cpp:959:0: style: The function 'addRemote' is never used. [unusedFunction]
2025-10-02T06:54:22.9319583Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-10-02T06:54:22.9319972Z ^
2025-10-02T06:54:22.9320297Z src/core/GitManager.cpp:971:0: style: The function 'removeRemote' is never used. [unusedFunction]
2025-10-02T06:54:22.9320833Z GitOperationResult GitManager::removeRemote(const std::string& name) {
2025-10-02T06:54:22.9321295Z ^
2025-10-02T06:54:22.9321844Z src/core/GitManager.cpp:983:0: style: The function 'renameRemote' is never used. [unusedFunction]
2025-10-02T06:54:22.9323002Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-10-02T06:54:22.9323585Z ^
2025-10-02T06:54:22.9324277Z src/core/GitManager.cpp:996:0: style: The function 'getTags' is never used. [unusedFunction]
2025-10-02T06:54:22.9325339Z std::vector<GitTag> GitManager::getTags() const {
2025-10-02T06:54:22.9325893Z ^
2025-10-02T06:54:22.9326285Z src/core/GitManager.cpp:1039:0: style: The function 'createTag' is never used. [unusedFunction]
2025-10-02T06:54:22.9327098Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-10-02T06:54:22.9327632Z ^
2025-10-02T06:54:22.9380425Z src/core/GitManager.cpp:1065:0: style: The function 'deleteTag' is never used. [unusedFunction]
2025-10-02T06:54:22.9381327Z GitOperationResult GitManager::deleteTag(const std::string& name) {
2025-10-02T06:54:22.9381872Z ^
2025-10-02T06:54:22.9382388Z src/core/GitManager.cpp:1077:0: style: The function 'pushTags' is never used. [unusedFunction]
2025-10-02T06:54:22.9383282Z GitOperationResult GitManager::pushTags(const std::string& remote) {
2025-10-02T06:54:22.9383844Z ^
2025-10-02T06:54:22.9384370Z src/core/GitManager.h:29:0: style: The function 'hasError' is never used. [unusedFunction]
2025-10-02T06:54:22.9385412Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-10-02T06:54:22.9385907Z ^
2025-10-02T06:54:22.9386408Z src/core/GitTypes.h:37:0: style: The function 'isMerge' is never used. [unusedFunction]
2025-10-02T06:54:22.9387136Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-10-02T06:54:22.9387592Z ^
2025-10-02T06:54:22.9388056Z src/core/GitUtils.cpp:48:0: style: The function 'join' is never used. [unusedFunction]
2025-10-02T06:54:22.9388587Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-10-02T06:54:22.9388957Z ^
2025-10-02T06:54:22.9389253Z src/core/GitUtils.cpp:73:0: style: The function 'toUpper' is never used. [unusedFunction]
2025-10-02T06:54:22.9389696Z std::string GitUtils::toUpper(const std::string& str) {
2025-10-02T06:54:22.9389963Z ^
2025-10-02T06:54:22.9390288Z src/core/GitUtils.cpp:80:0: style: The function 'normalizePath' is never used. [unusedFunction]
2025-10-02T06:54:22.9390752Z std::string GitUtils::normalizePath(const std::string& path) {
2025-10-02T06:54:22.9391046Z ^
2025-10-02T06:54:22.9391344Z src/core/GitUtils.cpp:89:0: style: The function 'getFileName' is never used. [unusedFunction]
2025-10-02T06:54:22.9391796Z std::string GitUtils::getFileName(const std::string& path) {
2025-10-02T06:54:22.9392065Z ^
2025-10-02T06:54:22.9392363Z src/core/GitUtils.cpp:99:0: style: The function 'getDirectory' is never used. [unusedFunction]
2025-10-02T06:54:22.9392804Z std::string GitUtils::getDirectory(const std::string& path) {
2025-10-02T06:54:22.9393071Z ^
2025-10-02T06:54:22.9393359Z src/core/GitUtils.cpp:104:0: style: The function 'joinPaths' is never used. [unusedFunction]
2025-10-02T06:54:22.9394146Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-10-02T06:54:22.9394500Z ^
2025-10-02T06:54:22.9395083Z src/core/GitUtils.cpp:109:0: style: The function 'isAbsolutePath' is never used. [unusedFunction]
2025-10-02T06:54:22.9395580Z bool GitUtils::isAbsolutePath(const std::string& path) {
2025-10-02T06:54:22.9395855Z ^
2025-10-02T06:54:22.9396179Z src/core/GitUtils.cpp:114:0: style: The function 'makeRelativePath' is never used. [unusedFunction]
2025-10-02T06:54:22.9396718Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-10-02T06:54:22.9397071Z ^
2025-10-02T06:54:22.9397373Z src/core/GitUtils.cpp:124:0: style: The function 'shortenHash' is never used. [unusedFunction]
2025-10-02T06:54:22.9397842Z std::string GitUtils::shortenHash(const std::string& hash, int length) {
2025-10-02T06:54:22.9398161Z ^
2025-10-02T06:54:22.9398458Z src/core/GitUtils.cpp:131:0: style: The function 'isValidHash' is never used. [unusedFunction]
2025-10-02T06:54:22.9398887Z bool GitUtils::isValidHash(const std::string& hash) {
2025-10-02T06:54:22.9399144Z ^
2025-10-02T06:54:22.9399475Z src/core/GitUtils.cpp:139:0: style: The function 'formatCommitMessage' is never used. [unusedFunction]
2025-10-02T06:54:22.9400028Z std::string GitUtils::formatCommitMessage(const std::string& message, int maxLength) {
2025-10-02T06:54:22.9400550Z ^
2025-10-02T06:54:22.9400856Z src/core/GitUtils.cpp:156:0: style: The function 'formatAuthor' is never used. [unusedFunction]
2025-10-02T06:54:22.9401365Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-10-02T06:54:22.9401715Z ^
2025-10-02T06:54:22.9402032Z src/core/GitUtils.cpp:169:0: style: The function 'formatTimestamp' is never used. [unusedFunction]
2025-10-02T06:54:22.9402583Z std::string GitUtils::formatTimestamp(const std::chrono::system_clock::time_point& timestamp) {
2025-10-02T06:54:22.9402967Z ^
2025-10-02T06:54:22.9403299Z src/core/GitUtils.cpp:176:0: style: The function 'formatRelativeTime' is never used. [unusedFunction]
2025-10-02T06:54:22.9403888Z std::string GitUtils::formatRelativeTime(const std::chrono::system_clock::time_point& timestamp) {
2025-10-02T06:54:22.9404280Z ^
2025-10-02T06:54:22.9404611Z src/core/GitUtils.cpp:221:0: style: The function 'isValidBranchName' is never used. [unusedFunction]
2025-10-02T06:54:22.9405316Z bool GitUtils::isValidBranchName(const std::string& name) {
2025-10-02T06:54:22.9405596Z ^
2025-10-02T06:54:22.9405938Z src/core/GitUtils.cpp:235:0: style: The function 'sanitizeBranchName' is never used. [unusedFunction]
2025-10-02T06:54:22.9406429Z std::string GitUtils::sanitizeBranchName(const std::string& name) {
2025-10-02T06:54:22.9406725Z ^
2025-10-02T06:54:22.9407045Z src/core/GitUtils.cpp:258:0: style: The function 'getShortBranchName' is never used. [unusedFunction]
2025-10-02T06:54:22.9407545Z std::string GitUtils::getShortBranchName(const std::string& fullName) {
2025-10-02T06:54:22.9407851Z ^
2025-10-02T06:54:22.9408163Z src/core/GitUtils.cpp:271:0: style: The function 'isRemoteBranch' is never used. [unusedFunction]
2025-10-02T06:54:22.9408633Z bool GitUtils::isRemoteBranch(const std::string& branchName) {
2025-10-02T06:54:22.9408912Z ^
2025-10-02T06:54:22.9409251Z src/core/GitUtils.cpp:275:0: style: The function 'getRemoteFromBranch' is never used. [unusedFunction]
2025-10-02T06:54:22.9409780Z std::string GitUtils::getRemoteFromBranch(const std::string& branchName) {
2025-10-02T06:54:22.9410103Z ^
2025-10-02T06:54:22.9410411Z src/core/GitUtils.cpp:290:0: style: The function 'isValidGitUrl' is never used. [unusedFunction]
2025-10-02T06:54:22.9410851Z bool GitUtils::isValidGitUrl(const std::string& url) {
2025-10-02T06:54:22.9411109Z ^
2025-10-02T06:54:22.9411450Z src/core/GitUtils.cpp:313:0: style: The function 'extractRepoNameFromUrl' is never used. [unusedFunction]
2025-10-02T06:54:22.9411975Z std::string GitUtils::extractRepoNameFromUrl(const std::string& url) {
2025-10-02T06:54:22.9412275Z ^
2025-10-02T06:54:22.9412743Z src/core/GitUtils.cpp:351:0: style: The function 'normalizeGitUrl' is never used. [unusedFunction]
2025-10-02T06:54:22.9413216Z std::string GitUtils::normalizeGitUrl(const std::string& url) {
2025-10-02T06:54:22.9413496Z ^
2025-10-02T06:54:22.9413789Z src/core/GitUtils.cpp:371:0: style: The function 'isHttpsUrl' is never used. [unusedFunction]
2025-10-02T06:54:22.9414208Z bool GitUtils::isHttpsUrl(const std::string& url) {
2025-10-02T06:54:22.9414457Z ^
2025-10-02T06:54:22.9414976Z src/core/GitUtils.cpp:375:0: style: The function 'isSshUrl' is never used. [unusedFunction]
2025-10-02T06:54:22.9415412Z bool GitUtils::isSshUrl(const std::string& url) {
2025-10-02T06:54:22.9415652Z ^
2025-10-02T06:54:22.9415961Z src/core/GitUtils.cpp:380:0: style: The function 'isValidEmail' is never used. [unusedFunction]
2025-10-02T06:54:22.9416391Z bool GitUtils::isValidEmail(const std::string& email) {
2025-10-02T06:54:22.9416662Z ^
2025-10-02T06:54:22.9417000Z src/core/GitUtils.cpp:385:0: style: The function 'isValidCommitMessage' is never used. [unusedFunction]
2025-10-02T06:54:22.9417502Z bool GitUtils::isValidCommitMessage(const std::string& message) {
2025-10-02T06:54:22.9417796Z ^
2025-10-02T06:54:22.9418093Z src/core/GitUtils.cpp:399:0: style: The function 'isBinaryFile' is never used. [unusedFunction]
2025-10-02T06:54:22.9418788Z bool GitUtils::isBinaryFile(const std::string& filePath) {
2025-10-02T06:54:22.9419364Z ^
2025-10-02T06:54:22.9419693Z src/core/GitUtils.cpp:404:0: style: The function 'detectFileEncoding' is never used. [unusedFunction]
2025-10-02T06:54:22.9420195Z std::string GitUtils::detectFileEncoding(const std::string& filePath) {
2025-10-02T06:54:22.9420499Z ^
2025-10-02T06:54:22.9420809Z src/core/GitUtils.cpp:443:0: style: The function 'colorizeGitDiff' is never used. [unusedFunction]
2025-10-02T06:54:22.9421267Z std::string GitUtils::colorizeGitDiff(const std::string& diff) {
2025-10-02T06:54:22.9421549Z ^
2025-10-02T06:54:22.9421858Z src/core/GitUtils.cpp:462:0: style: The function 'countLinesAdded' is never used. [unusedFunction]
2025-10-02T06:54:22.9422308Z int GitUtils::countLinesAdded(const std::string& diff) {
2025-10-02T06:54:22.9422564Z ^
2025-10-02T06:54:22.9422883Z src/core/GitUtils.cpp:475:0: style: The function 'countLinesRemoved' is never used. [unusedFunction]
2025-10-02T06:54:22.9423340Z int GitUtils::countLinesRemoved(const std::string& diff) {
2025-10-02T06:54:22.9423606Z ^
2025-10-02T06:54:22.9423924Z src/core/GitUtils.cpp:488:0: style: The function 'extractHunkHeader' is never used. [unusedFunction]
2025-10-02T06:54:22.9424394Z std::string GitUtils::extractHunkHeader(const std::string& line) {
2025-10-02T06:54:22.9424683Z ^
2025-10-02T06:54:22.9425198Z src/core/GitUtils.cpp:499:0: style: The function 'formatProgress' is never used. [unusedFunction]
2025-10-02T06:54:22.9425748Z std::string GitUtils::formatProgress(int current, int total, const std::string& operation) {
2025-10-02T06:54:22.9426114Z ^
2025-10-02T06:54:22.9426440Z src/core/GitUtils.cpp:515:0: style: The function 'formatTransferSpeed' is never used. [unusedFunction]
2025-10-02T06:54:22.9426943Z std::string GitUtils::formatTransferSpeed(size_t bytesPerSecond) {
2025-10-02T06:54:22.9427232Z ^
2025-10-02T06:54:22.9427543Z src/core/GitUtils.cpp:519:0: style: The function 'formatDuration' is never used. [unusedFunction]
2025-10-02T06:54:22.9428051Z std::string GitUtils::formatDuration(const std::chrono::milliseconds& duration) {
2025-10-02T06:54:22.9428396Z ^
2025-10-02T06:54:22.9428743Z src/core/SystemCommand.cpp:343:0: style: The function 'executeWithCallback' is never used. [unusedFunction]
2025-10-02T06:54:22.9429448Z SystemCommandResult SystemCommand::executeWithCallback(const std::string& command, const std::vector<std::string>& args,
2025-10-02T06:54:22.9429925Z ^
2025-10-02T06:54:22.9430246Z src/core/SystemCommand.cpp:358:0: style: The function 'executeAsync' is never used. [unusedFunction]
2025-10-02T06:54:22.9430821Z void SystemCommand::executeAsync(const std::string& command, const std::vector<std::string>& args,
2025-10-02T06:54:22.9431200Z ^
2025-10-02T06:54:22.9431713Z src/core/SystemCommand.cpp:383:0: style: The function 'setEnvironmentVariable' is never used. [unusedFunction]
2025-10-02T06:54:22.9432344Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-10-02T06:54:22.9432732Z ^
2025-10-02T06:54:22.9433110Z src/core/SystemCommand.cpp:387:0: style: The function 'clearEnvironmentVariables' is never used. [unusedFunction]
2025-10-02T06:54:22.9433615Z void SystemCommand::clearEnvironmentVariables() {
2025-10-02T06:54:22.9433865Z ^
2025-10-02T06:54:22.9434173Z src/core/SystemCommand.cpp:391:0: style: The function 'setTimeout' is never used. [unusedFunction]
2025-10-02T06:54:22.9434599Z void SystemCommand::setTimeout(int timeoutMs) {
2025-10-02T06:54:22.9434994Z ^
2025-10-02T06:54:22.9435325Z src/core/SystemCommand.cpp:405:0: style: The function 'getGitCommand' is never used. [unusedFunction]
2025-10-02T06:54:22.9435759Z std::string SystemCommand::getGitCommand() {
2025-10-02T06:54:22.9436019Z ^
2025-10-02T06:54:22.9436326Z src/core/SystemCommand.h:14:0: style: The function 'success' is never used. [unusedFunction]
2025-10-02T06:54:22.9436729Z     bool success() const { return exitCode == 0; }
2025-10-02T06:54:22.9436971Z ^
2025-10-02T06:54:22.9437340Z nofile:0:0: information: Active checkers: 161/592 (use --checkers-report=<filename> to see details) [checkersReport]
2025-10-02T06:54:22.9437867Z 
2025-10-02T06:54:22.9515693Z Post job cleanup.
2025-10-02T06:54:23.0499430Z [command]/usr/bin/git version
2025-10-02T06:54:23.0539930Z git version 2.51.0
2025-10-02T06:54:23.0586559Z Temporarily overriding HOME='/home/runner/work/_temp/eb194a75-b132-48e2-9b97-64af2b40a7ef' before making global git config changes
2025-10-02T06:54:23.0587511Z Adding repository directory to the temporary git global config as a safe directory
2025-10-02T06:54:23.0600995Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/VersionTools/VersionTools
2025-10-02T06:54:23.0641866Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-10-02T06:54:23.0679218Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-10-02T06:54:23.0924305Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-10-02T06:54:23.0948725Z http.https://github.com/.extraheader
2025-10-02T06:54:23.0961675Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-10-02T06:54:23.0995970Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-10-02T06:54:23.1338477Z Cleaning up orphan processes
