2025-09-29T03:46:43.6791163Z Current runner version: '2.328.0'
2025-09-29T03:46:43.6822142Z ##[group]Runner Image Provisioner
2025-09-29T03:46:43.6823153Z Hosted Compute Agent
2025-09-29T03:46:43.6824010Z Version: 20250912.392
2025-09-29T03:46:43.6824741Z Commit: d921fda672a98b64f4f82364647e2f10b2267d0b
2025-09-29T03:46:43.6825691Z Build Date: 2025-09-12T15:23:14Z
2025-09-29T03:46:43.6826469Z ##[endgroup]
2025-09-29T03:46:43.6827168Z ##[group]Operating System
2025-09-29T03:46:43.6828162Z Ubuntu
2025-09-29T03:46:43.6829122Z 24.04.3
2025-09-29T03:46:43.6829709Z LTS
2025-09-29T03:46:43.6830348Z ##[endgroup]
2025-09-29T03:46:43.6830922Z ##[group]Runner Image
2025-09-29T03:46:43.6831737Z Image: ubuntu-24.04
2025-09-29T03:46:43.6832422Z Version: 20250922.53.1
2025-09-29T03:46:43.6833647Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250922.53/images/ubuntu/Ubuntu2404-Readme.md
2025-09-29T03:46:43.6835740Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250922.53
2025-09-29T03:46:43.6837042Z ##[endgroup]
2025-09-29T03:46:43.6840389Z ##[group]GITHUB_TOKEN Permissions
2025-09-29T03:46:43.6842958Z Actions: write
2025-09-29T03:46:43.6843786Z Attestations: write
2025-09-29T03:46:43.6844697Z Checks: write
2025-09-29T03:46:43.6845742Z Contents: write
2025-09-29T03:46:43.6847043Z Deployments: write
2025-09-29T03:46:43.6848542Z Discussions: write
2025-09-29T03:46:43.6849600Z Issues: write
2025-09-29T03:46:43.6850954Z Metadata: read
2025-09-29T03:46:43.6852079Z Models: read
2025-09-29T03:46:43.6853264Z Packages: write
2025-09-29T03:46:43.6854530Z Pages: write
2025-09-29T03:46:43.6855780Z PullRequests: write
2025-09-29T03:46:43.6857033Z RepositoryProjects: write
2025-09-29T03:46:43.6858835Z SecurityEvents: write
2025-09-29T03:46:43.6860392Z Statuses: write
2025-09-29T03:46:43.6861611Z ##[endgroup]
2025-09-29T03:46:43.6865251Z Secret source: Actions
2025-09-29T03:46:43.6866597Z Prepare workflow directory
2025-09-29T03:46:43.7377567Z Prepare all required actions
2025-09-29T03:46:43.7430503Z Getting action download info
2025-09-29T03:46:44.0862978Z Download action repository 'actions/checkout@v4' (SHA:08eba0b27e820071cde6df949e0beb9ba4906955)
2025-09-29T03:46:44.2932490Z Download action repository 'actions/setup-python@v4' (SHA:7f4fc3e22c37d6ff65e88745f38bd3157c663f7c)
2025-09-29T03:46:44.5332855Z Complete job name: Code Quality Check
2025-09-29T03:46:44.6136538Z ##[group]Run actions/checkout@v4
2025-09-29T03:46:44.6137505Z with:
2025-09-29T03:46:44.6138294Z   repository: Leizi-the-Thunderbringer/VersionTools
2025-09-29T03:46:44.6139173Z   token: ***
2025-09-29T03:46:44.6139616Z   ssh-strict: true
2025-09-29T03:46:44.6140055Z   ssh-user: git
2025-09-29T03:46:44.6140513Z   persist-credentials: true
2025-09-29T03:46:44.6141022Z   clean: true
2025-09-29T03:46:44.6141487Z   sparse-checkout-cone-mode: true
2025-09-29T03:46:44.6142046Z   fetch-depth: 1
2025-09-29T03:46:44.6142496Z   fetch-tags: false
2025-09-29T03:46:44.6142948Z   show-progress: true
2025-09-29T03:46:44.6143412Z   lfs: false
2025-09-29T03:46:44.6143851Z   submodules: false
2025-09-29T03:46:44.6144320Z   set-safe-directory: true
2025-09-29T03:46:44.6145283Z env:
2025-09-29T03:46:44.6145728Z   CMAKE_VERSION: 3.20.0
2025-09-29T03:46:44.6146219Z   QT_VERSION: 6.5.0
2025-09-29T03:46:44.6146773Z ##[endgroup]
2025-09-29T03:46:44.7597471Z Syncing repository: Leizi-the-Thunderbringer/VersionTools
2025-09-29T03:46:44.7600201Z ##[group]Getting Git version info
2025-09-29T03:46:44.7601117Z Working directory is '/home/runner/work/VersionTools/VersionTools'
2025-09-29T03:46:44.7602394Z [command]/usr/bin/git version
2025-09-29T03:46:44.7653579Z git version 2.51.0
2025-09-29T03:46:44.7688852Z ##[endgroup]
2025-09-29T03:46:44.7715845Z Temporarily overriding HOME='/home/runner/work/_temp/278e8f5b-8fab-4a55-a22e-e8101a05997a' before making global git config changes
2025-09-29T03:46:44.7717507Z Adding repository directory to the temporary git global config as a safe directory
2025-09-29T03:46:44.7723404Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/VersionTools/VersionTools
2025-09-29T03:46:44.7770712Z Deleting the contents of '/home/runner/work/VersionTools/VersionTools'
2025-09-29T03:46:44.7775431Z ##[group]Initializing the repository
2025-09-29T03:46:44.7780638Z [command]/usr/bin/git init /home/runner/work/VersionTools/VersionTools
2025-09-29T03:46:44.7896579Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-09-29T03:46:44.7899056Z hint: is subject to change. To configure the initial branch name to use in all
2025-09-29T03:46:44.7901061Z hint: of your new repositories, which will suppress this warning, call:
2025-09-29T03:46:44.7902512Z hint:
2025-09-29T03:46:44.7903470Z hint: 	git config --global init.defaultBranch <name>
2025-09-29T03:46:44.7904520Z hint:
2025-09-29T03:46:44.7905224Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-09-29T03:46:44.7906419Z hint: 'development'. The just-created branch can be renamed via this command:
2025-09-29T03:46:44.7907291Z hint:
2025-09-29T03:46:44.7907811Z hint: 	git branch -m <name>
2025-09-29T03:46:44.7908737Z hint:
2025-09-29T03:46:44.7909470Z hint: Disable this message with "git config set advice.defaultBranchName false"
2025-09-29T03:46:44.7911383Z Initialized empty Git repository in /home/runner/work/VersionTools/VersionTools/.git/
2025-09-29T03:46:44.7918681Z [command]/usr/bin/git remote add origin https://github.com/Leizi-the-Thunderbringer/VersionTools
2025-09-29T03:46:44.7971343Z ##[endgroup]
2025-09-29T03:46:44.7972871Z ##[group]Disabling automatic garbage collection
2025-09-29T03:46:44.7977267Z [command]/usr/bin/git config --local gc.auto 0
2025-09-29T03:46:44.8021698Z ##[endgroup]
2025-09-29T03:46:44.8022585Z ##[group]Setting up auth
2025-09-29T03:46:44.8031403Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-09-29T03:46:44.8074250Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-09-29T03:46:44.8574073Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-09-29T03:46:44.8619147Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-09-29T03:46:44.8948434Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-09-29T03:46:44.8998347Z ##[endgroup]
2025-09-29T03:46:44.8999466Z ##[group]Fetching the repository
2025-09-29T03:46:44.9009757Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +0bdddcefc855ecdc216be73d9acadcf991f71e58:refs/remotes/origin/main
2025-09-29T03:46:45.7520700Z From https://github.com/Leizi-the-Thunderbringer/VersionTools
2025-09-29T03:46:45.7523030Z  * [new ref]         0bdddcefc855ecdc216be73d9acadcf991f71e58 -> origin/main
2025-09-29T03:46:45.7563872Z ##[endgroup]
2025-09-29T03:46:45.7565759Z ##[group]Determining the checkout info
2025-09-29T03:46:45.7569317Z ##[endgroup]
2025-09-29T03:46:45.7574295Z [command]/usr/bin/git sparse-checkout disable
2025-09-29T03:46:45.7630685Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-09-29T03:46:45.7670494Z ##[group]Checking out the ref
2025-09-29T03:46:45.7674801Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-09-29T03:46:45.8353518Z Switched to a new branch 'main'
2025-09-29T03:46:45.8355708Z branch 'main' set up to track 'origin/main'.
2025-09-29T03:46:45.8365613Z ##[endgroup]
2025-09-29T03:46:45.8412496Z [command]/usr/bin/git log -1 --format=%H
2025-09-29T03:46:45.8439721Z 0bdddcefc855ecdc216be73d9acadcf991f71e58
2025-09-29T03:46:45.8784037Z ##[group]Run actions/setup-python@v4
2025-09-29T03:46:45.8785458Z with:
2025-09-29T03:46:45.8786427Z   python-version: 3.11
2025-09-29T03:46:45.8787742Z   check-latest: false
2025-09-29T03:46:45.8789349Z   token: ***
2025-09-29T03:46:45.8790366Z   update-environment: true
2025-09-29T03:46:45.8791542Z   allow-prereleases: false
2025-09-29T03:46:45.8792644Z env:
2025-09-29T03:46:45.8793560Z   CMAKE_VERSION: 3.20.0
2025-09-29T03:46:45.8794631Z   QT_VERSION: 6.5.0
2025-09-29T03:46:45.8795645Z ##[endgroup]
2025-09-29T03:46:46.1039199Z ##[group]Installed versions
2025-09-29T03:46:46.2091479Z Successfully set up CPython (3.11.13)
2025-09-29T03:46:46.2093833Z ##[endgroup]
2025-09-29T03:46:46.2246554Z ##[group]Run pip install cpplint
2025-09-29T03:46:46.2247451Z [36;1mpip install cpplint[0m
2025-09-29T03:46:46.2248735Z [36;1msudo apt-get install -y clang-format cppcheck[0m
2025-09-29T03:46:46.2450815Z shell: /usr/bin/bash -e {0}
2025-09-29T03:46:46.2451444Z env:
2025-09-29T03:46:46.2451822Z   CMAKE_VERSION: 3.20.0
2025-09-29T03:46:46.2452334Z   QT_VERSION: 6.5.0
2025-09-29T03:46:46.2453064Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:46:46.2454440Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-09-29T03:46:46.2455752Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:46:46.2456901Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:46:46.2458392Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:46:46.2459559Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-09-29T03:46:46.2460449Z ##[endgroup]
2025-09-29T03:46:51.3025906Z Collecting cpplint
2025-09-29T03:46:51.3449558Z   Downloading cpplint-2.0.2-py3-none-any.whl.metadata (4.7 kB)
2025-09-29T03:46:51.3577824Z Downloading cpplint-2.0.2-py3-none-any.whl (81 kB)
2025-09-29T03:46:51.4231345Z Installing collected packages: cpplint
2025-09-29T03:46:51.4762298Z Successfully installed cpplint-2.0.2
2025-09-29T03:46:57.2707567Z Reading package lists...
2025-09-29T03:46:57.5108798Z Building dependency tree...
2025-09-29T03:46:57.5168247Z Reading state information...
2025-09-29T03:46:57.7100170Z Suggested packages:
2025-09-29T03:46:57.7100845Z   cppcheck-gui clang clang-tidy
2025-09-29T03:46:57.7632642Z The following NEW packages will be installed:
2025-09-29T03:46:57.7642886Z   clang-format cppcheck
2025-09-29T03:46:57.8092468Z 0 upgraded, 2 newly installed, 0 to remove and 7 not upgraded.
2025-09-29T03:46:57.8093316Z Need to get 2142 kB of archives.
2025-09-29T03:46:57.8094117Z After this operation, 9530 kB of additional disk space will be used.
2025-09-29T03:46:57.8095105Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
2025-09-29T03:46:57.8871536Z Get:2 http://azure.archive.ubuntu.com/ubuntu noble/universe amd64 clang-format amd64 1:18.0-59~exp2 [5970 B]
2025-09-29T03:46:57.9135599Z Get:3 http://azure.archive.ubuntu.com/ubuntu noble/universe amd64 cppcheck amd64 2.13.0-2ubuntu3 [2136 kB]
2025-09-29T03:46:58.3925271Z Fetched 2142 kB in 0s (8043 kB/s)
2025-09-29T03:46:58.4662251Z Selecting previously unselected package clang-format:amd64.
2025-09-29T03:46:58.6271638Z (Reading database ... 
2025-09-29T03:46:58.6272300Z (Reading database ... 5%
2025-09-29T03:46:58.6275859Z (Reading database ... 10%
2025-09-29T03:46:58.6276432Z (Reading database ... 15%
2025-09-29T03:46:58.6276876Z (Reading database ... 20%
2025-09-29T03:46:58.6277279Z (Reading database ... 25%
2025-09-29T03:46:58.6277719Z (Reading database ... 30%
2025-09-29T03:46:58.6278419Z (Reading database ... 35%
2025-09-29T03:46:58.6278893Z (Reading database ... 40%
2025-09-29T03:46:58.6279366Z (Reading database ... 45%
2025-09-29T03:46:58.6279717Z (Reading database ... 50%
2025-09-29T03:46:58.7934794Z (Reading database ... 55%
2025-09-29T03:46:59.5635431Z (Reading database ... 60%
2025-09-29T03:47:00.2899056Z (Reading database ... 65%
2025-09-29T03:47:01.3001804Z (Reading database ... 70%
2025-09-29T03:47:02.0160812Z (Reading database ... 75%
2025-09-29T03:47:02.7236729Z (Reading database ... 80%
2025-09-29T03:47:03.4818357Z (Reading database ... 85%
2025-09-29T03:47:04.3254256Z (Reading database ... 90%
2025-09-29T03:47:05.1817535Z (Reading database ... 95%
2025-09-29T03:47:05.1818450Z (Reading database ... 100%
2025-09-29T03:47:05.1819253Z (Reading database ... 214164 files and directories currently installed.)
2025-09-29T03:47:05.1871465Z Preparing to unpack .../clang-format_1%3a18.0-59~exp2_amd64.deb ...
2025-09-29T03:47:05.1903264Z Unpacking clang-format:amd64 (1:18.0-59~exp2) ...
2025-09-29T03:47:05.3049064Z Selecting previously unselected package cppcheck.
2025-09-29T03:47:05.3210463Z Preparing to unpack .../cppcheck_2.13.0-2ubuntu3_amd64.deb ...
2025-09-29T03:47:05.3224070Z Unpacking cppcheck (2.13.0-2ubuntu3) ...
2025-09-29T03:47:05.4723090Z Setting up clang-format:amd64 (1:18.0-59~exp2) ...
2025-09-29T03:47:05.4765951Z Setting up cppcheck (2.13.0-2ubuntu3) ...
2025-09-29T03:47:05.4804575Z Processing triggers for man-db (2.12.0-4build2) ...
2025-09-29T03:48:50.3680105Z 
2025-09-29T03:48:50.3683676Z Running kernel seems to be up-to-date.
2025-09-29T03:48:50.3684267Z 
2025-09-29T03:48:50.3684472Z Restarting services...
2025-09-29T03:48:50.3755073Z 
2025-09-29T03:48:50.3755328Z Service restarts being deferred:
2025-09-29T03:48:50.3758207Z  systemctl restart hosted-compute-agent.service
2025-09-29T03:48:50.3758506Z 
2025-09-29T03:48:50.3758863Z No containers need to be restarted.
2025-09-29T03:48:50.3759160Z 
2025-09-29T03:48:50.3759508Z No user sessions are running outdated binaries.
2025-09-29T03:48:50.3759839Z 
2025-09-29T03:48:50.3760134Z No VM guests are running outdated hypervisor (qemu) binaries on this host.
2025-09-29T03:48:51.7172886Z ##[group]Run find src -name "*.cpp" -o -name "*.h" | xargs cpplint --filter=-legal/copyright,-build/include_subdir
2025-09-29T03:48:51.7173733Z [36;1mfind src -name "*.cpp" -o -name "*.h" | xargs cpplint --filter=-legal/copyright,-build/include_subdir[0m
2025-09-29T03:48:51.7216131Z shell: /usr/bin/bash -e {0}
2025-09-29T03:48:51.7216426Z env:
2025-09-29T03:48:51.7216641Z   CMAKE_VERSION: 3.20.0
2025-09-29T03:48:51.7216891Z   QT_VERSION: 6.5.0
2025-09-29T03:48:51.7217207Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:51.7217715Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-09-29T03:48:51.7219427Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:51.7219864Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:51.7220293Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:51.7220770Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-09-29T03:48:51.7221125Z ##[endgroup]
2025-09-29T03:48:51.9046673Z src/core/GitManager.cpp:6:  <filesystem> is an unapproved C++17 header.  [build/c++17] [5]
2025-09-29T03:48:51.9132143Z src/core/GitManager.cpp:21:  public: should be indented +1 space inside class GitManager::Impl  [whitespace/indent] [3]
2025-09-29T03:48:51.9161524Z src/core/GitManager.cpp:27:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [4]
2025-09-29T03:48:51.9209645Z src/core/GitManager.cpp:49:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9235485Z src/core/GitManager.cpp:59:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9248308Z src/core/GitManager.cpp:65:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9261575Z src/core/GitManager.cpp:71:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9274354Z src/core/GitManager.cpp:79:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9278849Z src/core/GitManager.cpp:80:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9285406Z src/core/GitManager.cpp:82:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9305049Z src/core/GitManager.cpp:92:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9309311Z src/core/GitManager.cpp:94:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9351374Z src/core/GitManager.cpp:118:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9367664Z src/core/GitManager.cpp:126:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9388363Z src/core/GitManager.cpp:135:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9425152Z src/core/GitManager.cpp:156:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9430358Z src/core/GitManager.cpp:159:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9439842Z src/core/GitManager.cpp:162:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9445930Z src/core/GitManager.cpp:166:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9461389Z src/core/GitManager.cpp:172:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9471817Z src/core/GitManager.cpp:176:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9477835Z src/core/GitManager.cpp:178:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9502653Z src/core/GitManager.cpp:189:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9516611Z src/core/GitManager.cpp:196:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9537806Z src/core/GitManager.cpp:207:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9557800Z src/core/GitManager.cpp:216:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9569071Z src/core/GitManager.cpp:222:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9580149Z src/core/GitManager.cpp:228:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9600343Z src/core/GitManager.cpp:240:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9606427Z src/core/GitManager.cpp:243:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9618134Z src/core/GitManager.cpp:251:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9628313Z src/core/GitManager.cpp:255:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9639439Z src/core/GitManager.cpp:261:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9644994Z src/core/GitManager.cpp:265:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9654581Z src/core/GitManager.cpp:269:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9660910Z src/core/GitManager.cpp:272:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9684298Z src/core/GitManager.cpp:285:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9689695Z src/core/GitManager.cpp:289:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9693661Z src/core/GitManager.cpp:290:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9706028Z src/core/GitManager.cpp:296:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9721822Z src/core/GitManager.cpp:304:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9727602Z src/core/GitManager.cpp:305:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9730633Z src/core/GitManager.cpp:306:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9737768Z src/core/GitManager.cpp:310:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9745938Z src/core/GitManager.cpp:314:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9754042Z src/core/GitManager.cpp:318:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9755814Z src/core/GitManager.cpp:319:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9763051Z src/core/GitManager.cpp:322:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9770318Z src/core/GitManager.cpp:326:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9778937Z src/core/GitManager.cpp:331:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9810640Z src/core/GitManager.cpp:351:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9811993Z src/core/GitManager.cpp:351:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9821393Z src/core/GitManager.cpp:356:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9826677Z src/core/GitManager.cpp:360:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9834914Z src/core/GitManager.cpp:362:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:51.9843541Z src/core/GitManager.cpp:365:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9848955Z src/core/GitManager.cpp:368:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9871974Z src/core/GitManager.cpp:379:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9877712Z src/core/GitManager.cpp:383:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:51.9881953Z src/core/GitManager.cpp:384:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0086608Z src/core/GitManager.cpp:501:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.0088308Z src/core/GitManager.cpp:501:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0091929Z src/core/GitManager.cpp:502:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0096860Z src/core/GitManager.cpp:503:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0101814Z src/core/GitManager.cpp:504:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0129326Z src/core/GitManager.cpp:520:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0176456Z src/core/GitManager.cpp:546:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0197271Z src/core/GitManager.cpp:557:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0247126Z src/core/GitManager.cpp:582:  At least two spaces is best between code and comments  [whitespace/comments] [2]
2025-09-29T03:48:52.0267449Z src/core/GitManager.cpp:592:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0291653Z src/core/GitManager.cpp:606:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0309900Z src/core/GitManager.cpp:617:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0341454Z src/core/GitManager.cpp:636:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0408688Z src/core/GitManager.cpp:677:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0500007Z src/core/GitManager.cpp:731:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0572221Z src/core/GitManager.cpp:773:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0634805Z src/core/GitManager.cpp:796:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0639092Z src/core/GitManager.cpp:797:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0662632Z src/core/GitManager.cpp:810:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0674680Z src/core/GitManager.cpp:814:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0720498Z src/core/GitManager.cpp:836:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0734091Z src/core/GitManager.cpp:844:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0777809Z src/core/GitManager.cpp:866:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0794846Z src/core/GitManager.cpp:872:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0801278Z src/core/GitManager.cpp:874:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0855284Z src/core/GitManager.cpp:895:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0859440Z src/core/GitManager.cpp:896:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0922753Z src/core/GitManager.cpp:928:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0942966Z src/core/GitManager.cpp:937:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0944315Z src/core/GitManager.cpp:937:  At least two spaces is best between code and comments  [whitespace/comments] [2]
2025-09-29T03:48:52.0963583Z src/core/GitManager.cpp:949:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.0980678Z src/core/GitManager.cpp:959:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.1022957Z src/core/GitManager.cpp:983:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.1055254Z src/core/GitManager.cpp:1001:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.1058718Z src/core/GitManager.cpp:1002:  Closing ) should be moved to the previous line  [whitespace/parens] [2]
2025-09-29T03:48:52.1132512Z src/core/GitManager.cpp:1039:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.1211933Z src/core/GitManager.cpp:1082:  Namespace should be terminated with "// namespace VersionTools"  [readability/namespace] [5]
2025-09-29T03:48:52.1229424Z src/core/GitManager.cpp:1105:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2642545Z src/core/GitManager.cpp:997:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]
2025-09-29T03:48:52.2644241Z src/core/GitManager.cpp:1078:  Add #include <string> for string  [build/include_what_you_use] [4]
2025-09-29T03:48:52.2647762Z src/core/GitManager.cpp:1108:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.2752791Z src/core/GitManager.h:27:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2763713Z src/core/GitManager.h:32:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2780111Z src/core/GitManager.h:36:  public: should be indented +1 space inside class GitManager  [whitespace/indent] [3]
2025-09-29T03:48:52.2793076Z src/core/GitManager.h:41:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2798239Z src/core/GitManager.h:42:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2799395Z src/core/GitManager.h:42:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2804175Z src/core/GitManager.h:43:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2815343Z src/core/GitManager.h:46:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2826086Z src/core/GitManager.h:52:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2835117Z src/core/GitManager.h:56:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2852869Z src/core/GitManager.h:60:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2863162Z src/core/GitManager.h:62:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2865651Z src/core/GitManager.h:64:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2869355Z src/core/GitManager.h:65:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2877781Z src/core/GitManager.h:67:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2887201Z src/core/GitManager.h:69:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2896131Z src/core/GitManager.h:71:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2901930Z src/core/GitManager.h:74:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2910361Z src/core/GitManager.h:76:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2915256Z src/core/GitManager.h:77:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2924437Z src/core/GitManager.h:79:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2933735Z src/core/GitManager.h:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2939058Z src/core/GitManager.h:84:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2947612Z src/core/GitManager.h:86:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.2952805Z src/core/GitManager.h:87:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2960330Z src/core/GitManager.h:89:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2971201Z src/core/GitManager.h:92:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.2984420Z src/core/GitManager.h:96:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3001841Z src/core/GitManager.h:102:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3014424Z src/core/GitManager.h:105:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3019779Z src/core/GitManager.h:108:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3036309Z src/core/GitManager.h:112:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3041980Z src/core/GitManager.h:115:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3056206Z src/core/GitManager.h:120:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3058986Z src/core/GitManager.h:122:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3060147Z src/core/GitManager.h:122:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3071431Z src/core/GitManager.h:125:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3079148Z src/core/GitManager.h:127:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3090095Z src/core/GitManager.h:133:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3093127Z src/core/GitManager.h:135:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3094214Z src/core/GitManager.h:135:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3105795Z src/core/GitManager.h:137:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3111051Z src/core/GitManager.h:138:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3116731Z src/core/GitManager.h:139:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3121171Z src/core/GitManager.h:140:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3131671Z src/core/GitManager.h:142:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3135674Z src/core/GitManager.h:143:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3149559Z src/core/GitManager.h:146:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3153439Z src/core/GitManager.h:147:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3162123Z src/core/GitManager.h:152:  private: should be indented +1 space inside class GitManager  [whitespace/indent] [3]
2025-09-29T03:48:52.3168067Z src/core/GitManager.h:155:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3179981Z src/core/GitManager.h:158:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3183689Z src/core/GitManager.h:159:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3185350Z src/core/GitManager.h:160:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.3191236Z src/core/GitManager.h:161:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3208123Z src/core/GitManager.h:165:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.3219010Z src/core/GitManager.h:168:  Namespace should be terminated with "// namespace VersionTools"  [readability/namespace] [5]
2025-09-29T03:48:52.3687193Z src/core/GitManager.h:168:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.4009260Z src/core/GitTypes.h:139:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4020640Z src/core/GitTypes.h:143:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4026498Z src/core/GitTypes.h:146:  Namespace should be terminated with "// namespace VersionTools"  [readability/namespace] [5]
2025-09-29T03:48:52.4173626Z src/core/GitTypes.h:146:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.4253582Z src/core/GitUtils.cpp:4:  <filesystem> is an unapproved C++17 header.  [build/c++17] [5]
2025-09-29T03:48:52.4278772Z src/core/GitUtils.cpp:11:  For a static/global string constant, use a C style string instead: "const char GitUtils::WHITESPACE_CHARS[]".  [runtime/string] [4]
2025-09-29T03:48:52.4327083Z src/core/GitUtils.cpp:36:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4337223Z src/core/GitUtils.cpp:40:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4349011Z src/core/GitUtils.cpp:46:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4355853Z src/core/GitUtils.cpp:51:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4362605Z src/core/GitUtils.cpp:53:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4378442Z src/core/GitUtils.cpp:62:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4388082Z src/core/GitUtils.cpp:67:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4456858Z src/core/GitUtils.cpp:108:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4475189Z src/core/GitUtils.cpp:118:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4516463Z src/core/GitUtils.cpp:139:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4525485Z src/core/GitUtils.cpp:145:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4535849Z src/core/GitUtils.cpp:149:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4541508Z src/core/GitUtils.cpp:152:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4550936Z src/core/GitUtils.cpp:157:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4556572Z src/core/GitUtils.cpp:161:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4578480Z src/core/GitUtils.cpp:174:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4592743Z src/core/GitUtils.cpp:181:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4601832Z src/core/GitUtils.cpp:184:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4603456Z src/core/GitUtils.cpp:185:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4616455Z src/core/GitUtils.cpp:192:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4620625Z src/core/GitUtils.cpp:194:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4625677Z src/core/GitUtils.cpp:196:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4630712Z src/core/GitUtils.cpp:198:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4640075Z src/core/GitUtils.cpp:202:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4645085Z src/core/GitUtils.cpp:204:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4662265Z src/core/GitUtils.cpp:214:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4670644Z src/core/GitUtils.cpp:219:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4691702Z src/core/GitUtils.cpp:231:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4702779Z src/core/GitUtils.cpp:237:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4713003Z src/core/GitUtils.cpp:243:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4730395Z src/core/GitUtils.cpp:252:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4733025Z src/core/GitUtils.cpp:254:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.4745756Z src/core/GitUtils.cpp:260:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4775583Z src/core/GitUtils.cpp:278:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4793573Z src/core/GitUtils.cpp:287:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4802424Z src/core/GitUtils.cpp:292:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4812880Z src/core/GitUtils.cpp:299:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4818690Z src/core/GitUtils.cpp:302:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4829410Z src/core/GitUtils.cpp:307:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4836994Z src/core/GitUtils.cpp:312:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4844932Z src/core/GitUtils.cpp:317:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4855614Z src/core/GitUtils.cpp:323:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4865865Z src/core/GitUtils.cpp:329:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4882025Z src/core/GitUtils.cpp:338:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4891897Z src/core/GitUtils.cpp:344:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4899978Z src/core/GitUtils.cpp:349:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4909822Z src/core/GitUtils.cpp:355:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4919662Z src/core/GitUtils.cpp:361:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4937467Z src/core/GitUtils.cpp:370:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4948546Z src/core/GitUtils.cpp:376:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4983949Z src/core/GitUtils.cpp:398:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.4995203Z src/core/GitUtils.cpp:404:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5006154Z src/core/GitUtils.cpp:410:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5025070Z src/core/GitUtils.cpp:419:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5034502Z src/core/GitUtils.cpp:424:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5047161Z src/core/GitUtils.cpp:431:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5062789Z src/core/GitUtils.cpp:439:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5072298Z src/core/GitUtils.cpp:444:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5082026Z src/core/GitUtils.cpp:450:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5094449Z src/core/GitUtils.cpp:458:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5118293Z src/core/GitUtils.cpp:470:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5129907Z src/core/GitUtils.cpp:477:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5140689Z src/core/GitUtils.cpp:483:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5151600Z src/core/GitUtils.cpp:490:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5162547Z src/core/GitUtils.cpp:496:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5186268Z src/core/GitUtils.cpp:511:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.5196467Z src/core/GitUtils.cpp:515:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5200588Z src/core/GitUtils.cpp:517:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5203796Z src/core/GitUtils.cpp:518:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.5207356Z src/core/GitUtils.cpp:519:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5215114Z src/core/GitUtils.cpp:523:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5227250Z src/core/GitUtils.cpp:531:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.5232138Z src/core/GitUtils.cpp:532:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.5239087Z src/core/GitUtils.cpp:535:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5243296Z src/core/GitUtils.cpp:537:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5245904Z src/core/GitUtils.cpp:538:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5253430Z src/core/GitUtils.cpp:541:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.5264750Z src/core/GitUtils.cpp:548:  Namespace should be terminated with "// namespace VersionTools"  [readability/namespace] [5]
2025-09-29T03:48:52.5935620Z src/core/GitUtils.cpp:421:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]
2025-09-29T03:48:52.5936900Z src/core/GitUtils.cpp:531:  Add #include <string> for string  [build/include_what_you_use] [4]
2025-09-29T03:48:52.5939219Z src/core/GitUtils.cpp:548:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.5998498Z src/core/GitUtils.h:13:  public: should be indented +1 space inside class GitUtils  [whitespace/indent] [3]
2025-09-29T03:48:52.6011718Z src/core/GitUtils.h:18:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6016731Z src/core/GitUtils.h:19:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6034858Z src/core/GitUtils.h:24:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6050697Z src/core/GitUtils.h:30:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6058378Z src/core/GitUtils.h:32:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6062728Z src/core/GitUtils.h:33:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6072159Z src/core/GitUtils.h:37:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6076966Z src/core/GitUtils.h:38:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6081618Z src/core/GitUtils.h:39:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6086587Z src/core/GitUtils.h:40:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6093634Z src/core/GitUtils.h:42:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6114077Z src/core/GitUtils.h:49:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6132679Z src/core/GitUtils.h:56:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6148567Z src/core/GitUtils.h:62:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6162059Z src/core/GitUtils.h:67:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6178468Z src/core/GitUtils.h:73:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6181402Z src/core/GitUtils.h:75:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6189186Z src/core/GitUtils.h:77:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6193665Z src/core/GitUtils.h:78:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6195041Z src/core/GitUtils.h:79:  private: should be indented +1 space inside class GitUtils  [whitespace/indent] [3]
2025-09-29T03:48:52.6209058Z src/core/GitUtils.h:85:  Namespace should be terminated with "// namespace VersionTools"  [readability/namespace] [5]
2025-09-29T03:48:52.6387358Z src/core/GitUtils.h:85:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.6533852Z src/core/SystemCommand.cpp:24:  public: should be indented +1 space inside class SystemCommand::Impl  [whitespace/indent] [3]
2025-09-29T03:48:52.6540049Z src/core/SystemCommand.cpp:26:  At least two spaces is best between code and comments  [whitespace/comments] [2]
2025-09-29T03:48:52.6543956Z src/core/SystemCommand.cpp:28:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6558142Z src/core/SystemCommand.cpp:36:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6592028Z src/core/SystemCommand.cpp:50:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6598711Z src/core/SystemCommand.cpp:52:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6641972Z src/core/SystemCommand.cpp:70:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6660501Z src/core/SystemCommand.cpp:80:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6665935Z src/core/SystemCommand.cpp:81:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6682237Z src/core/SystemCommand.cpp:86:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6688180Z src/core/SystemCommand.cpp:89:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6701142Z src/core/SystemCommand.cpp:95:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6709149Z src/core/SystemCommand.cpp:99:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6726154Z src/core/SystemCommand.cpp:108:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6730817Z src/core/SystemCommand.cpp:110:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6749020Z src/core/SystemCommand.cpp:119:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6770984Z src/core/SystemCommand.cpp:131:  Closing ) should be moved to the previous line  [whitespace/parens] [2]
2025-09-29T03:48:52.6772496Z src/core/SystemCommand.cpp:132:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6777699Z src/core/SystemCommand.cpp:135:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6788822Z src/core/SystemCommand.cpp:141:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6794304Z src/core/SystemCommand.cpp:144:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6804674Z src/core/SystemCommand.cpp:149:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6810342Z src/core/SystemCommand.cpp:152:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6828576Z src/core/SystemCommand.cpp:161:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6831608Z src/core/SystemCommand.cpp:163:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6841436Z src/core/SystemCommand.cpp:167:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6844649Z src/core/SystemCommand.cpp:169:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6854299Z src/core/SystemCommand.cpp:173:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6860116Z src/core/SystemCommand.cpp:176:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6869138Z src/core/SystemCommand.cpp:181:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6876055Z src/core/SystemCommand.cpp:184:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6884108Z src/core/SystemCommand.cpp:188:  At least two spaces is best between code and comments  [whitespace/comments] [2]
2025-09-29T03:48:52.6892030Z src/core/SystemCommand.cpp:191:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6898420Z src/core/SystemCommand.cpp:192:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.6911260Z src/core/SystemCommand.cpp:194:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6920244Z src/core/SystemCommand.cpp:198:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6935394Z src/core/SystemCommand.cpp:205:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6947185Z src/core/SystemCommand.cpp:210:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6954751Z src/core/SystemCommand.cpp:213:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6961676Z src/core/SystemCommand.cpp:216:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6977210Z src/core/SystemCommand.cpp:223:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.6988962Z src/core/SystemCommand.cpp:228:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7007613Z src/core/SystemCommand.cpp:236:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7015859Z src/core/SystemCommand.cpp:240:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7024897Z src/core/SystemCommand.cpp:245:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7033310Z src/core/SystemCommand.cpp:249:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7039459Z src/core/SystemCommand.cpp:252:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7047497Z src/core/SystemCommand.cpp:255:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7062490Z src/core/SystemCommand.cpp:261:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7074809Z src/core/SystemCommand.cpp:266:  At least two spaces is best between code and comments  [whitespace/comments] [2]
2025-09-29T03:48:52.7087587Z src/core/SystemCommand.cpp:272:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7095933Z src/core/SystemCommand.cpp:276:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7156058Z src/core/SystemCommand.cpp:307:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7177148Z src/core/SystemCommand.cpp:320:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.7182792Z src/core/SystemCommand.cpp:321:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.7189464Z src/core/SystemCommand.cpp:322:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.7194644Z src/core/SystemCommand.cpp:323:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.7203440Z src/core/SystemCommand.cpp:325:  Missing username in TODO; it should look like "// TODO(my_username): Stuff."  [readability/todo] [2]
2025-09-29T03:48:52.7232676Z src/core/SystemCommand.cpp:338:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.7265748Z src/core/SystemCommand.cpp:350:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7288613Z src/core/SystemCommand.cpp:362:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.7339086Z src/core/SystemCommand.cpp:388:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7351917Z src/core/SystemCommand.cpp:396:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7366392Z src/core/SystemCommand.cpp:403:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.7368778Z src/core/SystemCommand.cpp:404:  At least two spaces is best between code and comments  [whitespace/comments] [2]
2025-09-29T03:48:52.7373072Z src/core/SystemCommand.cpp:407:  Namespace should be terminated with "// namespace VersionTools"  [readability/namespace] [5]
2025-09-29T03:48:52.7924590Z src/core/SystemCommand.cpp:391:  Add #include <string> for string  [build/include_what_you_use] [4]
2025-09-29T03:48:52.7926094Z src/core/SystemCommand.cpp:391:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]
2025-09-29T03:48:52.7928619Z src/core/SystemCommand.cpp:407:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.7999827Z src/core/SystemCommand.h:19:  public: should be indented +1 space inside class SystemCommand  [whitespace/indent] [3]
2025-09-29T03:48:52.8007518Z src/core/SystemCommand.h:22:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8010464Z src/core/SystemCommand.h:24:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8025609Z src/core/SystemCommand.h:27:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8043861Z src/core/SystemCommand.h:32:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8049714Z src/core/SystemCommand.h:33:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8070217Z src/core/SystemCommand.h:39:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8074619Z src/core/SystemCommand.h:42:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8077548Z src/core/SystemCommand.h:44:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8085007Z src/core/SystemCommand.h:46:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8090219Z src/core/SystemCommand.h:49:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8096781Z src/core/SystemCommand.h:52:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8101901Z src/core/SystemCommand.h:55:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8103358Z src/core/SystemCommand.h:56:  private: should be indented +1 space inside class SystemCommand  [whitespace/indent] [3]
2025-09-29T03:48:52.8150776Z src/core/SystemCommand.h:71:  Namespace should be terminated with "// namespace VersionTools"  [readability/namespace] [5]
2025-09-29T03:48:52.8289068Z src/core/SystemCommand.h:58:  Add #include <memory> for unique_ptr<>  [build/include_what_you_use] [4]
2025-09-29T03:48:52.8290199Z src/core/SystemCommand.h:71:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.8294416Z src/macos/Utils/GitBridge-Bridging-Header.h:0:  No #ifndef header guard found, suggested CPP variable is: SRC_MACOS_UTILS_GITBRIDGE_BRIDGING_HEADER_H_  [build/header_guard] [5]
2025-09-29T03:48:52.8298235Z src/macos/Utils/GitBridge-Bridging-Header.h:1:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.8306175Z src/macos/Utils/GitBridge.h:0:  No #ifndef header guard found, suggested CPP variable is: SRC_MACOS_UTILS_GITBRIDGE_H_  [build/header_guard] [5]
2025-09-29T03:48:52.8321408Z src/macos/Utils/GitBridge.h:7:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8324033Z src/macos/Utils/GitBridge.h:8:  Using C-style cast.  Use reinterpret_cast<NSArray *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8326590Z src/macos/Utils/GitBridge.h:9:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8327687Z src/macos/Utils/GitBridge.h:9:  Using C-style cast.  Use reinterpret_cast<NSArray *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8329667Z src/macos/Utils/GitBridge.h:10:  Using C-style cast.  Use reinterpret_cast<NSArray *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8332378Z src/macos/Utils/GitBridge.h:11:  Using C-style cast.  Use reinterpret_cast<NSDictionary *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8335208Z src/macos/Utils/GitBridge.h:12:  Using C-style cast.  Use reinterpret_cast<NSArray *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8336885Z src/macos/Utils/GitBridge.h:13:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8339430Z src/macos/Utils/GitBridge.h:13:  Using C-style cast.  Use reinterpret_cast<NSDictionary *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8343041Z src/macos/Utils/GitBridge.h:14:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8344163Z src/macos/Utils/GitBridge.h:14:  Using C-style cast.  Use reinterpret_cast<NSArray *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8348170Z src/macos/Utils/GitBridge.h:17:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8351024Z src/macos/Utils/GitBridge.h:18:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8358500Z src/macos/Utils/GitBridge.h:23:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8362786Z src/macos/Utils/GitBridge.h:26:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8365575Z src/macos/Utils/GitBridge.h:27:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8368991Z src/macos/Utils/GitBridge.h:28:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8372145Z src/macos/Utils/GitBridge.h:29:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8375152Z src/macos/Utils/GitBridge.h:30:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8379616Z src/macos/Utils/GitBridge.h:33:  Using C-style cast.  Use reinterpret_cast<NSArray *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8382118Z src/macos/Utils/GitBridge.h:34:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8384560Z src/macos/Utils/GitBridge.h:35:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8387004Z src/macos/Utils/GitBridge.h:36:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8389769Z src/macos/Utils/GitBridge.h:37:  Using C-style cast.  Use static_cast<int>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8394050Z src/macos/Utils/GitBridge.h:40:  Using C-style cast.  Use reinterpret_cast<NSString *>(...) instead  [readability/casting] [4]
2025-09-29T03:48:52.8442718Z src/macos/Utils/GitBridge.h:42:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.8544813Z src/qt/VersionToolsMainWindow.cpp:10:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8551895Z src/qt/VersionToolsMainWindow.cpp:11:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8558490Z src/qt/VersionToolsMainWindow.cpp:12:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8565440Z src/qt/VersionToolsMainWindow.cpp:13:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8572531Z src/qt/VersionToolsMainWindow.cpp:14:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8579311Z src/qt/VersionToolsMainWindow.cpp:15:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8586438Z src/qt/VersionToolsMainWindow.cpp:16:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8593407Z src/qt/VersionToolsMainWindow.cpp:17:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8600401Z src/qt/VersionToolsMainWindow.cpp:18:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8607086Z src/qt/VersionToolsMainWindow.cpp:19:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8614086Z src/qt/VersionToolsMainWindow.cpp:20:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8621187Z src/qt/VersionToolsMainWindow.cpp:21:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8628161Z src/qt/VersionToolsMainWindow.cpp:22:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8635054Z src/qt/VersionToolsMainWindow.cpp:23:  Found C system header after other header. Should be: VersionToolsMainWindow.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:52.8638542Z src/qt/VersionToolsMainWindow.cpp:25:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
2025-09-29T03:48:52.8661247Z src/qt/VersionToolsMainWindow.cpp:37:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.8667777Z src/qt/VersionToolsMainWindow.cpp:41:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8673004Z src/qt/VersionToolsMainWindow.cpp:44:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8684247Z src/qt/VersionToolsMainWindow.cpp:51:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8687396Z src/qt/VersionToolsMainWindow.cpp:53:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8708938Z src/qt/VersionToolsMainWindow.cpp:65:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.8715985Z src/qt/VersionToolsMainWindow.cpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.8718501Z src/qt/VersionToolsMainWindow.cpp:72:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8725887Z src/qt/VersionToolsMainWindow.cpp:75:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8730003Z src/qt/VersionToolsMainWindow.cpp:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8731706Z src/qt/VersionToolsMainWindow.cpp:77:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8739885Z src/qt/VersionToolsMainWindow.cpp:80:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8743655Z src/qt/VersionToolsMainWindow.cpp:81:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8745311Z src/qt/VersionToolsMainWindow.cpp:82:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8752941Z src/qt/VersionToolsMainWindow.cpp:85:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8756887Z src/qt/VersionToolsMainWindow.cpp:86:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8758995Z src/qt/VersionToolsMainWindow.cpp:87:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8766341Z src/qt/VersionToolsMainWindow.cpp:90:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8770339Z src/qt/VersionToolsMainWindow.cpp:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8781443Z src/qt/VersionToolsMainWindow.cpp:96:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8788411Z src/qt/VersionToolsMainWindow.cpp:100:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.8792083Z src/qt/VersionToolsMainWindow.cpp:101:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8805202Z src/qt/VersionToolsMainWindow.cpp:108:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.8824442Z src/qt/VersionToolsMainWindow.cpp:118:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8829119Z src/qt/VersionToolsMainWindow.cpp:121:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8834012Z src/qt/VersionToolsMainWindow.cpp:124:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8845869Z src/qt/VersionToolsMainWindow.cpp:131:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.8867658Z src/qt/VersionToolsMainWindow.cpp:143:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.8876059Z src/qt/VersionToolsMainWindow.cpp:147:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8880161Z src/qt/VersionToolsMainWindow.cpp:149:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8888107Z src/qt/VersionToolsMainWindow.cpp:153:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8892193Z src/qt/VersionToolsMainWindow.cpp:155:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8898401Z src/qt/VersionToolsMainWindow.cpp:158:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8912761Z src/qt/VersionToolsMainWindow.cpp:166:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.8919041Z src/qt/VersionToolsMainWindow.cpp:169:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8928079Z src/qt/VersionToolsMainWindow.cpp:174:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8935023Z src/qt/VersionToolsMainWindow.cpp:178:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8945407Z src/qt/VersionToolsMainWindow.cpp:183:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8954013Z src/qt/VersionToolsMainWindow.cpp:187:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.8967470Z src/qt/VersionToolsMainWindow.cpp:195:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.8976004Z src/qt/VersionToolsMainWindow.cpp:198:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9006561Z src/qt/VersionToolsMainWindow.cpp:210:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9018708Z src/qt/VersionToolsMainWindow.cpp:216:  Closing ) should be moved to the previous line  [whitespace/parens] [2]
2025-09-29T03:48:52.9020206Z src/qt/VersionToolsMainWindow.cpp:217:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9031858Z src/qt/VersionToolsMainWindow.cpp:224:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9033775Z src/qt/VersionToolsMainWindow.cpp:225:  Missing username in TODO; it should look like "// TODO(my_username): Stuff."  [readability/todo] [2]
2025-09-29T03:48:52.9035755Z src/qt/VersionToolsMainWindow.cpp:226:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9039055Z src/qt/VersionToolsMainWindow.cpp:227:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.9046810Z src/qt/VersionToolsMainWindow.cpp:231:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9060038Z src/qt/VersionToolsMainWindow.cpp:238:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9069872Z src/qt/VersionToolsMainWindow.cpp:244:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9086029Z src/qt/VersionToolsMainWindow.cpp:253:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9095487Z src/qt/VersionToolsMainWindow.cpp:256:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9114422Z src/qt/VersionToolsMainWindow.cpp:266:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9122486Z src/qt/VersionToolsMainWindow.cpp:270:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9129303Z src/qt/VersionToolsMainWindow.cpp:274:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9134967Z src/qt/VersionToolsMainWindow.cpp:277:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9145276Z src/qt/VersionToolsMainWindow.cpp:282:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9155685Z src/qt/VersionToolsMainWindow.cpp:288:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9162882Z src/qt/VersionToolsMainWindow.cpp:291:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9176581Z src/qt/VersionToolsMainWindow.cpp:298:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9183744Z src/qt/VersionToolsMainWindow.cpp:301:  At least two spaces is best between code and comments  [whitespace/comments] [2]
2025-09-29T03:48:52.9189123Z src/qt/VersionToolsMainWindow.cpp:304:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.9194186Z src/qt/VersionToolsMainWindow.cpp:305:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9198889Z src/qt/VersionToolsMainWindow.cpp:307:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9224615Z src/qt/VersionToolsMainWindow.cpp:320:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9228849Z src/qt/VersionToolsMainWindow.cpp:322:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9239394Z src/qt/VersionToolsMainWindow.cpp:326:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9250044Z src/qt/VersionToolsMainWindow.cpp:331:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9258212Z src/qt/VersionToolsMainWindow.cpp:336:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9275498Z src/qt/VersionToolsMainWindow.cpp:343:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.9284956Z src/qt/VersionToolsMainWindow.cpp:348:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9290651Z src/qt/VersionToolsMainWindow.cpp:351:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9298520Z src/qt/VersionToolsMainWindow.cpp:355:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9304005Z src/qt/VersionToolsMainWindow.cpp:358:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:52.9308738Z src/qt/VersionToolsMainWindow.cpp:360:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9316515Z src/qt/VersionToolsMainWindow.cpp:365:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9322132Z src/qt/VersionToolsMainWindow.cpp:368:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9329830Z src/qt/VersionToolsMainWindow.cpp:372:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9339042Z src/qt/VersionToolsMainWindow.cpp:377:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9347406Z src/qt/VersionToolsMainWindow.cpp:382:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9791265Z src/qt/VersionToolsMainWindow.cpp:387:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:52.9882825Z src/qt/VersionToolsMainWindow.h:27:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:52.9891821Z src/qt/VersionToolsMainWindow.h:30:  public: should be indented +1 space inside class VersionToolsMainWindow  [whitespace/indent] [3]
2025-09-29T03:48:52.9900304Z src/qt/VersionToolsMainWindow.h:31:  Constructors callable with one argument should be marked explicit.  [runtime/explicit] [4]
2025-09-29T03:48:52.9904565Z src/qt/VersionToolsMainWindow.h:34:  protected: should be indented +1 space inside class VersionToolsMainWindow  [whitespace/indent] [3]
2025-09-29T03:48:52.9911051Z src/qt/VersionToolsMainWindow.h:37:  private slots: should be indented +1 space inside class VersionToolsMainWindow  [whitespace/indent] [3]
2025-09-29T03:48:52.9942103Z src/qt/VersionToolsMainWindow.h:49:  private: should be indented +1 space inside class VersionToolsMainWindow  [whitespace/indent] [3]
2025-09-29T03:48:52.9979423Z src/qt/VersionToolsMainWindow.h:68:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:52.9989703Z src/qt/VersionToolsMainWindow.h:74:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0005444Z src/qt/VersionToolsMainWindow.h:82:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0010463Z src/qt/VersionToolsMainWindow.h:85:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0021112Z src/qt/VersionToolsMainWindow.h:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0028712Z src/qt/VersionToolsMainWindow.h:95:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0040092Z src/qt/VersionToolsMainWindow.h:100:  At least two spaces is best between code and comments  [whitespace/comments] [2]
2025-09-29T03:48:53.0122154Z src/qt/VersionToolsMainWindow.h:100:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:53.0165641Z src/qt/main.cpp:9:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0169471Z src/qt/main.cpp:11:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0179693Z src/qt/main.cpp:17:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0184230Z src/qt/main.cpp:20:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0189016Z src/qt/main.cpp:23:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0195148Z src/qt/main.cpp:27:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0215860Z src/qt/main.cpp:29:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:53.0253510Z src/qt/utils/GitWorker.cpp:3:  Found C system header after other header. Should be: GitWorker.h, c system, c++ system, other.  [build/include_order] [4]
2025-09-29T03:48:53.0256163Z src/qt/utils/GitWorker.cpp:5:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
2025-09-29T03:48:53.0264495Z src/qt/utils/GitWorker.cpp:10:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0270603Z src/qt/utils/GitWorker.cpp:14:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0274268Z src/qt/utils/GitWorker.cpp:16:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0278870Z src/qt/utils/GitWorker.cpp:18:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0287365Z src/qt/utils/GitWorker.cpp:22:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0303552Z src/qt/utils/GitWorker.cpp:32:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0307074Z src/qt/utils/GitWorker.cpp:34:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0329983Z src/qt/utils/GitWorker.cpp:47:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0333623Z src/qt/utils/GitWorker.cpp:49:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0343154Z src/qt/utils/GitWorker.cpp:54:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0347061Z src/qt/utils/GitWorker.cpp:56:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0367322Z src/qt/utils/GitWorker.cpp:67:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0371276Z src/qt/utils/GitWorker.cpp:69:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0380850Z src/qt/utils/GitWorker.cpp:74:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0384726Z src/qt/utils/GitWorker.cpp:76:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0404214Z src/qt/utils/GitWorker.cpp:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0408281Z src/qt/utils/GitWorker.cpp:89:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0413839Z src/qt/utils/GitWorker.cpp:91:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0433333Z src/qt/utils/GitWorker.cpp:102:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0436902Z src/qt/utils/GitWorker.cpp:104:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0440798Z src/qt/utils/GitWorker.cpp:106:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0459538Z src/qt/utils/GitWorker.cpp:117:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0463261Z src/qt/utils/GitWorker.cpp:119:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0466945Z src/qt/utils/GitWorker.cpp:121:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0485567Z src/qt/utils/GitWorker.cpp:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0489296Z src/qt/utils/GitWorker.cpp:134:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0493313Z src/qt/utils/GitWorker.cpp:136:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0661857Z src/qt/utils/GitWorker.cpp:70:  Add #include <string> for string  [build/include_what_you_use] [4]
2025-09-29T03:48:53.0663013Z src/qt/utils/GitWorker.cpp:70:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]
2025-09-29T03:48:53.0666104Z src/qt/utils/GitWorker.cpp:146:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:53.0706745Z src/qt/utils/GitWorker.h:10:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0715545Z src/qt/utils/GitWorker.h:13:  public: should be indented +1 space inside class GitWorker  [whitespace/indent] [3]
2025-09-29T03:48:53.0725827Z src/qt/utils/GitWorker.h:16:  public slots: should be indented +1 space inside class GitWorker  [whitespace/indent] [3]
2025-09-29T03:48:53.0750242Z src/qt/utils/GitWorker.h:26:  signals: should be indented +1 space inside class GitWorker  [whitespace/indent] [3]
2025-09-29T03:48:53.0769709Z src/qt/utils/GitWorker.h:33:  private: should be indented +1 space inside class GitWorker  [whitespace/indent] [3]
2025-09-29T03:48:53.0808672Z src/qt/utils/GitWorker.h:35:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:53.0866348Z src/qt/utils/ThemeManager.cpp:7:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0885652Z src/qt/utils/ThemeManager.cpp:19:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0894163Z src/qt/utils/ThemeManager.cpp:24:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0898303Z src/qt/utils/ThemeManager.cpp:26:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0909309Z src/qt/utils/ThemeManager.cpp:33:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0913207Z src/qt/utils/ThemeManager.cpp:35:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0924434Z src/qt/utils/ThemeManager.cpp:42:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.0959014Z src/qt/utils/ThemeManager.cpp:57:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.0962484Z src/qt/utils/ThemeManager.cpp:59:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.0968996Z src/qt/utils/ThemeManager.cpp:61:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.0976495Z src/qt/utils/ThemeManager.cpp:65:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.1011791Z src/qt/utils/ThemeManager.cpp:80:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.1013809Z src/qt/utils/ThemeManager.cpp:81:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.1020783Z src/qt/utils/ThemeManager.cpp:83:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.1028572Z src/qt/utils/ThemeManager.cpp:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.1042888Z src/qt/utils/ThemeManager.cpp:95:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.1505334Z src/qt/utils/ThemeManager.cpp:379:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:53.1543955Z src/qt/utils/ThemeManager.h:8:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.1549913Z src/qt/utils/ThemeManager.h:9:  public: should be indented +1 space inside class ThemeManager  [whitespace/indent] [3]
2025-09-29T03:48:53.1562349Z src/qt/utils/ThemeManager.h:13:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.1564393Z src/qt/utils/ThemeManager.h:14:  private: should be indented +1 space inside class ThemeManager  [whitespace/indent] [3]
2025-09-29T03:48:53.1606059Z src/qt/utils/ThemeManager.h:19:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:53.1709035Z src/qt/widgets/ChangesWidget.h:24:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.1718458Z src/qt/widgets/ChangesWidget.h:27:  public: should be indented +1 space inside class ChangesWidget  [whitespace/indent] [3]
2025-09-29T03:48:53.1736487Z src/qt/widgets/ChangesWidget.h:33:  private slots: should be indented +1 space inside class ChangesWidget  [whitespace/indent] [3]
2025-09-29T03:48:53.1754372Z src/qt/widgets/ChangesWidget.h:41:  private: should be indented +1 space inside class ChangesWidget  [whitespace/indent] [3]
2025-09-29T03:48:53.1783509Z src/qt/widgets/ChangesWidget.h:55:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.1793569Z src/qt/widgets/ChangesWidget.h:60:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.1801306Z src/qt/widgets/ChangesWidget.h:64:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.1811496Z src/qt/widgets/ChangesWidget.h:69:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]
2025-09-29T03:48:53.1876079Z src/qt/widgets/ChangesWidget.h:71:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:53.1996568Z src/qt/widgets/SidebarWidget.cpp:24:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.2006266Z src/qt/widgets/SidebarWidget.cpp:30:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.2140994Z src/qt/widgets/SidebarWidget.cpp:122:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.2144311Z src/qt/widgets/SidebarWidget.cpp:124:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.2155358Z src/qt/widgets/SidebarWidget.cpp:129:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.2166033Z src/qt/widgets/SidebarWidget.cpp:134:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.2176778Z src/qt/widgets/SidebarWidget.cpp:139:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.2197190Z src/qt/widgets/SidebarWidget.cpp:149:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.2220471Z src/qt/widgets/SidebarWidget.cpp:160:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.2246674Z src/qt/widgets/SidebarWidget.cpp:173:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.2291631Z src/qt/widgets/SidebarWidget.cpp:194:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.2344669Z src/qt/widgets/SidebarWidget.cpp:220:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
2025-09-29T03:48:53.2373448Z src/qt/widgets/SidebarWidget.cpp:233:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.2613548Z src/qt/widgets/SidebarWidget.cpp:240:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:53.2676054Z src/qt/widgets/SidebarWidget.h:16:  { should almost always be at the end of the previous line  [whitespace/braces] [4]
2025-09-29T03:48:53.2684916Z src/qt/widgets/SidebarWidget.h:19:  public: should be indented +1 space inside class SidebarWidget  [whitespace/indent] [3]
2025-09-29T03:48:53.2703220Z src/qt/widgets/SidebarWidget.h:25:  signals: should be indented +1 space inside class SidebarWidget  [whitespace/indent] [3]
2025-09-29T03:48:53.2709087Z src/qt/widgets/SidebarWidget.h:28:  private slots: should be indented +1 space inside class SidebarWidget  [whitespace/indent] [3]
2025-09-29T03:48:53.2715108Z src/qt/widgets/SidebarWidget.h:31:  private: should be indented +1 space inside class SidebarWidget  [whitespace/indent] [3]
2025-09-29T03:48:53.2800356Z src/qt/widgets/SidebarWidget.h:52:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
2025-09-29T03:48:53.2801661Z Done processing src/core/GitManager.cpp
2025-09-29T03:48:53.2802281Z Done processing src/core/GitManager.h
2025-09-29T03:48:53.2802829Z Done processing src/core/GitTypes.h
2025-09-29T03:48:53.2803389Z Done processing src/core/GitUtils.cpp
2025-09-29T03:48:53.2803917Z Done processing src/core/GitUtils.h
2025-09-29T03:48:53.2804887Z Done processing src/core/SystemCommand.cpp
2025-09-29T03:48:53.2805277Z Done processing src/core/SystemCommand.h
2025-09-29T03:48:53.2805727Z Done processing src/macos/Utils/GitBridge-Bridging-Header.h
2025-09-29T03:48:53.2806184Z Done processing src/macos/Utils/GitBridge.h
2025-09-29T03:48:53.2806580Z Done processing src/qt/VersionToolsMainWindow.cpp
2025-09-29T03:48:53.2807011Z Done processing src/qt/VersionToolsMainWindow.h
2025-09-29T03:48:53.2807397Z Done processing src/qt/main.cpp
2025-09-29T03:48:53.2807738Z Done processing src/qt/utils/GitWorker.cpp
2025-09-29T03:48:53.2808767Z Done processing src/qt/utils/GitWorker.h
2025-09-29T03:48:53.2809159Z Done processing src/qt/utils/ThemeManager.cpp
2025-09-29T03:48:53.2809536Z Done processing src/qt/utils/ThemeManager.h
2025-09-29T03:48:53.2809927Z Done processing src/qt/widgets/ChangesWidget.h
2025-09-29T03:48:53.2810326Z Done processing src/qt/widgets/SidebarWidget.cpp
2025-09-29T03:48:53.2810771Z Done processing src/qt/widgets/SidebarWidget.h
2025-09-29T03:48:53.2811147Z Total errors found: 591
2025-09-29T03:48:53.2894682Z ##[error]Process completed with exit code 123.
2025-09-29T03:48:53.2955753Z ##[group]Run cppcheck --enable=all --suppress=missingIncludeSystem src/
2025-09-29T03:48:53.2956477Z [36;1mcppcheck --enable=all --suppress=missingIncludeSystem src/[0m
2025-09-29T03:48:53.3003576Z shell: /usr/bin/bash -e {0}
2025-09-29T03:48:53.3003892Z env:
2025-09-29T03:48:53.3004134Z   CMAKE_VERSION: 3.20.0
2025-09-29T03:48:53.3004400Z   QT_VERSION: 6.5.0
2025-09-29T03:48:53.3004764Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:53.3005319Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-09-29T03:48:53.3005869Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:53.3006344Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:53.3006818Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:53.3007318Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-09-29T03:48:53.3007712Z ##[endgroup]
2025-09-29T03:48:53.3701139Z Checking src/core/GitManager.cpp ...
2025-09-29T03:48:54.3154784Z src/core/GitManager.cpp:27:5: style: Class 'Impl' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
2025-09-29T03:48:54.3155864Z     Impl(const std::string& repoPath) : repositoryPath(repoPath) {
2025-09-29T03:48:54.3156262Z     ^
2025-09-29T03:48:54.3303294Z src/core/GitManager.cpp:785:35: style: Condition '!line.empty()' is always true [knownConditionTrueFalse]
2025-09-29T03:48:54.3304171Z         } else if (currentHunk && !line.empty()) {
2025-09-29T03:48:54.3304776Z                                   ^
2025-09-29T03:48:54.3305394Z src/core/GitManager.cpp:769:23: note: Assuming that condition 'line.empty()' is not redundant
2025-09-29T03:48:54.3305913Z         if (line.empty()) continue;
2025-09-29T03:48:54.3306209Z                       ^
2025-09-29T03:48:54.3306605Z src/core/GitManager.cpp:785:35: note: Condition '!line.empty()' is always true
2025-09-29T03:48:54.3307129Z         } else if (currentHunk && !line.empty()) {
2025-09-29T03:48:54.3307465Z                                   ^
2025-09-29T03:48:54.3308430Z src/core/GitManager.cpp:880:39: style: Condition '!line.empty()' is always true [knownConditionTrueFalse]
2025-09-29T03:48:54.3309048Z             } else if (currentHunk && !line.empty()) {
2025-09-29T03:48:54.3309384Z                                       ^
2025-09-29T03:48:54.3309886Z src/core/GitManager.cpp:862:27: note: Assuming that condition 'line.empty()' is not redundant
2025-09-29T03:48:54.3310402Z             if (line.empty()) continue;
2025-09-29T03:48:54.3310698Z                           ^
2025-09-29T03:48:54.3311105Z src/core/GitManager.cpp:880:39: note: Condition '!line.empty()' is always true
2025-09-29T03:48:54.3311582Z             } else if (currentHunk && !line.empty()) {
2025-09-29T03:48:54.3311914Z                                       ^
2025-09-29T03:48:54.3373706Z src/core/GitManager.cpp:394:15: style: Local variable 'commit' shadows outer function [shadowFunction]
2025-09-29T03:48:54.3374856Z     GitCommit commit;
2025-09-29T03:48:54.3375399Z               ^
2025-09-29T03:48:54.3376034Z src/core/GitManager.h:59:24: note: Shadowed declaration
2025-09-29T03:48:54.3377175Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-09-29T03:48:54.3378474Z                        ^
2025-09-29T03:48:54.3379061Z src/core/GitManager.cpp:394:15: note: Shadow variable
2025-09-29T03:48:54.3379532Z     GitCommit commit;
2025-09-29T03:48:54.3379833Z               ^
2025-09-29T03:48:54.3380462Z src/core/GitManager.cpp:580:23: style: Local variable 'commit' shadows outer function [shadowFunction]
2025-09-29T03:48:54.3381214Z             GitCommit commit;
2025-09-29T03:48:54.3381555Z                       ^
2025-09-29T03:48:54.3381949Z src/core/GitManager.h:59:24: note: Shadowed declaration
2025-09-29T03:48:54.3382658Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-09-29T03:48:54.3383261Z                        ^
2025-09-29T03:48:54.3384139Z src/core/GitManager.cpp:580:23: note: Shadow variable
2025-09-29T03:48:54.3384550Z             GitCommit commit;
2025-09-29T03:48:54.3384823Z                       ^
2025-09-29T03:48:54.3385342Z src/core/GitManager.cpp:650:18: style: Local variable 'stash' shadows outer function [shadowFunction]
2025-09-29T03:48:54.3385884Z         GitStash stash;
2025-09-29T03:48:54.3386120Z                  ^
2025-09-29T03:48:54.3386477Z src/core/GitManager.h:115:24: note: Shadowed declaration
2025-09-29T03:48:54.3387479Z     GitOperationResult stash(const std::string& message = "", bool includeUntracked = false);
2025-09-29T03:48:54.3388270Z                        ^
2025-09-29T03:48:54.3388602Z src/core/GitManager.cpp:650:18: note: Shadow variable
2025-09-29T03:48:54.3388956Z         GitStash stash;
2025-09-29T03:48:54.3389190Z                  ^
2025-09-29T03:48:54.3389870Z src/core/GitManager.cpp:546:20: performance: Inefficient usage of string::find() in condition; string::starts_with() could be faster. [stlIfStrFind]
2025-09-29T03:48:54.3390734Z         if (branch.name.find("origin/") == 0 || branch.name.find("remotes/") == 0) {
2025-09-29T03:48:54.3391156Z                    ^
2025-09-29T03:48:54.3391802Z src/core/GitManager.cpp:549:24: performance: Inefficient usage of string::find() in condition; string::starts_with() could be faster. [stlIfStrFind]
2025-09-29T03:48:54.3392536Z             if (branch.name.find("remotes/") == 0) {
2025-09-29T03:48:54.3392852Z                        ^
2025-09-29T03:48:54.3530007Z Checking src/core/GitManager.cpp: USE_LIBGIT2...
2025-09-29T03:48:55.2750063Z Checking src/core/GitManager.cpp: _WIN32...
2025-09-29T03:48:56.2058259Z 1/8 files checked 36% done
2025-09-29T03:48:56.2058839Z Checking src/core/GitUtils.cpp ...
2025-09-29T03:48:56.2628442Z src/core/GitUtils.cpp:347:18: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use resize() or pop_back() instead. [uselessCallsSubstr]
2025-09-29T03:48:56.2630201Z         result = result.substr(0, result.length() - 4);
2025-09-29T03:48:56.2630768Z                  ^
2025-09-29T03:48:56.2631764Z src/core/GitUtils.cpp:232:5: style: Consider using std::all_of or std::none_of algorithm instead of a raw loop. [useStlAlgorithm]
2025-09-29T03:48:56.2632893Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-09-29T03:48:56.2633434Z     ^
2025-09-29T03:48:56.2634250Z src/core/GitUtils.cpp:446:21: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
2025-09-29T03:48:56.2635195Z         if (c == 0) {
2025-09-29T03:48:56.2635581Z                     ^
2025-09-29T03:48:56.2636465Z src/core/GitUtils.cpp:480:13: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-09-29T03:48:56.2637415Z             count++;
2025-09-29T03:48:56.2637774Z             ^
2025-09-29T03:48:56.2638825Z src/core/GitUtils.cpp:493:13: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-09-29T03:48:56.2640462Z             count++;
2025-09-29T03:48:56.2640832Z             ^
2025-09-29T03:48:56.2668992Z 2/8 files checked 53% done
2025-09-29T03:48:56.2669538Z Checking src/core/SystemCommand.cpp ...
2025-09-29T03:48:56.2884566Z src/core/SystemCommand.cpp:290:21: style: Local variable 'bytesRead' shadows outer variable [shadowVariable]
2025-09-29T03:48:56.2885657Z             ssize_t bytesRead;
2025-09-29T03:48:56.2886129Z                     ^
2025-09-29T03:48:56.2886740Z src/core/SystemCommand.cpp:278:17: note: Shadowed declaration
2025-09-29T03:48:56.2887464Z         ssize_t bytesRead;
2025-09-29T03:48:56.2888105Z                 ^
2025-09-29T03:48:56.2888666Z src/core/SystemCommand.cpp:290:21: note: Shadow variable
2025-09-29T03:48:56.2889340Z             ssize_t bytesRead;
2025-09-29T03:48:56.2889800Z                     ^
2025-09-29T03:48:56.2890829Z src/core/SystemCommand.cpp:233:19: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
2025-09-29T03:48:56.2892500Z             cArgs.push_back(const_cast<char*>(arg.c_str()));
2025-09-29T03:48:56.2893129Z                   ^
2025-09-29T03:48:56.2915777Z Checking src/core/SystemCommand.cpp: _WIN32...
2025-09-29T03:48:56.3085704Z src/core/SystemCommand.cpp:398:73: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-09-29T03:48:56.3086961Z         if (GetFileAttributes(path.c_str()) != INVALID_FILE_ATTRIBUTES) {
2025-09-29T03:48:56.3087696Z                                                                         ^
2025-09-29T03:48:56.3100292Z 3/8 files checked 65% done
2025-09-29T03:48:56.3100847Z Checking src/qt/VersionToolsMainWindow.cpp ...
2025-09-29T03:48:56.3119276Z src/qt/VersionToolsMainWindow.h:100:0: error: #endif without #if [preprocessorErrorDirective]
2025-09-29T03:48:56.3120225Z #endif // VERSIONTOOLSMAINWINDOW_H
2025-09-29T03:48:56.3120759Z ^
2025-09-29T03:48:56.3121370Z 4/8 files checked 77% done
2025-09-29T03:48:56.3121823Z Checking src/qt/main.cpp ...
2025-09-29T03:48:56.3128252Z 5/8 files checked 78% done
2025-09-29T03:48:56.3128744Z Checking src/qt/utils/GitWorker.cpp ...
2025-09-29T03:48:56.3136330Z src/qt/utils/GitWorker.cpp:2:0: information: Include file: "../core/GitManager.h" not found. [missingInclude]
2025-09-29T03:48:56.3137349Z #include "../core/GitManager.h"
2025-09-29T03:48:56.3137784Z ^
2025-09-29T03:48:56.3138786Z src/qt/utils/GitWorker.cpp:146:0: information: Include file: "GitWorker.moc" not found. [missingInclude]
2025-09-29T03:48:56.3139653Z #include "GitWorker.moc"
2025-09-29T03:48:56.3140033Z ^
2025-09-29T03:48:56.3147377Z src/qt/utils/GitWorker.h:16:8: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
2025-09-29T03:48:56.3148937Z public slots:
2025-09-29T03:48:56.3149282Z        ^
2025-09-29T03:48:56.3149627Z 6/8 files checked 82% done
2025-09-29T03:48:56.3150119Z Checking src/qt/utils/ThemeManager.cpp ...
2025-09-29T03:48:56.3220341Z Checking src/qt/utils/ThemeManager.cpp: Q_OS_LINUX...
2025-09-29T03:48:56.3282286Z Checking src/qt/utils/ThemeManager.cpp: Q_OS_WIN...
2025-09-29T03:48:56.3323290Z 7/8 files checked 93% done
2025-09-29T03:48:56.3323864Z Checking src/qt/widgets/SidebarWidget.cpp ...
2025-09-29T03:48:56.3333634Z src/qt/widgets/SidebarWidget.h:7:0: information: Include file: "../core/GitTypes.h" not found. [missingInclude]
2025-09-29T03:48:56.3334681Z #include "../core/GitTypes.h"
2025-09-29T03:48:56.3335106Z ^
2025-09-29T03:48:56.3335976Z src/qt/widgets/SidebarWidget.cpp:240:0: information: Include file: "SidebarWidget.moc" not found. [missingInclude]
2025-09-29T03:48:56.3337002Z #include "SidebarWidget.moc"
2025-09-29T03:48:56.3337415Z ^
2025-09-29T03:48:56.3345981Z src/qt/widgets/SidebarWidget.h:28:9: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
2025-09-29T03:48:56.3347672Z private slots:
2025-09-29T03:48:56.3348275Z         ^
2025-09-29T03:48:56.3348642Z 8/8 files checked 100% done
2025-09-29T03:48:56.3349542Z src/core/GitManager.cpp:65:0: style: The function 'initRepository' is never used. [unusedFunction]
2025-09-29T03:48:56.3350807Z GitOperationResult GitManager::initRepository(const std::string& path, bool bare) {
2025-09-29T03:48:56.3351637Z ^
2025-09-29T03:48:56.3352382Z src/core/GitManager.cpp:90:0: style: The function 'openRepository' is never used. [unusedFunction]
2025-09-29T03:48:56.3353568Z GitOperationResult GitManager::openRepository(const std::string& path) {
2025-09-29T03:48:56.3354323Z ^
2025-09-29T03:48:56.3355093Z src/core/GitManager.cpp:121:0: style: The function 'getRepositoryInfo' is never used. [unusedFunction]
2025-09-29T03:48:56.3356178Z GitRepository GitManager::getRepositoryInfo() const {
2025-09-29T03:48:56.3356751Z ^
2025-09-29T03:48:56.3357496Z src/core/GitManager.cpp:232:0: style: The function 'getRepositoryPath' is never used. [unusedFunction]
2025-09-29T03:48:56.3358724Z std::string GitManager::getRepositoryPath() const {
2025-09-29T03:48:56.3359271Z ^
2025-09-29T03:48:56.3360224Z src/core/GitManager.cpp:247:0: style: The function 'addAllFiles' is never used. [unusedFunction]
2025-09-29T03:48:56.3361239Z GitOperationResult GitManager::addAllFiles() {
2025-09-29T03:48:56.3361788Z ^
2025-09-29T03:48:56.3362541Z src/core/GitManager.cpp:251:0: style: The function 'removeFiles' is never used. [unusedFunction]
2025-09-29T03:48:56.3363836Z GitOperationResult GitManager::removeFiles(const std::vector<std::string>& files, bool cached) {
2025-09-29T03:48:56.3364741Z ^
2025-09-29T03:48:56.3365415Z src/core/GitManager.cpp:265:0: style: The function 'resetFiles' is never used. [unusedFunction]
2025-09-29T03:48:56.3366617Z GitOperationResult GitManager::resetFiles(const std::vector<std::string>& files) {
2025-09-29T03:48:56.3367434Z ^
2025-09-29T03:48:56.3368305Z src/core/GitManager.cpp:276:0: style: The function 'resetHard' is never used. [unusedFunction]
2025-09-29T03:48:56.3369470Z GitOperationResult GitManager::resetHard(const std::string& commitHash) {
2025-09-29T03:48:56.3370214Z ^
2025-09-29T03:48:56.3370978Z src/core/GitManager.cpp:289:0: style: The function 'commitWithFiles' is never used. [unusedFunction]
2025-09-29T03:48:56.3372203Z GitOperationResult GitManager::commitWithFiles(const std::string& message,
2025-09-29T03:48:56.3372938Z ^
2025-09-29T03:48:56.3373677Z src/core/GitManager.cpp:301:0: style: The function 'getCommitHistory' is never used. [unusedFunction]
2025-09-29T03:48:56.3374794Z std::vector<GitCommit> GitManager::getCommitHistory(int maxCount,
2025-09-29T03:48:56.3375495Z ^
2025-09-29T03:48:56.3376174Z src/core/GitManager.cpp:350:0: style: The function 'getCommit' is never used. [unusedFunction]
2025-09-29T03:48:56.3377293Z std::optional<GitCommit> GitManager::getCommit(const std::string& hash) const {
2025-09-29T03:48:56.3378219Z ^
2025-09-29T03:48:56.3378924Z src/core/GitManager.cpp:477:0: style: The function 'getLastError' is never used. [unusedFunction]
2025-09-29T03:48:56.3379915Z std::string GitManager::getLastError() const {
2025-09-29T03:48:56.3380426Z ^
2025-09-29T03:48:56.3381196Z src/core/GitManager.cpp:481:0: style: The function 'hasUncommittedChanges' is never used. [unusedFunction]
2025-09-29T03:48:56.3382241Z bool GitManager::hasUncommittedChanges() const {
2025-09-29T03:48:56.3382760Z ^
2025-09-29T03:48:56.3383457Z src/core/GitManager.cpp:485:0: style: The function 'hasUnstagedChanges' is never used. [unusedFunction]
2025-09-29T03:48:56.3384404Z bool GitManager::hasUnstagedChanges() const {
2025-09-29T03:48:56.3384910Z ^
2025-09-29T03:48:56.3385602Z src/core/GitManager.cpp:489:0: style: The function 'hasStagedChanges' is never used. [unusedFunction]
2025-09-29T03:48:56.3386609Z bool GitManager::hasStagedChanges() const {
2025-09-29T03:48:56.3387090Z ^
2025-09-29T03:48:56.3387683Z src/core/GitManager.cpp:493:0: style: The function 'setLogCallback' is never used. [unusedFunction]
2025-09-29T03:48:56.3388762Z void GitManager::setLogCallback(LogCallback callback) {
2025-09-29T03:48:56.3389473Z ^
2025-09-29T03:48:56.3390097Z src/core/GitManager.cpp:497:0: style: The function 'setProgressCallback' is never used. [unusedFunction]
2025-09-29T03:48:56.3391007Z void GitManager::setProgressCallback(ProgressCallback callback) {
2025-09-29T03:48:56.3391590Z ^
2025-09-29T03:48:56.3392246Z src/core/GitManager.cpp:501:0: style: The function 'cloneRepositoryAsync' is never used. [unusedFunction]
2025-09-29T03:48:56.3393416Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url,
2025-09-29T03:48:56.3394175Z ^
2025-09-29T03:48:56.3394768Z src/core/GitManager.cpp:513:0: style: The function 'getBranches' is never used. [unusedFunction]
2025-09-29T03:48:56.3395723Z std::vector<GitBranch> GitManager::getBranches(bool includeRemote) const {
2025-09-29T03:48:56.3396336Z ^
2025-09-29T03:48:56.3396960Z src/core/GitManager.cpp:606:0: style: The function 'createBranch' is never used. [unusedFunction]
2025-09-29T03:48:56.3398343Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-09-29T03:48:56.3399378Z ^
2025-09-29T03:48:56.3399988Z src/core/GitManager.cpp:617:0: style: The function 'deleteBranch' is never used. [unusedFunction]
2025-09-29T03:48:56.3401065Z GitOperationResult GitManager::deleteBranch(const std::string& name, bool force) {
2025-09-29T03:48:56.3401806Z ^
2025-09-29T03:48:56.3402451Z src/core/GitManager.cpp:627:0: style: The function 'checkoutBranch' is never used. [unusedFunction]
2025-09-29T03:48:56.3403442Z GitOperationResult GitManager::checkoutBranch(const std::string& name) {
2025-09-29T03:48:56.3404076Z ^
2025-09-29T03:48:56.3404691Z src/core/GitManager.cpp:632:0: style: The function 'getStashes' is never used. [unusedFunction]
2025-09-29T03:48:56.3405580Z std::vector<GitStash> GitManager::getStashes() const {
2025-09-29T03:48:56.3406091Z ^
2025-09-29T03:48:56.3406685Z src/core/GitManager.cpp:677:0: style: The function 'stash' is never used. [unusedFunction]
2025-09-29T03:48:56.3407717Z GitOperationResult GitManager::stash(const std::string& message, bool includeUntracked) {
2025-09-29T03:48:56.3408652Z ^
2025-09-29T03:48:56.3409270Z src/core/GitManager.cpp:692:0: style: The function 'stashPop' is never used. [unusedFunction]
2025-09-29T03:48:56.3410161Z GitOperationResult GitManager::stashPop(int index) {
2025-09-29T03:48:56.3410679Z ^
2025-09-29T03:48:56.3411293Z src/core/GitManager.cpp:702:0: style: The function 'stashApply' is never used. [unusedFunction]
2025-09-29T03:48:56.3412220Z GitOperationResult GitManager::stashApply(int index) {
2025-09-29T03:48:56.3412726Z ^
2025-09-29T03:48:56.3413346Z src/core/GitManager.cpp:712:0: style: The function 'stashDrop' is never used. [unusedFunction]
2025-09-29T03:48:56.3414257Z GitOperationResult GitManager::stashDrop(int index) {
2025-09-29T03:48:56.3414793Z ^
2025-09-29T03:48:56.3415420Z src/core/GitManager.cpp:722:0: style: The function 'stashClear' is never used. [unusedFunction]
2025-09-29T03:48:56.3416288Z GitOperationResult GitManager::stashClear() {
2025-09-29T03:48:56.3416766Z ^
2025-09-29T03:48:56.3417386Z src/core/GitManager.cpp:727:0: style: The function 'getCommitDiff' is never used. [unusedFunction]
2025-09-29T03:48:56.3418393Z GitDiff GitManager::getCommitDiff(const std::string& commitHash) const {
2025-09-29T03:48:56.3418785Z ^
2025-09-29T03:48:56.3419194Z src/core/GitManager.cpp:810:0: style: The function 'getCommitDiffAll' is never used. [unusedFunction]
2025-09-29T03:48:56.3419874Z std::vector<GitDiff> GitManager::getCommitDiffAll(const std::string& commitHash) const {
2025-09-29T03:48:56.3420303Z ^
2025-09-29T03:48:56.3420721Z src/core/GitManager.cpp:913:0: style: The function 'getRemotes' is never used. [unusedFunction]
2025-09-29T03:48:56.3421237Z std::vector<GitRemote> GitManager::getRemotes() const {
2025-09-29T03:48:56.3421551Z ^
2025-09-29T03:48:56.3422181Z src/core/GitManager.cpp:959:0: style: The function 'addRemote' is never used. [unusedFunction]
2025-09-29T03:48:56.3423590Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-09-29T03:48:56.3424340Z ^
2025-09-29T03:48:56.3424744Z src/core/GitManager.cpp:971:0: style: The function 'removeRemote' is never used. [unusedFunction]
2025-09-29T03:48:56.3425356Z GitOperationResult GitManager::removeRemote(const std::string& name) {
2025-09-29T03:48:56.3425755Z ^
2025-09-29T03:48:56.3426151Z src/core/GitManager.cpp:983:0: style: The function 'renameRemote' is never used. [unusedFunction]
2025-09-29T03:48:56.3426869Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-09-29T03:48:56.3427369Z ^
2025-09-29T03:48:56.3427726Z src/core/GitManager.cpp:996:0: style: The function 'getTags' is never used. [unusedFunction]
2025-09-29T03:48:56.3428495Z std::vector<GitTag> GitManager::getTags() const {
2025-09-29T03:48:56.3428786Z ^
2025-09-29T03:48:56.3429157Z src/core/GitManager.cpp:1039:0: style: The function 'createTag' is never used. [unusedFunction]
2025-09-29T03:48:56.3429836Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-09-29T03:48:56.3430485Z ^
2025-09-29T03:48:56.3430874Z src/core/GitManager.cpp:1065:0: style: The function 'deleteTag' is never used. [unusedFunction]
2025-09-29T03:48:56.3431458Z GitOperationResult GitManager::deleteTag(const std::string& name) {
2025-09-29T03:48:56.3431847Z ^
2025-09-29T03:48:56.3432213Z src/core/GitManager.cpp:1077:0: style: The function 'pushTags' is never used. [unusedFunction]
2025-09-29T03:48:56.3432803Z GitOperationResult GitManager::pushTags(const std::string& remote) {
2025-09-29T03:48:56.3433177Z ^
2025-09-29T03:48:56.3433529Z src/core/GitManager.h:29:0: style: The function 'hasError' is never used. [unusedFunction]
2025-09-29T03:48:56.3434065Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-09-29T03:48:56.3434420Z ^
2025-09-29T03:48:56.3434763Z src/core/GitTypes.h:37:0: style: The function 'isMerge' is never used. [unusedFunction]
2025-09-29T03:48:56.3435273Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-09-29T03:48:56.3435603Z ^
2025-09-29T03:48:56.3435938Z src/core/GitUtils.cpp:51:0: style: The function 'join' is never used. [unusedFunction]
2025-09-29T03:48:56.3436561Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-09-29T03:48:56.3437005Z ^
2025-09-29T03:48:56.3437350Z src/core/GitUtils.cpp:77:0: style: The function 'toUpper' is never used. [unusedFunction]
2025-09-29T03:48:56.3438022Z std::string GitUtils::toUpper(const std::string& str) {
2025-09-29T03:48:56.3438395Z ^
2025-09-29T03:48:56.3438777Z src/core/GitUtils.cpp:84:0: style: The function 'normalizePath' is never used. [unusedFunction]
2025-09-29T03:48:56.3439333Z std::string GitUtils::normalizePath(const std::string& path) {
2025-09-29T03:48:56.3439674Z ^
2025-09-29T03:48:56.3440026Z src/core/GitUtils.cpp:93:0: style: The function 'getFileName' is never used. [unusedFunction]
2025-09-29T03:48:56.3440567Z std::string GitUtils::getFileName(const std::string& path) {
2025-09-29T03:48:56.3440904Z ^
2025-09-29T03:48:56.3441274Z src/core/GitUtils.cpp:103:0: style: The function 'getDirectory' is never used. [unusedFunction]
2025-09-29T03:48:56.3441815Z std::string GitUtils::getDirectory(const std::string& path) {
2025-09-29T03:48:56.3442141Z ^
2025-09-29T03:48:56.3442494Z src/core/GitUtils.cpp:108:0: style: The function 'joinPaths' is never used. [unusedFunction]
2025-09-29T03:48:56.3443098Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-09-29T03:48:56.3443518Z ^
2025-09-29T03:48:56.3443890Z src/core/GitUtils.cpp:113:0: style: The function 'isAbsolutePath' is never used. [unusedFunction]
2025-09-29T03:48:56.3444433Z bool GitUtils::isAbsolutePath(const std::string& path) {
2025-09-29T03:48:56.3444754Z ^
2025-09-29T03:48:56.3445134Z src/core/GitUtils.cpp:118:0: style: The function 'makeRelativePath' is never used. [unusedFunction]
2025-09-29T03:48:56.3445994Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-09-29T03:48:56.3446427Z ^
2025-09-29T03:48:56.3446799Z src/core/GitUtils.cpp:128:0: style: The function 'shortenHash' is never used. [unusedFunction]
2025-09-29T03:48:56.3447374Z std::string GitUtils::shortenHash(const std::string& hash, int length) {
2025-09-29T03:48:56.3447753Z ^
2025-09-29T03:48:56.3448316Z src/core/GitUtils.cpp:135:0: style: The function 'isValidHash' is never used. [unusedFunction]
2025-09-29T03:48:56.3448832Z bool GitUtils::isValidHash(const std::string& hash) {
2025-09-29T03:48:56.3449143Z ^
2025-09-29T03:48:56.3449543Z src/core/GitUtils.cpp:145:0: style: The function 'formatCommitMessage' is never used. [unusedFunction]
2025-09-29T03:48:56.3450219Z std::string GitUtils::formatCommitMessage(const std::string& message, int maxLength) {
2025-09-29T03:48:56.3450650Z ^
2025-09-29T03:48:56.3451016Z src/core/GitUtils.cpp:161:0: style: The function 'formatAuthor' is never used. [unusedFunction]
2025-09-29T03:48:56.3451651Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-09-29T03:48:56.3452068Z ^
2025-09-29T03:48:56.3452607Z src/core/GitUtils.cpp:174:0: style: The function 'formatTimestamp' is never used. [unusedFunction]
2025-09-29T03:48:56.3453294Z std::string GitUtils::formatTimestamp(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:48:56.3453754Z ^
2025-09-29T03:48:56.3454143Z src/core/GitUtils.cpp:181:0: style: The function 'formatRelativeTime' is never used. [unusedFunction]
2025-09-29T03:48:56.3454842Z std::string GitUtils::formatRelativeTime(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:48:56.3455312Z ^
2025-09-29T03:48:56.3455694Z src/core/GitUtils.cpp:226:0: style: The function 'isValidBranchName' is never used. [unusedFunction]
2025-09-29T03:48:56.3456257Z bool GitUtils::isValidBranchName(const std::string& name) {
2025-09-29T03:48:56.3456585Z ^
2025-09-29T03:48:56.3456976Z src/core/GitUtils.cpp:241:0: style: The function 'sanitizeBranchName' is never used. [unusedFunction]
2025-09-29T03:48:56.3457578Z std::string GitUtils::sanitizeBranchName(const std::string& name) {
2025-09-29T03:48:56.3458167Z ^
2025-09-29T03:48:56.3458706Z src/core/GitUtils.cpp:264:0: style: The function 'getShortBranchName' is never used. [unusedFunction]
2025-09-29T03:48:56.3459328Z std::string GitUtils::getShortBranchName(const std::string& fullName) {
2025-09-29T03:48:56.3459706Z ^
2025-09-29T03:48:56.3460081Z src/core/GitUtils.cpp:277:0: style: The function 'isRemoteBranch' is never used. [unusedFunction]
2025-09-29T03:48:56.3460653Z bool GitUtils::isRemoteBranch(const std::string& branchName) {
2025-09-29T03:48:56.3460991Z ^
2025-09-29T03:48:56.3461397Z src/core/GitUtils.cpp:282:0: style: The function 'getRemoteFromBranch' is never used. [unusedFunction]
2025-09-29T03:48:56.3462023Z std::string GitUtils::getRemoteFromBranch(const std::string& branchName) {
2025-09-29T03:48:56.3462404Z ^
2025-09-29T03:48:56.3462787Z src/core/GitUtils.cpp:297:0: style: The function 'isValidGitUrl' is never used. [unusedFunction]
2025-09-29T03:48:56.3463340Z bool GitUtils::isValidGitUrl(const std::string& url) {
2025-09-29T03:48:56.3463657Z ^
2025-09-29T03:48:56.3464081Z src/core/GitUtils.cpp:321:0: style: The function 'extractRepoNameFromUrl' is never used. [unusedFunction]
2025-09-29T03:48:56.3464716Z std::string GitUtils::extractRepoNameFromUrl(const std::string& url) {
2025-09-29T03:48:56.3465087Z ^
2025-09-29T03:48:56.3465466Z src/core/GitUtils.cpp:359:0: style: The function 'normalizeGitUrl' is never used. [unusedFunction]
2025-09-29T03:48:56.3466033Z std::string GitUtils::normalizeGitUrl(const std::string& url) {
2025-09-29T03:48:56.3466370Z ^
2025-09-29T03:48:56.3466727Z src/core/GitUtils.cpp:380:0: style: The function 'isHttpsUrl' is never used. [unusedFunction]
2025-09-29T03:48:56.3467230Z bool GitUtils::isHttpsUrl(const std::string& url) {
2025-09-29T03:48:56.3467532Z ^
2025-09-29T03:48:56.3468040Z src/core/GitUtils.cpp:384:0: style: The function 'isSshUrl' is never used. [unusedFunction]
2025-09-29T03:48:56.3468742Z bool GitUtils::isSshUrl(const std::string& url) {
2025-09-29T03:48:56.3469051Z ^
2025-09-29T03:48:56.3469414Z src/core/GitUtils.cpp:389:0: style: The function 'isValidEmail' is never used. [unusedFunction]
2025-09-29T03:48:56.3469944Z bool GitUtils::isValidEmail(const std::string& email) {
2025-09-29T03:48:56.3470259Z ^
2025-09-29T03:48:56.3470668Z src/core/GitUtils.cpp:394:0: style: The function 'isValidCommitMessage' is never used. [unusedFunction]
2025-09-29T03:48:56.3471272Z bool GitUtils::isValidCommitMessage(const std::string& message) {
2025-09-29T03:48:56.3471630Z ^
2025-09-29T03:48:56.3471994Z src/core/GitUtils.cpp:408:0: style: The function 'isBinaryFile' is never used. [unusedFunction]
2025-09-29T03:48:56.3472527Z bool GitUtils::isBinaryFile(const std::string& filePath) {
2025-09-29T03:48:56.3472857Z ^
2025-09-29T03:48:56.3473244Z src/core/GitUtils.cpp:414:0: style: The function 'detectFileEncoding' is never used. [unusedFunction]
2025-09-29T03:48:56.3473867Z std::string GitUtils::detectFileEncoding(const std::string& filePath) {
2025-09-29T03:48:56.3474238Z ^
2025-09-29T03:48:56.3474753Z src/core/GitUtils.cpp:455:0: style: The function 'colorizeGitDiff' is never used. [unusedFunction]
2025-09-29T03:48:56.3475337Z std::string GitUtils::colorizeGitDiff(const std::string& diff) {
2025-09-29T03:48:56.3475678Z ^
2025-09-29T03:48:56.3476047Z src/core/GitUtils.cpp:474:0: style: The function 'countLinesAdded' is never used. [unusedFunction]
2025-09-29T03:48:56.3476586Z int GitUtils::countLinesAdded(const std::string& diff) {
2025-09-29T03:48:56.3476899Z ^
2025-09-29T03:48:56.3477288Z src/core/GitUtils.cpp:487:0: style: The function 'countLinesRemoved' is never used. [unusedFunction]
2025-09-29T03:48:56.3477836Z int GitUtils::countLinesRemoved(const std::string& diff) {
2025-09-29T03:48:56.3478293Z ^
2025-09-29T03:48:56.3478684Z src/core/GitUtils.cpp:500:0: style: The function 'extractHunkHeader' is never used. [unusedFunction]
2025-09-29T03:48:56.3479268Z std::string GitUtils::extractHunkHeader(const std::string& line) {
2025-09-29T03:48:56.3479616Z ^
2025-09-29T03:48:56.3479994Z src/core/GitUtils.cpp:511:0: style: The function 'formatProgress' is never used. [unusedFunction]
2025-09-29T03:48:56.3480651Z std::string GitUtils::formatProgress(int current, int total, const std::string& operation) {
2025-09-29T03:48:56.3481089Z ^
2025-09-29T03:48:56.3481486Z src/core/GitUtils.cpp:527:0: style: The function 'formatTransferSpeed' is never used. [unusedFunction]
2025-09-29T03:48:56.3482082Z std::string GitUtils::formatTransferSpeed(size_t bytesPerSecond) {
2025-09-29T03:48:56.3482429Z ^
2025-09-29T03:48:56.3482803Z src/core/GitUtils.cpp:531:0: style: The function 'formatDuration' is never used. [unusedFunction]
2025-09-29T03:48:56.3483421Z std::string GitUtils::formatDuration(const std::chrono::milliseconds& duration) {
2025-09-29T03:48:56.3483836Z ^
2025-09-29T03:48:56.3484267Z src/core/SystemCommand.cpp:320:0: style: The function 'executeWithCallback' is never used. [unusedFunction]
2025-09-29T03:48:56.3485010Z SystemCommandResult SystemCommand::executeWithCallback(const std::string& command,
2025-09-29T03:48:56.3485462Z ^
2025-09-29T03:48:56.3485849Z src/core/SystemCommand.cpp:336:0: style: The function 'executeAsync' is never used. [unusedFunction]
2025-09-29T03:48:56.3486422Z void SystemCommand::executeAsync(const std::string& command,
2025-09-29T03:48:56.3486752Z ^
2025-09-29T03:48:56.3487192Z src/core/SystemCommand.cpp:362:0: style: The function 'setEnvironmentVariable' is never used. [unusedFunction]
2025-09-29T03:48:56.3488063Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-09-29T03:48:56.3488539Z ^
2025-09-29T03:48:56.3488990Z src/core/SystemCommand.cpp:366:0: style: The function 'clearEnvironmentVariables' is never used. [unusedFunction]
2025-09-29T03:48:56.3489590Z void SystemCommand::clearEnvironmentVariables() {
2025-09-29T03:48:56.3489893Z ^
2025-09-29T03:48:56.3490267Z src/core/SystemCommand.cpp:370:0: style: The function 'setTimeout' is never used. [unusedFunction]
2025-09-29T03:48:56.3490983Z void SystemCommand::setTimeout(int timeoutMs) {
2025-09-29T03:48:56.3491276Z ^
2025-09-29T03:48:56.3491671Z src/core/SystemCommand.cpp:384:0: style: The function 'getGitCommand' is never used. [unusedFunction]
2025-09-29T03:48:56.3492203Z std::string SystemCommand::getGitCommand() {
2025-09-29T03:48:56.3492481Z ^
2025-09-29T03:48:56.3492836Z src/core/SystemCommand.h:13:0: style: The function 'success' is never used. [unusedFunction]
2025-09-29T03:48:56.3493324Z     bool success() const { return exitCode == 0; }
2025-09-29T03:48:56.3493625Z ^
2025-09-29T03:48:56.3494056Z src/qt/utils/ThemeManager.cpp:6:0: style: The function 'applyModernTheme' is never used. [unusedFunction]
2025-09-29T03:48:56.3494651Z void ThemeManager::applyModernTheme(QApplication *app)
2025-09-29T03:48:56.3494970Z ^
2025-09-29T03:48:56.3495393Z src/qt/utils/ThemeManager.cpp:23:0: style: The function 'applyDarkTheme' is never used. [unusedFunction]
2025-09-29T03:48:56.3495978Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-09-29T03:48:56.3496293Z ^
2025-09-29T03:48:56.3496858Z src/qt/utils/ThemeManager.cpp:32:0: style: The function 'applyLightTheme' is never used. [unusedFunction]
2025-09-29T03:48:56.3497449Z void ThemeManager::applyLightTheme(QApplication *app)
2025-09-29T03:48:56.3497772Z ^
2025-09-29T03:48:56.3498489Z nofile:0:0: information: Active checkers: There was critical errors (use --checkers-report=<filename> to see details) [checkersReport]
2025-09-29T03:48:56.3499024Z 
2025-09-29T03:48:56.3527305Z ##[group]Run find src -name "*.cpp" -o -name "*.h" | xargs clang-format -n --Werror
2025-09-29T03:48:56.3528229Z [36;1mfind src -name "*.cpp" -o -name "*.h" | xargs clang-format -n --Werror[0m
2025-09-29T03:48:56.3568673Z shell: /usr/bin/bash -e {0}
2025-09-29T03:48:56.3568942Z env:
2025-09-29T03:48:56.3569139Z   CMAKE_VERSION: 3.20.0
2025-09-29T03:48:56.3569379Z   QT_VERSION: 6.5.0
2025-09-29T03:48:56.3569695Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:56.3570175Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-09-29T03:48:56.3570648Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:56.3571050Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:56.3571461Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-29T03:48:56.3571885Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-09-29T03:48:56.3572220Z ##[endgroup]
2025-09-29T03:48:59.8414089Z src/qt/utils/GitWorker.cpp:8:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8415241Z     : QObject(parent)
2025-09-29T03:48:59.8415707Z                      ^
2025-09-29T03:48:59.8416639Z src/qt/utils/GitWorker.cpp:9:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8417585Z     , m_gitManager(gitManager)
2025-09-29T03:48:59.8418256Z                               ^
2025-09-29T03:48:59.8419045Z src/qt/utils/GitWorker.cpp:10:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8419717Z {
2025-09-29T03:48:59.8419885Z  ^
2025-09-29T03:48:59.8420302Z src/qt/utils/GitWorker.cpp:13:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8420920Z void GitWorker::openRepository(const QString &path)
2025-09-29T03:48:59.8421277Z                                                    ^
2025-09-29T03:48:59.8421800Z src/qt/utils/GitWorker.cpp:14:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8422302Z {
2025-09-29T03:48:59.8422473Z  ^
2025-09-29T03:48:59.8422873Z src/qt/utils/GitWorker.cpp:15:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8423426Z     emit operationStarted(tr("Opening repository..."));
2025-09-29T03:48:59.8423754Z                                                        ^
2025-09-29T03:48:59.8424636Z src/qt/utils/GitWorker.cpp:17:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8425209Z     auto result = m_gitManager->openRepository(path.toStdString());
2025-09-29T03:48:59.8425578Z                                                                    ^
2025-09-29T03:48:59.8426063Z src/qt/utils/GitWorker.cpp:19:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8426544Z     if (result.isSuccess()) {
2025-09-29T03:48:59.8426963Z                              ^
2025-09-29T03:48:59.8427757Z src/qt/utils/GitWorker.cpp:20:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8428782Z         emit repositoryOpened(path);
2025-09-29T03:48:59.8429240Z                                     ^
2025-09-29T03:48:59.8430008Z src/qt/utils/GitWorker.cpp:21:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8430928Z         emit operationFinished(tr("Repository opened"), true);
2025-09-29T03:48:59.8431572Z                                                               ^
2025-09-29T03:48:59.8432389Z src/qt/utils/GitWorker.cpp:23:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8433216Z         // Refresh status after opening
2025-09-29T03:48:59.8433664Z                                        ^
2025-09-29T03:48:59.8434447Z src/qt/utils/GitWorker.cpp:24:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8435244Z         refreshStatus();
2025-09-29T03:48:59.8435938Z                         ^
2025-09-29T03:48:59.8436702Z src/qt/utils/GitWorker.cpp:25:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8437515Z     } else {
2025-09-29T03:48:59.8437828Z             ^
2025-09-29T03:48:59.8438676Z src/qt/utils/GitWorker.cpp:26:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8439648Z         emit errorOccurred(QString::fromStdString(result.error));
2025-09-29T03:48:59.8440275Z                                                                  ^
2025-09-29T03:48:59.8441121Z src/qt/utils/GitWorker.cpp:27:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8442125Z         emit operationFinished(tr("Failed to open repository"), false);
2025-09-29T03:48:59.8442785Z                                                                        ^
2025-09-29T03:48:59.8443625Z src/qt/utils/GitWorker.cpp:31:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8444476Z void GitWorker::refreshStatus()
2025-09-29T03:48:59.8444913Z                                ^
2025-09-29T03:48:59.8445685Z src/qt/utils/GitWorker.cpp:32:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8446490Z {
2025-09-29T03:48:59.8446768Z  ^
2025-09-29T03:48:59.8447424Z src/qt/utils/GitWorker.cpp:33:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8448558Z     emit operationStarted(tr("Refreshing status..."));
2025-09-29T03:48:59.8449120Z                                                       ^
2025-09-29T03:48:59.8449958Z src/qt/utils/GitWorker.cpp:35:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8450764Z     try {
2025-09-29T03:48:59.8451073Z          ^
2025-09-29T03:48:59.8451730Z src/qt/utils/GitWorker.cpp:36:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8452569Z         // Get repository status
2025-09-29T03:48:59.8453002Z                                 ^
2025-09-29T03:48:59.8453682Z src/qt/utils/GitWorker.cpp:37:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8454189Z         auto status = m_gitManager->getStatus();
2025-09-29T03:48:59.8454490Z                                                 ^
2025-09-29T03:48:59.8454958Z src/qt/utils/GitWorker.cpp:38:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8455649Z         emit statusChanged();
2025-09-29T03:48:59.8455900Z                              ^
2025-09-29T03:48:59.8456388Z src/qt/utils/GitWorker.cpp:39:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8456922Z         emit operationFinished(tr("Status refreshed"), true);
2025-09-29T03:48:59.8457274Z                                                              ^
2025-09-29T03:48:59.8457760Z src/qt/utils/GitWorker.cpp:40:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8458646Z     } catch (const std::exception &e) {
2025-09-29T03:48:59.8458929Z                                        ^
2025-09-29T03:48:59.8459405Z src/qt/utils/GitWorker.cpp:41:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8459940Z         emit errorOccurred(QString::fromUtf8(e.what()));
2025-09-29T03:48:59.8460264Z                                                         ^
2025-09-29T03:48:59.8460754Z src/qt/utils/GitWorker.cpp:42:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8461343Z         emit operationFinished(tr("Failed to refresh status"), false);
2025-09-29T03:48:59.8461729Z                                                                       ^
2025-09-29T03:48:59.8462215Z src/qt/utils/GitWorker.cpp:46:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8462750Z void GitWorker::stageFiles(const QStringList &files)
2025-09-29T03:48:59.8463257Z                                                     ^
2025-09-29T03:48:59.8463763Z src/qt/utils/GitWorker.cpp:47:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8464232Z {
2025-09-29T03:48:59.8464401Z  ^
2025-09-29T03:48:59.8464785Z src/qt/utils/GitWorker.cpp:48:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8465302Z     emit operationStarted(tr("Staging files..."));
2025-09-29T03:48:59.8465625Z                                                   ^
2025-09-29T03:48:59.8466095Z src/qt/utils/GitWorker.cpp:50:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8466590Z     std::vector<std::string> fileList;
2025-09-29T03:48:59.8466881Z                                       ^
2025-09-29T03:48:59.8467707Z src/qt/utils/GitWorker.cpp:51:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8468738Z     for (const QString &file : files) {
2025-09-29T03:48:59.8469208Z                                        ^
2025-09-29T03:48:59.8470005Z src/qt/utils/GitWorker.cpp:52:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8470878Z         fileList.push_back(file.toStdString());
2025-09-29T03:48:59.8471448Z                                                ^
2025-09-29T03:48:59.8472279Z src/qt/utils/GitWorker.cpp:53:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8473084Z     }
2025-09-29T03:48:59.8473374Z      ^
2025-09-29T03:48:59.8474038Z src/qt/utils/GitWorker.cpp:55:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8474940Z     auto result = m_gitManager->addFiles(fileList);
2025-09-29T03:48:59.8475296Z                                                    ^
2025-09-29T03:48:59.8475774Z src/qt/utils/GitWorker.cpp:57:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8476264Z     if (result.isSuccess()) {
2025-09-29T03:48:59.8476514Z                              ^
2025-09-29T03:48:59.8476956Z src/qt/utils/GitWorker.cpp:58:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8477440Z         emit statusChanged();
2025-09-29T03:48:59.8477681Z                              ^
2025-09-29T03:48:59.8478387Z src/qt/utils/GitWorker.cpp:59:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8478927Z         emit operationFinished(tr("Files staged"), true);
2025-09-29T03:48:59.8479446Z                                                          ^
2025-09-29T03:48:59.8479930Z src/qt/utils/GitWorker.cpp:60:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8480399Z     } else {
2025-09-29T03:48:59.8480588Z             ^
2025-09-29T03:48:59.8480990Z src/qt/utils/GitWorker.cpp:61:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8481551Z         emit errorOccurred(QString::fromStdString(result.error));
2025-09-29T03:48:59.8481932Z                                                                  ^
2025-09-29T03:48:59.8482420Z src/qt/utils/GitWorker.cpp:62:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8482982Z         emit operationFinished(tr("Failed to stage files"), false);
2025-09-29T03:48:59.8483350Z                                                                    ^
2025-09-29T03:48:59.8483831Z src/qt/utils/GitWorker.cpp:66:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8484386Z void GitWorker::unstageFiles(const QStringList &files)
2025-09-29T03:48:59.8484726Z                                                       ^
2025-09-29T03:48:59.8485471Z src/qt/utils/GitWorker.cpp:67:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8486290Z {
2025-09-29T03:48:59.8486569Z  ^
2025-09-29T03:48:59.8487428Z src/qt/utils/GitWorker.cpp:68:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8488535Z     emit operationStarted(tr("Unstaging files..."));
2025-09-29T03:48:59.8489095Z                                                     ^
2025-09-29T03:48:59.8489881Z src/qt/utils/GitWorker.cpp:70:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8490401Z     std::vector<std::string> fileList;
2025-09-29T03:48:59.8490681Z                                       ^
2025-09-29T03:48:59.8491160Z src/qt/utils/GitWorker.cpp:71:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8491661Z     for (const QString &file : files) {
2025-09-29T03:48:59.8491931Z                                        ^
2025-09-29T03:48:59.8492400Z src/qt/utils/GitWorker.cpp:72:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8492913Z         fileList.push_back(file.toStdString());
2025-09-29T03:48:59.8493225Z                                                ^
2025-09-29T03:48:59.8493734Z src/qt/utils/GitWorker.cpp:73:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8494211Z     }
2025-09-29T03:48:59.8494387Z      ^
2025-09-29T03:48:59.8494773Z src/qt/utils/GitWorker.cpp:75:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8495305Z     auto result = m_gitManager->resetFiles(fileList);
2025-09-29T03:48:59.8495628Z                                                      ^
2025-09-29T03:48:59.8496115Z src/qt/utils/GitWorker.cpp:77:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8496611Z     if (result.isSuccess()) {
2025-09-29T03:48:59.8496857Z                              ^
2025-09-29T03:48:59.8497301Z src/qt/utils/GitWorker.cpp:78:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8497792Z         emit statusChanged();
2025-09-29T03:48:59.8498432Z                              ^
2025-09-29T03:48:59.8498897Z src/qt/utils/GitWorker.cpp:79:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8499448Z         emit operationFinished(tr("Files unstaged"), true);
2025-09-29T03:48:59.8499801Z                                                            ^
2025-09-29T03:48:59.8500296Z src/qt/utils/GitWorker.cpp:80:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8500766Z     } else {
2025-09-29T03:48:59.8500958Z             ^
2025-09-29T03:48:59.8501545Z src/qt/utils/GitWorker.cpp:81:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8502123Z         emit errorOccurred(QString::fromStdString(result.error));
2025-09-29T03:48:59.8502492Z                                                                  ^
2025-09-29T03:48:59.8502984Z src/qt/utils/GitWorker.cpp:82:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8503564Z         emit operationFinished(tr("Failed to unstage files"), false);
2025-09-29T03:48:59.8503948Z                                                                      ^
2025-09-29T03:48:59.8504448Z src/qt/utils/GitWorker.cpp:86:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8504989Z void GitWorker::commitChanges(const QString &message)
2025-09-29T03:48:59.8505328Z                                                      ^
2025-09-29T03:48:59.8505813Z src/qt/utils/GitWorker.cpp:87:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8506289Z {
2025-09-29T03:48:59.8506460Z  ^
2025-09-29T03:48:59.8506849Z src/qt/utils/GitWorker.cpp:88:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8507379Z     emit operationStarted(tr("Creating commit..."));
2025-09-29T03:48:59.8507696Z                                                     ^
2025-09-29T03:48:59.8508477Z src/qt/utils/GitWorker.cpp:90:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8509194Z     auto result = m_gitManager->commit(message.toStdString());
2025-09-29T03:48:59.8509572Z                                                               ^
2025-09-29T03:48:59.8510072Z src/qt/utils/GitWorker.cpp:92:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8510562Z     if (result.isSuccess()) {
2025-09-29T03:48:59.8510814Z                              ^
2025-09-29T03:48:59.8511247Z src/qt/utils/GitWorker.cpp:93:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8511739Z         emit statusChanged();
2025-09-29T03:48:59.8511979Z                              ^
2025-09-29T03:48:59.8512408Z src/qt/utils/GitWorker.cpp:94:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8512949Z         emit operationFinished(tr("Commit created"), true);
2025-09-29T03:48:59.8513286Z                                                            ^
2025-09-29T03:48:59.8513778Z src/qt/utils/GitWorker.cpp:95:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8514244Z     } else {
2025-09-29T03:48:59.8514435Z             ^
2025-09-29T03:48:59.8514830Z src/qt/utils/GitWorker.cpp:96:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8515400Z         emit errorOccurred(QString::fromStdString(result.error));
2025-09-29T03:48:59.8515769Z                                                                  ^
2025-09-29T03:48:59.8516256Z src/qt/utils/GitWorker.cpp:97:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8516834Z         emit operationFinished(tr("Failed to create commit"), false);
2025-09-29T03:48:59.8517214Z                                                                      ^
2025-09-29T03:48:59.8517733Z src/qt/utils/GitWorker.cpp:101:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8518428Z void GitWorker::fetchRepository()
2025-09-29T03:48:59.8518699Z                                  ^
2025-09-29T03:48:59.8519162Z src/qt/utils/GitWorker.cpp:102:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8519635Z {
2025-09-29T03:48:59.8519807Z  ^
2025-09-29T03:48:59.8520199Z src/qt/utils/GitWorker.cpp:103:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8520762Z     emit operationStarted(tr("Fetching from remote..."));
2025-09-29T03:48:59.8521285Z                                                          ^
2025-09-29T03:48:59.8521786Z src/qt/utils/GitWorker.cpp:105:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8522306Z     auto result = m_gitManager->fetch();
2025-09-29T03:48:59.8522592Z                                         ^
2025-09-29T03:48:59.8523074Z src/qt/utils/GitWorker.cpp:107:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8523572Z     if (result.isSuccess()) {
2025-09-29T03:48:59.8523827Z                              ^
2025-09-29T03:48:59.8524277Z src/qt/utils/GitWorker.cpp:108:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8524768Z         emit statusChanged();
2025-09-29T03:48:59.8525011Z                              ^
2025-09-29T03:48:59.8525455Z src/qt/utils/GitWorker.cpp:109:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8526010Z         emit operationFinished(tr("Fetch completed"), true);
2025-09-29T03:48:59.8526357Z                                                             ^
2025-09-29T03:48:59.8526859Z src/qt/utils/GitWorker.cpp:110:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8527345Z     } else {
2025-09-29T03:48:59.8527539Z             ^
2025-09-29T03:48:59.8528100Z src/qt/utils/GitWorker.cpp:111:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8528687Z         emit errorOccurred(QString::fromStdString(result.error));
2025-09-29T03:48:59.8529211Z                                                                  ^
2025-09-29T03:48:59.8529725Z src/qt/utils/GitWorker.cpp:112:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8530285Z         emit operationFinished(tr("Failed to fetch"), false);
2025-09-29T03:48:59.8530639Z                                                              ^
2025-09-29T03:48:59.8531142Z src/qt/utils/GitWorker.cpp:116:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8531671Z void GitWorker::pullRepository()
2025-09-29T03:48:59.8531936Z                                 ^
2025-09-29T03:48:59.8532406Z src/qt/utils/GitWorker.cpp:117:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8532886Z {
2025-09-29T03:48:59.8533058Z  ^
2025-09-29T03:48:59.8533451Z src/qt/utils/GitWorker.cpp:118:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8534020Z     emit operationStarted(tr("Pulling from remote..."));
2025-09-29T03:48:59.8534371Z                                                         ^
2025-09-29T03:48:59.8534866Z src/qt/utils/GitWorker.cpp:120:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8535386Z     auto result = m_gitManager->pull();
2025-09-29T03:48:59.8535677Z                                        ^
2025-09-29T03:48:59.8536163Z src/qt/utils/GitWorker.cpp:122:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8536676Z     if (result.isSuccess()) {
2025-09-29T03:48:59.8536922Z                              ^
2025-09-29T03:48:59.8537375Z src/qt/utils/GitWorker.cpp:123:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8538045Z         emit statusChanged();
2025-09-29T03:48:59.8538467Z                              ^
2025-09-29T03:48:59.8539285Z src/qt/utils/GitWorker.cpp:124:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8540282Z         emit operationFinished(tr("Pull completed"), true);
2025-09-29T03:48:59.8540875Z                                                            ^
2025-09-29T03:48:59.8541761Z src/qt/utils/GitWorker.cpp:125:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8542620Z     } else {
2025-09-29T03:48:59.8542951Z             ^
2025-09-29T03:48:59.8543704Z src/qt/utils/GitWorker.cpp:126:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8545110Z         emit errorOccurred(QString::fromStdString(result.error));
2025-09-29T03:48:59.8545765Z                                                                  ^
2025-09-29T03:48:59.8546835Z src/qt/utils/GitWorker.cpp:127:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8547841Z         emit operationFinished(tr("Failed to pull"), false);
2025-09-29T03:48:59.8548622Z                                                             ^
2025-09-29T03:48:59.8549517Z src/qt/utils/GitWorker.cpp:131:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8550441Z void GitWorker::pushRepository()
2025-09-29T03:48:59.8550904Z                                 ^
2025-09-29T03:48:59.8551725Z src/qt/utils/GitWorker.cpp:132:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8552576Z {
2025-09-29T03:48:59.8552872Z  ^
2025-09-29T03:48:59.8553577Z src/qt/utils/GitWorker.cpp:133:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8554556Z     emit operationStarted(tr("Pushing to remote..."));
2025-09-29T03:48:59.8555153Z                                                       ^
2025-09-29T03:48:59.8556024Z src/qt/utils/GitWorker.cpp:135:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8556935Z     auto result = m_gitManager->push();
2025-09-29T03:48:59.8557426Z                                        ^
2025-09-29T03:48:59.8559531Z src/qt/utils/GitWorker.cpp:137:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8560512Z     if (result.isSuccess()) {
2025-09-29T03:48:59.8560956Z                              ^
2025-09-29T03:48:59.8561789Z src/qt/utils/GitWorker.cpp:138:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8562680Z         emit statusChanged();
2025-09-29T03:48:59.8563126Z                              ^
2025-09-29T03:48:59.8563931Z src/qt/utils/GitWorker.cpp:139:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8564922Z         emit operationFinished(tr("Push completed"), true);
2025-09-29T03:48:59.8565879Z                                                            ^
2025-09-29T03:48:59.8566990Z src/qt/utils/GitWorker.cpp:140:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8568177Z     } else {
2025-09-29T03:48:59.8568772Z             ^
2025-09-29T03:48:59.8569662Z src/qt/utils/GitWorker.cpp:141:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8570861Z         emit errorOccurred(QString::fromStdString(result.error));
2025-09-29T03:48:59.8571906Z                                                                  ^
2025-09-29T03:48:59.8572906Z src/qt/utils/GitWorker.cpp:142:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8574187Z         emit operationFinished(tr("Failed to push"), false);
2025-09-29T03:48:59.8574962Z                                                             ^
2025-09-29T03:48:59.8576005Z src/qt/utils/GitWorker.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8577060Z #include <QObject>
2025-09-29T03:48:59.8577589Z ^
2025-09-29T03:48:59.8578689Z src/qt/utils/GitWorker.h:9:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8579685Z class GitWorker : public QObject
2025-09-29T03:48:59.8580323Z                                 ^
2025-09-29T03:48:59.8581265Z src/qt/utils/GitWorker.h:10:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8582277Z {
2025-09-29T03:48:59.8582896Z  ^
2025-09-29T03:48:59.8594967Z src/qt/utils/GitWorker.h:13:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8595742Z public:
2025-09-29T03:48:59.8595960Z        ^
2025-09-29T03:48:59.8596672Z src/qt/utils/GitWorker.h:16:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8597224Z public slots:
2025-09-29T03:48:59.8597442Z              ^
2025-09-29T03:48:59.8598155Z src/qt/utils/GitWorker.h:17:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8598746Z     void openRepository(const QString &path);
2025-09-29T03:48:59.8599085Z                                              ^
2025-09-29T03:48:59.8599624Z src/qt/utils/GitWorker.h:18:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8600164Z     void refreshStatus();
2025-09-29T03:48:59.8600417Z                          ^
2025-09-29T03:48:59.8600891Z src/qt/utils/GitWorker.h:19:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8601446Z     void stageFiles(const QStringList &files);
2025-09-29T03:48:59.8601779Z                                               ^
2025-09-29T03:48:59.8602303Z src/qt/utils/GitWorker.h:20:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8602855Z     void unstageFiles(const QStringList &files);
2025-09-29T03:48:59.8603177Z                                                 ^
2025-09-29T03:48:59.8603676Z src/qt/utils/GitWorker.h:21:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8604207Z     void commitChanges(const QString &message);
2025-09-29T03:48:59.8604520Z                                                ^
2025-09-29T03:48:59.8605186Z src/qt/utils/GitWorker.h:22:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8605710Z     void fetchRepository();
2025-09-29T03:48:59.8605976Z                            ^
2025-09-29T03:48:59.8606430Z src/qt/utils/GitWorker.h:23:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8606937Z     void pullRepository();
2025-09-29T03:48:59.8607190Z                           ^
2025-09-29T03:48:59.8607643Z src/qt/utils/GitWorker.h:26:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8608392Z signals:
2025-09-29T03:48:59.8608582Z         ^
2025-09-29T03:48:59.8608982Z src/qt/utils/GitWorker.h:27:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8609504Z     void repositoryOpened(const QString &path);
2025-09-29T03:48:59.8609824Z                                                ^
2025-09-29T03:48:59.8610316Z src/qt/utils/GitWorker.h:28:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8610805Z     void statusChanged();
2025-09-29T03:48:59.8611051Z                          ^
2025-09-29T03:48:59.8611491Z src/qt/utils/GitWorker.h:29:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8612038Z     void operationStarted(const QString &operation);
2025-09-29T03:48:59.8612378Z                                                     ^
2025-09-29T03:48:59.8612875Z src/qt/utils/GitWorker.h:30:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8613484Z     void operationFinished(const QString &operation, bool success);
2025-09-29T03:48:59.8613894Z                                                                    ^
2025-09-29T03:48:59.8614400Z src/qt/utils/GitWorker.h:33:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8614887Z private:
2025-09-29T03:48:59.8615080Z         ^
2025-09-29T03:48:59.8615502Z src/qt/utils/ThemeManager.h:7:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8616017Z class ThemeManager
2025-09-29T03:48:59.8616232Z                   ^
2025-09-29T03:48:59.8616669Z src/qt/utils/ThemeManager.h:9:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8617169Z public:
2025-09-29T03:48:59.8617356Z        ^
2025-09-29T03:48:59.8617776Z src/qt/utils/ThemeManager.h:10:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8618775Z     static void applyModernTheme(QApplication *app);
2025-09-29T03:48:59.8619130Z                                                     ^
2025-09-29T03:48:59.8619642Z src/qt/utils/ThemeManager.h:11:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8620209Z     static void applyDarkTheme(QApplication *app);
2025-09-29T03:48:59.8620548Z                                                   ^
2025-09-29T03:48:59.8621054Z src/qt/utils/ThemeManager.h:12:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8621613Z     static void applyLightTheme(QApplication *app);
2025-09-29T03:48:59.8621951Z                                                    ^
2025-09-29T03:48:59.8622460Z src/qt/utils/ThemeManager.h:14:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8622952Z private:
2025-09-29T03:48:59.8623145Z         ^
2025-09-29T03:48:59.8623571Z src/qt/utils/ThemeManager.h:15:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8624130Z     static void setModernPalette(QPalette &palette);
2025-09-29T03:48:59.8624473Z                                                     ^
2025-09-29T03:48:59.8624979Z src/qt/utils/ThemeManager.h:16:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8625537Z     static void setDarkPalette(QPalette &palette);
2025-09-29T03:48:59.8625863Z                                                   ^
2025-09-29T03:48:59.8626509Z src/qt/utils/ThemeManager.h:17:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8627074Z     static void setLightPalette(QPalette &palette);
2025-09-29T03:48:59.8627397Z                                                    ^
2025-09-29T03:48:59.8628264Z src/qt/utils/ThemeManager.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8628828Z #include "ThemeManager.h"
2025-09-29T03:48:59.8629074Z ^
2025-09-29T03:48:59.8629514Z src/qt/utils/ThemeManager.cpp:6:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8630147Z void ThemeManager::applyModernTheme(QApplication *app)
2025-09-29T03:48:59.8630514Z                                                       ^
2025-09-29T03:48:59.8631044Z src/qt/utils/ThemeManager.cpp:8:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8631558Z #ifdef Q_OS_WIN
2025-09-29T03:48:59.8631777Z                ^
2025-09-29T03:48:59.8632217Z src/qt/utils/ThemeManager.cpp:9:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8632797Z     // Use Fusion style on Windows for better custom styling
2025-09-29T03:48:59.8633162Z                                                             ^
2025-09-29T03:48:59.8633690Z src/qt/utils/ThemeManager.cpp:11:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8634231Z #elif defined(Q_OS_LINUX)
2025-09-29T03:48:59.8634471Z                          ^
2025-09-29T03:48:59.8634941Z src/qt/utils/ThemeManager.cpp:12:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8635475Z     // Use Fusion style on Linux as well
2025-09-29T03:48:59.8635771Z                                         ^
2025-09-29T03:48:59.8636274Z src/qt/utils/ThemeManager.cpp:14:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8636773Z #endif
2025-09-29T03:48:59.8636970Z       ^
2025-09-29T03:48:59.8637392Z src/qt/utils/ThemeManager.cpp:16:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8638134Z     QPalette palette;
2025-09-29T03:48:59.8638383Z                      ^
2025-09-29T03:48:59.8638863Z src/qt/utils/ThemeManager.cpp:17:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8639414Z     setModernPalette(palette);
2025-09-29T03:48:59.8639858Z                               ^
2025-09-29T03:48:59.8640350Z src/qt/utils/ThemeManager.cpp:18:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8640882Z     app->setPalette(palette);
2025-09-29T03:48:59.8641144Z                              ^
2025-09-29T03:48:59.8641619Z src/qt/utils/ThemeManager.cpp:23:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8642212Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-09-29T03:48:59.8642575Z                                                     ^
2025-09-29T03:48:59.8643099Z src/qt/utils/ThemeManager.cpp:24:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8643607Z {
2025-09-29T03:48:59.8643779Z  ^
2025-09-29T03:48:59.8644204Z src/qt/utils/ThemeManager.cpp:25:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8644772Z     app->setStyle(QStyleFactory::create("Fusion"));
2025-09-29T03:48:59.8645120Z                                                    ^
2025-09-29T03:48:59.8645638Z src/qt/utils/ThemeManager.cpp:27:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8646161Z     QPalette palette;
2025-09-29T03:48:59.8646385Z                      ^
2025-09-29T03:48:59.8646835Z src/qt/utils/ThemeManager.cpp:28:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8647370Z     setDarkPalette(palette);
2025-09-29T03:48:59.8647626Z                             ^
2025-09-29T03:48:59.8648650Z src/qt/utils/ThemeManager.cpp:32:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8649289Z void ThemeManager::applyLightTheme(QApplication *app)
2025-09-29T03:48:59.8649656Z                                                      ^
2025-09-29T03:48:59.8650193Z src/qt/utils/ThemeManager.cpp:33:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8650695Z {
2025-09-29T03:48:59.8650879Z  ^
2025-09-29T03:48:59.8651293Z src/qt/utils/ThemeManager.cpp:34:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8651863Z     app->setStyle(QStyleFactory::create("Fusion"));
2025-09-29T03:48:59.8652189Z                                                    ^
2025-09-29T03:48:59.8652707Z src/qt/utils/ThemeManager.cpp:36:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8653225Z     QPalette palette;
2025-09-29T03:48:59.8653442Z                      ^
2025-09-29T03:48:59.8653902Z src/qt/utils/ThemeManager.cpp:37:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8654423Z     setLightPalette(palette);
2025-09-29T03:48:59.8654686Z                              ^
2025-09-29T03:48:59.8655158Z src/qt/utils/ThemeManager.cpp:41:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8655748Z void ThemeManager::setModernPalette(QPalette &palette)
2025-09-29T03:48:59.8656117Z                                                       ^
2025-09-29T03:48:59.8656632Z src/qt/utils/ThemeManager.cpp:42:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8657132Z {
2025-09-29T03:48:59.8657299Z  ^
2025-09-29T03:48:59.8657715Z src/qt/utils/ThemeManager.cpp:43:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8658474Z     // Modern light theme with subtle colors
2025-09-29T03:48:59.8658786Z                                             ^
2025-09-29T03:48:59.8659463Z src/qt/utils/ThemeManager.cpp:44:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8660072Z     palette.setColor(QPalette::Window, QColor(248, 249, 250));
2025-09-29T03:48:59.8660461Z                                                               ^
2025-09-29T03:48:59.8660991Z src/qt/utils/ThemeManager.cpp:45:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8661794Z     palette.setColor(QPalette::WindowText, QColor(33, 37, 41));
2025-09-29T03:48:59.8662175Z                                                                ^
2025-09-29T03:48:59.8662706Z src/qt/utils/ThemeManager.cpp:46:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8663301Z     palette.setColor(QPalette::Base, QColor(255, 255, 255));
2025-09-29T03:48:59.8663660Z                                                             ^
2025-09-29T03:48:59.8664195Z src/qt/utils/ThemeManager.cpp:47:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8664823Z     palette.setColor(QPalette::AlternateBase, QColor(248, 249, 250));
2025-09-29T03:48:59.8665229Z                                                                      ^
2025-09-29T03:48:59.8665753Z src/qt/utils/ThemeManager.cpp:48:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8666485Z     palette.setColor(QPalette::ToolTipBase, QColor(255, 255, 255));
2025-09-29T03:48:59.8666895Z                                                                    ^
2025-09-29T03:48:59.8667416Z src/qt/utils/ThemeManager.cpp:49:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8668328Z     palette.setColor(QPalette::ToolTipText, QColor(33, 37, 41));
2025-09-29T03:48:59.8668716Z                                                                 ^
2025-09-29T03:48:59.8669234Z src/qt/utils/ThemeManager.cpp:50:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8670091Z     palette.setColor(QPalette::Text, QColor(33, 37, 41));
2025-09-29T03:48:59.8670469Z                                                          ^
2025-09-29T03:48:59.8670997Z src/qt/utils/ThemeManager.cpp:51:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8671633Z     palette.setColor(QPalette::Button, QColor(248, 249, 250));
2025-09-29T03:48:59.8672007Z                                                               ^
2025-09-29T03:48:59.8672538Z src/qt/utils/ThemeManager.cpp:52:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8673133Z     palette.setColor(QPalette::ButtonText, QColor(33, 37, 41));
2025-09-29T03:48:59.8673501Z                                                                ^
2025-09-29T03:48:59.8674016Z src/qt/utils/ThemeManager.cpp:53:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8674614Z     palette.setColor(QPalette::BrightText, QColor(220, 53, 69));
2025-09-29T03:48:59.8674996Z                                                                 ^
2025-09-29T03:48:59.8675509Z src/qt/utils/ThemeManager.cpp:54:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8676094Z     palette.setColor(QPalette::Link, QColor(0, 120, 215));
2025-09-29T03:48:59.8676451Z                                                           ^
2025-09-29T03:48:59.8676972Z src/qt/utils/ThemeManager.cpp:55:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8677577Z     palette.setColor(QPalette::Highlight, QColor(0, 120, 215));
2025-09-29T03:48:59.8678232Z                                                                ^
2025-09-29T03:48:59.8678767Z src/qt/utils/ThemeManager.cpp:56:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8679407Z     palette.setColor(QPalette::HighlightedText, QColor(255, 255, 255));
2025-09-29T03:48:59.8679829Z                                                                        ^
2025-09-29T03:48:59.8680356Z src/qt/utils/ThemeManager.cpp:58:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8680873Z     // Disabled colors
2025-09-29T03:48:59.8681096Z                       ^
2025-09-29T03:48:59.8681549Z src/qt/utils/ThemeManager.cpp:59:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8682230Z     palette.setColor(QPalette::Disabled, QPalette::WindowText, QColor(108, 117, 125));
2025-09-29T03:48:59.8682861Z                                                               ^
2025-09-29T03:48:59.8683391Z src/qt/utils/ThemeManager.cpp:59:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8684075Z     palette.setColor(QPalette::Disabled, QPalette::WindowText, QColor(108, 117, 125));
2025-09-29T03:48:59.8684822Z                                                                                       ^
2025-09-29T03:48:59.8685789Z src/qt/utils/ThemeManager.cpp:60:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8686944Z     palette.setColor(QPalette::Disabled, QPalette::Text, QColor(108, 117, 125));
2025-09-29T03:48:59.8687724Z                                                                                 ^
2025-09-29T03:48:59.8688836Z src/qt/utils/ThemeManager.cpp:61:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8690029Z     palette.setColor(QPalette::Disabled, QPalette::ButtonText, QColor(108, 117, 125));
2025-09-29T03:48:59.8690824Z                                                               ^
2025-09-29T03:48:59.8691721Z src/qt/utils/ThemeManager.cpp:64:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8692729Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-09-29T03:48:59.8693318Z                                                     ^
2025-09-29T03:48:59.8694401Z src/qt/utils/ThemeManager.cpp:65:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8695293Z {
2025-09-29T03:48:59.8695580Z  ^
2025-09-29T03:48:59.8696305Z src/qt/utils/ThemeManager.cpp:66:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8697176Z     // Dark theme
2025-09-29T03:48:59.8697526Z                  ^
2025-09-29T03:48:59.8698451Z src/qt/utils/ThemeManager.cpp:67:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8699487Z     palette.setColor(QPalette::Window, QColor(53, 53, 53));
2025-09-29T03:48:59.8700109Z                                                            ^
2025-09-29T03:48:59.8701006Z src/qt/utils/ThemeManager.cpp:68:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8702068Z     palette.setColor(QPalette::WindowText, QColor(255, 255, 255));
2025-09-29T03:48:59.8702727Z                                                                   ^
2025-09-29T03:48:59.8703647Z src/qt/utils/ThemeManager.cpp:69:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8704650Z     palette.setColor(QPalette::Base, QColor(25, 25, 25));
2025-09-29T03:48:59.8705241Z                                                          ^
2025-09-29T03:48:59.8706131Z src/qt/utils/ThemeManager.cpp:70:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8707187Z     palette.setColor(QPalette::AlternateBase, QColor(53, 53, 53));
2025-09-29T03:48:59.8708041Z                                                                   ^
2025-09-29T03:48:59.8708972Z src/qt/utils/ThemeManager.cpp:71:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8710034Z     palette.setColor(QPalette::ToolTipBase, QColor(0, 0, 0));
2025-09-29T03:48:59.8710682Z                                                              ^
2025-09-29T03:48:59.8711595Z src/qt/utils/ThemeManager.cpp:72:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8712668Z     palette.setColor(QPalette::ToolTipText, QColor(255, 255, 255));
2025-09-29T03:48:59.8713340Z                                                                    ^
2025-09-29T03:48:59.8714422Z src/qt/utils/ThemeManager.cpp:73:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8715458Z     palette.setColor(QPalette::Text, QColor(255, 255, 255));
2025-09-29T03:48:59.8716289Z                                                             ^
2025-09-29T03:48:59.8717200Z src/qt/utils/ThemeManager.cpp:74:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8718400Z     palette.setColor(QPalette::Button, QColor(53, 53, 53));
2025-09-29T03:48:59.8719025Z                                                            ^
2025-09-29T03:48:59.8719931Z src/qt/utils/ThemeManager.cpp:75:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8721010Z     palette.setColor(QPalette::ButtonText, QColor(255, 255, 255));
2025-09-29T03:48:59.8721679Z                                                                   ^
2025-09-29T03:48:59.8722582Z src/qt/utils/ThemeManager.cpp:76:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8723626Z     palette.setColor(QPalette::BrightText, QColor(255, 0, 0));
2025-09-29T03:48:59.8724275Z                                                               ^
2025-09-29T03:48:59.8725200Z src/qt/utils/ThemeManager.cpp:77:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8726229Z     palette.setColor(QPalette::Link, QColor(42, 130, 218));
2025-09-29T03:48:59.8726834Z                                                            ^
2025-09-29T03:48:59.8727741Z src/qt/utils/ThemeManager.cpp:78:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8728987Z     palette.setColor(QPalette::Highlight, QColor(42, 130, 218));
2025-09-29T03:48:59.8729854Z                                                                 ^
2025-09-29T03:48:59.8730782Z src/qt/utils/ThemeManager.cpp:79:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8731854Z     palette.setColor(QPalette::HighlightedText, QColor(0, 0, 0));
2025-09-29T03:48:59.8732520Z                                                                  ^
2025-09-29T03:48:59.8733425Z src/qt/utils/ThemeManager.cpp:81:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8734635Z     palette.setColor(QPalette::Disabled, QPalette::WindowText, QColor(127, 127, 127));
2025-09-29T03:48:59.8735443Z                                                               ^
2025-09-29T03:48:59.8736346Z src/qt/utils/ThemeManager.cpp:81:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8737548Z     palette.setColor(QPalette::Disabled, QPalette::WindowText, QColor(127, 127, 127));
2025-09-29T03:48:59.8738596Z                                                                                       ^
2025-09-29T03:48:59.8739566Z src/qt/utils/ThemeManager.cpp:82:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8740751Z     palette.setColor(QPalette::Disabled, QPalette::Text, QColor(127, 127, 127));
2025-09-29T03:48:59.8741533Z                                                                                 ^
2025-09-29T03:48:59.8742475Z src/qt/utils/ThemeManager.cpp:83:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8743683Z     palette.setColor(QPalette::Disabled, QPalette::ButtonText, QColor(127, 127, 127));
2025-09-29T03:48:59.8744492Z                                                               ^
2025-09-29T03:48:59.8745420Z src/qt/utils/ThemeManager.cpp:86:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8746442Z void ThemeManager::setLightPalette(QPalette &palette)
2025-09-29T03:48:59.8747061Z                                                      ^
2025-09-29T03:48:59.8748162Z src/qt/utils/ThemeManager.cpp:87:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8749056Z {
2025-09-29T03:48:59.8749348Z  ^
2025-09-29T03:48:59.8750082Z src/qt/utils/ThemeManager.cpp:88:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8751121Z     // Light theme - use system default with some modifications
2025-09-29T03:48:59.8752025Z                                                                ^
2025-09-29T03:48:59.8752952Z src/qt/utils/ThemeManager.cpp:89:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8753965Z     palette = QApplication::style()->standardPalette();
2025-09-29T03:48:59.8754564Z                                                        ^
2025-09-29T03:48:59.8755469Z src/qt/utils/ThemeManager.cpp:90:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8756535Z     palette.setColor(QPalette::Highlight, QColor(0, 120, 215));
2025-09-29T03:48:59.8757180Z                                                                ^
2025-09-29T03:48:59.8758269Z src/qt/utils/ThemeManager.cpp:94:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8759253Z QString ThemeManager::getModernStyleSheet()
2025-09-29T03:48:59.8759792Z                                            ^
2025-09-29T03:48:59.8760693Z src/qt/utils/ThemeManager.cpp:95:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8761574Z {
2025-09-29T03:48:59.8761866Z  ^
2025-09-29T03:48:59.8762768Z src/qt/VersionToolsMainWindow.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8763753Z #include "VersionToolsMainWindow.h"
2025-09-29T03:48:59.8764224Z ^
2025-09-29T03:48:59.8765008Z src/qt/VersionToolsMainWindow.cpp:10:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8766174Z #include <QApplication>
2025-09-29T03:48:59.8766564Z ^
2025-09-29T03:48:59.8767351Z src/qt/VersionToolsMainWindow.cpp:28:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8768522Z     : QMainWindow(parent)
2025-09-29T03:48:59.8768934Z                          ^
2025-09-29T03:48:59.8769816Z src/qt/VersionToolsMainWindow.cpp:29:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8770811Z     , m_centralSplitter(nullptr)
2025-09-29T03:48:59.8771271Z                                 ^
2025-09-29T03:48:59.8772244Z src/qt/VersionToolsMainWindow.cpp:30:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8773220Z     , m_contentStack(nullptr)
2025-09-29T03:48:59.8773664Z                              ^
2025-09-29T03:48:59.8774548Z src/qt/VersionToolsMainWindow.cpp:31:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8775526Z     , m_sidebarWidget(nullptr)
2025-09-29T03:48:59.8775951Z      ^
2025-09-29T03:48:59.8776755Z src/qt/VersionToolsMainWindow.cpp:31:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8777732Z     , m_sidebarWidget(nullptr)
2025-09-29T03:48:59.8778352Z                               ^
2025-09-29T03:48:59.8779244Z src/qt/VersionToolsMainWindow.cpp:32:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8780202Z     , m_changesWidget(nullptr)
2025-09-29T03:48:59.8780645Z                               ^
2025-09-29T03:48:59.8781520Z src/qt/VersionToolsMainWindow.cpp:33:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8782479Z     , m_historyWidget(nullptr)
2025-09-29T03:48:59.8782888Z      ^
2025-09-29T03:48:59.8783679Z src/qt/VersionToolsMainWindow.cpp:33:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8784634Z     , m_historyWidget(nullptr)
2025-09-29T03:48:59.8785063Z                               ^
2025-09-29T03:48:59.8785946Z src/qt/VersionToolsMainWindow.cpp:34:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8786907Z     , m_branchesWidget(nullptr)
2025-09-29T03:48:59.8787344Z                                ^
2025-09-29T03:48:59.8788389Z src/qt/VersionToolsMainWindow.cpp:35:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8789411Z     , m_gitManager(std::make_unique<GitManager>())
2025-09-29T03:48:59.8790131Z      ^
2025-09-29T03:48:59.8790926Z src/qt/VersionToolsMainWindow.cpp:35:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8791949Z     , m_gitManager(std::make_unique<GitManager>())
2025-09-29T03:48:59.8792493Z                                                   ^
2025-09-29T03:48:59.8793452Z src/qt/VersionToolsMainWindow.cpp:36:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8794409Z     , m_gitWorker(nullptr)
2025-09-29T03:48:59.8794835Z                           ^
2025-09-29T03:48:59.8795702Z src/qt/VersionToolsMainWindow.cpp:37:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8796634Z {
2025-09-29T03:48:59.8796931Z  ^
2025-09-29T03:48:59.8797705Z src/qt/VersionToolsMainWindow.cpp:38:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8798856Z     setWindowTitle("Version Tools");
2025-09-29T03:48:59.8799349Z                                     ^
2025-09-29T03:48:59.8800272Z src/qt/VersionToolsMainWindow.cpp:39:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8801233Z     setMinimumSize(1000, 700);
2025-09-29T03:48:59.8801671Z                               ^
2025-09-29T03:48:59.8802555Z src/qt/VersionToolsMainWindow.cpp:40:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8803494Z     resize(1400, 900);
2025-09-29T03:48:59.8803877Z                       ^
2025-09-29T03:48:59.8804995Z src/qt/VersionToolsMainWindow.cpp:42:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8805964Z     // Create Git worker thread
2025-09-29T03:48:59.8806394Z                                ^
2025-09-29T03:48:59.8807287Z src/qt/VersionToolsMainWindow.cpp:43:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8808536Z     m_gitWorker = new GitWorker(m_gitManager.get(), this);
2025-09-29T03:48:59.8809158Z                                                           ^
2025-09-29T03:48:59.8810139Z src/qt/VersionToolsMainWindow.cpp:45:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8811102Z     createActions();
2025-09-29T03:48:59.8811488Z                     ^
2025-09-29T03:48:59.8812328Z src/qt/VersionToolsMainWindow.cpp:46:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8813286Z     createMenus();
2025-09-29T03:48:59.8813648Z                   ^
2025-09-29T03:48:59.8814486Z src/qt/VersionToolsMainWindow.cpp:47:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8815454Z     createToolBars();
2025-09-29T03:48:59.8815827Z                      ^
2025-09-29T03:48:59.8816674Z src/qt/VersionToolsMainWindow.cpp:48:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8817642Z     createStatusBar();
2025-09-29T03:48:59.8818204Z                       ^
2025-09-29T03:48:59.8819066Z src/qt/VersionToolsMainWindow.cpp:49:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8820046Z     setupCentralWidget();
2025-09-29T03:48:59.8820466Z                          ^
2025-09-29T03:48:59.8821334Z src/qt/VersionToolsMainWindow.cpp:50:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8822302Z     connectSignals();
2025-09-29T03:48:59.8822678Z                      ^
2025-09-29T03:48:59.8823535Z src/qt/VersionToolsMainWindow.cpp:52:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8824488Z     loadSettings();
2025-09-29T03:48:59.8824854Z                    ^
2025-09-29T03:48:59.8825696Z src/qt/VersionToolsMainWindow.cpp:54:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8826703Z     // Auto-open last repository if available
2025-09-29T03:48:59.8827244Z                                              ^
2025-09-29T03:48:59.8828595Z src/qt/VersionToolsMainWindow.cpp:55:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8829588Z     QSettings settings;
2025-09-29T03:48:59.8829980Z                        ^
2025-09-29T03:48:59.8830889Z src/qt/VersionToolsMainWindow.cpp:56:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8832043Z     QString lastRepo = settings.value("lastRepository").toString();
2025-09-29T03:48:59.8832751Z                                                                    ^
2025-09-29T03:48:59.8833771Z src/qt/VersionToolsMainWindow.cpp:57:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8834844Z     if (!lastRepo.isEmpty() && QDir(lastRepo).exists()) {
2025-09-29T03:48:59.8835458Z                                                          ^
2025-09-29T03:48:59.8836435Z src/qt/VersionToolsMainWindow.cpp:58:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8837528Z         QTimer::singleShot(100, [this, lastRepo]() {
2025-09-29T03:48:59.8838239Z                                ^
2025-09-29T03:48:59.8839156Z src/qt/VersionToolsMainWindow.cpp:58:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8840202Z         QTimer::singleShot(100, [this, lastRepo]() {
2025-09-29T03:48:59.8840760Z                                                     ^
2025-09-29T03:48:59.8841737Z src/qt/VersionToolsMainWindow.cpp:59:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8843004Z             onRepositoryOpened(lastRepo);
2025-09-29T03:48:59.8843549Z                                          ^
2025-09-29T03:48:59.8844517Z src/qt/VersionToolsMainWindow.cpp:60:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8845472Z         });
2025-09-29T03:48:59.8845800Z            ^
2025-09-29T03:48:59.8846633Z src/qt/VersionToolsMainWindow.cpp:64:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8847332Z VersionToolsMainWindow::~VersionToolsMainWindow()
2025-09-29T03:48:59.8847691Z                                                  ^
2025-09-29T03:48:59.8848443Z src/qt/VersionToolsMainWindow.cpp:65:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8849001Z {
2025-09-29T03:48:59.8849180Z  ^
2025-09-29T03:48:59.8849650Z src/qt/VersionToolsMainWindow.cpp:66:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8850227Z     saveSettings();
2025-09-29T03:48:59.8850452Z                    ^
2025-09-29T03:48:59.8850937Z src/qt/VersionToolsMainWindow.cpp:69:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8851551Z void VersionToolsMainWindow::createActions()
2025-09-29T03:48:59.8851880Z                                             ^
2025-09-29T03:48:59.8852443Z src/qt/VersionToolsMainWindow.cpp:70:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8853000Z {
2025-09-29T03:48:59.8853175Z  ^
2025-09-29T03:48:59.8853637Z src/qt/VersionToolsMainWindow.cpp:71:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8854195Z     // File menu actions
2025-09-29T03:48:59.8854442Z                         ^
2025-09-29T03:48:59.8854947Z src/qt/VersionToolsMainWindow.cpp:72:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8855732Z     m_openAction = new QAction(QIcon(":/icons/folder-open.svg"), tr("&Open Repository..."), this);
2025-09-29T03:48:59.8856268Z                                                                 ^
2025-09-29T03:48:59.8856847Z src/qt/VersionToolsMainWindow.cpp:72:99: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8857615Z     m_openAction = new QAction(QIcon(":/icons/folder-open.svg"), tr("&Open Repository..."), this);
2025-09-29T03:48:59.8858270Z                                                                                                   ^
2025-09-29T03:48:59.8859061Z src/qt/VersionToolsMainWindow.cpp:73:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8859679Z     m_openAction->setShortcut(QKeySequence::Open);
2025-09-29T03:48:59.8860019Z                                                   ^
2025-09-29T03:48:59.8860594Z src/qt/VersionToolsMainWindow.cpp:74:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8861285Z     m_openAction->setStatusTip(tr("Open an existing Git repository"));
2025-09-29T03:48:59.8861725Z                                                                       ^
2025-09-29T03:48:59.8862312Z src/qt/VersionToolsMainWindow.cpp:75:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8863096Z     connect(m_openAction, &QAction::triggered, this, &VersionToolsMainWindow::openRepository);
2025-09-29T03:48:59.8863626Z                                                     ^
2025-09-29T03:48:59.8864205Z src/qt/VersionToolsMainWindow.cpp:75:95: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8864975Z     connect(m_openAction, &QAction::triggered, this, &VersionToolsMainWindow::openRepository);
2025-09-29T03:48:59.8865505Z                                                                                               ^
2025-09-29T03:48:59.8866098Z src/qt/VersionToolsMainWindow.cpp:77:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8867007Z     m_cloneAction = new QAction(QIcon(":/icons/download.svg"), tr("&Clone Repository..."), this);
2025-09-29T03:48:59.8867531Z                                                               ^
2025-09-29T03:48:59.8868243Z src/qt/VersionToolsMainWindow.cpp:77:98: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8869001Z     m_cloneAction = new QAction(QIcon(":/icons/download.svg"), tr("&Clone Repository..."), this);
2025-09-29T03:48:59.8869528Z                                                                                                  ^
2025-09-29T03:48:59.8870123Z src/qt/VersionToolsMainWindow.cpp:78:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8870839Z     m_cloneAction->setShortcut(QKeySequence(Qt::CTRL | Qt::SHIFT | Qt::Key_O));
2025-09-29T03:48:59.8871526Z                                                                                ^
2025-09-29T03:48:59.8872583Z src/qt/VersionToolsMainWindow.cpp:79:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8873822Z     m_cloneAction->setStatusTip(tr("Clone a repository from a remote URL"));
2025-09-29T03:48:59.8874600Z                                                                             ^
2025-09-29T03:48:59.8875615Z src/qt/VersionToolsMainWindow.cpp:80:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8876991Z     connect(m_cloneAction, &QAction::triggered, this, &VersionToolsMainWindow::cloneRepository);
2025-09-29T03:48:59.8878057Z                                                      ^
2025-09-29T03:48:59.8879069Z src/qt/VersionToolsMainWindow.cpp:80:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8880441Z     connect(m_cloneAction, &QAction::triggered, this, &VersionToolsMainWindow::cloneRepository);
2025-09-29T03:48:59.8881364Z                                                                                                 ^
2025-09-29T03:48:59.8882410Z src/qt/VersionToolsMainWindow.cpp:82:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8883664Z     m_refreshAction = new QAction(QIcon(":/icons/refresh.svg"), tr("&Refresh"), this);
2025-09-29T03:48:59.8884435Z                      ^
2025-09-29T03:48:59.8885313Z src/qt/VersionToolsMainWindow.cpp:82:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8886549Z     m_refreshAction = new QAction(QIcon(":/icons/refresh.svg"), tr("&Refresh"), this);
2025-09-29T03:48:59.8887634Z                                                                                       ^
2025-09-29T03:48:59.8888841Z src/qt/VersionToolsMainWindow.cpp:83:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8889938Z     m_refreshAction->setShortcut(QKeySequence::Refresh);
2025-09-29T03:48:59.8890560Z                                                         ^
2025-09-29T03:48:59.8891547Z src/qt/VersionToolsMainWindow.cpp:84:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8892717Z     m_refreshAction->setStatusTip(tr("Refresh repository status"));
2025-09-29T03:48:59.8893424Z                                                                    ^
2025-09-29T03:48:59.8894423Z src/qt/VersionToolsMainWindow.cpp:85:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8895801Z     connect(m_refreshAction, &QAction::triggered, this, &VersionToolsMainWindow::refreshRepository);
2025-09-29T03:48:59.8896727Z                                                        ^
2025-09-29T03:48:59.8897525Z src/qt/VersionToolsMainWindow.cpp:85:101: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8898644Z     connect(m_refreshAction, &QAction::triggered, this, &VersionToolsMainWindow::refreshRepository);
2025-09-29T03:48:59.8899202Z                                                                                                     ^
2025-09-29T03:48:59.8899979Z src/qt/VersionToolsMainWindow.cpp:87:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8900757Z     m_settingsAction = new QAction(QIcon(":/icons/settings.svg"), tr("&Settings..."), this);
2025-09-29T03:48:59.8901229Z                       ^
2025-09-29T03:48:59.8901746Z src/qt/VersionToolsMainWindow.cpp:87:93: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8902496Z     m_settingsAction = new QAction(QIcon(":/icons/settings.svg"), tr("&Settings..."), this);
2025-09-29T03:48:59.8902991Z                                                                                             ^
2025-09-29T03:48:59.8903582Z src/qt/VersionToolsMainWindow.cpp:88:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8904237Z     m_settingsAction->setShortcut(QKeySequence::Preferences);
2025-09-29T03:48:59.8904623Z                                                              ^
2025-09-29T03:48:59.8905211Z src/qt/VersionToolsMainWindow.cpp:89:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8905901Z     m_settingsAction->setStatusTip(tr("Configure application settings"));
2025-09-29T03:48:59.8906349Z                                                                          ^
2025-09-29T03:48:59.8906917Z src/qt/VersionToolsMainWindow.cpp:90:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8907702Z     connect(m_settingsAction, &QAction::triggered, this, &VersionToolsMainWindow::showSettings);
2025-09-29T03:48:59.8908407Z                                                         ^
2025-09-29T03:48:59.8908966Z src/qt/VersionToolsMainWindow.cpp:90:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8909734Z     connect(m_settingsAction, &QAction::triggered, this, &VersionToolsMainWindow::showSettings);
2025-09-29T03:48:59.8910274Z                                                                                                 ^
2025-09-29T03:48:59.8910847Z src/qt/VersionToolsMainWindow.cpp:92:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8911441Z     m_exitAction = new QAction(tr("E&xit"), this);
2025-09-29T03:48:59.8911771Z                                                   ^
2025-09-29T03:48:59.8912322Z src/qt/VersionToolsMainWindow.cpp:93:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8913096Z     m_exitAction->setShortcut(QKeySequence::Quit);
2025-09-29T03:48:59.8913427Z                                                   ^
2025-09-29T03:48:59.8913983Z src/qt/VersionToolsMainWindow.cpp:94:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8914604Z     m_exitAction->setStatusTip(tr("Exit the application"));
2025-09-29T03:48:59.8914984Z                                                            ^
2025-09-29T03:48:59.8915549Z src/qt/VersionToolsMainWindow.cpp:95:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8916215Z     connect(m_exitAction, &QAction::triggered, this, &QWidget::close);
2025-09-29T03:48:59.8916871Z                                                                       ^
2025-09-29T03:48:59.8918025Z src/qt/VersionToolsMainWindow.cpp:97:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8919024Z     // Help menu actions
2025-09-29T03:48:59.8919441Z                         ^
2025-09-29T03:48:59.8920317Z src/qt/VersionToolsMainWindow.cpp:98:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8921445Z     m_aboutAction = new QAction(tr("&About Version Tools"), this);
2025-09-29T03:48:59.8922106Z                                                                   ^
2025-09-29T03:48:59.8923091Z src/qt/VersionToolsMainWindow.cpp:99:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8924500Z     m_aboutAction->setStatusTip(tr("Show information about Version Tools"));
2025-09-29T03:48:59.8925284Z                                                                             ^
2025-09-29T03:48:59.8926298Z src/qt/VersionToolsMainWindow.cpp:100:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8927612Z     connect(m_aboutAction, &QAction::triggered, this, &VersionToolsMainWindow::showAbout);
2025-09-29T03:48:59.8928633Z                                                      ^
2025-09-29T03:48:59.8929634Z src/qt/VersionToolsMainWindow.cpp:100:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8930948Z     connect(m_aboutAction, &QAction::triggered, this, &VersionToolsMainWindow::showAbout);
2025-09-29T03:48:59.8931805Z                                                                                           ^
2025-09-29T03:48:59.8932845Z src/qt/VersionToolsMainWindow.cpp:102:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8933492Z     m_aboutQtAction = new QAction(tr("About &Qt"), this);
2025-09-29T03:48:59.8933854Z                                                          ^
2025-09-29T03:48:59.8934435Z src/qt/VersionToolsMainWindow.cpp:103:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8935109Z     m_aboutQtAction->setStatusTip(tr("Show information about Qt"));
2025-09-29T03:48:59.8935527Z                                                                    ^
2025-09-29T03:48:59.8936113Z src/qt/VersionToolsMainWindow.cpp:107:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8936718Z void VersionToolsMainWindow::createMenus()
2025-09-29T03:48:59.8937044Z                                           ^
2025-09-29T03:48:59.8937596Z src/qt/VersionToolsMainWindow.cpp:108:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8938328Z {
2025-09-29T03:48:59.8938510Z  ^
2025-09-29T03:48:59.8938990Z src/qt/VersionToolsMainWindow.cpp:109:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8939595Z     m_fileMenu = menuBar()->addMenu(tr("&File"));
2025-09-29T03:48:59.8939923Z                                                  ^
2025-09-29T03:48:59.8940487Z src/qt/VersionToolsMainWindow.cpp:110:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8941074Z     m_fileMenu->addAction(m_openAction);
2025-09-29T03:48:59.8941565Z                                         ^
2025-09-29T03:48:59.8942120Z src/qt/VersionToolsMainWindow.cpp:111:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8942702Z     m_fileMenu->addAction(m_cloneAction);
2025-09-29T03:48:59.8943002Z                                          ^
2025-09-29T03:48:59.8943546Z src/qt/VersionToolsMainWindow.cpp:112:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8944119Z     m_fileMenu->addSeparator();
2025-09-29T03:48:59.8944397Z                                ^
2025-09-29T03:48:59.8944936Z src/qt/VersionToolsMainWindow.cpp:113:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8945517Z     m_fileMenu->addAction(m_refreshAction);
2025-09-29T03:48:59.8945838Z                                            ^
2025-09-29T03:48:59.8946388Z src/qt/VersionToolsMainWindow.cpp:114:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8946958Z     m_fileMenu->addSeparator();
2025-09-29T03:48:59.8947222Z                                ^
2025-09-29T03:48:59.8947737Z src/qt/VersionToolsMainWindow.cpp:115:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8948457Z     m_fileMenu->addAction(m_settingsAction);
2025-09-29T03:48:59.8948761Z                                             ^
2025-09-29T03:48:59.8949306Z src/qt/VersionToolsMainWindow.cpp:116:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8950007Z     m_fileMenu->addSeparator();
2025-09-29T03:48:59.8950273Z                                ^
2025-09-29T03:48:59.8950791Z src/qt/VersionToolsMainWindow.cpp:117:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8951352Z     m_fileMenu->addAction(m_exitAction);
2025-09-29T03:48:59.8951648Z                                         ^
2025-09-29T03:48:59.8952178Z src/qt/VersionToolsMainWindow.cpp:119:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8952767Z     m_viewMenu = menuBar()->addMenu(tr("&View"));
2025-09-29T03:48:59.8953093Z                                                  ^
2025-09-29T03:48:59.8953640Z src/qt/VersionToolsMainWindow.cpp:120:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8954217Z     // View menu items will be added by widgets
2025-09-29T03:48:59.8954527Z                                                ^
2025-09-29T03:48:59.8955082Z src/qt/VersionToolsMainWindow.cpp:122:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8955650Z     m_gitMenu = menuBar()->addMenu(tr("&Git"));
2025-09-29T03:48:59.8955958Z                                                ^
2025-09-29T03:48:59.8956506Z src/qt/VersionToolsMainWindow.cpp:123:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8957070Z     // Git menu items will be added by widgets
2025-09-29T03:48:59.8957380Z                                               ^
2025-09-29T03:48:59.8958034Z src/qt/VersionToolsMainWindow.cpp:125:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8958621Z     m_helpMenu = menuBar()->addMenu(tr("&Help"));
2025-09-29T03:48:59.8958932Z                                                  ^
2025-09-29T03:48:59.8959480Z src/qt/VersionToolsMainWindow.cpp:126:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8960051Z     m_helpMenu->addAction(m_aboutAction);
2025-09-29T03:48:59.8960351Z                                          ^
2025-09-29T03:48:59.8960901Z src/qt/VersionToolsMainWindow.cpp:130:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8961492Z void VersionToolsMainWindow::createToolBars()
2025-09-29T03:48:59.8961811Z                                              ^
2025-09-29T03:48:59.8962347Z src/qt/VersionToolsMainWindow.cpp:131:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8963061Z {
2025-09-29T03:48:59.8963241Z  ^
2025-09-29T03:48:59.8963692Z src/qt/VersionToolsMainWindow.cpp:132:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8964262Z     m_mainToolBar = addToolBar(tr("Main"));
2025-09-29T03:48:59.8964557Z                                            ^
2025-09-29T03:48:59.8965093Z src/qt/VersionToolsMainWindow.cpp:133:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8965665Z     m_mainToolBar->setMovable(false);
2025-09-29T03:48:59.8965957Z                                      ^
2025-09-29T03:48:59.8966515Z src/qt/VersionToolsMainWindow.cpp:134:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8967082Z     m_mainToolBar->addAction(m_openAction);
2025-09-29T03:48:59.8967383Z                                            ^
2025-09-29T03:48:59.8968039Z src/qt/VersionToolsMainWindow.cpp:135:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8968626Z     m_mainToolBar->addAction(m_cloneAction);
2025-09-29T03:48:59.8968918Z                                             ^
2025-09-29T03:48:59.8969456Z src/qt/VersionToolsMainWindow.cpp:136:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8970023Z     m_mainToolBar->addSeparator();
2025-09-29T03:48:59.8970294Z                                   ^
2025-09-29T03:48:59.8970963Z src/qt/VersionToolsMainWindow.cpp:137:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8971594Z     m_mainToolBar->addAction(m_refreshAction);
2025-09-29T03:48:59.8971915Z                                               ^
2025-09-29T03:48:59.8972450Z src/qt/VersionToolsMainWindow.cpp:138:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8973014Z     m_mainToolBar->addSeparator();
2025-09-29T03:48:59.8973285Z                                   ^
2025-09-29T03:48:59.8973809Z src/qt/VersionToolsMainWindow.cpp:142:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8974406Z void VersionToolsMainWindow::createStatusBar()
2025-09-29T03:48:59.8974719Z                                               ^
2025-09-29T03:48:59.8975263Z src/qt/VersionToolsMainWindow.cpp:143:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8975796Z {
2025-09-29T03:48:59.8975973Z  ^
2025-09-29T03:48:59.8976437Z src/qt/VersionToolsMainWindow.cpp:144:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8977069Z     m_repositoryLabel = new QLabel(tr("No repository opened"));
2025-09-29T03:48:59.8977459Z                                                                ^
2025-09-29T03:48:59.8978165Z src/qt/VersionToolsMainWindow.cpp:145:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8978752Z     m_repositoryLabel->setMinimumWidth(200);
2025-09-29T03:48:59.8979056Z                                             ^
2025-09-29T03:48:59.8979871Z src/qt/VersionToolsMainWindow.cpp:146:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8980882Z     statusBar()->addWidget(m_repositoryLabel);
2025-09-29T03:48:59.8981399Z                                               ^
2025-09-29T03:48:59.8982337Z src/qt/VersionToolsMainWindow.cpp:148:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8983385Z     statusBar()->addPermanentWidget(new QLabel("|"));
2025-09-29T03:48:59.8983969Z                                                      ^
2025-09-29T03:48:59.8984920Z src/qt/VersionToolsMainWindow.cpp:150:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8985882Z     m_branchLabel = new QLabel("");
2025-09-29T03:48:59.8986344Z                                    ^
2025-09-29T03:48:59.8987244Z src/qt/VersionToolsMainWindow.cpp:151:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8988738Z     m_branchLabel->setMinimumWidth(100);
2025-09-29T03:48:59.8989234Z                                         ^
2025-09-29T03:48:59.8990168Z src/qt/VersionToolsMainWindow.cpp:152:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8991203Z     statusBar()->addPermanentWidget(m_branchLabel);
2025-09-29T03:48:59.8991767Z                                                    ^
2025-09-29T03:48:59.8992720Z src/qt/VersionToolsMainWindow.cpp:154:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8993745Z     statusBar()->addPermanentWidget(new QLabel("|"));
2025-09-29T03:48:59.8994316Z                                                      ^
2025-09-29T03:48:59.8995252Z src/qt/VersionToolsMainWindow.cpp:156:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8996238Z     m_statusLabel = new QLabel(tr("Ready"));
2025-09-29T03:48:59.8996754Z                                             ^
2025-09-29T03:48:59.8997676Z src/qt/VersionToolsMainWindow.cpp:157:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.8998858Z     statusBar()->addPermanentWidget(m_statusLabel);
2025-09-29T03:48:59.8999410Z                                                    ^
2025-09-29T03:48:59.9000342Z src/qt/VersionToolsMainWindow.cpp:159:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9001301Z     m_progressBar = new QProgressBar();
2025-09-29T03:48:59.9002011Z                                        ^
2025-09-29T03:48:59.9002930Z src/qt/VersionToolsMainWindow.cpp:160:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9003879Z     m_progressBar->setVisible(false);
2025-09-29T03:48:59.9004356Z                                      ^
2025-09-29T03:48:59.9005247Z src/qt/VersionToolsMainWindow.cpp:161:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9006220Z     m_progressBar->setMaximumWidth(200);
2025-09-29T03:48:59.9006704Z                                         ^
2025-09-29T03:48:59.9007616Z src/qt/VersionToolsMainWindow.cpp:165:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9008814Z void VersionToolsMainWindow::setupCentralWidget()
2025-09-29T03:48:59.9009372Z                                                  ^
2025-09-29T03:48:59.9010308Z src/qt/VersionToolsMainWindow.cpp:166:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9011207Z {
2025-09-29T03:48:59.9011490Z  ^
2025-09-29T03:48:59.9012245Z src/qt/VersionToolsMainWindow.cpp:167:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9013298Z     m_centralSplitter = new QSplitter(Qt::Horizontal, this);
2025-09-29T03:48:59.9013912Z                                                             ^
2025-09-29T03:48:59.9014844Z src/qt/VersionToolsMainWindow.cpp:168:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9015821Z     setCentralWidget(m_centralSplitter);
2025-09-29T03:48:59.9016307Z                                         ^
2025-09-29T03:48:59.9017207Z src/qt/VersionToolsMainWindow.cpp:170:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9018285Z     // Create sidebar
2025-09-29T03:48:59.9018658Z                      ^
2025-09-29T03:48:59.9019494Z src/qt/VersionToolsMainWindow.cpp:171:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9020472Z     m_sidebarWidget = new SidebarWidget(this);
2025-09-29T03:48:59.9020998Z                                               ^
2025-09-29T03:48:59.9021916Z src/qt/VersionToolsMainWindow.cpp:172:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9022882Z     m_sidebarWidget->setFixedWidth(250);
2025-09-29T03:48:59.9023363Z                                         ^
2025-09-29T03:48:59.9024487Z src/qt/VersionToolsMainWindow.cpp:173:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9025493Z     m_centralSplitter->addWidget(m_sidebarWidget);
2025-09-29T03:48:59.9026037Z                                                   ^
2025-09-29T03:48:59.9026973Z src/qt/VersionToolsMainWindow.cpp:175:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9028086Z     // Create content stack
2025-09-29T03:48:59.9028744Z                            ^
2025-09-29T03:48:59.9029619Z src/qt/VersionToolsMainWindow.cpp:176:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9030600Z     m_contentStack = new QStackedWidget(this);
2025-09-29T03:48:59.9031121Z                                               ^
2025-09-29T03:48:59.9032037Z src/qt/VersionToolsMainWindow.cpp:177:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9033041Z     m_centralSplitter->addWidget(m_contentStack);
2025-09-29T03:48:59.9033576Z                                                  ^
2025-09-29T03:48:59.9034503Z src/qt/VersionToolsMainWindow.cpp:179:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9035440Z     // Create content widgets
2025-09-29T03:48:59.9035857Z                              ^
2025-09-29T03:48:59.9036745Z src/qt/VersionToolsMainWindow.cpp:180:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9038179Z     m_changesWidget = new ChangesWidget(m_gitManager.get(), this);
2025-09-29T03:48:59.9038876Z                                                                   ^
2025-09-29T03:48:59.9039851Z src/qt/VersionToolsMainWindow.cpp:181:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9040965Z     m_historyWidget = new HistoryWidget(m_gitManager.get(), this);
2025-09-29T03:48:59.9041627Z                                                                   ^
2025-09-29T03:48:59.9042595Z src/qt/VersionToolsMainWindow.cpp:182:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9043715Z     m_branchesWidget = new BranchesWidget(m_gitManager.get(), this);
2025-09-29T03:48:59.9044385Z                                                                     ^
2025-09-29T03:48:59.9045349Z src/qt/VersionToolsMainWindow.cpp:184:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9046350Z     m_contentStack->addWidget(m_changesWidget);
2025-09-29T03:48:59.9046886Z                                                ^
2025-09-29T03:48:59.9047828Z src/qt/VersionToolsMainWindow.cpp:185:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9048975Z     m_contentStack->addWidget(m_historyWidget);
2025-09-29T03:48:59.9049504Z                                                ^
2025-09-29T03:48:59.9050431Z src/qt/VersionToolsMainWindow.cpp:186:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9051440Z     m_contentStack->addWidget(m_branchesWidget);
2025-09-29T03:48:59.9051975Z                                                 ^
2025-09-29T03:48:59.9052910Z src/qt/VersionToolsMainWindow.cpp:188:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9053876Z     // Set splitter proportions
2025-09-29T03:48:59.9054317Z                                ^
2025-09-29T03:48:59.9055208Z src/qt/VersionToolsMainWindow.cpp:189:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9056193Z     m_centralSplitter->setSizes({250, 1150});
2025-09-29T03:48:59.9056710Z                                              ^
2025-09-29T03:48:59.9057638Z src/qt/VersionToolsMainWindow.cpp:190:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9058800Z     m_centralSplitter->setStretchFactor(0, 0);
2025-09-29T03:48:59.9059332Z                                               ^
2025-09-29T03:48:59.9060164Z src/qt/VersionToolsMainWindow.cpp:194:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9060761Z void VersionToolsMainWindow::connectSignals()
2025-09-29T03:48:59.9061072Z                                              ^
2025-09-29T03:48:59.9061610Z src/qt/VersionToolsMainWindow.cpp:195:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9062145Z {
2025-09-29T03:48:59.9062314Z  ^
2025-09-29T03:48:59.9062771Z src/qt/VersionToolsMainWindow.cpp:196:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9063398Z     connect(m_sidebarWidget, &SidebarWidget::selectionChanged,
2025-09-29T03:48:59.9063785Z                                                               ^
2025-09-29T03:48:59.9064338Z src/qt/VersionToolsMainWindow.cpp:197:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9064993Z             this, &VersionToolsMainWindow::onSidebarSelectionChanged);
2025-09-29T03:48:59.9065364Z                  ^
2025-09-29T03:48:59.9065838Z src/qt/VersionToolsMainWindow.cpp:197:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9066475Z             this, &VersionToolsMainWindow::onSidebarSelectionChanged);
2025-09-29T03:48:59.9066862Z                                                                       ^
2025-09-29T03:48:59.9067424Z src/qt/VersionToolsMainWindow.cpp:199:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9068388Z     connect(m_gitWorker, &GitWorker::repositoryOpened,
2025-09-29T03:48:59.9068747Z                                                       ^
2025-09-29T03:48:59.9069300Z src/qt/VersionToolsMainWindow.cpp:200:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9069906Z             this, &VersionToolsMainWindow::onRepositoryOpened);
2025-09-29T03:48:59.9070246Z                  ^
2025-09-29T03:48:59.9070733Z src/qt/VersionToolsMainWindow.cpp:200:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9071348Z             this, &VersionToolsMainWindow::onRepositoryOpened);
2025-09-29T03:48:59.9071750Z                                                                ^
2025-09-29T03:48:59.9072305Z src/qt/VersionToolsMainWindow.cpp:201:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9072897Z     connect(m_gitWorker, &GitWorker::statusChanged,
2025-09-29T03:48:59.9073237Z                                                    ^
2025-09-29T03:48:59.9073786Z src/qt/VersionToolsMainWindow.cpp:202:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9074419Z             this, &VersionToolsMainWindow::onRepositoryStatusChanged);
2025-09-29T03:48:59.9074773Z                  ^
2025-09-29T03:48:59.9075246Z src/qt/VersionToolsMainWindow.cpp:202:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9076373Z             this, &VersionToolsMainWindow::onRepositoryStatusChanged);
2025-09-29T03:48:59.9077045Z                                                                       ^
2025-09-29T03:48:59.9078182Z src/qt/VersionToolsMainWindow.cpp:203:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9079241Z     connect(m_gitWorker, &GitWorker::operationStarted,
2025-09-29T03:48:59.9079820Z                                                       ^
2025-09-29T03:48:59.9080778Z src/qt/VersionToolsMainWindow.cpp:204:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9081869Z             this, &VersionToolsMainWindow::onGitOperationStarted);
2025-09-29T03:48:59.9082451Z                  ^
2025-09-29T03:48:59.9083278Z src/qt/VersionToolsMainWindow.cpp:204:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9084356Z             this, &VersionToolsMainWindow::onGitOperationStarted);
2025-09-29T03:48:59.9085192Z                                                                   ^
2025-09-29T03:48:59.9086174Z src/qt/VersionToolsMainWindow.cpp:205:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9086798Z     connect(m_gitWorker, &GitWorker::operationFinished,
2025-09-29T03:48:59.9086908Z                                                        ^
2025-09-29T03:48:59.9087259Z src/qt/VersionToolsMainWindow.cpp:206:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9087439Z             this, &VersionToolsMainWindow::onGitOperationFinished);
2025-09-29T03:48:59.9087524Z                  ^
2025-09-29T03:48:59.9088041Z src/qt/VersionToolsMainWindow.cpp:209:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9088187Z void VersionToolsMainWindow::openRepository()
2025-09-29T03:48:59.9088288Z                                              ^
2025-09-29T03:48:59.9088656Z src/qt/VersionToolsMainWindow.cpp:210:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9088734Z {
2025-09-29T03:48:59.9088810Z  ^
2025-09-29T03:48:59.9089159Z src/qt/VersionToolsMainWindow.cpp:211:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9089309Z     QString dir = QFileDialog::getExistingDirectory(
2025-09-29T03:48:59.9089409Z                                                     ^
2025-09-29T03:48:59.9089913Z src/qt/VersionToolsMainWindow.cpp:212:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9090003Z         this,
2025-09-29T03:48:59.9090081Z              ^
2025-09-29T03:48:59.9090430Z src/qt/VersionToolsMainWindow.cpp:213:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9090532Z         tr("Open Git Repository"),
2025-09-29T03:48:59.9090621Z                                   ^
2025-09-29T03:48:59.9090970Z src/qt/VersionToolsMainWindow.cpp:214:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9091075Z         QDir::homePath(),
2025-09-29T03:48:59.9091162Z                          ^
2025-09-29T03:48:59.9091510Z src/qt/VersionToolsMainWindow.cpp:215:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9091716Z         QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks
2025-09-29T03:48:59.9091826Z                                                                     ^
2025-09-29T03:48:59.9092188Z src/qt/VersionToolsMainWindow.cpp:216:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9092300Z     );
2025-09-29T03:48:59.9092380Z       ^
2025-09-29T03:48:59.9092729Z src/qt/VersionToolsMainWindow.cpp:218:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9092831Z     if (!dir.isEmpty()) {
2025-09-29T03:48:59.9092916Z                          ^
2025-09-29T03:48:59.9093262Z src/qt/VersionToolsMainWindow.cpp:219:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9093384Z         m_gitWorker->openRepository(dir);
2025-09-29T03:48:59.9093485Z                                          ^
2025-09-29T03:48:59.9093831Z src/qt/VersionToolsMainWindow.cpp:223:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9093974Z void VersionToolsMainWindow::cloneRepository()
2025-09-29T03:48:59.9094081Z                                               ^
2025-09-29T03:48:59.9094441Z src/qt/VersionToolsMainWindow.cpp:224:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9094520Z {
2025-09-29T03:48:59.9094600Z  ^
2025-09-29T03:48:59.9094960Z src/qt/VersionToolsMainWindow.cpp:225:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9095062Z     // TODO: Implement clone dialog
2025-09-29T03:48:59.9095158Z                                    ^
2025-09-29T03:48:59.9095511Z src/qt/VersionToolsMainWindow.cpp:226:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9095826Z     QMessageBox::information(this, tr("Clone Repository"), 
2025-09-29T03:48:59.9095915Z                              ^
2025-09-29T03:48:59.9096268Z src/qt/VersionToolsMainWindow.cpp:226:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9096430Z     QMessageBox::information(this, tr("Clone Repository"), 
2025-09-29T03:48:59.9096529Z                                                           ^
2025-09-29T03:48:59.9096890Z src/qt/VersionToolsMainWindow.cpp:230:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9097040Z void VersionToolsMainWindow::refreshRepository()
2025-09-29T03:48:59.9097138Z                                                 ^
2025-09-29T03:48:59.9097493Z src/qt/VersionToolsMainWindow.cpp:231:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9097574Z {
2025-09-29T03:48:59.9097648Z  ^
2025-09-29T03:48:59.9098445Z src/qt/VersionToolsMainWindow.cpp:232:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9098671Z     if (!m_currentRepositoryPath.isEmpty()) {
2025-09-29T03:48:59.9098832Z                                              ^
2025-09-29T03:48:59.9099447Z src/qt/VersionToolsMainWindow.cpp:233:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9099635Z         m_gitWorker->refreshStatus();
2025-09-29T03:48:59.9100022Z                                      ^
2025-09-29T03:48:59.9100645Z src/qt/VersionToolsMainWindow.cpp:237:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9100875Z void VersionToolsMainWindow::showSettings()
2025-09-29T03:48:59.9101033Z                                            ^
2025-09-29T03:48:59.9101741Z src/qt/VersionToolsMainWindow.cpp:238:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9101992Z {
2025-09-29T03:48:59.9102170Z  ^
2025-09-29T03:48:59.9102831Z src/qt/VersionToolsMainWindow.cpp:239:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9103057Z     SettingsDialog dialog(this);
2025-09-29T03:48:59.9103657Z                                 ^
2025-09-29T03:48:59.9104341Z src/qt/VersionToolsMainWindow.cpp:243:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9104579Z void VersionToolsMainWindow::showAbout()
2025-09-29T03:48:59.9119353Z                                         ^
2025-09-29T03:48:59.9119890Z src/qt/VersionToolsMainWindow.cpp:244:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9119975Z {
2025-09-29T03:48:59.9120057Z  ^
2025-09-29T03:48:59.9120458Z src/qt/VersionToolsMainWindow.cpp:245:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9120630Z     QMessageBox::about(this, tr("About Version Tools"),
2025-09-29T03:48:59.9120733Z                        ^
2025-09-29T03:48:59.9121114Z src/qt/VersionToolsMainWindow.cpp:245:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9121265Z     QMessageBox::about(this, tr("About Version Tools"),
2025-09-29T03:48:59.9121374Z                                                        ^
2025-09-29T03:48:59.9121744Z src/qt/VersionToolsMainWindow.cpp:246:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9121855Z         tr("<h2>Version Tools 1.0.0</h2>"
2025-09-29T03:48:59.9121952Z                                          ^
2025-09-29T03:48:59.9122320Z src/qt/VersionToolsMainWindow.cpp:247:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9122516Z            "<p>A modern Git GUI application built with Qt and C++.</p>"
2025-09-29T03:48:59.9122628Z                                                                        ^
2025-09-29T03:48:59.9123023Z src/qt/VersionToolsMainWindow.cpp:248:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9123674Z            "<p>Copyright © 2024 VersionTools Project</p>"
2025-09-29T03:48:59.9124062Z src/qt/VersionToolsMainWindow.cpp:249:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9124209Z            "<p>Built with Qt %1</p>").arg(QT_VERSION_STR));
2025-09-29T03:48:59.9124304Z                                      ^
2025-09-29T03:48:59.9124687Z src/qt/VersionToolsMainWindow.cpp:252:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9124924Z void VersionToolsMainWindow::onSidebarSelectionChanged(int index)
2025-09-29T03:48:59.9125034Z                                                                  ^
2025-09-29T03:48:59.9125409Z src/qt/VersionToolsMainWindow.cpp:253:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9125488Z {
2025-09-29T03:48:59.9125570Z  ^
2025-09-29T03:48:59.9125944Z src/qt/VersionToolsMainWindow.cpp:254:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9126094Z     if (index >= 0 && index < m_contentStack->count()) {
2025-09-29T03:48:59.9126202Z                                                         ^
2025-09-29T03:48:59.9126569Z src/qt/VersionToolsMainWindow.cpp:255:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9126701Z         m_contentStack->setCurrentIndex(index);
2025-09-29T03:48:59.9126803Z                                                ^
2025-09-29T03:48:59.9127294Z src/qt/VersionToolsMainWindow.cpp:257:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9127421Z         // Update window title based on selection
2025-09-29T03:48:59.9127526Z                                                  ^
2025-09-29T03:48:59.9128063Z src/qt/VersionToolsMainWindow.cpp:258:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9128306Z         QStringList titles = {tr("Changes"), tr("History"), tr("Branches")};
2025-09-29T03:48:59.9128419Z                                                                             ^
2025-09-29T03:48:59.9128797Z src/qt/VersionToolsMainWindow.cpp:259:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9128900Z         if (index < titles.size()) {
2025-09-29T03:48:59.9128989Z                                     ^
2025-09-29T03:48:59.9129351Z src/qt/VersionToolsMainWindow.cpp:260:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9129458Z             updateWindowTitle();
2025-09-29T03:48:59.9129546Z                                 ^
2025-09-29T03:48:59.9129906Z src/qt/VersionToolsMainWindow.cpp:261:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9129985Z         }
2025-09-29T03:48:59.9130062Z          ^
2025-09-29T03:48:59.9130409Z src/qt/VersionToolsMainWindow.cpp:265:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9130655Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-09-29T03:48:59.9130762Z                                                                     ^
2025-09-29T03:48:59.9131113Z src/qt/VersionToolsMainWindow.cpp:266:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9131193Z {
2025-09-29T03:48:59.9131271Z  ^
2025-09-29T03:48:59.9131617Z src/qt/VersionToolsMainWindow.cpp:267:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9131738Z     m_currentRepositoryPath = path;
2025-09-29T03:48:59.9131824Z                                    ^
2025-09-29T03:48:59.9132174Z src/qt/VersionToolsMainWindow.cpp:268:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9132276Z     updateWindowTitle();
2025-09-29T03:48:59.9132361Z                         ^
2025-09-29T03:48:59.9132702Z src/qt/VersionToolsMainWindow.cpp:269:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9132945Z     updateStatusBar();
2025-09-29T03:48:59.9133037Z                       ^
2025-09-29T03:48:59.9133380Z src/qt/VersionToolsMainWindow.cpp:271:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9133477Z     // Save last repository
2025-09-29T03:48:59.9133568Z                            ^
2025-09-29T03:48:59.9133909Z src/qt/VersionToolsMainWindow.cpp:272:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9134006Z     QSettings settings;
2025-09-29T03:48:59.9134095Z                        ^
2025-09-29T03:48:59.9134435Z src/qt/VersionToolsMainWindow.cpp:273:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9134566Z     settings.setValue("lastRepository", path);
2025-09-29T03:48:59.9134662Z                                               ^
2025-09-29T03:48:59.9135004Z src/qt/VersionToolsMainWindow.cpp:275:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9135122Z     // Update sidebar with repository info
2025-09-29T03:48:59.9135214Z                                           ^
2025-09-29T03:48:59.9135558Z src/qt/VersionToolsMainWindow.cpp:276:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9135683Z     m_sidebarWidget->setRepositoryPath(path);
2025-09-29T03:48:59.9135774Z                                              ^
2025-09-29T03:48:59.9136251Z src/qt/VersionToolsMainWindow.cpp:278:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9136353Z     // Refresh all widgets
2025-09-29T03:48:59.9136438Z                           ^
2025-09-29T03:48:59.9136785Z src/qt/VersionToolsMainWindow.cpp:279:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9136901Z     m_changesWidget->setRepository(path);
2025-09-29T03:48:59.9136989Z                                          ^
2025-09-29T03:48:59.9137333Z src/qt/VersionToolsMainWindow.cpp:280:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9137448Z     m_historyWidget->setRepository(path);
2025-09-29T03:48:59.9137535Z                                          ^
2025-09-29T03:48:59.9138008Z src/qt/VersionToolsMainWindow.cpp:281:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9138134Z     m_branchesWidget->setRepository(path);
2025-09-29T03:48:59.9138231Z                                           ^
2025-09-29T03:48:59.9138570Z src/qt/VersionToolsMainWindow.cpp:283:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9138667Z     // Get current branch
2025-09-29T03:48:59.9138750Z                          ^
2025-09-29T03:48:59.9139088Z src/qt/VersionToolsMainWindow.cpp:287:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9139283Z void VersionToolsMainWindow::onRepositoryStatusChanged()
2025-09-29T03:48:59.9139392Z                                                         ^
2025-09-29T03:48:59.9139745Z src/qt/VersionToolsMainWindow.cpp:288:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9139824Z {
2025-09-29T03:48:59.9139902Z  ^
2025-09-29T03:48:59.9140240Z src/qt/VersionToolsMainWindow.cpp:289:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9140477Z     m_currentBranch = QString::fromStdString(m_gitManager->getCurrentBranch());
2025-09-29T03:48:59.9140596Z                                                                                ^
2025-09-29T03:48:59.9140938Z src/qt/VersionToolsMainWindow.cpp:290:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9141030Z     updateStatusBar();
2025-09-29T03:48:59.9141117Z                       ^
2025-09-29T03:48:59.9141455Z src/qt/VersionToolsMainWindow.cpp:292:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9141696Z     // Update sidebar status
2025-09-29T03:48:59.9141786Z                             ^
2025-09-29T03:48:59.9142129Z src/qt/VersionToolsMainWindow.cpp:293:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9142244Z     auto status = m_gitManager->getStatus();
2025-09-29T03:48:59.9142337Z                                             ^
2025-09-29T03:48:59.9142686Z src/qt/VersionToolsMainWindow.cpp:297:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9142946Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-09-29T03:48:59.9143053Z                                                                             ^
2025-09-29T03:48:59.9143402Z src/qt/VersionToolsMainWindow.cpp:298:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9143481Z {
2025-09-29T03:48:59.9143554Z  ^
2025-09-29T03:48:59.9143897Z src/qt/VersionToolsMainWindow.cpp:299:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9144013Z     m_statusLabel->setText(operation);
2025-09-29T03:48:59.9144101Z                                       ^
2025-09-29T03:48:59.9144520Z src/qt/VersionToolsMainWindow.cpp:300:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9144721Z     m_progressBar->setVisible(true);
2025-09-29T03:48:59.9144873Z                                     ^
2025-09-29T03:48:59.9145673Z src/qt/VersionToolsMainWindow.cpp:304:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9146242Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-09-29T03:48:59.9146429Z                                                                              ^
2025-09-29T03:48:59.9147034Z src/qt/VersionToolsMainWindow.cpp:304:92: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9147588Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-09-29T03:48:59.9147784Z                                                                                            ^
2025-09-29T03:48:59.9148588Z src/qt/VersionToolsMainWindow.cpp:305:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9148729Z {
2025-09-29T03:48:59.9148856Z  ^
2025-09-29T03:48:59.9149473Z src/qt/VersionToolsMainWindow.cpp:306:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9149642Z     Q_UNUSED(operation)
2025-09-29T03:48:59.9149783Z                        ^
2025-09-29T03:48:59.9150387Z src/qt/VersionToolsMainWindow.cpp:308:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9150570Z     m_progressBar->setVisible(false);
2025-09-29T03:48:59.9150727Z                                      ^
2025-09-29T03:48:59.9151330Z src/qt/VersionToolsMainWindow.cpp:309:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9151475Z     if (success) {
2025-09-29T03:48:59.9151611Z                   ^
2025-09-29T03:48:59.9152213Z src/qt/VersionToolsMainWindow.cpp:310:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9152400Z         m_statusLabel->setText(tr("Ready"));
2025-09-29T03:48:59.9152562Z                                             ^
2025-09-29T03:48:59.9153163Z src/qt/VersionToolsMainWindow.cpp:311:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9153301Z     } else {
2025-09-29T03:48:59.9153431Z             ^
2025-09-29T03:48:59.9154041Z src/qt/VersionToolsMainWindow.cpp:312:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9154275Z         m_statusLabel->setText(tr("Operation failed"));
2025-09-29T03:48:59.9154442Z                                                        ^
2025-09-29T03:48:59.9155057Z src/qt/VersionToolsMainWindow.cpp:313:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9155435Z         QTimer::singleShot(3000, [this]() {
2025-09-29T03:48:59.9155592Z                                            ^
2025-09-29T03:48:59.9156211Z src/qt/VersionToolsMainWindow.cpp:314:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9156399Z             m_statusLabel->setText(tr("Ready"));
2025-09-29T03:48:59.9156558Z                                                 ^
2025-09-29T03:48:59.9157178Z src/qt/VersionToolsMainWindow.cpp:315:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9157307Z         });
2025-09-29T03:48:59.9157434Z            ^
2025-09-29T03:48:59.9158216Z src/qt/VersionToolsMainWindow.cpp:319:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9158472Z void VersionToolsMainWindow::updateWindowTitle()
2025-09-29T03:48:59.9158626Z                                                 ^
2025-09-29T03:48:59.9159250Z src/qt/VersionToolsMainWindow.cpp:320:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9159387Z {
2025-09-29T03:48:59.9159513Z  ^
2025-09-29T03:48:59.9160124Z src/qt/VersionToolsMainWindow.cpp:321:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9160300Z     QString title = "Version Tools";
2025-09-29T03:48:59.9160448Z                                     ^
2025-09-29T03:48:59.9161239Z src/qt/VersionToolsMainWindow.cpp:323:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9161456Z     if (!m_currentRepositoryPath.isEmpty()) {
2025-09-29T03:48:59.9161618Z                                              ^
2025-09-29T03:48:59.9162221Z src/qt/VersionToolsMainWindow.cpp:324:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9162411Z         QDir dir(m_currentRepositoryPath);
2025-09-29T03:48:59.9162573Z                                           ^
2025-09-29T03:48:59.9163204Z src/qt/VersionToolsMainWindow.cpp:325:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9163376Z         title += " - " + dir.dirName();
2025-09-29T03:48:59.9163532Z                                        ^
2025-09-29T03:48:59.9164140Z src/qt/VersionToolsMainWindow.cpp:327:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9164323Z         if (!m_currentBranch.isEmpty()) {
2025-09-29T03:48:59.9164488Z                                          ^
2025-09-29T03:48:59.9165097Z src/qt/VersionToolsMainWindow.cpp:328:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9165285Z             title += " (" + m_currentBranch + ")";
2025-09-29T03:48:59.9165451Z                                                   ^
2025-09-29T03:48:59.9166052Z src/qt/VersionToolsMainWindow.cpp:329:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9166187Z         }
2025-09-29T03:48:59.9166314Z          ^
2025-09-29T03:48:59.9166930Z src/qt/VersionToolsMainWindow.cpp:330:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9167057Z     }
2025-09-29T03:48:59.9167183Z      ^
2025-09-29T03:48:59.9167791Z src/qt/VersionToolsMainWindow.cpp:335:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9168235Z void VersionToolsMainWindow::updateStatusBar()
2025-09-29T03:48:59.9168394Z                                               ^
2025-09-29T03:48:59.9169012Z src/qt/VersionToolsMainWindow.cpp:336:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9169138Z {
2025-09-29T03:48:59.9169264Z  ^
2025-09-29T03:48:59.9169868Z src/qt/VersionToolsMainWindow.cpp:337:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9170085Z     if (m_currentRepositoryPath.isEmpty()) {
2025-09-29T03:48:59.9170237Z                                             ^
2025-09-29T03:48:59.9171032Z src/qt/VersionToolsMainWindow.cpp:338:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9171320Z         m_repositoryLabel->setText(tr("No repository opened"));
2025-09-29T03:48:59.9171554Z                                                                ^
2025-09-29T03:48:59.9172159Z src/qt/VersionToolsMainWindow.cpp:339:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9172336Z         m_branchLabel->setText("");
2025-09-29T03:48:59.9172489Z                                    ^
2025-09-29T03:48:59.9173090Z src/qt/VersionToolsMainWindow.cpp:340:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9173227Z     } else {
2025-09-29T03:48:59.9173356Z             ^
2025-09-29T03:48:59.9173954Z src/qt/VersionToolsMainWindow.cpp:341:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9174146Z         QDir dir(m_currentRepositoryPath);
2025-09-29T03:48:59.9174312Z                                           ^
2025-09-29T03:48:59.9174914Z src/qt/VersionToolsMainWindow.cpp:342:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9175121Z         m_repositoryLabel->setText(dir.dirName());
2025-09-29T03:48:59.9175286Z                                                   ^
2025-09-29T03:48:59.9175886Z src/qt/VersionToolsMainWindow.cpp:343:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9176539Z         m_branchLabel->setText(m_currentBranch.isEmpty() ? tr("No branch") : m_currentBranch);
2025-09-29T03:48:59.9176734Z                                                                           ^
2025-09-29T03:48:59.9177346Z src/qt/VersionToolsMainWindow.cpp:343:95: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9177810Z         m_branchLabel->setText(m_currentBranch.isEmpty() ? tr("No branch") : m_currentBranch);
2025-09-29T03:48:59.9178186Z                                                                                               ^
2025-09-29T03:48:59.9178793Z src/qt/VersionToolsMainWindow.cpp:347:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9179007Z void VersionToolsMainWindow::loadSettings()
2025-09-29T03:48:59.9179159Z                                            ^
2025-09-29T03:48:59.9179774Z src/qt/VersionToolsMainWindow.cpp:348:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9179900Z {
2025-09-29T03:48:59.9180033Z  ^
2025-09-29T03:48:59.9180640Z src/qt/VersionToolsMainWindow.cpp:349:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9180793Z     QSettings settings;
2025-09-29T03:48:59.9180931Z                        ^
2025-09-29T03:48:59.9181534Z src/qt/VersionToolsMainWindow.cpp:350:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9181721Z     settings.beginGroup("MainWindow");
2025-09-29T03:48:59.9181879Z                                       ^
2025-09-29T03:48:59.9182486Z src/qt/VersionToolsMainWindow.cpp:352:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9182648Z     // Restore window geometry
2025-09-29T03:48:59.9182788Z                               ^
2025-09-29T03:48:59.9183387Z src/qt/VersionToolsMainWindow.cpp:353:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9183708Z     restoreGeometry(settings.value("geometry").toByteArray());
2025-09-29T03:48:59.9183881Z                                                               ^
2025-09-29T03:48:59.9184483Z src/qt/VersionToolsMainWindow.cpp:354:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9184753Z     restoreState(settings.value("state").toByteArray());
2025-09-29T03:48:59.9184926Z                                                         ^
2025-09-29T03:48:59.9185708Z src/qt/VersionToolsMainWindow.cpp:356:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9185877Z     // Restore splitter state
2025-09-29T03:48:59.9186017Z                              ^
2025-09-29T03:48:59.9186618Z src/qt/VersionToolsMainWindow.cpp:357:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9186789Z     if (m_centralSplitter) {
2025-09-29T03:48:59.9186929Z                             ^
2025-09-29T03:48:59.9187533Z src/qt/VersionToolsMainWindow.cpp:358:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9188147Z         m_centralSplitter->restoreState(settings.value("splitterState").toByteArray());
2025-09-29T03:48:59.9188309Z                                         ^
2025-09-29T03:48:59.9188927Z src/qt/VersionToolsMainWindow.cpp:358:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9189374Z         m_centralSplitter->restoreState(settings.value("splitterState").toByteArray());
2025-09-29T03:48:59.9189587Z                                                                                        ^
2025-09-29T03:48:59.9190198Z src/qt/VersionToolsMainWindow.cpp:359:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9190325Z     }
2025-09-29T03:48:59.9190459Z      ^
2025-09-29T03:48:59.9191068Z src/qt/VersionToolsMainWindow.cpp:364:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9191284Z void VersionToolsMainWindow::saveSettings()
2025-09-29T03:48:59.9191686Z                                            ^
2025-09-29T03:48:59.9192323Z src/qt/VersionToolsMainWindow.cpp:365:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9192451Z {
2025-09-29T03:48:59.9192577Z  ^
2025-09-29T03:48:59.9193199Z src/qt/VersionToolsMainWindow.cpp:366:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9193355Z     QSettings settings;
2025-09-29T03:48:59.9193503Z                        ^
2025-09-29T03:48:59.9194118Z src/qt/VersionToolsMainWindow.cpp:367:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9194308Z     settings.beginGroup("MainWindow");
2025-09-29T03:48:59.9194455Z                                       ^
2025-09-29T03:48:59.9195075Z src/qt/VersionToolsMainWindow.cpp:369:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9195233Z     // Save window geometry
2025-09-29T03:48:59.9195383Z                            ^
2025-09-29T03:48:59.9195994Z src/qt/VersionToolsMainWindow.cpp:370:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9196233Z     settings.setValue("geometry", saveGeometry());
2025-09-29T03:48:59.9196393Z                                                   ^
2025-09-29T03:48:59.9197003Z src/qt/VersionToolsMainWindow.cpp:371:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9197213Z     settings.setValue("state", saveState());
2025-09-29T03:48:59.9197367Z                                             ^
2025-09-29T03:48:59.9198149Z src/qt/VersionToolsMainWindow.cpp:373:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9198317Z     // Save splitter state
2025-09-29T03:48:59.9198459Z                           ^
2025-09-29T03:48:59.9199080Z src/qt/VersionToolsMainWindow.cpp:374:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9199258Z     if (m_centralSplitter) {
2025-09-29T03:48:59.9199401Z                             ^
2025-09-29T03:48:59.9200014Z src/qt/VersionToolsMainWindow.cpp:375:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9200391Z         settings.setValue("splitterState", m_centralSplitter->saveState());
2025-09-29T03:48:59.9200584Z                                                                            ^
2025-09-29T03:48:59.9201432Z src/qt/VersionToolsMainWindow.cpp:376:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9201563Z     }
2025-09-29T03:48:59.9201702Z      ^
2025-09-29T03:48:59.9202315Z src/qt/VersionToolsMainWindow.cpp:381:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9202634Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-09-29T03:48:59.9202815Z                                                            ^
2025-09-29T03:48:59.9203437Z src/qt/VersionToolsMainWindow.cpp:382:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9203566Z {
2025-09-29T03:48:59.9203693Z  ^
2025-09-29T03:48:59.9204315Z src/qt/VersionToolsMainWindow.cpp:383:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9204464Z     saveSettings();
2025-09-29T03:48:59.9204600Z                    ^
2025-09-29T03:48:59.9205195Z src/qt/VersionToolsMainWindow.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9205362Z #include <QMainWindow>
2025-09-29T03:48:59.9205493Z ^
2025-09-29T03:48:59.9206099Z src/qt/VersionToolsMainWindow.h:26:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9206345Z class VersionToolsMainWindow : public QMainWindow
2025-09-29T03:48:59.9206507Z                                                  ^
2025-09-29T03:48:59.9207098Z src/qt/VersionToolsMainWindow.h:27:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9207233Z {
2025-09-29T03:48:59.9207539Z  ^
2025-09-29T03:48:59.9208314Z src/qt/VersionToolsMainWindow.h:30:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9208461Z public:
2025-09-29T03:48:59.9208595Z        ^
2025-09-29T03:48:59.9209207Z src/qt/VersionToolsMainWindow.h:31:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9209481Z     VersionToolsMainWindow(QWidget *parent = nullptr);
2025-09-29T03:48:59.9209659Z                                                       ^
2025-09-29T03:48:59.9210253Z src/qt/VersionToolsMainWindow.h:34:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9210396Z protected:
2025-09-29T03:48:59.9210535Z           ^
2025-09-29T03:48:59.9211127Z src/qt/VersionToolsMainWindow.h:37:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9211274Z private slots:
2025-09-29T03:48:59.9211411Z               ^
2025-09-29T03:48:59.9212007Z src/qt/VersionToolsMainWindow.h:38:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9212184Z     void openRepository();
2025-09-29T03:48:59.9212335Z                           ^
2025-09-29T03:48:59.9212927Z src/qt/VersionToolsMainWindow.h:39:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9213093Z     void cloneRepository();
2025-09-29T03:48:59.9213237Z                            ^
2025-09-29T03:48:59.9213842Z src/qt/VersionToolsMainWindow.h:40:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9214012Z     void refreshRepository();
2025-09-29T03:48:59.9214157Z                              ^
2025-09-29T03:48:59.9214762Z src/qt/VersionToolsMainWindow.h:41:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9214922Z     void showSettings();
2025-09-29T03:48:59.9215064Z                         ^
2025-09-29T03:48:59.9215670Z src/qt/VersionToolsMainWindow.h:42:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9215826Z     void showAbout();
2025-09-29T03:48:59.9215968Z                      ^
2025-09-29T03:48:59.9216558Z src/qt/VersionToolsMainWindow.h:43:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9216784Z     void onSidebarSelectionChanged(int index);
2025-09-29T03:48:59.9216947Z                                               ^
2025-09-29T03:48:59.9217734Z src/qt/VersionToolsMainWindow.h:44:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9218144Z     void onRepositoryOpened(const QString &path);
2025-09-29T03:48:59.9218318Z                                                  ^
2025-09-29T03:48:59.9218920Z src/qt/VersionToolsMainWindow.h:45:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9219128Z     void onRepositoryStatusChanged();
2025-09-29T03:48:59.9219281Z                                      ^
2025-09-29T03:48:59.9219882Z src/qt/VersionToolsMainWindow.h:46:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9220168Z     void onGitOperationStarted(const QString &operation);
2025-09-29T03:48:59.9220341Z                                                          ^
2025-09-29T03:48:59.9220931Z src/qt/VersionToolsMainWindow.h:49:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9221083Z private:
2025-09-29T03:48:59.9221221Z         ^
2025-09-29T03:48:59.9221812Z src/qt/VersionToolsMainWindow.h:50:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9221974Z     void createActions();
2025-09-29T03:48:59.9222124Z                          ^
2025-09-29T03:48:59.9222712Z src/qt/VersionToolsMainWindow.h:51:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9222867Z     void createMenus();
2025-09-29T03:48:59.9223014Z                        ^
2025-09-29T03:48:59.9223797Z src/qt/VersionToolsMainWindow.h:52:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9223963Z     void createToolBars();
2025-09-29T03:48:59.9224106Z                           ^
2025-09-29T03:48:59.9224705Z src/qt/VersionToolsMainWindow.h:53:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9224869Z     void createStatusBar();
2025-09-29T03:48:59.9225012Z                            ^
2025-09-29T03:48:59.9225624Z src/qt/VersionToolsMainWindow.h:54:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9225797Z     void setupCentralWidget();
2025-09-29T03:48:59.9225943Z                               ^
2025-09-29T03:48:59.9226540Z src/qt/VersionToolsMainWindow.h:55:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9226700Z     void connectSignals();
2025-09-29T03:48:59.9226841Z                           ^
2025-09-29T03:48:59.9227435Z src/qt/VersionToolsMainWindow.h:56:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9227613Z     void updateWindowTitle();
2025-09-29T03:48:59.9227755Z                              ^
2025-09-29T03:48:59.9228520Z src/qt/VersionToolsMainWindow.h:57:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9228696Z     void updateStatusBar();
2025-09-29T03:48:59.9228850Z                            ^
2025-09-29T03:48:59.9229453Z src/qt/VersionToolsMainWindow.h:58:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9229617Z     void loadSettings();
2025-09-29T03:48:59.9229760Z                         ^
2025-09-29T03:48:59.9230355Z src/qt/VersionToolsMainWindow.h:59:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9230521Z     void saveSettings();
2025-09-29T03:48:59.9230661Z                         ^
2025-09-29T03:48:59.9231265Z src/qt/VersionToolsMainWindow.h:61:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9231415Z     // UI Components
2025-09-29T03:48:59.9231560Z                     ^
2025-09-29T03:48:59.9232154Z src/qt/VersionToolsMainWindow.h:62:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9232335Z     QSplitter *m_centralSplitter;
2025-09-29T03:48:59.9232491Z                                  ^
2025-09-29T03:48:59.9233088Z src/qt/VersionToolsMainWindow.h:63:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9233466Z     QStackedWidget *m_contentStack;
2025-09-29T03:48:59.9233624Z                                    ^
2025-09-29T03:48:59.9234225Z src/qt/VersionToolsMainWindow.h:64:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9234404Z     SidebarWidget *m_sidebarWidget;
2025-09-29T03:48:59.9234550Z                                    ^
2025-09-29T03:48:59.9235157Z src/qt/VersionToolsMainWindow.h:65:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9235335Z     ChangesWidget *m_changesWidget;
2025-09-29T03:48:59.9235481Z                                    ^
2025-09-29T03:48:59.9236084Z src/qt/VersionToolsMainWindow.h:66:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9236262Z     HistoryWidget *m_historyWidget;
2025-09-29T03:48:59.9236408Z                                    ^
2025-09-29T03:48:59.9237016Z src/qt/VersionToolsMainWindow.h:67:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9237205Z     BranchesWidget *m_branchesWidget;
2025-09-29T03:48:59.9237358Z                                      ^
2025-09-29T03:48:59.9238113Z src/qt/VersionToolsMainWindow.h:69:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9238279Z     // Menus and Actions
2025-09-29T03:48:59.9238422Z                         ^
2025-09-29T03:48:59.9239213Z src/qt/VersionToolsMainWindow.h:70:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9239378Z     QMenu *m_fileMenu;
2025-09-29T03:48:59.9239521Z                       ^
2025-09-29T03:48:59.9240122Z src/qt/VersionToolsMainWindow.h:71:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9240278Z     QMenu *m_viewMenu;
2025-09-29T03:48:59.9240416Z                       ^
2025-09-29T03:48:59.9241010Z src/qt/VersionToolsMainWindow.h:72:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9241166Z     QMenu *m_gitMenu;
2025-09-29T03:48:59.9241313Z                      ^
2025-09-29T03:48:59.9241908Z src/qt/VersionToolsMainWindow.h:73:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9242061Z     QMenu *m_helpMenu;
2025-09-29T03:48:59.9242210Z                       ^
2025-09-29T03:48:59.9242805Z src/qt/VersionToolsMainWindow.h:75:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9242975Z     QAction *m_openAction;
2025-09-29T03:48:59.9243127Z                           ^
2025-09-29T03:48:59.9243721Z src/qt/VersionToolsMainWindow.h:76:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9243882Z     QAction *m_cloneAction;
2025-09-29T03:48:59.9244026Z                            ^
2025-09-29T03:48:59.9244626Z src/qt/VersionToolsMainWindow.h:77:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9244803Z     QAction *m_refreshAction;
2025-09-29T03:48:59.9244952Z                              ^
2025-09-29T03:48:59.9245555Z src/qt/VersionToolsMainWindow.h:78:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9245723Z     QAction *m_settingsAction;
2025-09-29T03:48:59.9245869Z                               ^
2025-09-29T03:48:59.9246474Z src/qt/VersionToolsMainWindow.h:79:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9246641Z     QAction *m_exitAction;
2025-09-29T03:48:59.9246784Z                           ^
2025-09-29T03:48:59.9247377Z src/qt/VersionToolsMainWindow.h:80:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9247543Z     QAction *m_aboutAction;
2025-09-29T03:48:59.9247688Z                            ^
2025-09-29T03:48:59.9248453Z src/qt/VersionToolsMainWindow.h:81:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9248940Z     QAction *m_aboutQtAction;
2025-09-29T03:48:59.9249083Z                              ^
2025-09-29T03:48:59.9249683Z src/qt/VersionToolsMainWindow.h:83:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9249826Z     // Toolbars
2025-09-29T03:48:59.9249958Z                ^
2025-09-29T03:48:59.9250556Z src/qt/VersionToolsMainWindow.h:84:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9250728Z     QToolBar *m_mainToolBar;
2025-09-29T03:48:59.9250883Z                             ^
2025-09-29T03:48:59.9251478Z src/qt/VersionToolsMainWindow.h:86:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9251617Z     // Status bar
2025-09-29T03:48:59.9251759Z                  ^
2025-09-29T03:48:59.9252354Z src/qt/VersionToolsMainWindow.h:87:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9252526Z     QLabel *m_repositoryLabel;
2025-09-29T03:48:59.9252687Z                               ^
2025-09-29T03:48:59.9253284Z src/qt/VersionToolsMainWindow.h:88:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9253444Z     QLabel *m_branchLabel;
2025-09-29T03:48:59.9253593Z                           ^
2025-09-29T03:48:59.9254185Z src/qt/VersionToolsMainWindow.h:89:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9254345Z     QLabel *m_statusLabel;
2025-09-29T03:48:59.9254488Z                           ^
2025-09-29T03:48:59.9255271Z src/qt/VersionToolsMainWindow.h:90:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9255455Z     QProgressBar *m_progressBar;
2025-09-29T03:48:59.9255605Z                                 ^
2025-09-29T03:48:59.9256204Z src/qt/VersionToolsMainWindow.h:92:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9256353Z     // Git integration
2025-09-29T03:48:59.9256505Z                       ^
2025-09-29T03:48:59.9257106Z src/qt/VersionToolsMainWindow.h:93:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9257319Z     std::unique_ptr<GitManager> m_gitManager;
2025-09-29T03:48:59.9257482Z                                              ^
2025-09-29T03:48:59.9258249Z src/qt/VersionToolsMainWindow.h:94:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9258424Z     GitWorker *m_gitWorker;
2025-09-29T03:48:59.9258568Z                            ^
2025-09-29T03:48:59.9259184Z src/qt/VersionToolsMainWindow.h:96:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9259383Z     QString m_currentRepositoryPath;
2025-09-29T03:48:59.9259536Z                                     ^
2025-09-29T03:48:59.9260115Z src/qt/widgets/ChangesWidget.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9260269Z #include <QWidget>
2025-09-29T03:48:59.9260407Z ^
2025-09-29T03:48:59.9260988Z src/qt/widgets/ChangesWidget.h:23:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9261172Z class ChangesWidget : public QWidget
2025-09-29T03:48:59.9261329Z                                     ^
2025-09-29T03:48:59.9261904Z src/qt/widgets/ChangesWidget.h:24:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9262033Z {
2025-09-29T03:48:59.9262170Z  ^
2025-09-29T03:48:59.9262754Z src/qt/widgets/ChangesWidget.h:27:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9262892Z public:
2025-09-29T03:48:59.9263032Z        ^
2025-09-29T03:48:59.9263610Z src/qt/widgets/ChangesWidget.h:28:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9264039Z     explicit ChangesWidget(GitManager *gitManager, QWidget *parent = nullptr);
2025-09-29T03:48:59.9264231Z                                                                               ^
2025-09-29T03:48:59.9265007Z src/qt/widgets/ChangesWidget.h:30:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9265227Z     void setRepository(const QString &path);
2025-09-29T03:48:59.9265389Z                                             ^
2025-09-29T03:48:59.9265999Z src/qt/widgets/ChangesWidget.h:33:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9266149Z private slots:
2025-09-29T03:48:59.9266281Z               ^
2025-09-29T03:48:59.9266878Z src/qt/widgets/ChangesWidget.h:34:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9267052Z     void onStageAllClicked();
2025-09-29T03:48:59.9267198Z                              ^
2025-09-29T03:48:59.9267775Z src/qt/widgets/ChangesWidget.h:35:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9268118Z     void onUnstageAllClicked();
2025-09-29T03:48:59.9268267Z                                ^
2025-09-29T03:48:59.9268860Z src/qt/widgets/ChangesWidget.h:36:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9269031Z     void onCommitClicked();
2025-09-29T03:48:59.9269174Z                            ^
2025-09-29T03:48:59.9269753Z src/qt/widgets/ChangesWidget.h:37:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9269995Z     void onFileItemChanged(QListWidgetItem *item);
2025-09-29T03:48:59.9270161Z                                                   ^
2025-09-29T03:48:59.9270916Z src/qt/widgets/ChangesWidget.h:38:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9271107Z     void onFileSelectionChanged();
2025-09-29T03:48:59.9271262Z                                   ^
2025-09-29T03:48:59.9271900Z src/qt/widgets/ChangesWidget.h:41:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9272040Z private:
2025-09-29T03:48:59.9272179Z         ^
2025-09-29T03:48:59.9272768Z src/qt/widgets/ChangesWidget.h:42:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9272914Z     void setupUI();
2025-09-29T03:48:59.9273056Z                    ^
2025-09-29T03:48:59.9273627Z src/qt/widgets/ChangesWidget.h:43:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9273793Z     void updateFileList();
2025-09-29T03:48:59.9273945Z                           ^
2025-09-29T03:48:59.9274539Z src/qt/widgets/ChangesWidget.h:44:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9274716Z     void updateCommitButton();
2025-09-29T03:48:59.9274861Z                               ^
2025-09-29T03:48:59.9275444Z src/qt/widgets/ChangesWidget.h:45:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9275646Z     void stageFile(const QString &filePath);
2025-09-29T03:48:59.9275804Z                                             ^
2025-09-29T03:48:59.9276394Z src/qt/widgets/ChangesWidget.h:46:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9276601Z     void unstageFile(const QString &filePath);
2025-09-29T03:48:59.9276762Z                                               ^
2025-09-29T03:48:59.9277343Z src/qt/widgets/ChangesWidget.h:48:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9277508Z     GitManager *m_gitManager;
2025-09-29T03:48:59.9277658Z                              ^
2025-09-29T03:48:59.9278411Z src/qt/widgets/ChangesWidget.h:49:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9278597Z     QString m_repositoryPath;
2025-09-29T03:48:59.9278749Z                              ^
2025-09-29T03:48:59.9279320Z src/qt/widgets/ChangesWidget.h:51:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9279473Z     // UI Components
2025-09-29T03:48:59.9279615Z                     ^
2025-09-29T03:48:59.9280197Z src/qt/widgets/ChangesWidget.h:52:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9280305Z     QVBoxLayout *m_layout;
2025-09-29T03:48:59.9280393Z                           ^
2025-09-29T03:48:59.9280732Z src/qt/widgets/ChangesWidget.h:53:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9280825Z     QToolBar *m_toolbar;
2025-09-29T03:48:59.9280920Z                         ^
2025-09-29T03:48:59.9281254Z src/qt/widgets/ChangesWidget.h:54:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9281355Z     QSplitter *m_splitter;
2025-09-29T03:48:59.9281444Z                           ^
2025-09-29T03:48:59.9281770Z src/qt/widgets/ChangesWidget.h:56:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9281872Z     // Left panel - file list
2025-09-29T03:48:59.9281962Z                              ^
2025-09-29T03:48:59.9282308Z src/qt/widgets/ChangesWidget.h:57:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9282415Z     QWidget *m_fileListPanel;
2025-09-29T03:48:59.9282499Z                              ^
2025-09-29T03:48:59.9282847Z src/qt/widgets/ChangesWidget.h:58:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9282950Z     QListWidget *m_stagedList;
2025-09-29T03:48:59.9283035Z                               ^
2025-09-29T03:48:59.9283514Z src/qt/widgets/ChangesWidget.h:59:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9283624Z     QListWidget *m_unstagedList;
2025-09-29T03:48:59.9283712Z                                 ^
2025-09-29T03:48:59.9284049Z src/qt/widgets/ChangesWidget.h:61:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9284151Z     // Right panel - diff view
2025-09-29T03:48:59.9284234Z                               ^
2025-09-29T03:48:59.9284574Z src/qt/widgets/ChangesWidget.h:62:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9284682Z     QWidget *m_diffPanel;
2025-09-29T03:48:59.9284765Z                          ^
2025-09-29T03:48:59.9285093Z src/qt/widgets/ChangesWidget.h:63:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9285191Z     QTextEdit *m_diffView;
2025-09-29T03:48:59.9285276Z                           ^
2025-09-29T03:48:59.9285605Z src/qt/widgets/ChangesWidget.h:65:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9285696Z     // Actions
2025-09-29T03:48:59.9285774Z               ^
2025-09-29T03:48:59.9286099Z src/qt/widgets/ChangesWidget.h:66:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9286206Z     QPushButton *m_stageAllButton;
2025-09-29T03:48:59.9286300Z                                   ^
2025-09-29T03:48:59.9286625Z src/qt/widgets/ChangesWidget.h:67:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9286739Z     QPushButton *m_unstageAllButton;
2025-09-29T03:48:59.9286835Z                                     ^
2025-09-29T03:48:59.9287161Z src/qt/widgets/ChangesWidget.h:68:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9287263Z     QPushButton *m_commitButton;
2025-09-29T03:48:59.9287355Z                                 ^
2025-09-29T03:48:59.9287688Z src/qt/widgets/SidebarWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9287792Z #include "SidebarWidget.h"
2025-09-29T03:48:59.9288067Z ^
2025-09-29T03:48:59.9288428Z src/qt/widgets/SidebarWidget.cpp:12:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9288519Z     : QWidget(parent)
2025-09-29T03:48:59.9288601Z                      ^
2025-09-29T03:48:59.9288948Z src/qt/widgets/SidebarWidget.cpp:13:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9289196Z     , m_layout(nullptr)
2025-09-29T03:48:59.9289279Z                        ^
2025-09-29T03:48:59.9289618Z src/qt/widgets/SidebarWidget.cpp:14:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9289722Z     , m_repositoryLabel(nullptr)
2025-09-29T03:48:59.9289807Z                                 ^
2025-09-29T03:48:59.9290147Z src/qt/widgets/SidebarWidget.cpp:15:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9290244Z     , m_branchLabel(nullptr)
2025-09-29T03:48:59.9290326Z      ^
2025-09-29T03:48:59.9290659Z src/qt/widgets/SidebarWidget.cpp:15:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9290760Z     , m_branchLabel(nullptr)
2025-09-29T03:48:59.9290845Z                             ^
2025-09-29T03:48:59.9291176Z src/qt/widgets/SidebarWidget.cpp:16:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9291279Z     , m_navigationList(nullptr)
2025-09-29T03:48:59.9291368Z                                ^
2025-09-29T03:48:59.9291699Z src/qt/widgets/SidebarWidget.cpp:17:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9291801Z     , m_statusLabel(nullptr)
2025-09-29T03:48:59.9291884Z                             ^
2025-09-29T03:48:59.9292212Z src/qt/widgets/SidebarWidget.cpp:18:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9292306Z     , m_changesItem(nullptr)
2025-09-29T03:48:59.9292389Z      ^
2025-09-29T03:48:59.9292852Z src/qt/widgets/SidebarWidget.cpp:18:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9292951Z     , m_changesItem(nullptr)
2025-09-29T03:48:59.9293040Z                             ^
2025-09-29T03:48:59.9293372Z src/qt/widgets/SidebarWidget.cpp:19:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9293466Z     , m_historyItem(nullptr)
2025-09-29T03:48:59.9293560Z                             ^
2025-09-29T03:48:59.9293893Z src/qt/widgets/SidebarWidget.cpp:20:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9293990Z     , m_branchesItem(nullptr)
2025-09-29T03:48:59.9294073Z                              ^
2025-09-29T03:48:59.9294411Z src/qt/widgets/SidebarWidget.cpp:21:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9294504Z     , m_remotesItem(nullptr)
2025-09-29T03:48:59.9294579Z      ^
2025-09-29T03:48:59.9294924Z src/qt/widgets/SidebarWidget.cpp:21:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9295018Z     , m_remotesItem(nullptr)
2025-09-29T03:48:59.9295100Z                             ^
2025-09-29T03:48:59.9295437Z src/qt/widgets/SidebarWidget.cpp:22:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9295529Z     , m_tagsItem(nullptr)
2025-09-29T03:48:59.9295611Z                          ^
2025-09-29T03:48:59.9295945Z src/qt/widgets/SidebarWidget.cpp:23:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9296042Z     , m_stashesItem(nullptr)
2025-09-29T03:48:59.9296124Z                             ^
2025-09-29T03:48:59.9296455Z src/qt/widgets/SidebarWidget.cpp:24:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9296537Z {
2025-09-29T03:48:59.9296613Z  ^
2025-09-29T03:48:59.9296945Z src/qt/widgets/SidebarWidget.cpp:25:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9297038Z     setupUI();
2025-09-29T03:48:59.9297116Z               ^
2025-09-29T03:48:59.9297450Z src/qt/widgets/SidebarWidget.cpp:29:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9297558Z void SidebarWidget::setupUI()
2025-09-29T03:48:59.9297648Z                              ^
2025-09-29T03:48:59.9298118Z src/qt/widgets/SidebarWidget.cpp:30:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9298337Z {
2025-09-29T03:48:59.9298420Z  ^
2025-09-29T03:48:59.9298756Z src/qt/widgets/SidebarWidget.cpp:31:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9298862Z     m_layout = new QVBoxLayout(this);
2025-09-29T03:48:59.9298962Z                                      ^
2025-09-29T03:48:59.9299293Z src/qt/widgets/SidebarWidget.cpp:32:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9299417Z     m_layout->setContentsMargins(8, 8, 8, 8);
2025-09-29T03:48:59.9299518Z                                              ^
2025-09-29T03:48:59.9299859Z src/qt/widgets/SidebarWidget.cpp:33:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9299956Z     m_layout->setSpacing(8);
2025-09-29T03:48:59.9300041Z                             ^
2025-09-29T03:48:59.9300378Z src/qt/widgets/SidebarWidget.cpp:35:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9300476Z     // Repository section
2025-09-29T03:48:59.9300563Z                          ^
2025-09-29T03:48:59.9300903Z src/qt/widgets/SidebarWidget.cpp:36:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9301013Z     auto repositoryFrame = new QWidget;
2025-09-29T03:48:59.9301105Z                                        ^
2025-09-29T03:48:59.9301440Z src/qt/widgets/SidebarWidget.cpp:37:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9301782Z     repositoryFrame->setObjectName("repositoryFrame");
2025-09-29T03:48:59.9301896Z                                                       ^
2025-09-29T03:48:59.9302249Z src/qt/widgets/SidebarWidget.cpp:38:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9302437Z     auto repositoryLayout = new QVBoxLayout(repositoryFrame);
2025-09-29T03:48:59.9302544Z                                                              ^
2025-09-29T03:48:59.9302898Z src/qt/widgets/SidebarWidget.cpp:39:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9303055Z     repositoryLayout->setContentsMargins(8, 8, 8, 8);
2025-09-29T03:48:59.9303157Z                                                      ^
2025-09-29T03:48:59.9303495Z src/qt/widgets/SidebarWidget.cpp:41:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9303656Z     m_repositoryLabel = new QLabel(tr("No Repository"));
2025-09-29T03:48:59.9303765Z                                                         ^
2025-09-29T03:48:59.9304102Z src/qt/widgets/SidebarWidget.cpp:42:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9304263Z     m_repositoryLabel->setObjectName("repositoryLabel");
2025-09-29T03:48:59.9304362Z                                                         ^
2025-09-29T03:48:59.9304696Z src/qt/widgets/SidebarWidget.cpp:43:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9304831Z     QFont repoFont = m_repositoryLabel->font();
2025-09-29T03:48:59.9304934Z                                                ^
2025-09-29T03:48:59.9305266Z src/qt/widgets/SidebarWidget.cpp:44:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9305368Z     repoFont.setBold(true);
2025-09-29T03:48:59.9305462Z                            ^
2025-09-29T03:48:59.9305795Z src/qt/widgets/SidebarWidget.cpp:45:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9305956Z     repoFont.setPointSize(repoFont.pointSize() + 1);
2025-09-29T03:48:59.9306060Z                                                     ^
2025-09-29T03:48:59.9306408Z src/qt/widgets/SidebarWidget.cpp:46:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9306528Z     m_repositoryLabel->setFont(repoFont);
2025-09-29T03:48:59.9306627Z                                          ^
2025-09-29T03:48:59.9307071Z src/qt/widgets/SidebarWidget.cpp:47:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9307220Z     repositoryLayout->addWidget(m_repositoryLabel);
2025-09-29T03:48:59.9307317Z                                                    ^
2025-09-29T03:48:59.9307658Z src/qt/widgets/SidebarWidget.cpp:49:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9307763Z     m_branchLabel = new QLabel("");
2025-09-29T03:48:59.9308024Z                                    ^
2025-09-29T03:48:59.9308374Z src/qt/widgets/SidebarWidget.cpp:50:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9308505Z     m_branchLabel->setObjectName("branchLabel");
2025-09-29T03:48:59.9308601Z                                                 ^
2025-09-29T03:48:59.9308936Z src/qt/widgets/SidebarWidget.cpp:51:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9309064Z     m_branchLabel->setStyleSheet("color: #666;");
2025-09-29T03:48:59.9309169Z                                                  ^
2025-09-29T03:48:59.9309516Z src/qt/widgets/SidebarWidget.cpp:52:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9309643Z     repositoryLayout->addWidget(m_branchLabel);
2025-09-29T03:48:59.9309733Z                                                ^
2025-09-29T03:48:59.9310065Z src/qt/widgets/SidebarWidget.cpp:54:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9310321Z     m_layout->addWidget(repositoryFrame);
2025-09-29T03:48:59.9310417Z                                          ^
2025-09-29T03:48:59.9310761Z src/qt/widgets/SidebarWidget.cpp:56:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9310856Z     // Navigation list
2025-09-29T03:48:59.9310937Z                       ^
2025-09-29T03:48:59.9311264Z src/qt/widgets/SidebarWidget.cpp:57:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9311386Z     m_navigationList = new QListWidget;
2025-09-29T03:48:59.9311476Z                                        ^
2025-09-29T03:48:59.9311802Z src/qt/widgets/SidebarWidget.cpp:58:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9311947Z     m_navigationList->setObjectName("navigationList");
2025-09-29T03:48:59.9312052Z                                                       ^
2025-09-29T03:48:59.9312388Z src/qt/widgets/SidebarWidget.cpp:59:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9312531Z     m_navigationList->setFrameStyle(QFrame::NoFrame);
2025-09-29T03:48:59.9312635Z                                                      ^
2025-09-29T03:48:59.9312968Z src/qt/widgets/SidebarWidget.cpp:60:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9313209Z     m_navigationList->setSelectionMode(QAbstractItemView::SingleSelection);
2025-09-29T03:48:59.9313330Z                                                                            ^
2025-09-29T03:48:59.9313665Z src/qt/widgets/SidebarWidget.cpp:61:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9313792Z     m_navigationList->setIconSize(QSize(20, 20));
2025-09-29T03:48:59.9313894Z                                                  ^
2025-09-29T03:48:59.9314225Z src/qt/widgets/SidebarWidget.cpp:62:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9314345Z     m_layout->addWidget(m_navigationList);
2025-09-29T03:48:59.9314443Z                                           ^
2025-09-29T03:48:59.9314773Z src/qt/widgets/SidebarWidget.cpp:64:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9314860Z     // Status section
2025-09-29T03:48:59.9314944Z                      ^
2025-09-29T03:48:59.9315278Z src/qt/widgets/SidebarWidget.cpp:65:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9315532Z     m_statusLabel = new QLabel(tr("Ready"));
2025-09-29T03:48:59.9315627Z                                             ^
2025-09-29T03:48:59.9315962Z src/qt/widgets/SidebarWidget.cpp:66:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9316087Z     m_statusLabel->setObjectName("statusLabel");
2025-09-29T03:48:59.9316178Z                                                 ^
2025-09-29T03:48:59.9316516Z src/qt/widgets/SidebarWidget.cpp:67:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9316705Z     m_statusLabel->setStyleSheet("color: #666; font-size: 11px;");
2025-09-29T03:48:59.9316811Z                                                                   ^
2025-09-29T03:48:59.9317146Z src/qt/widgets/SidebarWidget.cpp:68:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9317273Z     m_statusLabel->setAlignment(Qt::AlignCenter);
2025-09-29T03:48:59.9317370Z                                                  ^
2025-09-29T03:48:59.9317699Z src/qt/widgets/SidebarWidget.cpp:69:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9317813Z     m_layout->addWidget(m_statusLabel);
2025-09-29T03:48:59.9318024Z                                        ^
2025-09-29T03:48:59.9318358Z src/qt/widgets/SidebarWidget.cpp:71:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9318462Z     m_layout->addStretch();
2025-09-29T03:48:59.9318549Z                            ^
2025-09-29T03:48:59.9319012Z src/qt/widgets/SidebarWidget.cpp:73:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9319111Z     // Apply styling
2025-09-29T03:48:59.9319193Z                     ^
2025-09-29T03:48:59.9319542Z src/qt/widgets/SidebarWidget.cpp:115:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9319625Z     )");
2025-09-29T03:48:59.9319702Z         ^
2025-09-29T03:48:59.9320054Z src/qt/widgets/SidebarWidget.cpp:117:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9320213Z     connect(m_navigationList, &QListWidget::itemClicked,
2025-09-29T03:48:59.9320321Z                                                         ^
2025-09-29T03:48:59.9320665Z src/qt/widgets/SidebarWidget.cpp:118:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9320783Z             this, &SidebarWidget::onItemClicked);
2025-09-29T03:48:59.9320867Z                  ^
2025-09-29T03:48:59.9321210Z src/qt/widgets/SidebarWidget.cpp:121:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9321338Z void SidebarWidget::createNavigationItems()
2025-09-29T03:48:59.9321435Z                                            ^
2025-09-29T03:48:59.9321771Z src/qt/widgets/SidebarWidget.cpp:122:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9321855Z {
2025-09-29T03:48:59.9321929Z  ^
2025-09-29T03:48:59.9322271Z src/qt/widgets/SidebarWidget.cpp:123:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9322359Z     // Changes
2025-09-29T03:48:59.9322436Z               ^
2025-09-29T03:48:59.9322777Z src/qt/widgets/SidebarWidget.cpp:124:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9323037Z     m_changesItem = new QListWidgetItem(QIcon(":/icons/file-text.svg"), tr("Changes"));
2025-09-29T03:48:59.9323119Z                    ^
2025-09-29T03:48:59.9323468Z src/qt/widgets/SidebarWidget.cpp:124:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9323719Z     m_changesItem = new QListWidgetItem(QIcon(":/icons/file-text.svg"), tr("Changes"));
2025-09-29T03:48:59.9323835Z                                                                                        ^
2025-09-29T03:48:59.9324178Z src/qt/widgets/SidebarWidget.cpp:125:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9324466Z     m_changesItem->setData(Qt::UserRole, 0);
2025-09-29T03:48:59.9324562Z                                             ^
2025-09-29T03:48:59.9324898Z src/qt/widgets/SidebarWidget.cpp:126:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9325023Z     m_navigationList->addItem(m_changesItem);
2025-09-29T03:48:59.9325118Z                                              ^
2025-09-29T03:48:59.9325459Z src/qt/widgets/SidebarWidget.cpp:128:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9325546Z     // History
2025-09-29T03:48:59.9325623Z               ^
2025-09-29T03:48:59.9325958Z src/qt/widgets/SidebarWidget.cpp:129:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9326203Z     m_historyItem = new QListWidgetItem(QIcon(":/icons/clock.svg"), tr("History"));
2025-09-29T03:48:59.9326283Z                    ^
2025-09-29T03:48:59.9326625Z src/qt/widgets/SidebarWidget.cpp:129:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9326859Z     m_historyItem = new QListWidgetItem(QIcon(":/icons/clock.svg"), tr("History"));
2025-09-29T03:48:59.9326974Z                                                                                    ^
2025-09-29T03:48:59.9327310Z src/qt/widgets/SidebarWidget.cpp:130:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9327431Z     m_historyItem->setData(Qt::UserRole, 1);
2025-09-29T03:48:59.9327614Z                                             ^
2025-09-29T03:48:59.9328072Z src/qt/widgets/SidebarWidget.cpp:131:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9328190Z     m_navigationList->addItem(m_historyItem);
2025-09-29T03:48:59.9328288Z                                              ^
2025-09-29T03:48:59.9328622Z src/qt/widgets/SidebarWidget.cpp:133:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9328711Z     // Branches
2025-09-29T03:48:59.9328796Z                ^
2025-09-29T03:48:59.9329133Z src/qt/widgets/SidebarWidget.cpp:134:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9329396Z     m_branchesItem = new QListWidgetItem(QIcon(":/icons/git-branch.svg"), tr("Branches"));
2025-09-29T03:48:59.9329480Z                     ^
2025-09-29T03:48:59.9329815Z src/qt/widgets/SidebarWidget.cpp:134:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9330082Z     m_branchesItem = new QListWidgetItem(QIcon(":/icons/git-branch.svg"), tr("Branches"));
2025-09-29T03:48:59.9330208Z                                                                                           ^
2025-09-29T03:48:59.9330545Z src/qt/widgets/SidebarWidget.cpp:135:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9330664Z     m_branchesItem->setData(Qt::UserRole, 2);
2025-09-29T03:48:59.9330766Z                                              ^
2025-09-29T03:48:59.9331108Z src/qt/widgets/SidebarWidget.cpp:136:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9331226Z     m_navigationList->addItem(m_branchesItem);
2025-09-29T03:48:59.9331323Z                                               ^
2025-09-29T03:48:59.9331667Z src/qt/widgets/SidebarWidget.cpp:138:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9331748Z     // Remotes
2025-09-29T03:48:59.9331823Z               ^
2025-09-29T03:48:59.9332169Z src/qt/widgets/SidebarWidget.cpp:139:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9332402Z     m_remotesItem = new QListWidgetItem(QIcon(":/icons/globe.svg"), tr("Remotes"));
2025-09-29T03:48:59.9332481Z                    ^
2025-09-29T03:48:59.9332822Z src/qt/widgets/SidebarWidget.cpp:139:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9333201Z     m_remotesItem = new QListWidgetItem(QIcon(":/icons/globe.svg"), tr("Remotes"));
2025-09-29T03:48:59.9333311Z                                                                                    ^
2025-09-29T03:48:59.9333650Z src/qt/widgets/SidebarWidget.cpp:140:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9333779Z     m_remotesItem->setData(Qt::UserRole, 3);
2025-09-29T03:48:59.9333872Z                                             ^
2025-09-29T03:48:59.9334212Z src/qt/widgets/SidebarWidget.cpp:141:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9334335Z     m_navigationList->addItem(m_remotesItem);
2025-09-29T03:48:59.9334424Z                                              ^
2025-09-29T03:48:59.9334754Z src/qt/widgets/SidebarWidget.cpp:143:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9334839Z     // Tags
2025-09-29T03:48:59.9334917Z            ^
2025-09-29T03:48:59.9335257Z src/qt/widgets/SidebarWidget.cpp:144:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9335470Z     m_tagsItem = new QListWidgetItem(QIcon(":/icons/tag.svg"), tr("Tags"));
2025-09-29T03:48:59.9335582Z                                                                            ^
2025-09-29T03:48:59.9335917Z src/qt/widgets/SidebarWidget.cpp:145:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9336035Z     m_tagsItem->setData(Qt::UserRole, 4);
2025-09-29T03:48:59.9336253Z                                          ^
2025-09-29T03:48:59.9336595Z src/qt/widgets/SidebarWidget.cpp:146:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9336708Z     m_navigationList->addItem(m_tagsItem);
2025-09-29T03:48:59.9336810Z                                           ^
2025-09-29T03:48:59.9337144Z src/qt/widgets/SidebarWidget.cpp:148:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9337229Z     // Stashes
2025-09-29T03:48:59.9337313Z               ^
2025-09-29T03:48:59.9337650Z src/qt/widgets/SidebarWidget.cpp:149:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9338018Z     m_stashesItem = new QListWidgetItem(QIcon(":/icons/archive.svg"), tr("Stashes"));
2025-09-29T03:48:59.9338112Z                    ^
2025-09-29T03:48:59.9338452Z src/qt/widgets/SidebarWidget.cpp:149:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9338699Z     m_stashesItem = new QListWidgetItem(QIcon(":/icons/archive.svg"), tr("Stashes"));
2025-09-29T03:48:59.9338819Z                                                                                      ^
2025-09-29T03:48:59.9339165Z src/qt/widgets/SidebarWidget.cpp:150:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9339287Z     m_stashesItem->setData(Qt::UserRole, 5);
2025-09-29T03:48:59.9339378Z                                             ^
2025-09-29T03:48:59.9339730Z src/qt/widgets/SidebarWidget.cpp:151:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9339850Z     m_navigationList->addItem(m_stashesItem);
2025-09-29T03:48:59.9339941Z                                              ^
2025-09-29T03:48:59.9340287Z src/qt/widgets/SidebarWidget.cpp:153:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9340390Z     // Select first item by default
2025-09-29T03:48:59.9340476Z                                    ^
2025-09-29T03:48:59.9340825Z src/qt/widgets/SidebarWidget.cpp:154:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9340936Z     if (m_navigationList->count() > 0) {
2025-09-29T03:48:59.9341026Z                                         ^
2025-09-29T03:48:59.9341370Z src/qt/widgets/SidebarWidget.cpp:155:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9341486Z         m_navigationList->setCurrentRow(0);
2025-09-29T03:48:59.9341863Z                                            ^
2025-09-29T03:48:59.9342210Z src/qt/widgets/SidebarWidget.cpp:159:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9342397Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-09-29T03:48:59.9342502Z                                                           ^
2025-09-29T03:48:59.9342847Z src/qt/widgets/SidebarWidget.cpp:160:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9342939Z {
2025-09-29T03:48:59.9343016Z  ^
2025-09-29T03:48:59.9343357Z src/qt/widgets/SidebarWidget.cpp:161:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9343470Z     m_repositoryPath = path;
2025-09-29T03:48:59.9343555Z                             ^
2025-09-29T03:48:59.9343894Z src/qt/widgets/SidebarWidget.cpp:163:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9344006Z     if (path.isEmpty()) {
2025-09-29T03:48:59.9344092Z                          ^
2025-09-29T03:48:59.9344430Z src/qt/widgets/SidebarWidget.cpp:164:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9344578Z         m_repositoryLabel->setText(tr("No Repository"));
2025-09-29T03:48:59.9344684Z                                                         ^
2025-09-29T03:48:59.9345024Z src/qt/widgets/SidebarWidget.cpp:165:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9345256Z         m_branchLabel->setText("");
2025-09-29T03:48:59.9345355Z                                    ^
2025-09-29T03:48:59.9345700Z src/qt/widgets/SidebarWidget.cpp:166:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9345781Z     } else {
2025-09-29T03:48:59.9345864Z             ^
2025-09-29T03:48:59.9346206Z src/qt/widgets/SidebarWidget.cpp:167:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9346304Z         QDir dir(path);
2025-09-29T03:48:59.9346388Z                        ^
2025-09-29T03:48:59.9346735Z src/qt/widgets/SidebarWidget.cpp:168:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9346866Z         m_repositoryLabel->setText(dir.dirName());
2025-09-29T03:48:59.9346965Z                                                   ^
2025-09-29T03:48:59.9347310Z src/qt/widgets/SidebarWidget.cpp:172:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9347549Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-09-29T03:48:59.9347661Z                                                                        ^
2025-09-29T03:48:59.9348134Z src/qt/widgets/SidebarWidget.cpp:173:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9348214Z {
2025-09-29T03:48:59.9348289Z  ^
2025-09-29T03:48:59.9348634Z src/qt/widgets/SidebarWidget.cpp:174:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9348738Z     m_currentStatus = status;
2025-09-29T03:48:59.9348824Z                              ^
2025-09-29T03:48:59.9349162Z src/qt/widgets/SidebarWidget.cpp:176:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9349264Z     // Update branch label
2025-09-29T03:48:59.9349349Z                           ^
2025-09-29T03:48:59.9349688Z src/qt/widgets/SidebarWidget.cpp:177:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9349817Z     if (!status.currentBranch.empty()) {
2025-09-29T03:48:59.9349908Z                                         ^
2025-09-29T03:48:59.9350247Z src/qt/widgets/SidebarWidget.cpp:178:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9350470Z         QString branchText = QString::fromStdString(status.currentBranch);
2025-09-29T03:48:59.9350582Z                                                                           ^
2025-09-29T03:48:59.9351096Z src/qt/widgets/SidebarWidget.cpp:179:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9351264Z         if (status.aheadCount > 0 || status.behindCount > 0) {
2025-09-29T03:48:59.9351370Z                                                               ^
2025-09-29T03:48:59.9351710Z src/qt/widgets/SidebarWidget.cpp:180:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9351971Z             branchText += QString(" (%1↑ %2↓)")
2025-09-29T03:48:59.9352326Z src/qt/widgets/SidebarWidget.cpp:180:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9352485Z             branchText += QString(" (%1↑ %2↓)")
2025-09-29T03:48:59.9352829Z src/qt/widgets/SidebarWidget.cpp:181:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9352945Z                          .arg(status.aheadCount)
2025-09-29T03:48:59.9353042Z                                                 ^
2025-09-29T03:48:59.9353393Z src/qt/widgets/SidebarWidget.cpp:182:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9353510Z                          .arg(status.behindCount);
2025-09-29T03:48:59.9353605Z                                                   ^
2025-09-29T03:48:59.9353948Z src/qt/widgets/SidebarWidget.cpp:183:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9354031Z         }
2025-09-29T03:48:59.9354107Z          ^
2025-09-29T03:48:59.9354586Z src/qt/widgets/SidebarWidget.cpp:184:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9354704Z         m_branchLabel->setText(branchText);
2025-09-29T03:48:59.9354803Z                                            ^
2025-09-29T03:48:59.9355143Z src/qt/widgets/SidebarWidget.cpp:185:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9355222Z     } else {
2025-09-29T03:48:59.9355315Z             ^
2025-09-29T03:48:59.9355653Z src/qt/widgets/SidebarWidget.cpp:186:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9355759Z         m_branchLabel->setText("");
2025-09-29T03:48:59.9355854Z                                    ^
2025-09-29T03:48:59.9356224Z src/qt/widgets/SidebarWidget.cpp:187:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9356302Z     }
2025-09-29T03:48:59.9356378Z      ^
2025-09-29T03:48:59.9356740Z src/qt/widgets/SidebarWidget.cpp:189:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9356835Z     // Update status counts
2025-09-29T03:48:59.9356921Z                            ^
2025-09-29T03:48:59.9357266Z src/qt/widgets/SidebarWidget.cpp:193:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9357390Z void SidebarWidget::updateStatusCounts()
2025-09-29T03:48:59.9357481Z                                         ^
2025-09-29T03:48:59.9357833Z src/qt/widgets/SidebarWidget.cpp:194:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9358063Z {
2025-09-29T03:48:59.9358139Z  ^
2025-09-29T03:48:59.9358481Z src/qt/widgets/SidebarWidget.cpp:195:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9358585Z     // Count changes by type
2025-09-29T03:48:59.9358673Z                             ^
2025-09-29T03:48:59.9359030Z src/qt/widgets/SidebarWidget.cpp:196:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9359134Z     int stagedCount = 0;
2025-09-29T03:48:59.9359217Z                         ^
2025-09-29T03:48:59.9359560Z src/qt/widgets/SidebarWidget.cpp:197:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9359663Z     int unstagedCount = 0;
2025-09-29T03:48:59.9359746Z                           ^
2025-09-29T03:48:59.9360092Z src/qt/widgets/SidebarWidget.cpp:199:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9360412Z     for (const auto &change : m_currentStatus.changes) {
2025-09-29T03:48:59.9360517Z                                                         ^
2025-09-29T03:48:59.9360876Z src/qt/widgets/SidebarWidget.cpp:200:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9360977Z         if (change.isStaged) {
2025-09-29T03:48:59.9361076Z                               ^
2025-09-29T03:48:59.9361425Z src/qt/widgets/SidebarWidget.cpp:201:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9361522Z             stagedCount++;
2025-09-29T03:48:59.9361613Z                           ^
2025-09-29T03:48:59.9361959Z src/qt/widgets/SidebarWidget.cpp:202:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9362039Z         } else {
2025-09-29T03:48:59.9362123Z                 ^
2025-09-29T03:48:59.9362468Z src/qt/widgets/SidebarWidget.cpp:203:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9362572Z             unstagedCount++;
2025-09-29T03:48:59.9362662Z                             ^
2025-09-29T03:48:59.9363013Z src/qt/widgets/SidebarWidget.cpp:204:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9363093Z         }
2025-09-29T03:48:59.9363172Z          ^
2025-09-29T03:48:59.9363522Z src/qt/widgets/SidebarWidget.cpp:205:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9363737Z     }
2025-09-29T03:48:59.9363819Z      ^
2025-09-29T03:48:59.9364174Z src/qt/widgets/SidebarWidget.cpp:207:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9364311Z     int totalChanges = stagedCount + unstagedCount;
2025-09-29T03:48:59.9364413Z                                                    ^
2025-09-29T03:48:59.9364762Z src/qt/widgets/SidebarWidget.cpp:209:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9364872Z     // Update changes item text
2025-09-29T03:48:59.9364962Z                                ^
2025-09-29T03:48:59.9365309Z src/qt/widgets/SidebarWidget.cpp:210:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9365410Z     if (totalChanges > 0) {
2025-09-29T03:48:59.9365495Z                            ^
2025-09-29T03:48:59.9365845Z src/qt/widgets/SidebarWidget.cpp:211:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9366048Z         m_changesItem->setText(tr("Changes (%1)").arg(totalChanges));
2025-09-29T03:48:59.9366162Z                                                                      ^
2025-09-29T03:48:59.9366508Z src/qt/widgets/SidebarWidget.cpp:212:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9366594Z     } else {
2025-09-29T03:48:59.9366674Z             ^
2025-09-29T03:48:59.9367017Z src/qt/widgets/SidebarWidget.cpp:213:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9367145Z         m_changesItem->setText(tr("Changes"));
2025-09-29T03:48:59.9367249Z                                               ^
2025-09-29T03:48:59.9367593Z src/qt/widgets/SidebarWidget.cpp:214:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9367670Z     }
2025-09-29T03:48:59.9367753Z      ^
2025-09-29T03:48:59.9368226Z src/qt/widgets/SidebarWidget.cpp:216:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9368329Z     // Update status label
2025-09-29T03:48:59.9368422Z                           ^
2025-09-29T03:48:59.9368767Z src/qt/widgets/SidebarWidget.cpp:217:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9368863Z     if (totalChanges > 0) {
2025-09-29T03:48:59.9368951Z                            ^
2025-09-29T03:48:59.9369303Z src/qt/widgets/SidebarWidget.cpp:218:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9369594Z         QString statusText;
2025-09-29T03:48:59.9369681Z                            ^
2025-09-29T03:48:59.9370035Z src/qt/widgets/SidebarWidget.cpp:219:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9370158Z         if (stagedCount > 0 && unstagedCount > 0) {
2025-09-29T03:48:59.9370258Z                                                    ^
2025-09-29T03:48:59.9370612Z src/qt/widgets/SidebarWidget.cpp:220:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9370843Z             statusText = tr("%1 staged, %2 unstaged").arg(stagedCount).arg(unstagedCount);
2025-09-29T03:48:59.9370929Z                         ^
2025-09-29T03:48:59.9371281Z src/qt/widgets/SidebarWidget.cpp:220:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9371507Z             statusText = tr("%1 staged, %2 unstaged").arg(stagedCount).arg(unstagedCount);
2025-09-29T03:48:59.9371685Z                                                                                           ^
2025-09-29T03:48:59.9372037Z src/qt/widgets/SidebarWidget.cpp:221:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9372152Z         } else if (stagedCount > 0) {
2025-09-29T03:48:59.9372246Z                                      ^
2025-09-29T03:48:59.9372590Z src/qt/widgets/SidebarWidget.cpp:222:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9372872Z             statusText = tr("%1 staged").arg(stagedCount);
2025-09-29T03:48:59.9372982Z                                                           ^
2025-09-29T03:48:59.9373334Z src/qt/widgets/SidebarWidget.cpp:223:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9373423Z         } else {
2025-09-29T03:48:59.9373502Z                 ^
2025-09-29T03:48:59.9373846Z src/qt/widgets/SidebarWidget.cpp:224:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9374009Z             statusText = tr("%1 unstaged").arg(unstagedCount);
2025-09-29T03:48:59.9374117Z                                                               ^
2025-09-29T03:48:59.9374464Z src/qt/widgets/SidebarWidget.cpp:225:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9374543Z         }
2025-09-29T03:48:59.9374628Z          ^
2025-09-29T03:48:59.9374980Z src/qt/widgets/SidebarWidget.cpp:226:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9375095Z         m_statusLabel->setText(statusText);
2025-09-29T03:48:59.9375196Z                                            ^
2025-09-29T03:48:59.9375536Z src/qt/widgets/SidebarWidget.cpp:227:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9375615Z     } else {
2025-09-29T03:48:59.9375699Z             ^
2025-09-29T03:48:59.9376040Z src/qt/widgets/SidebarWidget.cpp:228:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9376204Z         m_statusLabel->setText(tr("Working directory clean"));
2025-09-29T03:48:59.9376309Z                                                               ^
2025-09-29T03:48:59.9376662Z src/qt/widgets/SidebarWidget.cpp:232:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9376839Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-09-29T03:48:59.9376942Z                                                         ^
2025-09-29T03:48:59.9377301Z src/qt/widgets/SidebarWidget.cpp:233:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9377377Z {
2025-09-29T03:48:59.9377452Z  ^
2025-09-29T03:48:59.9377801Z src/qt/widgets/SidebarWidget.cpp:234:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9378002Z     if (item) {
2025-09-29T03:48:59.9378084Z                ^
2025-09-29T03:48:59.9378439Z src/qt/widgets/SidebarWidget.cpp:235:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9378726Z         int index = item->data(Qt::UserRole).toInt();
2025-09-29T03:48:59.9378829Z                                                      ^
2025-09-29T03:48:59.9379178Z src/qt/widgets/SidebarWidget.cpp:236:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9379294Z         emit selectionChanged(index);
2025-09-29T03:48:59.9379384Z                                      ^
2025-09-29T03:48:59.9379724Z src/qt/widgets/SidebarWidget.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9379817Z #include <QWidget>
2025-09-29T03:48:59.9379895Z ^
2025-09-29T03:48:59.9380233Z src/qt/widgets/SidebarWidget.h:15:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9380353Z class SidebarWidget : public QWidget
2025-09-29T03:48:59.9380442Z                                     ^
2025-09-29T03:48:59.9380782Z src/qt/widgets/SidebarWidget.h:16:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9380858Z {
2025-09-29T03:48:59.9380939Z  ^
2025-09-29T03:48:59.9381266Z src/qt/widgets/SidebarWidget.h:19:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9381350Z public:
2025-09-29T03:48:59.9381434Z        ^
2025-09-29T03:48:59.9381768Z src/qt/widgets/SidebarWidget.h:20:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9382053Z     explicit SidebarWidget(QWidget *parent = nullptr);
2025-09-29T03:48:59.9382166Z                                                       ^
2025-09-29T03:48:59.9382498Z src/qt/widgets/SidebarWidget.h:22:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9382641Z     void setRepositoryPath(const QString &path);
2025-09-29T03:48:59.9382741Z                                                 ^
2025-09-29T03:48:59.9383078Z src/qt/widgets/SidebarWidget.h:25:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9383167Z signals:
2025-09-29T03:48:59.9383248Z         ^
2025-09-29T03:48:59.9383580Z src/qt/widgets/SidebarWidget.h:28:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9383668Z private slots:
2025-09-29T03:48:59.9383746Z               ^
2025-09-29T03:48:59.9384078Z src/qt/widgets/SidebarWidget.h:31:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9384163Z private:
2025-09-29T03:48:59.9384245Z         ^
2025-09-29T03:48:59.9384572Z src/qt/widgets/SidebarWidget.h:32:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9384668Z     void setupUI();
2025-09-29T03:48:59.9384748Z                    ^
2025-09-29T03:48:59.9385075Z src/qt/widgets/SidebarWidget.h:33:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9385194Z     void createNavigationItems();
2025-09-29T03:48:59.9385292Z                                  ^
2025-09-29T03:48:59.9385624Z src/qt/widgets/SidebarWidget.h:34:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9385735Z     void updateStatusCounts();
2025-09-29T03:48:59.9385824Z                               ^
2025-09-29T03:48:59.9386154Z src/qt/widgets/SidebarWidget.h:36:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9386251Z     QVBoxLayout *m_layout;
2025-09-29T03:48:59.9386347Z                           ^
2025-09-29T03:48:59.9386683Z src/qt/widgets/SidebarWidget.h:37:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9386787Z     QLabel *m_repositoryLabel;
2025-09-29T03:48:59.9386878Z                               ^
2025-09-29T03:48:59.9387206Z src/qt/widgets/SidebarWidget.h:38:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9387308Z     QLabel *m_branchLabel;
2025-09-29T03:48:59.9387508Z                           ^
2025-09-29T03:48:59.9387964Z src/qt/widgets/SidebarWidget.h:39:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9388079Z     QListWidget *m_navigationList;
2025-09-29T03:48:59.9388174Z                                   ^
2025-09-29T03:48:59.9388519Z src/qt/widgets/SidebarWidget.h:40:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9388615Z     QLabel *m_statusLabel;
2025-09-29T03:48:59.9388700Z                           ^
2025-09-29T03:48:59.9389053Z src/qt/widgets/SidebarWidget.h:42:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9389157Z     QString m_repositoryPath;
2025-09-29T03:48:59.9389240Z                              ^
2025-09-29T03:48:59.9389572Z src/qt/widgets/SidebarWidget.h:43:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9389699Z     VersionTools::GitStatus m_currentStatus;
2025-09-29T03:48:59.9389802Z                                             ^
2025-09-29T03:48:59.9390133Z src/qt/widgets/SidebarWidget.h:45:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9390224Z     // Navigation items
2025-09-29T03:48:59.9390309Z                        ^
2025-09-29T03:48:59.9390632Z src/qt/widgets/SidebarWidget.h:46:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9390745Z     QListWidgetItem *m_changesItem;
2025-09-29T03:48:59.9390834Z                                    ^
2025-09-29T03:48:59.9391301Z src/qt/widgets/SidebarWidget.h:47:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9391418Z     QListWidgetItem *m_historyItem;
2025-09-29T03:48:59.9391506Z                                    ^
2025-09-29T03:48:59.9391831Z src/qt/widgets/SidebarWidget.h:48:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9391941Z     QListWidgetItem *m_branchesItem;
2025-09-29T03:48:59.9392035Z                                     ^
2025-09-29T03:48:59.9392357Z src/qt/widgets/SidebarWidget.h:49:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9392465Z     QListWidgetItem *m_remotesItem;
2025-09-29T03:48:59.9392550Z                                    ^
2025-09-29T03:48:59.9392887Z src/qt/widgets/SidebarWidget.h:50:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9392994Z     QListWidgetItem *m_tagsItem;
2025-09-29T03:48:59.9393093Z                                 ^
2025-09-29T03:48:59.9393360Z src/qt/main.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9393459Z #include <QApplication>
2025-09-29T03:48:59.9393542Z ^
2025-09-29T03:48:59.9393797Z src/qt/main.cpp:8:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9393898Z int main(int argc, char *argv[])
2025-09-29T03:48:59.9393986Z                                 ^
2025-09-29T03:48:59.9394240Z src/qt/main.cpp:9:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9394316Z {
2025-09-29T03:48:59.9394391Z  ^
2025-09-29T03:48:59.9394648Z src/qt/main.cpp:10:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9394754Z     QApplication app(argc, argv);
2025-09-29T03:48:59.9394840Z                                  ^
2025-09-29T03:48:59.9395092Z src/qt/main.cpp:12:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9395201Z     // Set application properties
2025-09-29T03:48:59.9395287Z                                  ^
2025-09-29T03:48:59.9395533Z src/qt/main.cpp:13:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9395668Z     app.setApplicationName("Version Tools");
2025-09-29T03:48:59.9395764Z                                             ^
2025-09-29T03:48:59.9396008Z src/qt/main.cpp:14:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9396275Z     app.setApplicationVersion("1.0.0");
2025-09-29T03:48:59.9396369Z                                        ^
2025-09-29T03:48:59.9396610Z src/qt/main.cpp:15:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9396772Z     app.setOrganizationName("VersionTools Project");
2025-09-29T03:48:59.9396873Z                                                     ^
2025-09-29T03:48:59.9397117Z src/qt/main.cpp:16:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9397275Z     app.setOrganizationDomain("versiontools.dev");
2025-09-29T03:48:59.9397374Z                                                   ^
2025-09-29T03:48:59.9397619Z src/qt/main.cpp:18:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9397717Z     // Set application icon
2025-09-29T03:48:59.9397810Z                            ^
2025-09-29T03:48:59.9398175Z src/qt/main.cpp:19:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9398360Z     app.setWindowIcon(QIcon(":/icons/versiontools.png"));
2025-09-29T03:48:59.9398470Z                                                          ^
2025-09-29T03:48:59.9398721Z src/qt/main.cpp:21:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9398818Z     // Apply modern theme
2025-09-29T03:48:59.9398909Z                          ^
2025-09-29T03:48:59.9399346Z src/qt/main.cpp:22:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9399476Z     ThemeManager::applyModernTheme(&app);
2025-09-29T03:48:59.9399568Z                                          ^
2025-09-29T03:48:59.9399818Z src/qt/main.cpp:24:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9399919Z     // Create and show main window
2025-09-29T03:48:59.9400007Z                                   ^
2025-09-29T03:48:59.9400254Z src/qt/main.cpp:25:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9400368Z     VersionToolsMainWindow window;
2025-09-29T03:48:59.9400457Z                                   ^
2025-09-29T03:48:59.9400705Z src/qt/main.cpp:26:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9400790Z     window.show();
2025-09-29T03:48:59.9400869Z                   ^
2025-09-29T03:48:59.9401145Z src/core/GitUtils.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9401243Z #include <string>
2025-09-29T03:48:59.9401322Z ^
2025-09-29T03:48:59.9401599Z src/core/GitUtils.h:13:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9401688Z public:
2025-09-29T03:48:59.9401772Z        ^
2025-09-29T03:48:59.9402047Z src/core/GitUtils.h:14:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9402143Z     // String utilities
2025-09-29T03:48:59.9402228Z                        ^
2025-09-29T03:48:59.9402500Z src/core/GitUtils.h:15:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9402641Z     static std::string trim(const std::string& str);
2025-09-29T03:48:59.9402747Z                                              ^
2025-09-29T03:48:59.9403018Z src/core/GitUtils.h:15:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9403153Z     static std::string trim(const std::string& str);
2025-09-29T03:48:59.9403257Z                                               ^
2025-09-29T03:48:59.9403529Z src/core/GitUtils.h:15:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9403661Z     static std::string trim(const std::string& str);
2025-09-29T03:48:59.9403771Z                                                     ^
2025-09-29T03:48:59.9404037Z src/core/GitUtils.h:16:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9404188Z     static std::string trimLeft(const std::string& str);
2025-09-29T03:48:59.9404440Z                                                  ^
2025-09-29T03:48:59.9404711Z src/core/GitUtils.h:16:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9404857Z     static std::string trimLeft(const std::string& str);
2025-09-29T03:48:59.9404954Z                                                   ^
2025-09-29T03:48:59.9405228Z src/core/GitUtils.h:16:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9405378Z     static std::string trimLeft(const std::string& str);
2025-09-29T03:48:59.9405482Z                                                         ^
2025-09-29T03:48:59.9405756Z src/core/GitUtils.h:17:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9405907Z     static std::string trimRight(const std::string& str);
2025-09-29T03:48:59.9406001Z                                                   ^
2025-09-29T03:48:59.9406282Z src/core/GitUtils.h:17:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9406429Z     static std::string trimRight(const std::string& str);
2025-09-29T03:48:59.9406527Z                                                    ^
2025-09-29T03:48:59.9406799Z src/core/GitUtils.h:17:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9406943Z     static std::string trimRight(const std::string& str);
2025-09-29T03:48:59.9407046Z                                                          ^
2025-09-29T03:48:59.9407411Z src/core/GitUtils.h:18:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9407697Z     static std::vector<std::string> split(const std::string& str, const std::string& delimiter);
2025-09-29T03:48:59.9407804Z                                                            ^
2025-09-29T03:48:59.9408206Z src/core/GitUtils.h:18:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9408483Z     static std::vector<std::string> split(const std::string& str, const std::string& delimiter);
2025-09-29T03:48:59.9408591Z                                                             ^
2025-09-29T03:48:59.9408865Z src/core/GitUtils.h:18:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9409126Z     static std::vector<std::string> split(const std::string& str, const std::string& delimiter);
2025-09-29T03:48:59.9409237Z                                                                  ^
2025-09-29T03:48:59.9409511Z src/core/GitUtils.h:18:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9409781Z     static std::vector<std::string> split(const std::string& str, const std::string& delimiter);
2025-09-29T03:48:59.9409899Z                                                                                    ^
2025-09-29T03:48:59.9410168Z src/core/GitUtils.h:18:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9410440Z     static std::vector<std::string> split(const std::string& str, const std::string& delimiter);
2025-09-29T03:48:59.9410557Z                                                                                     ^
2025-09-29T03:48:59.9410824Z src/core/GitUtils.h:18:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9411090Z     static std::vector<std::string> split(const std::string& str, const std::string& delimiter);
2025-09-29T03:48:59.9411214Z                                                                                                 ^
2025-09-29T03:48:59.9411483Z src/core/GitUtils.h:19:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9411763Z     static std::string join(const std::vector<std::string>& parts, const std::string& delimiter);
2025-09-29T03:48:59.9411869Z                                                           ^
2025-09-29T03:48:59.9412143Z src/core/GitUtils.h:19:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9412566Z     static std::string join(const std::vector<std::string>& parts, const std::string& delimiter);
2025-09-29T03:48:59.9412672Z                                                            ^
2025-09-29T03:48:59.9412945Z src/core/GitUtils.h:19:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9413216Z     static std::string join(const std::vector<std::string>& parts, const std::string& delimiter);
2025-09-29T03:48:59.9413336Z                                                                   ^
2025-09-29T03:48:59.9413606Z src/core/GitUtils.h:19:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9413874Z     static std::string join(const std::vector<std::string>& parts, const std::string& delimiter);
2025-09-29T03:48:59.9413986Z                                                                                     ^
2025-09-29T03:48:59.9414259Z src/core/GitUtils.h:19:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9414529Z     static std::string join(const std::vector<std::string>& parts, const std::string& delimiter);
2025-09-29T03:48:59.9414643Z                                                                                      ^
2025-09-29T03:48:59.9414912Z src/core/GitUtils.h:19:98: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9415311Z     static std::string join(const std::vector<std::string>& parts, const std::string& delimiter);
2025-09-29T03:48:59.9415437Z                                                                                                  ^
2025-09-29T03:48:59.9415706Z src/core/GitUtils.h:20:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9415942Z     static bool startsWith(const std::string& str, const std::string& prefix);
2025-09-29T03:48:59.9416041Z                                             ^
2025-09-29T03:48:59.9416319Z src/core/GitUtils.h:20:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9416548Z     static bool startsWith(const std::string& str, const std::string& prefix);
2025-09-29T03:48:59.9416641Z                                              ^
2025-09-29T03:48:59.9416908Z src/core/GitUtils.h:20:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9417132Z     static bool startsWith(const std::string& str, const std::string& prefix);
2025-09-29T03:48:59.9417246Z                                                                     ^
2025-09-29T03:48:59.9417513Z src/core/GitUtils.h:20:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9417737Z     static bool startsWith(const std::string& str, const std::string& prefix);
2025-09-29T03:48:59.9417966Z                                                                      ^
2025-09-29T03:48:59.9418263Z src/core/GitUtils.h:20:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9418501Z     static bool startsWith(const std::string& str, const std::string& prefix);
2025-09-29T03:48:59.9418612Z                                                                               ^
2025-09-29T03:48:59.9418888Z src/core/GitUtils.h:21:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9419102Z     static bool endsWith(const std::string& str, const std::string& suffix);
2025-09-29T03:48:59.9419209Z                                           ^
2025-09-29T03:48:59.9419482Z src/core/GitUtils.h:21:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9419691Z     static bool endsWith(const std::string& str, const std::string& suffix);
2025-09-29T03:48:59.9419792Z                                            ^
2025-09-29T03:48:59.9420061Z src/core/GitUtils.h:21:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9420419Z     static bool endsWith(const std::string& str, const std::string& suffix);
2025-09-29T03:48:59.9420534Z                                                                   ^
2025-09-29T03:48:59.9420802Z src/core/GitUtils.h:21:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9421006Z     static bool endsWith(const std::string& str, const std::string& suffix);
2025-09-29T03:48:59.9421123Z                                                                    ^
2025-09-29T03:48:59.9421395Z src/core/GitUtils.h:21:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9421598Z     static bool endsWith(const std::string& str, const std::string& suffix);
2025-09-29T03:48:59.9421711Z                                                                             ^
2025-09-29T03:48:59.9421973Z src/core/GitUtils.h:22:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9422118Z     static std::string toLower(const std::string& str);
2025-09-29T03:48:59.9422230Z                                                 ^
2025-09-29T03:48:59.9422495Z src/core/GitUtils.h:22:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9422636Z     static std::string toLower(const std::string& str);
2025-09-29T03:48:59.9422739Z                                                  ^
2025-09-29T03:48:59.9423005Z src/core/GitUtils.h:22:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9423269Z     static std::string toLower(const std::string& str);
2025-09-29T03:48:59.9423378Z                                                        ^
2025-09-29T03:48:59.9423655Z src/core/GitUtils.h:23:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9423799Z     static std::string toUpper(const std::string& str);
2025-09-29T03:48:59.9423896Z                                                 ^
2025-09-29T03:48:59.9424171Z src/core/GitUtils.h:23:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9424313Z     static std::string toUpper(const std::string& str);
2025-09-29T03:48:59.9424412Z                                                  ^
2025-09-29T03:48:59.9424682Z src/core/GitUtils.h:23:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9424819Z     static std::string toUpper(const std::string& str);
2025-09-29T03:48:59.9424919Z                                                        ^
2025-09-29T03:48:59.9425197Z src/core/GitUtils.h:25:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9425288Z     // Path utilities
2025-09-29T03:48:59.9425371Z                      ^
2025-09-29T03:48:59.9425633Z src/core/GitUtils.h:26:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9425819Z     static std::string normalizePath(const std::string& path);
2025-09-29T03:48:59.9425914Z                                                       ^
2025-09-29T03:48:59.9426186Z src/core/GitUtils.h:26:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9426361Z     static std::string normalizePath(const std::string& path);
2025-09-29T03:48:59.9426457Z                                                        ^
2025-09-29T03:48:59.9426722Z src/core/GitUtils.h:26:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9426894Z     static std::string normalizePath(const std::string& path);
2025-09-29T03:48:59.9427007Z                                                               ^
2025-09-29T03:48:59.9427271Z src/core/GitUtils.h:27:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9427441Z     static std::string getFileName(const std::string& path);
2025-09-29T03:48:59.9427543Z                                                     ^
2025-09-29T03:48:59.9427806Z src/core/GitUtils.h:27:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9428274Z     static std::string getFileName(const std::string& path);
2025-09-29T03:48:59.9428377Z                                                      ^
2025-09-29T03:48:59.9428650Z src/core/GitUtils.h:27:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9428812Z     static std::string getFileName(const std::string& path);
2025-09-29T03:48:59.9428918Z                                                             ^
2025-09-29T03:48:59.9429188Z src/core/GitUtils.h:28:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9429373Z     static std::string getFileExtension(const std::string& path);
2025-09-29T03:48:59.9429490Z                                                          ^
2025-09-29T03:48:59.9429769Z src/core/GitUtils.h:28:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9429946Z     static std::string getFileExtension(const std::string& path);
2025-09-29T03:48:59.9430059Z                                                           ^
2025-09-29T03:48:59.9430330Z src/core/GitUtils.h:28:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9430502Z     static std::string getFileExtension(const std::string& path);
2025-09-29T03:48:59.9430615Z                                                                  ^
2025-09-29T03:48:59.9430883Z src/core/GitUtils.h:29:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9431201Z     static std::string getDirectory(const std::string& path);
2025-09-29T03:48:59.9431311Z                                                      ^
2025-09-29T03:48:59.9431581Z src/core/GitUtils.h:29:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9431739Z     static std::string getDirectory(const std::string& path);
2025-09-29T03:48:59.9431842Z                                                       ^
2025-09-29T03:48:59.9432113Z src/core/GitUtils.h:29:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9432273Z     static std::string getDirectory(const std::string& path);
2025-09-29T03:48:59.9432376Z                                                              ^
2025-09-29T03:48:59.9432639Z src/core/GitUtils.h:30:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9432886Z     static std::string joinPaths(const std::string& path1, const std::string& path2);
2025-09-29T03:48:59.9432990Z                                                   ^
2025-09-29T03:48:59.9433260Z src/core/GitUtils.h:30:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9433501Z     static std::string joinPaths(const std::string& path1, const std::string& path2);
2025-09-29T03:48:59.9433601Z                                                    ^
2025-09-29T03:48:59.9433870Z src/core/GitUtils.h:30:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9434113Z     static std::string joinPaths(const std::string& path1, const std::string& path2);
2025-09-29T03:48:59.9434215Z                                                           ^
2025-09-29T03:48:59.9434489Z src/core/GitUtils.h:30:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9434726Z     static std::string joinPaths(const std::string& path1, const std::string& path2);
2025-09-29T03:48:59.9434840Z                                                                             ^
2025-09-29T03:48:59.9435118Z src/core/GitUtils.h:30:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9435356Z     static std::string joinPaths(const std::string& path1, const std::string& path2);
2025-09-29T03:48:59.9435465Z                                                                              ^
2025-09-29T03:48:59.9435737Z src/core/GitUtils.h:30:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9436147Z     static std::string joinPaths(const std::string& path1, const std::string& path2);
2025-09-29T03:48:59.9436257Z                                                                                      ^
2025-09-29T03:48:59.9436533Z src/core/GitUtils.h:31:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9436690Z     static bool isAbsolutePath(const std::string& path);
2025-09-29T03:48:59.9436785Z                                                 ^
2025-09-29T03:48:59.9437059Z src/core/GitUtils.h:31:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9437208Z     static bool isAbsolutePath(const std::string& path);
2025-09-29T03:48:59.9437303Z                                                  ^
2025-09-29T03:48:59.9437573Z src/core/GitUtils.h:31:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9437719Z     static bool isAbsolutePath(const std::string& path);
2025-09-29T03:48:59.9437828Z                                                         ^
2025-09-29T03:48:59.9438214Z src/core/GitUtils.h:32:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9438487Z     static std::string makeRelativePath(const std::string& from, const std::string& to);
2025-09-29T03:48:59.9438588Z                                                          ^
2025-09-29T03:48:59.9438850Z src/core/GitUtils.h:32:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9439252Z     static std::string makeRelativePath(const std::string& from, const std::string& to);
2025-09-29T03:48:59.9439367Z                                                           ^
2025-09-29T03:48:59.9439631Z src/core/GitUtils.h:32:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9439893Z     static std::string makeRelativePath(const std::string& from, const std::string& to);
2025-09-29T03:48:59.9439998Z                                                                 ^
2025-09-29T03:48:59.9440267Z src/core/GitUtils.h:32:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9440526Z     static std::string makeRelativePath(const std::string& from, const std::string& to);
2025-09-29T03:48:59.9440639Z                                                                                   ^
2025-09-29T03:48:59.9440902Z src/core/GitUtils.h:32:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9441167Z     static std::string makeRelativePath(const std::string& from, const std::string& to);
2025-09-29T03:48:59.9441278Z                                                                                    ^
2025-09-29T03:48:59.9441540Z src/core/GitUtils.h:32:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9441800Z     static std::string makeRelativePath(const std::string& from, const std::string& to);
2025-09-29T03:48:59.9441919Z                                                                                         ^
2025-09-29T03:48:59.9442183Z src/core/GitUtils.h:34:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9442292Z     // Git-specific utilities
2025-09-29T03:48:59.9442381Z                              ^
2025-09-29T03:48:59.9442644Z src/core/GitUtils.h:35:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9442858Z     static std::string shortenHash(const std::string& hash, int length = 7);
2025-09-29T03:48:59.9442963Z                                                     ^
2025-09-29T03:48:59.9443225Z src/core/GitUtils.h:35:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9443438Z     static std::string shortenHash(const std::string& hash, int length = 7);
2025-09-29T03:48:59.9443537Z                                                      ^
2025-09-29T03:48:59.9443798Z src/core/GitUtils.h:35:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9444140Z     static std::string shortenHash(const std::string& hash, int length = 7);
2025-09-29T03:48:59.9444255Z                                                                             ^
2025-09-29T03:48:59.9444521Z src/core/GitUtils.h:36:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9444662Z     static bool isValidHash(const std::string& hash);
2025-09-29T03:48:59.9444763Z                                              ^
2025-09-29T03:48:59.9445029Z src/core/GitUtils.h:36:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9445167Z     static bool isValidHash(const std::string& hash);
2025-09-29T03:48:59.9445271Z                                               ^
2025-09-29T03:48:59.9445529Z src/core/GitUtils.h:36:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9445660Z     static bool isValidHash(const std::string& hash);
2025-09-29T03:48:59.9445766Z                                                      ^
2025-09-29T03:48:59.9446025Z src/core/GitUtils.h:37:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9446304Z     static std::string formatCommitMessage(const std::string& message, int maxLength = 50);
2025-09-29T03:48:59.9446410Z                                                             ^
2025-09-29T03:48:59.9446671Z src/core/GitUtils.h:37:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9447033Z     static std::string formatCommitMessage(const std::string& message, int maxLength = 50);
2025-09-29T03:48:59.9447146Z                                                              ^
2025-09-29T03:48:59.9447411Z src/core/GitUtils.h:37:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9447679Z     static std::string formatCommitMessage(const std::string& message, int maxLength = 50);
2025-09-29T03:48:59.9447800Z                                                                       ^
2025-09-29T03:48:59.9448188Z src/core/GitUtils.h:37:92: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9448456Z     static std::string formatCommitMessage(const std::string& message, int maxLength = 50);
2025-09-29T03:48:59.9448565Z                                                                                            ^
2025-09-29T03:48:59.9448830Z src/core/GitUtils.h:38:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9449087Z     static std::string formatAuthor(const std::string& name, const std::string& email);
2025-09-29T03:48:59.9449183Z                                                      ^
2025-09-29T03:48:59.9449450Z src/core/GitUtils.h:38:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9449694Z     static std::string formatAuthor(const std::string& name, const std::string& email);
2025-09-29T03:48:59.9449797Z                                                       ^
2025-09-29T03:48:59.9450065Z src/core/GitUtils.h:38:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9450310Z     static std::string formatAuthor(const std::string& name, const std::string& email);
2025-09-29T03:48:59.9450410Z                                                             ^
2025-09-29T03:48:59.9450676Z src/core/GitUtils.h:38:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9450921Z     static std::string formatAuthor(const std::string& name, const std::string& email);
2025-09-29T03:48:59.9451034Z                                                                               ^
2025-09-29T03:48:59.9451299Z src/core/GitUtils.h:38:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9451540Z     static std::string formatAuthor(const std::string& name, const std::string& email);
2025-09-29T03:48:59.9451796Z                                                                                ^
2025-09-29T03:48:59.9452064Z src/core/GitUtils.h:38:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9452307Z     static std::string formatAuthor(const std::string& name, const std::string& email);
2025-09-29T03:48:59.9452417Z                                                                                        ^
2025-09-29T03:48:59.9452683Z src/core/GitUtils.h:39:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9452977Z     static std::string formatTimestamp(const std::chrono::system_clock::time_point& timestamp);
2025-09-29T03:48:59.9453065Z                       ^
2025-09-29T03:48:59.9453335Z src/core/GitUtils.h:39:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9453617Z     static std::string formatTimestamp(const std::chrono::system_clock::time_point& timestamp);
2025-09-29T03:48:59.9453731Z                                                                                   ^
2025-09-29T03:48:59.9454005Z src/core/GitUtils.h:39:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9454282Z     static std::string formatTimestamp(const std::chrono::system_clock::time_point& timestamp);
2025-09-29T03:48:59.9454392Z                                                                                    ^
2025-09-29T03:48:59.9454661Z src/core/GitUtils.h:39:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9455061Z     static std::string formatTimestamp(const std::chrono::system_clock::time_point& timestamp);
2025-09-29T03:48:59.9455184Z                                                                                                ^
2025-09-29T03:48:59.9455453Z src/core/GitUtils.h:40:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9455752Z     static std::string formatRelativeTime(const std::chrono::system_clock::time_point& timestamp);
2025-09-29T03:48:59.9455842Z                       ^
2025-09-29T03:48:59.9456103Z src/core/GitUtils.h:40:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9456403Z     static std::string formatRelativeTime(const std::chrono::system_clock::time_point& timestamp);
2025-09-29T03:48:59.9456515Z                                                                                      ^
2025-09-29T03:48:59.9456775Z src/core/GitUtils.h:40:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9457075Z     static std::string formatRelativeTime(const std::chrono::system_clock::time_point& timestamp);
2025-09-29T03:48:59.9457183Z                                                                                       ^
2025-09-29T03:48:59.9457446Z src/core/GitUtils.h:40:99: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9457741Z     static std::string formatRelativeTime(const std::chrono::system_clock::time_point& timestamp);
2025-09-29T03:48:59.9457980Z                                                                                                   ^
2025-09-29T03:48:59.9458248Z src/core/GitUtils.h:41:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9458398Z     static std::string formatFileSize(size_t bytes);
2025-09-29T03:48:59.9458494Z                                                     ^
2025-09-29T03:48:59.9458755Z src/core/GitUtils.h:43:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9458863Z     // Branch name utilities
2025-09-29T03:48:59.9458949Z                             ^
2025-09-29T03:48:59.9459219Z src/core/GitUtils.h:44:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9459384Z     static bool isValidBranchName(const std::string& name);
2025-09-29T03:48:59.9459483Z                                                    ^
2025-09-29T03:48:59.9459883Z src/core/GitUtils.h:44:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9460043Z     static bool isValidBranchName(const std::string& name);
2025-09-29T03:48:59.9460137Z                                                     ^
2025-09-29T03:48:59.9460395Z src/core/GitUtils.h:44:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9460553Z     static bool isValidBranchName(const std::string& name);
2025-09-29T03:48:59.9460654Z                                                            ^
2025-09-29T03:48:59.9460917Z src/core/GitUtils.h:45:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9461104Z     static std::string sanitizeBranchName(const std::string& name);
2025-09-29T03:48:59.9461207Z                                                            ^
2025-09-29T03:48:59.9461467Z src/core/GitUtils.h:45:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9461650Z     static std::string sanitizeBranchName(const std::string& name);
2025-09-29T03:48:59.9461753Z                                                             ^
2025-09-29T03:48:59.9462014Z src/core/GitUtils.h:45:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9462189Z     static std::string sanitizeBranchName(const std::string& name);
2025-09-29T03:48:59.9462301Z                                                                    ^
2025-09-29T03:48:59.9462686Z src/core/GitUtils.h:46:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9462886Z     static std::string getShortBranchName(const std::string& fullName);
2025-09-29T03:48:59.9462988Z                                                            ^
2025-09-29T03:48:59.9463246Z src/core/GitUtils.h:46:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9463439Z     static std::string getShortBranchName(const std::string& fullName);
2025-09-29T03:48:59.9463555Z                                                             ^
2025-09-29T03:48:59.9463816Z src/core/GitUtils.h:46:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9464007Z     static std::string getShortBranchName(const std::string& fullName);
2025-09-29T03:48:59.9464122Z                                                                        ^
2025-09-29T03:48:59.9464382Z src/core/GitUtils.h:47:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9464561Z     static bool isRemoteBranch(const std::string& branchName);
2025-09-29T03:48:59.9464666Z                                                 ^
2025-09-29T03:48:59.9464927Z src/core/GitUtils.h:47:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9465092Z     static bool isRemoteBranch(const std::string& branchName);
2025-09-29T03:48:59.9465190Z                                                  ^
2025-09-29T03:48:59.9465459Z src/core/GitUtils.h:47:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9465628Z     static bool isRemoteBranch(const std::string& branchName);
2025-09-29T03:48:59.9465731Z                                                               ^
2025-09-29T03:48:59.9465998Z src/core/GitUtils.h:48:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9466207Z     static std::string getRemoteFromBranch(const std::string& branchName);
2025-09-29T03:48:59.9466309Z                                                             ^
2025-09-29T03:48:59.9466574Z src/core/GitUtils.h:48:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9466778Z     static std::string getRemoteFromBranch(const std::string& branchName);
2025-09-29T03:48:59.9466875Z                                                              ^
2025-09-29T03:48:59.9467143Z src/core/GitUtils.h:48:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9467442Z     static std::string getRemoteFromBranch(const std::string& branchName);
2025-09-29T03:48:59.9467549Z                                                                           ^
2025-09-29T03:48:59.9467819Z src/core/GitUtils.h:50:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9468021Z     // URL utilities
2025-09-29T03:48:59.9468105Z                     ^
2025-09-29T03:48:59.9468371Z src/core/GitUtils.h:51:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9468524Z     static bool isValidGitUrl(const std::string& url);
2025-09-29T03:48:59.9468620Z                                                ^
2025-09-29T03:48:59.9468879Z src/core/GitUtils.h:51:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9469024Z     static bool isValidGitUrl(const std::string& url);
2025-09-29T03:48:59.9469117Z                                                 ^
2025-09-29T03:48:59.9469383Z src/core/GitUtils.h:51:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9469525Z     static bool isValidGitUrl(const std::string& url);
2025-09-29T03:48:59.9469624Z                                                       ^
2025-09-29T03:48:59.9469885Z src/core/GitUtils.h:52:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9470089Z     static std::string extractRepoNameFromUrl(const std::string& url);
2025-09-29T03:48:59.9470330Z                                                                ^
2025-09-29T03:48:59.9470597Z src/core/GitUtils.h:52:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9470799Z     static std::string extractRepoNameFromUrl(const std::string& url);
2025-09-29T03:48:59.9470903Z                                                                 ^
2025-09-29T03:48:59.9471166Z src/core/GitUtils.h:52:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9471367Z     static std::string extractRepoNameFromUrl(const std::string& url);
2025-09-29T03:48:59.9471469Z                                                                       ^
2025-09-29T03:48:59.9471766Z src/core/GitUtils.h:53:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9471943Z     static std::string normalizeGitUrl(const std::string& url);
2025-09-29T03:48:59.9472122Z                                                         ^
2025-09-29T03:48:59.9472427Z src/core/GitUtils.h:53:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9472632Z     static std::string normalizeGitUrl(const std::string& url);
2025-09-29T03:48:59.9472988Z                                                          ^
2025-09-29T03:48:59.9473351Z src/core/GitUtils.h:53:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9473556Z     static std::string normalizeGitUrl(const std::string& url);
2025-09-29T03:48:59.9473702Z                                                                ^
2025-09-29T03:48:59.9474047Z src/core/GitUtils.h:54:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9474220Z     static bool isHttpsUrl(const std::string& url);
2025-09-29T03:48:59.9474336Z                                             ^
2025-09-29T03:48:59.9474785Z src/core/GitUtils.h:54:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9474962Z     static bool isHttpsUrl(const std::string& url);
2025-09-29T03:48:59.9475103Z                                              ^
2025-09-29T03:48:59.9475450Z src/core/GitUtils.h:54:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9475619Z     static bool isHttpsUrl(const std::string& url);
2025-09-29T03:48:59.9475736Z                                                    ^
2025-09-29T03:48:59.9476203Z src/core/GitUtils.h:55:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9476535Z     static bool isSshUrl(const std::string& url);
2025-09-29T03:48:59.9476671Z                                           ^
2025-09-29T03:48:59.9477028Z src/core/GitUtils.h:55:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9477195Z     static bool isSshUrl(const std::string& url);
2025-09-29T03:48:59.9477311Z                                            ^
2025-09-29T03:48:59.9477759Z src/core/GitUtils.h:55:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9478221Z     static bool isSshUrl(const std::string& url);
2025-09-29T03:48:59.9478431Z                                                  ^
2025-09-29T03:48:59.9478767Z src/core/GitUtils.h:57:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9478942Z     // Diff utilities
2025-09-29T03:48:59.9479087Z                      ^
2025-09-29T03:48:59.9479498Z src/core/GitUtils.h:58:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9479796Z     static std::string colorizeGitDiff(const std::string& diff);
2025-09-29T03:48:59.9479921Z                                                         ^
2025-09-29T03:48:59.9489787Z src/core/GitUtils.h:58:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9490036Z     static std::string colorizeGitDiff(const std::string& diff);
2025-09-29T03:48:59.9490146Z                                                          ^
2025-09-29T03:48:59.9490665Z src/core/GitUtils.h:58:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9490875Z     static std::string colorizeGitDiff(const std::string& diff);
2025-09-29T03:48:59.9490987Z                                                                 ^
2025-09-29T03:48:59.9491288Z src/core/GitUtils.h:59:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9491457Z     static int countLinesAdded(const std::string& diff);
2025-09-29T03:48:59.9491564Z                                                 ^
2025-09-29T03:48:59.9491845Z src/core/GitUtils.h:59:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9491997Z     static int countLinesAdded(const std::string& diff);
2025-09-29T03:48:59.9492099Z                                                  ^
2025-09-29T03:48:59.9492359Z src/core/GitUtils.h:59:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9492512Z     static int countLinesAdded(const std::string& diff);
2025-09-29T03:48:59.9492614Z                                                         ^
2025-09-29T03:48:59.9492873Z src/core/GitUtils.h:60:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9493036Z     static int countLinesRemoved(const std::string& diff);
2025-09-29T03:48:59.9493129Z                                                   ^
2025-09-29T03:48:59.9493403Z src/core/GitUtils.h:60:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9493562Z     static int countLinesRemoved(const std::string& diff);
2025-09-29T03:48:59.9493659Z                                                    ^
2025-09-29T03:48:59.9493918Z src/core/GitUtils.h:60:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9494064Z     static int countLinesRemoved(const std::string& diff);
2025-09-29T03:48:59.9494170Z                                                           ^
2025-09-29T03:48:59.9494434Z src/core/GitUtils.h:61:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9494611Z     static std::string extractHunkHeader(const std::string& line);
2025-09-29T03:48:59.9494713Z                                                           ^
2025-09-29T03:48:59.9494969Z src/core/GitUtils.h:61:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9495283Z     static std::string extractHunkHeader(const std::string& line);
2025-09-29T03:48:59.9495393Z                                                            ^
2025-09-29T03:48:59.9495665Z src/core/GitUtils.h:61:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9495842Z     static std::string extractHunkHeader(const std::string& line);
2025-09-29T03:48:59.9495953Z                                                                   ^
2025-09-29T03:48:59.9496228Z src/core/GitUtils.h:63:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9496331Z     // Configuration utilities
2025-09-29T03:48:59.9496423Z                               ^
2025-09-29T03:48:59.9496685Z src/core/GitUtils.h:64:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9496850Z     static std::string getGitConfigPath(bool global = false);
2025-09-29T03:48:59.9496951Z                                                              ^
2025-09-29T03:48:59.9497223Z src/core/GitUtils.h:65:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9497408Z     static std::string escapeShellArgument(const std::string& arg);
2025-09-29T03:48:59.9497505Z                                                             ^
2025-09-29T03:48:59.9497768Z src/core/GitUtils.h:65:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9498153Z     static std::string escapeShellArgument(const std::string& arg);
2025-09-29T03:48:59.9498396Z                                                              ^
2025-09-29T03:48:59.9498672Z src/core/GitUtils.h:65:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9498847Z     static std::string escapeShellArgument(const std::string& arg);
2025-09-29T03:48:59.9498953Z                                                                    ^
2025-09-29T03:48:59.9499226Z src/core/GitUtils.h:66:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9499458Z     static std::vector<std::string> parseGitConfigLine(const std::string& line);
2025-09-29T03:48:59.9499570Z                                                                         ^
2025-09-29T03:48:59.9499840Z src/core/GitUtils.h:66:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9500056Z     static std::vector<std::string> parseGitConfigLine(const std::string& line);
2025-09-29T03:48:59.9500164Z                                                                          ^
2025-09-29T03:48:59.9500439Z src/core/GitUtils.h:66:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9500648Z     static std::vector<std::string> parseGitConfigLine(const std::string& line);
2025-09-29T03:48:59.9500753Z                                                                                 ^
2025-09-29T03:48:59.9501018Z src/core/GitUtils.h:68:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9501119Z     // Validation utilities
2025-09-29T03:48:59.9501204Z                            ^
2025-09-29T03:48:59.9501459Z src/core/GitUtils.h:69:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9501607Z     static bool isValidEmail(const std::string& email);
2025-09-29T03:48:59.9501704Z                                               ^
2025-09-29T03:48:59.9501960Z src/core/GitUtils.h:69:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9502111Z     static bool isValidEmail(const std::string& email);
2025-09-29T03:48:59.9502207Z                                                ^
2025-09-29T03:48:59.9502463Z src/core/GitUtils.h:69:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9502602Z     static bool isValidEmail(const std::string& email);
2025-09-29T03:48:59.9502701Z                                                        ^
2025-09-29T03:48:59.9503229Z src/core/GitUtils.h:70:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9503420Z     static bool isValidCommitMessage(const std::string& message);
2025-09-29T03:48:59.9503515Z                                                       ^
2025-09-29T03:48:59.9503770Z src/core/GitUtils.h:70:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9503955Z     static bool isValidCommitMessage(const std::string& message);
2025-09-29T03:48:59.9504052Z                                                        ^
2025-09-29T03:48:59.9504314Z src/core/GitUtils.h:70:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9504487Z     static bool isValidCommitMessage(const std::string& message);
2025-09-29T03:48:59.9504598Z                                                                  ^
2025-09-29T03:48:59.9504857Z src/core/GitUtils.h:71:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9505016Z     static bool isBinaryFile(const std::string& filePath);
2025-09-29T03:48:59.9505113Z                                               ^
2025-09-29T03:48:59.9505371Z src/core/GitUtils.h:71:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9505521Z     static bool isBinaryFile(const std::string& filePath);
2025-09-29T03:48:59.9505619Z                                                ^
2025-09-29T03:48:59.9505877Z src/core/GitUtils.h:71:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9506113Z     static bool isBinaryFile(const std::string& filePath);
2025-09-29T03:48:59.9506227Z                                                           ^
2025-09-29T03:48:59.9506485Z src/core/GitUtils.h:72:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9506684Z     static std::string detectFileEncoding(const std::string& filePath);
2025-09-29T03:48:59.9506792Z                                                            ^
2025-09-29T03:48:59.9507057Z src/core/GitUtils.h:72:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9507247Z     static std::string detectFileEncoding(const std::string& filePath);
2025-09-29T03:48:59.9507352Z                                                             ^
2025-09-29T03:48:59.9507608Z src/core/GitUtils.h:72:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9507793Z     static std::string detectFileEncoding(const std::string& filePath);
2025-09-29T03:48:59.9508030Z                                                                        ^
2025-09-29T03:48:59.9508299Z src/core/GitUtils.h:74:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9508405Z     // Progress and status utilities
2025-09-29T03:48:59.9508495Z                                     ^
2025-09-29T03:48:59.9508757Z src/core/GitUtils.h:75:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9509055Z     static std::string formatProgress(int current, int total, const std::string& operation = "");
2025-09-29T03:48:59.9509154Z                                                              ^
2025-09-29T03:48:59.9509426Z src/core/GitUtils.h:75:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9509710Z     static std::string formatProgress(int current, int total, const std::string& operation = "");
2025-09-29T03:48:59.9509822Z                                                                                ^
2025-09-29T03:48:59.9510086Z src/core/GitUtils.h:75:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9510363Z     static std::string formatProgress(int current, int total, const std::string& operation = "");
2025-09-29T03:48:59.9510470Z                                                                                 ^
2025-09-29T03:48:59.9510729Z src/core/GitUtils.h:75:98: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9511150Z     static std::string formatProgress(int current, int total, const std::string& operation = "");
2025-09-29T03:48:59.9511267Z                                                                                                  ^
2025-09-29T03:48:59.9511528Z src/core/GitUtils.h:76:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9511708Z     static std::string formatTransferSpeed(size_t bytesPerSecond);
2025-09-29T03:48:59.9511814Z                                                                   ^
2025-09-29T03:48:59.9512078Z src/core/GitUtils.h:77:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9512302Z     static std::string formatDuration(const std::chrono::milliseconds& duration);
2025-09-29T03:48:59.9512407Z                                                                      ^
2025-09-29T03:48:59.9512668Z src/core/GitUtils.h:77:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9512896Z     static std::string formatDuration(const std::chrono::milliseconds& duration);
2025-09-29T03:48:59.9512997Z                                                                       ^
2025-09-29T03:48:59.9513257Z src/core/GitUtils.h:77:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9513477Z     static std::string formatDuration(const std::chrono::milliseconds& duration);
2025-09-29T03:48:59.9513708Z                                                                                  ^
2025-09-29T03:48:59.9513985Z src/core/GitUtils.h:79:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9514071Z private:
2025-09-29T03:48:59.9514150Z         ^
2025-09-29T03:48:59.9514408Z src/core/GitUtils.h:80:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9514538Z     static const std::string WHITESPACE_CHARS;
2025-09-29T03:48:59.9514637Z                                               ^
2025-09-29T03:48:59.9514892Z src/core/GitUtils.h:81:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9515064Z     static const std::vector<std::string> INVALID_BRANCH_CHARS;
2025-09-29T03:48:59.9515166Z                                                                ^
2025-09-29T03:48:59.9515427Z src/core/GitUtils.h:85:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9515516Z }
2025-09-29T03:48:59.9515591Z  ^
2025-09-29T03:48:59.9586700Z src/core/GitTypes.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9586853Z #include <string>
2025-09-29T03:48:59.9586972Z ^
2025-09-29T03:48:59.9587420Z src/core/GitTypes.h:11:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9587568Z enum class FileStatus {
2025-09-29T03:48:59.9587707Z                        ^
2025-09-29T03:48:59.9588312Z src/core/GitTypes.h:12:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9588455Z     Untracked,
2025-09-29T03:48:59.9588598Z               ^
2025-09-29T03:48:59.9589019Z src/core/GitTypes.h:13:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9589142Z     Modified,
2025-09-29T03:48:59.9589268Z              ^
2025-09-29T03:48:59.9589697Z src/core/GitTypes.h:14:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9589820Z     Added,
2025-09-29T03:48:59.9589947Z           ^
2025-09-29T03:48:59.9590370Z src/core/GitTypes.h:15:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9590492Z     Deleted,
2025-09-29T03:48:59.9590610Z             ^
2025-09-29T03:48:59.9591027Z src/core/GitTypes.h:16:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9591148Z     Renamed,
2025-09-29T03:48:59.9591265Z             ^
2025-09-29T03:48:59.9591904Z src/core/GitTypes.h:17:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9592026Z     Copied,
2025-09-29T03:48:59.9592143Z            ^
2025-09-29T03:48:59.9592559Z src/core/GitTypes.h:18:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9592692Z     Conflicted,
2025-09-29T03:48:59.9592810Z                ^
2025-09-29T03:48:59.9593222Z src/core/GitTypes.h:22:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9593371Z enum class ChangeType {
2025-09-29T03:48:59.9593518Z                        ^
2025-09-29T03:48:59.9593931Z src/core/GitTypes.h:23:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9594059Z     Addition,
2025-09-29T03:48:59.9594177Z              ^
2025-09-29T03:48:59.9594589Z src/core/GitTypes.h:24:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9594716Z     Deletion,
2025-09-29T03:48:59.9594840Z              ^
2025-09-29T03:48:59.9595251Z src/core/GitTypes.h:25:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9595377Z     Modification
2025-09-29T03:48:59.9595505Z                 ^
2025-09-29T03:48:59.9595917Z src/core/GitTypes.h:28:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9596050Z struct GitCommit {
2025-09-29T03:48:59.9596175Z                   ^
2025-09-29T03:48:59.9596587Z src/core/GitTypes.h:29:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9596937Z     std::string hash;
2025-09-29T03:48:59.9597077Z                      ^
2025-09-29T03:48:59.9597490Z src/core/GitTypes.h:30:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9597637Z     std::string shortHash;
2025-09-29T03:48:59.9597764Z                           ^
2025-09-29T03:48:59.9598391Z src/core/GitTypes.h:31:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9598550Z     std::string author;
2025-09-29T03:48:59.9598677Z                        ^
2025-09-29T03:48:59.9599100Z src/core/GitTypes.h:32:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9599238Z     std::string email;
2025-09-29T03:48:59.9599364Z                       ^
2025-09-29T03:48:59.9599785Z src/core/GitTypes.h:33:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9599925Z     std::string message;
2025-09-29T03:48:59.9600055Z                         ^
2025-09-29T03:48:59.9600481Z src/core/GitTypes.h:34:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9600633Z     std::string shortMessage;
2025-09-29T03:48:59.9600767Z                              ^
2025-09-29T03:48:59.9601180Z src/core/GitTypes.h:35:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9601402Z     std::chrono::system_clock::time_point timestamp;
2025-09-29T03:48:59.9601561Z                                                     ^
2025-09-29T03:48:59.9601982Z src/core/GitTypes.h:36:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9602173Z     std::vector<std::string> parentHashes;
2025-09-29T03:48:59.9602313Z                                           ^
2025-09-29T03:48:59.9602753Z src/core/GitTypes.h:40:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9602892Z struct GitBranch {
2025-09-29T03:48:59.9603010Z                   ^
2025-09-29T03:48:59.9603464Z src/core/GitTypes.h:41:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9603608Z     std::string name;
2025-09-29T03:48:59.9603734Z                      ^
2025-09-29T03:48:59.9604146Z src/core/GitTypes.h:42:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9604295Z     std::string fullName;
2025-09-29T03:48:59.9604422Z                          ^
2025-09-29T03:48:59.9605021Z src/core/GitTypes.h:43:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9605155Z     bool isRemote;
2025-09-29T03:48:59.9605274Z                   ^
2025-09-29T03:48:59.9605687Z src/core/GitTypes.h:44:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9605815Z     bool isCurrent;
2025-09-29T03:48:59.9605944Z                    ^
2025-09-29T03:48:59.9606358Z src/core/GitTypes.h:45:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9606518Z     std::string upstreamBranch;
2025-09-29T03:48:59.9606660Z                                ^
2025-09-29T03:48:59.9607074Z src/core/GitTypes.h:46:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9607212Z     int aheadCount = 0;
2025-09-29T03:48:59.9607343Z                        ^
2025-09-29T03:48:59.9607753Z src/core/GitTypes.h:47:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9608065Z     int behindCount = 0;
2025-09-29T03:48:59.9608194Z                         ^
2025-09-29T03:48:59.9608615Z src/core/GitTypes.h:51:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9608746Z struct GitRemote {
2025-09-29T03:48:59.9608865Z                   ^
2025-09-29T03:48:59.9609285Z src/core/GitTypes.h:52:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9609420Z     std::string name;
2025-09-29T03:48:59.9609550Z                      ^
2025-09-29T03:48:59.9610156Z src/core/GitTypes.h:53:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9610293Z     std::string url;
2025-09-29T03:48:59.9610416Z                     ^
2025-09-29T03:48:59.9610828Z src/core/GitTypes.h:57:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9610974Z struct GitFileChange {
2025-09-29T03:48:59.9611096Z                       ^
2025-09-29T03:48:59.9611514Z src/core/GitTypes.h:58:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9611662Z     std::string filePath;
2025-09-29T03:48:59.9611789Z                          ^
2025-09-29T03:48:59.9612199Z src/core/GitTypes.h:59:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9612342Z     std::string oldPath;
2025-09-29T03:48:59.9612466Z                         ^
2025-09-29T03:48:59.9612874Z src/core/GitTypes.h:60:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9613020Z     FileStatus status;
2025-09-29T03:48:59.9613149Z                       ^
2025-09-29T03:48:59.9613568Z src/core/GitTypes.h:61:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9613695Z     bool isStaged;
2025-09-29T03:48:59.9613818Z                   ^
2025-09-29T03:48:59.9614232Z src/core/GitTypes.h:62:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9614380Z     size_t linesAdded = 0;
2025-09-29T03:48:59.9614512Z                           ^
2025-09-29T03:48:59.9614923Z src/core/GitTypes.h:66:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9615059Z struct GitDiffLine {
2025-09-29T03:48:59.9615181Z                     ^
2025-09-29T03:48:59.9615596Z src/core/GitTypes.h:67:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9615840Z     enum class Type { Context, Addition, Deletion, Header };
2025-09-29T03:48:59.9616005Z                                                             ^
2025-09-29T03:48:59.9616427Z src/core/GitTypes.h:68:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9616555Z     Type type;
2025-09-29T03:48:59.9616673Z               ^
2025-09-29T03:48:59.9617089Z src/core/GitTypes.h:69:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9617229Z     std::string content;
2025-09-29T03:48:59.9617575Z                         ^
2025-09-29T03:48:59.9618143Z src/core/GitTypes.h:70:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9618305Z     int oldLineNumber = -1;
2025-09-29T03:48:59.9618434Z                            ^
2025-09-29T03:48:59.9618851Z src/core/GitTypes.h:74:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9618996Z struct GitDiffHunk {
2025-09-29T03:48:59.9619122Z                     ^
2025-09-29T03:48:59.9619473Z src/core/GitTypes.h:75:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9619564Z     std::string header;
2025-09-29T03:48:59.9619642Z                        ^
2025-09-29T03:48:59.9619878Z src/core/GitTypes.h:76:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9619978Z     std::vector<GitDiffLine> lines;
2025-09-29T03:48:59.9620066Z                                    ^
2025-09-29T03:48:59.9620311Z src/core/GitTypes.h:77:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9620388Z     int oldStart;
2025-09-29T03:48:59.9620464Z                  ^
2025-09-29T03:48:59.9620697Z src/core/GitTypes.h:78:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9620771Z     int oldCount;
2025-09-29T03:48:59.9620844Z                  ^
2025-09-29T03:48:59.9621076Z src/core/GitTypes.h:79:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9621151Z     int newStart;
2025-09-29T03:48:59.9621359Z                  ^
2025-09-29T03:48:59.9621627Z src/core/GitTypes.h:83:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9621707Z struct GitDiff {
2025-09-29T03:48:59.9621805Z                 ^
2025-09-29T03:48:59.9622049Z src/core/GitTypes.h:84:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9622136Z     std::string filePath;
2025-09-29T03:48:59.9622223Z                          ^
2025-09-29T03:48:59.9622467Z src/core/GitTypes.h:85:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9622550Z     std::string oldPath;
2025-09-29T03:48:59.9622622Z                         ^
2025-09-29T03:48:59.9622863Z src/core/GitTypes.h:86:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9622948Z     bool isBinary = false;
2025-09-29T03:48:59.9623022Z                           ^
2025-09-29T03:48:59.9623267Z src/core/GitTypes.h:87:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9623350Z     bool isNewFile = false;
2025-09-29T03:48:59.9623427Z                            ^
2025-09-29T03:48:59.9623667Z src/core/GitTypes.h:88:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9623756Z     bool isDeletedFile = false;
2025-09-29T03:48:59.9623834Z                                ^
2025-09-29T03:48:59.9624074Z src/core/GitTypes.h:92:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9624160Z struct GitStatus {
2025-09-29T03:48:59.9624231Z                   ^
2025-09-29T03:48:59.9624462Z src/core/GitTypes.h:93:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9624559Z     std::string currentBranch;
2025-09-29T03:48:59.9624635Z                               ^
2025-09-29T03:48:59.9624870Z src/core/GitTypes.h:94:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9624968Z     std::string upstreamBranch;
2025-09-29T03:48:59.9625044Z                                ^
2025-09-29T03:48:59.9625278Z src/core/GitTypes.h:95:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9625358Z     int aheadCount = 0;
2025-09-29T03:48:59.9625437Z                        ^
2025-09-29T03:48:59.9625669Z src/core/GitTypes.h:96:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9625882Z     int behindCount = 0;
2025-09-29T03:48:59.9625961Z                         ^
2025-09-29T03:48:59.9626195Z src/core/GitTypes.h:97:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9626299Z     bool hasUncommittedChanges = false;
2025-09-29T03:48:59.9626388Z                                        ^
2025-09-29T03:48:59.9626622Z src/core/GitTypes.h:98:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9626718Z     bool hasUnstagedChanges = false;
2025-09-29T03:48:59.9626803Z                                     ^
2025-09-29T03:48:59.9627045Z src/core/GitTypes.h:99:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9627141Z     bool hasStagedChanges = false;
2025-09-29T03:48:59.9627220Z                                   ^
2025-09-29T03:48:59.9627470Z src/core/GitTypes.h:103:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9627560Z struct GitRepository {
2025-09-29T03:48:59.9627633Z                       ^
2025-09-29T03:48:59.9628095Z src/core/GitTypes.h:104:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9628185Z     std::string path;
2025-09-29T03:48:59.9628260Z                      ^
2025-09-29T03:48:59.9628510Z src/core/GitTypes.h:105:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9628609Z     std::string workingDirectory;
2025-09-29T03:48:59.9628686Z                                  ^
2025-09-29T03:48:59.9629071Z src/core/GitTypes.h:106:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9629176Z     std::string gitDirectory;
2025-09-29T03:48:59.9629253Z                              ^
2025-09-29T03:48:59.9629508Z src/core/GitTypes.h:107:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9629595Z     bool isBare = false;
2025-09-29T03:48:59.9629671Z                         ^
2025-09-29T03:48:59.9629920Z src/core/GitTypes.h:108:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9630005Z     bool isShallow = false;
2025-09-29T03:48:59.9630087Z                            ^
2025-09-29T03:48:59.9630326Z src/core/GitTypes.h:109:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9630406Z     std::string head;
2025-09-29T03:48:59.9630482Z                      ^
2025-09-29T03:48:59.9630728Z src/core/GitTypes.h:113:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9630804Z struct GitTag {
2025-09-29T03:48:59.9630876Z                ^
2025-09-29T03:48:59.9631114Z src/core/GitTypes.h:114:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9631193Z     std::string name;
2025-09-29T03:48:59.9631264Z                      ^
2025-09-29T03:48:59.9631510Z src/core/GitTypes.h:115:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9631595Z     std::string message;
2025-09-29T03:48:59.9631669Z                         ^
2025-09-29T03:48:59.9631915Z src/core/GitTypes.h:116:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9632005Z     std::string commitHash;
2025-09-29T03:48:59.9632080Z                            ^
2025-09-29T03:48:59.9632325Z src/core/GitTypes.h:117:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9632446Z     std::string date;  // Date string for display
2025-09-29T03:48:59.9632524Z                      ^
2025-09-29T03:48:59.9632777Z src/core/GitTypes.h:117:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9632898Z     std::string date;  // Date string for display
2025-09-29T03:48:59.9632988Z                                                  ^
2025-09-29T03:48:59.9633237Z src/core/GitTypes.h:118:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9633446Z     bool isAnnotated;
2025-09-29T03:48:59.9633519Z                      ^
2025-09-29T03:48:59.9633783Z src/core/GitTypes.h:122:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9633867Z struct GitStash {
2025-09-29T03:48:59.9633935Z                  ^
2025-09-29T03:48:59.9634182Z src/core/GitTypes.h:123:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9634267Z     std::string name;
2025-09-29T03:48:59.9634345Z                      ^
2025-09-29T03:48:59.9634592Z src/core/GitTypes.h:124:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9634675Z     std::string message;
2025-09-29T03:48:59.9634755Z                         ^
2025-09-29T03:48:59.9634992Z src/core/GitTypes.h:125:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9635072Z     std::string branch;
2025-09-29T03:48:59.9635148Z                        ^
2025-09-29T03:48:59.9635390Z src/core/GitTypes.h:126:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9635518Z     std::chrono::system_clock::time_point timestamp;
2025-09-29T03:48:59.9635615Z                                                     ^
2025-09-29T03:48:59.9635858Z src/core/GitTypes.h:130:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9635949Z enum class GitLogOptions {
2025-09-29T03:48:59.9636024Z                           ^
2025-09-29T03:48:59.9636358Z src/core/GitTypes.h:131:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9636432Z     None = 0,
2025-09-29T03:48:59.9636501Z              ^
2025-09-29T03:48:59.9636746Z src/core/GitTypes.h:132:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9636829Z     ShowMerges = 1 << 0,
2025-09-29T03:48:59.9636902Z                         ^
2025-09-29T03:48:59.9637147Z src/core/GitTypes.h:133:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9637245Z     FirstParentOnly = 1 << 1,
2025-09-29T03:48:59.9637321Z                              ^
2025-09-29T03:48:59.9637558Z src/core/GitTypes.h:134:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9637647Z     FollowRenames = 1 << 2,
2025-09-29T03:48:59.9637723Z                            ^
2025-09-29T03:48:59.9638106Z src/core/GitTypes.h:138:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9638313Z inline GitLogOptions operator|(GitLogOptions a, GitLogOptions b) {
2025-09-29T03:48:59.9638414Z                                                                   ^
2025-09-29T03:48:59.9638660Z src/core/GitTypes.h:142:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9638850Z inline GitLogOptions operator&(GitLogOptions a, GitLogOptions b) {
2025-09-29T03:48:59.9638941Z                                                                   ^
2025-09-29T03:48:59.9639192Z src/core/GitTypes.h:146:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9639268Z }
2025-09-29T03:48:59.9639372Z  ^
2025-09-29T03:48:59.9680606Z src/core/GitManager.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9680804Z #include "GitTypes.h"
2025-09-29T03:48:59.9680960Z ^
2025-09-29T03:48:59.9681531Z src/core/GitManager.h:12:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9681761Z enum class GitCommandResult {
2025-09-29T03:48:59.9681936Z                              ^
2025-09-29T03:48:59.9682494Z src/core/GitManager.h:13:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9682649Z     Success,
2025-09-29T03:48:59.9682805Z             ^
2025-09-29T03:48:59.9683358Z src/core/GitManager.h:14:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9683506Z     Failed,
2025-09-29T03:48:59.9683907Z            ^
2025-09-29T03:48:59.9684463Z src/core/GitManager.h:15:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9684619Z     NotFound,
2025-09-29T03:48:59.9684767Z              ^
2025-09-29T03:48:59.9685329Z src/core/GitManager.h:16:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9685512Z     InvalidRepository,
2025-09-29T03:48:59.9685671Z                       ^
2025-09-29T03:48:59.9686238Z src/core/GitManager.h:17:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9686401Z     NetworkError,
2025-09-29T03:48:59.9686552Z                  ^
2025-09-29T03:48:59.9687098Z src/core/GitManager.h:18:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9687288Z     PermissionDenied,
2025-09-29T03:48:59.9687443Z                      ^
2025-09-29T03:48:59.9688223Z src/core/GitManager.h:22:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9688440Z struct GitOperationResult {
2025-09-29T03:48:59.9688604Z                            ^
2025-09-29T03:48:59.9689156Z src/core/GitManager.h:23:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9689353Z     GitCommandResult result;
2025-09-29T03:48:59.9689508Z                             ^
2025-09-29T03:48:59.9689946Z src/core/GitManager.h:24:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9690098Z     std::string output;
2025-09-29T03:48:59.9690393Z                        ^
2025-09-29T03:48:59.9690844Z src/core/GitManager.h:25:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9690992Z     std::string error;
2025-09-29T03:48:59.9691118Z                       ^
2025-09-29T03:48:59.9691555Z src/core/GitManager.h:26:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9691692Z     int exitCode = 0;
2025-09-29T03:48:59.9691831Z                      ^
2025-09-29T03:48:59.9692269Z src/core/GitManager.h:28:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9692604Z     bool isSuccess() const { return result == GitCommandResult::Success; }
2025-09-29T03:48:59.9692785Z                                                                           ^
2025-09-29T03:48:59.9693229Z src/core/GitManager.h:32:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9693738Z using ProgressCallback = std::function<void(const std::string& operation, int current, int total)>;
2025-09-29T03:48:59.9693875Z                         ^
2025-09-29T03:48:59.9694318Z src/core/GitManager.h:32:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9694808Z using ProgressCallback = std::function<void(const std::string& operation, int current, int total)>;
2025-09-29T03:48:59.9694979Z                                                              ^
2025-09-29T03:48:59.9695429Z src/core/GitManager.h:32:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9695915Z using ProgressCallback = std::function<void(const std::string& operation, int current, int total)>;
2025-09-29T03:48:59.9696081Z                                                               ^
2025-09-29T03:48:59.9696521Z src/core/GitManager.h:33:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9696840Z using LogCallback = std::function<void(const std::string& message)>;
2025-09-29T03:48:59.9696999Z                                                         ^
2025-09-29T03:48:59.9697444Z src/core/GitManager.h:33:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9697752Z using LogCallback = std::function<void(const std::string& message)>;
2025-09-29T03:48:59.9698064Z                                                          ^
2025-09-29T03:48:59.9698519Z src/core/GitManager.h:36:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9698827Z public:
2025-09-29T03:48:59.9698948Z        ^
2025-09-29T03:48:59.9699418Z src/core/GitManager.h:37:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9699726Z     explicit GitManager(const std::string& repositoryPath = "");
2025-09-29T03:48:59.9699870Z                                          ^
2025-09-29T03:48:59.9700321Z src/core/GitManager.h:37:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9700613Z     explicit GitManager(const std::string& repositoryPath = "");
2025-09-29T03:48:59.9700759Z                                           ^
2025-09-29T03:48:59.9701197Z src/core/GitManager.h:37:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9701496Z     explicit GitManager(const std::string& repositoryPath = "");
2025-09-29T03:48:59.9701657Z                                                                 ^
2025-09-29T03:48:59.9702107Z src/core/GitManager.h:38:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9702247Z     ~GitManager();
2025-09-29T03:48:59.9702370Z                   ^
2025-09-29T03:48:59.9702815Z src/core/GitManager.h:40:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9702973Z     // Repository operations
2025-09-29T03:48:59.9703104Z                             ^
2025-09-29T03:48:59.9703704Z src/core/GitManager.h:41:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9704143Z     GitOperationResult initRepository(const std::string& path, bool bare = false);
2025-09-29T03:48:59.9704303Z                                                        ^
2025-09-29T03:48:59.9704749Z src/core/GitManager.h:41:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9705170Z     GitOperationResult initRepository(const std::string& path, bool bare = false);
2025-09-29T03:48:59.9705356Z                                                         ^
2025-09-29T03:48:59.9705796Z src/core/GitManager.h:41:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9706211Z     GitOperationResult initRepository(const std::string& path, bool bare = false);
2025-09-29T03:48:59.9706390Z                                                                                   ^
2025-09-29T03:48:59.9706832Z src/core/GitManager.h:42:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9707290Z     GitOperationResult cloneRepository(const std::string& url, const std::string& path, 
2025-09-29T03:48:59.9707428Z                       ^
2025-09-29T03:48:59.9708024Z src/core/GitManager.h:42:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9708473Z     GitOperationResult cloneRepository(const std::string& url, const std::string& path, 
2025-09-29T03:48:59.9708635Z                                                         ^
2025-09-29T03:48:59.9709080Z src/core/GitManager.h:42:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9709532Z     GitOperationResult cloneRepository(const std::string& url, const std::string& path, 
2025-09-29T03:48:59.9709695Z                                                          ^
2025-09-29T03:48:59.9710139Z src/core/GitManager.h:42:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9710590Z     GitOperationResult cloneRepository(const std::string& url, const std::string& path, 
2025-09-29T03:48:59.9710771Z                                                                                 ^
2025-09-29T03:48:59.9711226Z src/core/GitManager.h:42:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9711674Z     GitOperationResult cloneRepository(const std::string& url, const std::string& path, 
2025-09-29T03:48:59.9711850Z                                                                                  ^
2025-09-29T03:48:59.9712474Z src/core/GitManager.h:42:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9712921Z     GitOperationResult cloneRepository(const std::string& url, const std::string& path, 
2025-09-29T03:48:59.9713099Z                                                                                        ^
2025-09-29T03:48:59.9713543Z src/core/GitManager.h:43:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9713788Z                                      ProgressCallback progressCallback = nullptr);
2025-09-29T03:48:59.9713969Z                                                                                   ^
2025-09-29T03:48:59.9714409Z src/core/GitManager.h:44:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9714709Z     GitOperationResult openRepository(const std::string& path);
2025-09-29T03:48:59.9714868Z                                                        ^
2025-09-29T03:48:59.9715318Z src/core/GitManager.h:44:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9715613Z     GitOperationResult openRepository(const std::string& path);
2025-09-29T03:48:59.9715770Z                                                         ^
2025-09-29T03:48:59.9716218Z src/core/GitManager.h:44:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9716509Z     GitOperationResult openRepository(const std::string& path);
2025-09-29T03:48:59.9716827Z                                                                ^
2025-09-29T03:48:59.9717284Z src/core/GitManager.h:45:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9717535Z     bool isValidRepository(const std::string& path) const;
2025-09-29T03:48:59.9717683Z                                             ^
2025-09-29T03:48:59.9718315Z src/core/GitManager.h:45:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9718572Z     bool isValidRepository(const std::string& path) const;
2025-09-29T03:48:59.9718726Z                                              ^
2025-09-29T03:48:59.9719170Z src/core/GitManager.h:45:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9719414Z     bool isValidRepository(const std::string& path) const;
2025-09-29T03:48:59.9719573Z                                                           ^
2025-09-29T03:48:59.9720037Z src/core/GitManager.h:47:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9720181Z     // Repository info
2025-09-29T03:48:59.9720310Z                       ^
2025-09-29T03:48:59.9720753Z src/core/GitManager.h:48:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9720960Z     GitRepository getRepositoryInfo() const;
2025-09-29T03:48:59.9721104Z                                             ^
2025-09-29T03:48:59.9721555Z src/core/GitManager.h:49:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9721723Z     GitStatus getStatus() const;
2025-09-29T03:48:59.9721860Z                                 ^
2025-09-29T03:48:59.9722303Z src/core/GitManager.h:50:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9722488Z     std::string getCurrentBranch() const;
2025-09-29T03:48:59.9722632Z                                          ^
2025-09-29T03:48:59.9723080Z src/core/GitManager.h:51:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9723271Z     std::string getRepositoryPath() const;
2025-09-29T03:48:59.9723416Z                                           ^
2025-09-29T03:48:59.9723860Z src/core/GitManager.h:53:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9724006Z     // Commit operations
2025-09-29T03:48:59.9724146Z                         ^
2025-09-29T03:48:59.9724791Z src/core/GitManager.h:54:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9725146Z     GitOperationResult addFiles(const std::vector<std::string>& files);
2025-09-29T03:48:59.9725316Z                                                               ^
2025-09-29T03:48:59.9725762Z src/core/GitManager.h:54:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9726106Z     GitOperationResult addFiles(const std::vector<std::string>& files);
2025-09-29T03:48:59.9726285Z                                                                ^
2025-09-29T03:48:59.9726730Z src/core/GitManager.h:54:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9727070Z     GitOperationResult addFiles(const std::vector<std::string>& files);
2025-09-29T03:48:59.9727275Z                                                                        ^
2025-09-29T03:48:59.9727721Z src/core/GitManager.h:55:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9728112Z     GitOperationResult addAllFiles();
2025-09-29T03:48:59.9728259Z                                      ^
2025-09-29T03:48:59.9728708Z src/core/GitManager.h:56:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9729187Z     GitOperationResult removeFiles(const std::vector<std::string>& files, bool cached = false);
2025-09-29T03:48:59.9729360Z                                                                  ^
2025-09-29T03:48:59.9729991Z src/core/GitManager.h:56:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9730474Z     GitOperationResult removeFiles(const std::vector<std::string>& files, bool cached = false);
2025-09-29T03:48:59.9730648Z                                                                   ^
2025-09-29T03:48:59.9731097Z src/core/GitManager.h:56:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9731580Z     GitOperationResult removeFiles(const std::vector<std::string>& files, bool cached = false);
2025-09-29T03:48:59.9731760Z                                                                          ^
2025-09-29T03:48:59.9732208Z src/core/GitManager.h:56:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9732684Z     GitOperationResult removeFiles(const std::vector<std::string>& files, bool cached = false);
2025-09-29T03:48:59.9732882Z                                                                                                ^
2025-09-29T03:48:59.9733336Z src/core/GitManager.h:57:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9733697Z     GitOperationResult resetFiles(const std::vector<std::string>& files);
2025-09-29T03:48:59.9733870Z                                                                 ^
2025-09-29T03:48:59.9734320Z src/core/GitManager.h:57:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9734684Z     GitOperationResult resetFiles(const std::vector<std::string>& files);
2025-09-29T03:48:59.9734855Z                                                                  ^
2025-09-29T03:48:59.9735305Z src/core/GitManager.h:57:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9735658Z     GitOperationResult resetFiles(const std::vector<std::string>& files);
2025-09-29T03:48:59.9735832Z                                                                          ^
2025-09-29T03:48:59.9736288Z src/core/GitManager.h:58:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9736644Z     GitOperationResult resetHard(const std::string& commitHash = "HEAD");
2025-09-29T03:48:59.9736803Z                                                   ^
2025-09-29T03:48:59.9737252Z src/core/GitManager.h:58:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9737603Z     GitOperationResult resetHard(const std::string& commitHash = "HEAD");
2025-09-29T03:48:59.9738084Z                                                    ^
2025-09-29T03:48:59.9738541Z src/core/GitManager.h:58:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9738897Z     GitOperationResult resetHard(const std::string& commitHash = "HEAD");
2025-09-29T03:48:59.9739072Z                                                                          ^
2025-09-29T03:48:59.9739523Z src/core/GitManager.h:59:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9739921Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-09-29T03:48:59.9740077Z                                                ^
2025-09-29T03:48:59.9740535Z src/core/GitManager.h:59:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9740916Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-09-29T03:48:59.9741075Z                                                 ^
2025-09-29T03:48:59.9741534Z src/core/GitManager.h:59:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9741912Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-09-29T03:48:59.9742090Z                                                                               ^
2025-09-29T03:48:59.9742548Z src/core/GitManager.h:60:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9743102Z     GitOperationResult commitWithFiles(const std::string& message, 
2025-09-29T03:48:59.9743268Z                                                         ^
2025-09-29T03:48:59.9743729Z src/core/GitManager.h:60:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9744060Z     GitOperationResult commitWithFiles(const std::string& message, 
2025-09-29T03:48:59.9744220Z                                                          ^
2025-09-29T03:48:59.9744686Z src/core/GitManager.h:60:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9745009Z     GitOperationResult commitWithFiles(const std::string& message, 
2025-09-29T03:48:59.9745169Z                                                                   ^
2025-09-29T03:48:59.9745630Z src/core/GitManager.h:61:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9745840Z                                      const std::vector<std::string>& files);
2025-09-29T03:48:59.9746013Z                                                                    ^
2025-09-29T03:48:59.9746472Z src/core/GitManager.h:61:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9746675Z                                      const std::vector<std::string>& files);
2025-09-29T03:48:59.9746843Z                                                                     ^
2025-09-29T03:48:59.9747290Z src/core/GitManager.h:61:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9747505Z                                      const std::vector<std::string>& files);
2025-09-29T03:48:59.9747676Z                                                                             ^
2025-09-29T03:48:59.9748283Z src/core/GitManager.h:63:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9748434Z     // History and log
2025-09-29T03:48:59.9748565Z                       ^
2025-09-29T03:48:59.9749020Z src/core/GitManager.h:64:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9749316Z     std::vector<GitCommit> getCommitHistory(int maxCount = 100, 
2025-09-29T03:48:59.9749472Z                                             ^
2025-09-29T03:48:59.9749926Z src/core/GitManager.h:64:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9750208Z     std::vector<GitCommit> getCommitHistory(int maxCount = 100, 
2025-09-29T03:48:59.9750579Z                                                                ^
2025-09-29T03:48:59.9751033Z src/core/GitManager.h:65:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9751287Z                                           GitLogOptions options = GitLogOptions::None,
2025-09-29T03:48:59.9751467Z                                                                                       ^
2025-09-29T03:48:59.9751921Z src/core/GitManager.h:66:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9752129Z                                           const std::string& branch = "",
2025-09-29T03:48:59.9752292Z                                                            ^
2025-09-29T03:48:59.9752743Z src/core/GitManager.h:66:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9752946Z                                           const std::string& branch = "",
2025-09-29T03:48:59.9753111Z                                                             ^
2025-09-29T03:48:59.9753567Z src/core/GitManager.h:66:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9753760Z                                           const std::string& branch = "",
2025-09-29T03:48:59.9753936Z                                                                          ^
2025-09-29T03:48:59.9754385Z src/core/GitManager.h:67:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9754766Z                                           const std::string& filePath = "") const;
2025-09-29T03:48:59.9754972Z                                                            ^
2025-09-29T03:48:59.9755426Z src/core/GitManager.h:67:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9755646Z                                           const std::string& filePath = "") const;
2025-09-29T03:48:59.9755804Z                                                             ^
2025-09-29T03:48:59.9756263Z src/core/GitManager.h:67:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9756477Z                                           const std::string& filePath = "") const;
2025-09-29T03:48:59.9756653Z                                                                                   ^
2025-09-29T03:48:59.9757102Z src/core/GitManager.h:68:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9757428Z     std::optional<GitCommit> getCommit(const std::string& hash) const;
2025-09-29T03:48:59.9757586Z                                                         ^
2025-09-29T03:48:59.9758198Z src/core/GitManager.h:68:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9758520Z     std::optional<GitCommit> getCommit(const std::string& hash) const;
2025-09-29T03:48:59.9758682Z                                                          ^
2025-09-29T03:48:59.9759133Z src/core/GitManager.h:68:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9759454Z     std::optional<GitCommit> getCommit(const std::string& hash) const;
2025-09-29T03:48:59.9759624Z                                                                       ^
2025-09-29T03:48:59.9760076Z src/core/GitManager.h:69:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9760390Z     std::vector<GitCommit> getCommitRange(const std::string& fromHash, 
2025-09-29T03:48:59.9760560Z                                                            ^
2025-09-29T03:48:59.9761014Z src/core/GitManager.h:69:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9761325Z     std::vector<GitCommit> getCommitRange(const std::string& fromHash, 
2025-09-29T03:48:59.9761489Z                                                             ^
2025-09-29T03:48:59.9761941Z src/core/GitManager.h:69:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9762429Z     std::vector<GitCommit> getCommitRange(const std::string& fromHash, 
2025-09-29T03:48:59.9762603Z                                                                       ^
2025-09-29T03:48:59.9763058Z src/core/GitManager.h:70:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9763259Z                                         const std::string& toHash) const;
2025-09-29T03:48:59.9763423Z                                                          ^
2025-09-29T03:48:59.9763879Z src/core/GitManager.h:70:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9764077Z                                         const std::string& toHash) const;
2025-09-29T03:48:59.9764245Z                                                           ^
2025-09-29T03:48:59.9764698Z src/core/GitManager.h:70:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9764894Z                                         const std::string& toHash) const;
2025-09-29T03:48:59.9765076Z                                                                          ^
2025-09-29T03:48:59.9765528Z src/core/GitManager.h:72:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9765678Z     // Branch operations
2025-09-29T03:48:59.9765813Z                         ^
2025-09-29T03:48:59.9766274Z src/core/GitManager.h:73:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9766759Z     std::vector<GitBranch> getBranches(bool includeRemote = true) const;
2025-09-29T03:48:59.9766926Z                                                                         ^
2025-09-29T03:48:59.9767389Z src/core/GitManager.h:74:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9767678Z     GitOperationResult createBranch(const std::string& name, 
2025-09-29T03:48:59.9767836Z                                                      ^
2025-09-29T03:48:59.9768465Z src/core/GitManager.h:74:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9768751Z     GitOperationResult createBranch(const std::string& name, 
2025-09-29T03:48:59.9768909Z                                                       ^
2025-09-29T03:48:59.9769370Z src/core/GitManager.h:74:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9769663Z     GitOperationResult createBranch(const std::string& name, 
2025-09-29T03:48:59.9769826Z                                                             ^
2025-09-29T03:48:59.9770286Z src/core/GitManager.h:75:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9770529Z                                    const std::string& startPoint = "HEAD");
2025-09-29T03:48:59.9770684Z                                                     ^
2025-09-29T03:48:59.9771134Z src/core/GitManager.h:75:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9771355Z                                    const std::string& startPoint = "HEAD");
2025-09-29T03:48:59.9771510Z                                                      ^
2025-09-29T03:48:59.9771962Z src/core/GitManager.h:75:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9772172Z                                    const std::string& startPoint = "HEAD");
2025-09-29T03:48:59.9772343Z                                                                            ^
2025-09-29T03:48:59.9772798Z src/core/GitManager.h:76:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9773227Z     GitOperationResult deleteBranch(const std::string& name, bool force = false);
2025-09-29T03:48:59.9773379Z                                                      ^
2025-09-29T03:48:59.9773830Z src/core/GitManager.h:76:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9774247Z     GitOperationResult deleteBranch(const std::string& name, bool force = false);
2025-09-29T03:48:59.9774585Z                                                       ^
2025-09-29T03:48:59.9775038Z src/core/GitManager.h:76:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9775453Z     GitOperationResult deleteBranch(const std::string& name, bool force = false);
2025-09-29T03:48:59.9775630Z                                                                                  ^
2025-09-29T03:48:59.9776091Z src/core/GitManager.h:77:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9776575Z     GitOperationResult renameBranch(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9776727Z                                                      ^
2025-09-29T03:48:59.9777179Z src/core/GitManager.h:77:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9777653Z     GitOperationResult renameBranch(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9777814Z                                                       ^
2025-09-29T03:48:59.9778429Z src/core/GitManager.h:77:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9778956Z     GitOperationResult renameBranch(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9779122Z                                                                ^
2025-09-29T03:48:59.9779753Z src/core/GitManager.h:77:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9780235Z     GitOperationResult renameBranch(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9780410Z                                                                                  ^
2025-09-29T03:48:59.9780864Z src/core/GitManager.h:77:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9781332Z     GitOperationResult renameBranch(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9781521Z                                                                                   ^
2025-09-29T03:48:59.9781974Z src/core/GitManager.h:77:93: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9782440Z     GitOperationResult renameBranch(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9782630Z                                                                                             ^
2025-09-29T03:48:59.9783091Z src/core/GitManager.h:78:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9783397Z     GitOperationResult checkoutBranch(const std::string& name);
2025-09-29T03:48:59.9783565Z                                                        ^
2025-09-29T03:48:59.9784019Z src/core/GitManager.h:78:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9784321Z     GitOperationResult checkoutBranch(const std::string& name);
2025-09-29T03:48:59.9784495Z                                                         ^
2025-09-29T03:48:59.9784948Z src/core/GitManager.h:78:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9785245Z     GitOperationResult checkoutBranch(const std::string& name);
2025-09-29T03:48:59.9785416Z                                                                ^
2025-09-29T03:48:59.9785868Z src/core/GitManager.h:79:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9786357Z     GitOperationResult mergeBranch(const std::string& branchName, bool noFastForward = false);
2025-09-29T03:48:59.9786524Z                                                     ^
2025-09-29T03:48:59.9786975Z src/core/GitManager.h:79:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9787457Z     GitOperationResult mergeBranch(const std::string& branchName, bool noFastForward = false);
2025-09-29T03:48:59.9787783Z                                                      ^
2025-09-29T03:48:59.9788391Z src/core/GitManager.h:79:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9788881Z     GitOperationResult mergeBranch(const std::string& branchName, bool noFastForward = false);
2025-09-29T03:48:59.9789060Z                                                                  ^
2025-09-29T03:48:59.9789512Z src/core/GitManager.h:79:95: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9790006Z     GitOperationResult mergeBranch(const std::string& branchName, bool noFastForward = false);
2025-09-29T03:48:59.9790198Z                                                                                               ^
2025-09-29T03:48:59.9790645Z src/core/GitManager.h:80:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9790976Z     GitOperationResult rebaseBranch(const std::string& branchName);
2025-09-29T03:48:59.9791179Z                                                      ^
2025-09-29T03:48:59.9791628Z src/core/GitManager.h:80:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9791956Z     GitOperationResult rebaseBranch(const std::string& branchName);
2025-09-29T03:48:59.9792109Z                                                       ^
2025-09-29T03:48:59.9792558Z src/core/GitManager.h:80:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9793055Z     GitOperationResult rebaseBranch(const std::string& branchName);
2025-09-29T03:48:59.9793226Z                                                                    ^
2025-09-29T03:48:59.9793676Z src/core/GitManager.h:82:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9793831Z     // Remote operations
2025-09-29T03:48:59.9793965Z                         ^
2025-09-29T03:48:59.9794411Z src/core/GitManager.h:83:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9794615Z     std::vector<GitRemote> getRemotes() const;
2025-09-29T03:48:59.9794767Z                                               ^
2025-09-29T03:48:59.9795216Z src/core/GitManager.h:84:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9795623Z     GitOperationResult addRemote(const std::string& name, const std::string& url);
2025-09-29T03:48:59.9795783Z                                                   ^
2025-09-29T03:48:59.9796237Z src/core/GitManager.h:84:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9796642Z     GitOperationResult addRemote(const std::string& name, const std::string& url);
2025-09-29T03:48:59.9796803Z                                                    ^
2025-09-29T03:48:59.9797250Z src/core/GitManager.h:84:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9797651Z     GitOperationResult addRemote(const std::string& name, const std::string& url);
2025-09-29T03:48:59.9797835Z                                                                            ^
2025-09-29T03:48:59.9798447Z src/core/GitManager.h:84:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9798854Z     GitOperationResult addRemote(const std::string& name, const std::string& url);
2025-09-29T03:48:59.9799032Z                                                                             ^
2025-09-29T03:48:59.9799485Z src/core/GitManager.h:84:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9799894Z     GitOperationResult addRemote(const std::string& name, const std::string& url);
2025-09-29T03:48:59.9800075Z                                                                                   ^
2025-09-29T03:48:59.9800525Z src/core/GitManager.h:85:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9800813Z     GitOperationResult removeRemote(const std::string& name);
2025-09-29T03:48:59.9801146Z                                                      ^
2025-09-29T03:48:59.9801595Z src/core/GitManager.h:85:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9801878Z     GitOperationResult removeRemote(const std::string& name);
2025-09-29T03:48:59.9802056Z                                                       ^
2025-09-29T03:48:59.9802516Z src/core/GitManager.h:85:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9802804Z     GitOperationResult removeRemote(const std::string& name);
2025-09-29T03:48:59.9802977Z                                                              ^
2025-09-29T03:48:59.9803430Z src/core/GitManager.h:86:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9803899Z     GitOperationResult renameRemote(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9804051Z                                                      ^
2025-09-29T03:48:59.9804517Z src/core/GitManager.h:86:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9804984Z     GitOperationResult renameRemote(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9805139Z                                                       ^
2025-09-29T03:48:59.9805608Z src/core/GitManager.h:86:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9806248Z     GitOperationResult renameRemote(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9806416Z                                                                ^
2025-09-29T03:48:59.9806869Z src/core/GitManager.h:86:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9807333Z     GitOperationResult renameRemote(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9807505Z                                                                                  ^
2025-09-29T03:48:59.9808125Z src/core/GitManager.h:86:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9808590Z     GitOperationResult renameRemote(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9808765Z                                                                                   ^
2025-09-29T03:48:59.9809220Z src/core/GitManager.h:86:93: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9809696Z     GitOperationResult renameRemote(const std::string& oldName, const std::string& newName);
2025-09-29T03:48:59.9809880Z                                                                                             ^
2025-09-29T03:48:59.9810335Z src/core/GitManager.h:87:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9810654Z     GitOperationResult fetch(const std::string& remote = "origin", 
2025-09-29T03:48:59.9810806Z                                               ^
2025-09-29T03:48:59.9811266Z src/core/GitManager.h:87:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9811580Z     GitOperationResult fetch(const std::string& remote = "origin", 
2025-09-29T03:48:59.9811733Z                                                ^
2025-09-29T03:48:59.9812190Z src/core/GitManager.h:87:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9812502Z     GitOperationResult fetch(const std::string& remote = "origin", 
2025-09-29T03:48:59.9812667Z                                                                   ^
2025-09-29T03:48:59.9813124Z src/core/GitManager.h:88:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9813363Z                            ProgressCallback progressCallback = nullptr);
2025-09-29T03:48:59.9813531Z                                                                         ^
2025-09-29T03:48:59.9813979Z src/core/GitManager.h:89:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9814480Z     GitOperationResult pull(const std::string& remote = "origin", 
2025-09-29T03:48:59.9814631Z                                              ^
2025-09-29T03:48:59.9815088Z src/core/GitManager.h:89:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9815413Z     GitOperationResult pull(const std::string& remote = "origin", 
2025-09-29T03:48:59.9815564Z                                               ^
2025-09-29T03:48:59.9816026Z src/core/GitManager.h:89:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9816345Z     GitOperationResult pull(const std::string& remote = "origin", 
2025-09-29T03:48:59.9816505Z                                                                  ^
2025-09-29T03:48:59.9816960Z src/core/GitManager.h:90:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9817156Z                           const std::string& branch = "",
2025-09-29T03:48:59.9817312Z                                            ^
2025-09-29T03:48:59.9817771Z src/core/GitManager.h:90:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9818116Z                           const std::string& branch = "",
2025-09-29T03:48:59.9818270Z                                             ^
2025-09-29T03:48:59.9818728Z src/core/GitManager.h:91:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9819144Z                           ProgressCallback progressCallback = nullptr);
2025-09-29T03:48:59.9819316Z                                                                        ^
2025-09-29T03:48:59.9819772Z src/core/GitManager.h:92:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9820089Z     GitOperationResult push(const std::string& remote = "origin", 
2025-09-29T03:48:59.9820245Z                                              ^
2025-09-29T03:48:59.9820703Z src/core/GitManager.h:92:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9821006Z     GitOperationResult push(const std::string& remote = "origin", 
2025-09-29T03:48:59.9821168Z                                               ^
2025-09-29T03:48:59.9821620Z src/core/GitManager.h:92:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9821928Z     GitOperationResult push(const std::string& remote = "origin", 
2025-09-29T03:48:59.9822099Z                                                                  ^
2025-09-29T03:48:59.9822555Z src/core/GitManager.h:93:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9822737Z                           const std::string& branch = "",
2025-09-29T03:48:59.9822889Z                                            ^
2025-09-29T03:48:59.9823335Z src/core/GitManager.h:93:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9823523Z                           const std::string& branch = "",
2025-09-29T03:48:59.9823678Z                                             ^
2025-09-29T03:48:59.9824125Z src/core/GitManager.h:93:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9824309Z                           const std::string& branch = "",
2025-09-29T03:48:59.9824475Z                                                          ^
2025-09-29T03:48:59.9824922Z src/core/GitManager.h:95:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9825163Z                           ProgressCallback progressCallback = nullptr);
2025-09-29T03:48:59.9825329Z                                                                        ^
2025-09-29T03:48:59.9825782Z src/core/GitManager.h:97:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9825924Z     // Diff operations
2025-09-29T03:48:59.9826056Z                       ^
2025-09-29T03:48:59.9826690Z src/core/GitManager.h:98:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9827041Z     GitDiff getDiff(const std::string& filePath, bool staged = false) const;
2025-09-29T03:48:59.9827184Z                                      ^
2025-09-29T03:48:59.9827639Z src/core/GitManager.h:98:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9828150Z     GitDiff getDiff(const std::string& filePath, bool staged = false) const;
2025-09-29T03:48:59.9828293Z                                       ^
2025-09-29T03:48:59.9828765Z src/core/GitManager.h:98:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9829106Z     GitDiff getDiff(const std::string& filePath, bool staged = false) const;
2025-09-29T03:48:59.9829279Z                                                                             ^
2025-09-29T03:48:59.9829737Z src/core/GitManager.h:99:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9830008Z     std::vector<GitDiff> getDiffAll(bool staged = false) const;
2025-09-29T03:48:59.9830173Z                                                                ^
2025-09-29T03:48:59.9830637Z src/core/GitManager.h:100:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9830924Z     GitDiff getCommitDiff(const std::string& commitHash) const;
2025-09-29T03:48:59.9831070Z                                            ^
2025-09-29T03:48:59.9831694Z src/core/GitManager.h:100:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9831990Z     GitDiff getCommitDiff(const std::string& commitHash) const;
2025-09-29T03:48:59.9832136Z                                             ^
2025-09-29T03:48:59.9832596Z src/core/GitManager.h:100:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9832880Z     GitDiff getCommitDiff(const std::string& commitHash) const;
2025-09-29T03:48:59.9833046Z                                                                ^
2025-09-29T03:48:59.9833502Z src/core/GitManager.h:101:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9833875Z     std::vector<GitDiff> getCommitDiffAll(const std::string& commitHash) const;
2025-09-29T03:48:59.9834036Z                                                            ^
2025-09-29T03:48:59.9834490Z src/core/GitManager.h:101:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9834866Z     std::vector<GitDiff> getCommitDiffAll(const std::string& commitHash) const;
2025-09-29T03:48:59.9835033Z                                                             ^
2025-09-29T03:48:59.9835494Z src/core/GitManager.h:101:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9835861Z     std::vector<GitDiff> getCommitDiffAll(const std::string& commitHash) const;
2025-09-29T03:48:59.9836035Z                                                                                ^
2025-09-29T03:48:59.9836497Z src/core/GitManager.h:102:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9836788Z     GitDiff getDiffBetweenCommits(const std::string& fromHash, 
2025-09-29T03:48:59.9836944Z                                                    ^
2025-09-29T03:48:59.9837403Z src/core/GitManager.h:102:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9837687Z     GitDiff getDiffBetweenCommits(const std::string& fromHash, 
2025-09-29T03:48:59.9838009Z                                                     ^
2025-09-29T03:48:59.9838472Z src/core/GitManager.h:102:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9838760Z     GitDiff getDiffBetweenCommits(const std::string& fromHash, 
2025-09-29T03:48:59.9838921Z                                                               ^
2025-09-29T03:48:59.9839381Z src/core/GitManager.h:103:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9839743Z                                 const std::string& toHash,
2025-09-29T03:48:59.9839952Z                                                  ^
2025-09-29T03:48:59.9840416Z src/core/GitManager.h:103:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9840595Z                                 const std::string& toHash,
2025-09-29T03:48:59.9840745Z                                                   ^
2025-09-29T03:48:59.9841205Z src/core/GitManager.h:104:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9841420Z                                 const std::string& filePath = "") const;
2025-09-29T03:48:59.9841567Z                                                  ^
2025-09-29T03:48:59.9842021Z src/core/GitManager.h:104:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9842229Z                                 const std::string& filePath = "") const;
2025-09-29T03:48:59.9842387Z                                                   ^
2025-09-29T03:48:59.9842844Z src/core/GitManager.h:104:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9843051Z                                 const std::string& filePath = "") const;
2025-09-29T03:48:59.9843221Z                                                                         ^
2025-09-29T03:48:59.9843678Z src/core/GitManager.h:106:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9844040Z     // Tag operations
2025-09-29T03:48:59.9844175Z                      ^
2025-09-29T03:48:59.9844631Z src/core/GitManager.h:107:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9844810Z     std::vector<GitTag> getTags() const;
2025-09-29T03:48:59.9844954Z                                         ^
2025-09-29T03:48:59.9845406Z src/core/GitManager.h:108:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9845874Z     GitOperationResult createTag(const std::string& name, const std::string& message = "",
2025-09-29T03:48:59.9846030Z                                                   ^
2025-09-29T03:48:59.9846488Z src/core/GitManager.h:108:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9846935Z     GitOperationResult createTag(const std::string& name, const std::string& message = "",
2025-09-29T03:48:59.9847095Z                                                    ^
2025-09-29T03:48:59.9847559Z src/core/GitManager.h:108:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9848158Z     GitOperationResult createTag(const std::string& name, const std::string& message = "",
2025-09-29T03:48:59.9848320Z                                                          ^
2025-09-29T03:48:59.9848777Z src/core/GitManager.h:108:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9849234Z     GitOperationResult createTag(const std::string& name, const std::string& message = "",
2025-09-29T03:48:59.9849411Z                                                                            ^
2025-09-29T03:48:59.9849876Z src/core/GitManager.h:108:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9850315Z     GitOperationResult createTag(const std::string& name, const std::string& message = "",
2025-09-29T03:48:59.9850492Z                                                                             ^
2025-09-29T03:48:59.9850952Z src/core/GitManager.h:109:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9851155Z                                const std::string& commitHash = "HEAD");
2025-09-29T03:48:59.9851310Z                                                 ^
2025-09-29T03:48:59.9851761Z src/core/GitManager.h:109:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9852142Z                                const std::string& commitHash = "HEAD");
2025-09-29T03:48:59.9852297Z                                                  ^
2025-09-29T03:48:59.9852747Z src/core/GitManager.h:109:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9852943Z                                const std::string& commitHash = "HEAD");
2025-09-29T03:48:59.9853114Z                                                                        ^
2025-09-29T03:48:59.9853580Z src/core/GitManager.h:110:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9853839Z     GitOperationResult deleteTag(const std::string& name);
2025-09-29T03:48:59.9853985Z                                                   ^
2025-09-29T03:48:59.9854445Z src/core/GitManager.h:110:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9854700Z     GitOperationResult deleteTag(const std::string& name);
2025-09-29T03:48:59.9854857Z                                                    ^
2025-09-29T03:48:59.9855314Z src/core/GitManager.h:110:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9855570Z     GitOperationResult deleteTag(const std::string& name);
2025-09-29T03:48:59.9855727Z                                                           ^
2025-09-29T03:48:59.9856185Z src/core/GitManager.h:111:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9856687Z     GitOperationResult pushTags(const std::string& remote = "origin");
2025-09-29T03:48:59.9856837Z                                                  ^
2025-09-29T03:48:59.9857296Z src/core/GitManager.h:111:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9857635Z     GitOperationResult pushTags(const std::string& remote = "origin");
2025-09-29T03:48:59.9857781Z                                                   ^
2025-09-29T03:48:59.9858403Z src/core/GitManager.h:111:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9858748Z     GitOperationResult pushTags(const std::string& remote = "origin");
2025-09-29T03:48:59.9858910Z                                                                       ^
2025-09-29T03:48:59.9859369Z src/core/GitManager.h:113:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9859511Z     // Stash operations
2025-09-29T03:48:59.9859642Z                        ^
2025-09-29T03:48:59.9860099Z src/core/GitManager.h:114:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9860292Z     std::vector<GitStash> getStashes() const;
2025-09-29T03:48:59.9860439Z                                              ^
2025-09-29T03:48:59.9860890Z src/core/GitManager.h:115:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9861351Z     GitOperationResult stash(const std::string& message = "", bool includeUntracked = false);
2025-09-29T03:48:59.9861505Z                                               ^
2025-09-29T03:48:59.9861975Z src/core/GitManager.h:115:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9862439Z     GitOperationResult stash(const std::string& message = "", bool includeUntracked = false);
2025-09-29T03:48:59.9862589Z                                                ^
2025-09-29T03:48:59.9863047Z src/core/GitManager.h:115:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9863508Z     GitOperationResult stash(const std::string& message = "", bool includeUntracked = false);
2025-09-29T03:48:59.9863675Z                                                              ^
2025-09-29T03:48:59.9864134Z src/core/GitManager.h:115:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9864589Z     GitOperationResult stash(const std::string& message = "", bool includeUntracked = false);
2025-09-29T03:48:59.9864979Z                                                                                              ^
2025-09-29T03:48:59.9865437Z src/core/GitManager.h:116:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9865644Z     GitOperationResult stashPop(int index = 0);
2025-09-29T03:48:59.9865790Z                                                ^
2025-09-29T03:48:59.9866244Z src/core/GitManager.h:117:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9866462Z     GitOperationResult stashApply(int index = 0);
2025-09-29T03:48:59.9866617Z                                                  ^
2025-09-29T03:48:59.9867070Z src/core/GitManager.h:118:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9867270Z     GitOperationResult stashDrop(int index = 0);
2025-09-29T03:48:59.9867421Z                                                 ^
2025-09-29T03:48:59.9868030Z src/core/GitManager.h:119:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9868217Z     GitOperationResult stashClear();
2025-09-29T03:48:59.9868364Z                                     ^
2025-09-29T03:48:59.9868821Z src/core/GitManager.h:121:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9868959Z     // Configuration
2025-09-29T03:48:59.9869093Z                     ^
2025-09-29T03:48:59.9869545Z src/core/GitManager.h:122:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9870133Z     GitOperationResult setConfig(const std::string& key, const std::string& value, 
2025-09-29T03:48:59.9870294Z                                                   ^
2025-09-29T03:48:59.9870755Z src/core/GitManager.h:122:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9871162Z     GitOperationResult setConfig(const std::string& key, const std::string& value, 
2025-09-29T03:48:59.9871316Z                                                    ^
2025-09-29T03:48:59.9871783Z src/core/GitManager.h:122:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9872186Z     GitOperationResult setConfig(const std::string& key, const std::string& value, 
2025-09-29T03:48:59.9872358Z                                                                           ^
2025-09-29T03:48:59.9872817Z src/core/GitManager.h:122:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9873225Z     GitOperationResult setConfig(const std::string& key, const std::string& value, 
2025-09-29T03:48:59.9873398Z                                                                            ^
2025-09-29T03:48:59.9873861Z src/core/GitManager.h:122:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9874261Z     GitOperationResult setConfig(const std::string& key, const std::string& value, 
2025-09-29T03:48:59.9874430Z                                                                                   ^
2025-09-29T03:48:59.9874897Z src/core/GitManager.h:123:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9875060Z                                bool global = false);
2025-09-29T03:48:59.9875212Z                                                     ^
2025-09-29T03:48:59.9875674Z src/core/GitManager.h:124:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9876011Z     std::string getConfig(const std::string& key, bool global = false) const;
2025-09-29T03:48:59.9876165Z                                            ^
2025-09-29T03:48:59.9876589Z src/core/GitManager.h:124:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9876791Z     std::string getConfig(const std::string& key, bool global = false) const;
2025-09-29T03:48:59.9876884Z                                             ^
2025-09-29T03:48:59.9877157Z src/core/GitManager.h:124:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9877543Z     std::string getConfig(const std::string& key, bool global = false) const;
2025-09-29T03:48:59.9877645Z                                                                              ^
2025-09-29T03:48:59.9878091Z src/core/GitManager.h:125:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9878350Z     GitOperationResult setUserInfo(const std::string& name, const std::string& email,
2025-09-29T03:48:59.9878446Z                                                     ^
2025-09-29T03:48:59.9878747Z src/core/GitManager.h:125:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9878997Z     GitOperationResult setUserInfo(const std::string& name, const std::string& email,
2025-09-29T03:48:59.9879091Z                                                      ^
2025-09-29T03:48:59.9879350Z src/core/GitManager.h:125:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9879601Z     GitOperationResult setUserInfo(const std::string& name, const std::string& email,
2025-09-29T03:48:59.9879700Z                                                            ^
2025-09-29T03:48:59.9879960Z src/core/GitManager.h:125:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9880200Z     GitOperationResult setUserInfo(const std::string& name, const std::string& email,
2025-09-29T03:48:59.9880304Z                                                                              ^
2025-09-29T03:48:59.9880693Z src/core/GitManager.h:125:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9880952Z     GitOperationResult setUserInfo(const std::string& name, const std::string& email,
2025-09-29T03:48:59.9881056Z                                                                               ^
2025-09-29T03:48:59.9881315Z src/core/GitManager.h:125:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9881561Z     GitOperationResult setUserInfo(const std::string& name, const std::string& email,
2025-09-29T03:48:59.9881664Z                                                                                      ^
2025-09-29T03:48:59.9881922Z src/core/GitManager.h:126:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9882028Z                                  bool global = false);
2025-09-29T03:48:59.9882123Z                                                       ^
2025-09-29T03:48:59.9882385Z src/core/GitManager.h:128:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9882477Z     // Utility methods
2025-09-29T03:48:59.9882556Z                       ^
2025-09-29T03:48:59.9882815Z src/core/GitManager.h:129:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9882923Z     bool hasUncommittedChanges() const;
2025-09-29T03:48:59.9883012Z                                        ^
2025-09-29T03:48:59.9883275Z src/core/GitManager.h:130:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9883376Z     bool hasUnstagedChanges() const;
2025-09-29T03:48:59.9883464Z                                     ^
2025-09-29T03:48:59.9883721Z src/core/GitManager.h:131:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9883820Z     bool hasStagedChanges() const;
2025-09-29T03:48:59.9883906Z                                   ^
2025-09-29T03:48:59.9884169Z src/core/GitManager.h:132:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9884272Z     std::string getLastError() const;
2025-09-29T03:48:59.9884356Z                                      ^
2025-09-29T03:48:59.9884623Z src/core/GitManager.h:134:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9884707Z     // Async operations
2025-09-29T03:48:59.9884787Z                        ^
2025-09-29T03:48:59.9885175Z src/core/GitManager.h:135:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9885411Z     std::future<GitOperationResult> cloneRepositoryAsync(const std::string& url, 
2025-09-29T03:48:59.9885492Z                                    ^
2025-09-29T03:48:59.9885760Z src/core/GitManager.h:135:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9885988Z     std::future<GitOperationResult> cloneRepositoryAsync(const std::string& url, 
2025-09-29T03:48:59.9886096Z                                                                           ^
2025-09-29T03:48:59.9886361Z src/core/GitManager.h:135:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9886585Z     std::future<GitOperationResult> cloneRepositoryAsync(const std::string& url, 
2025-09-29T03:48:59.9886696Z                                                                            ^
2025-09-29T03:48:59.9886962Z src/core/GitManager.h:135:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9887191Z     std::future<GitOperationResult> cloneRepositoryAsync(const std::string& url, 
2025-09-29T03:48:59.9887288Z                                                                                 ^
2025-09-29T03:48:59.9887553Z src/core/GitManager.h:136:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9887669Z                                                        const std::string& path,
2025-09-29T03:48:59.9887995Z                                                                         ^
2025-09-29T03:48:59.9888270Z src/core/GitManager.h:136:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9888388Z                                                        const std::string& path,
2025-09-29T03:48:59.9888489Z                                                                          ^
2025-09-29T03:48:59.9888748Z src/core/GitManager.h:136:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9888869Z                                                        const std::string& path,
2025-09-29T03:48:59.9888972Z                                                                                ^
2025-09-29T03:48:59.9889246Z src/core/GitManager.h:137:101: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9889407Z                                                        ProgressCallback progressCallback = nullptr);
2025-09-29T03:48:59.9889524Z                                                                                                     ^
2025-09-29T03:48:59.9889782Z src/core/GitManager.h:138:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9890026Z     std::future<GitOperationResult> fetchAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9890116Z                                    ^
2025-09-29T03:48:59.9890376Z src/core/GitManager.h:138:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9890619Z     std::future<GitOperationResult> fetchAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9890722Z                                                                 ^
2025-09-29T03:48:59.9890985Z src/core/GitManager.h:138:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9891219Z     std::future<GitOperationResult> fetchAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9891324Z                                                                  ^
2025-09-29T03:48:59.9891585Z src/core/GitManager.h:138:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9891819Z     std::future<GitOperationResult> fetchAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9891927Z                                                                                     ^
2025-09-29T03:48:59.9892188Z src/core/GitManager.h:139:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9892481Z                                              ProgressCallback progressCallback = nullptr);
2025-09-29T03:48:59.9892591Z                                                                                           ^
2025-09-29T03:48:59.9892854Z src/core/GitManager.h:140:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9893093Z     std::future<GitOperationResult> pullAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9893181Z                                    ^
2025-09-29T03:48:59.9893442Z src/core/GitManager.h:140:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9893674Z     std::future<GitOperationResult> pullAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9893809Z                                                                ^
2025-09-29T03:48:59.9894075Z src/core/GitManager.h:140:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9894304Z     std::future<GitOperationResult> pullAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9894404Z                                                                 ^
2025-09-29T03:48:59.9894674Z src/core/GitManager.h:140:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9894898Z     std::future<GitOperationResult> pullAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9895121Z                                                                                    ^
2025-09-29T03:48:59.9895395Z src/core/GitManager.h:141:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9895517Z                                             const std::string& branch = "",
2025-09-29T03:48:59.9895617Z                                                              ^
2025-09-29T03:48:59.9895886Z src/core/GitManager.h:141:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9896008Z                                             const std::string& branch = "",
2025-09-29T03:48:59.9896108Z                                                               ^
2025-09-29T03:48:59.9896372Z src/core/GitManager.h:141:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9896485Z                                             const std::string& branch = "",
2025-09-29T03:48:59.9896587Z                                                                            ^
2025-09-29T03:48:59.9896857Z src/core/GitManager.h:142:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9897008Z                                             ProgressCallback progressCallback = nullptr);
2025-09-29T03:48:59.9897116Z                                                                                          ^
2025-09-29T03:48:59.9897375Z src/core/GitManager.h:143:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9897610Z     std::future<GitOperationResult> pushAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9897694Z                                    ^
2025-09-29T03:48:59.9898084Z src/core/GitManager.h:143:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9898317Z     std::future<GitOperationResult> pushAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9898421Z                                                                ^
2025-09-29T03:48:59.9898686Z src/core/GitManager.h:143:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9898915Z     std::future<GitOperationResult> pushAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9899010Z                                                                 ^
2025-09-29T03:48:59.9899270Z src/core/GitManager.h:143:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9899639Z     std::future<GitOperationResult> pushAsync(const std::string& remote = "origin",
2025-09-29T03:48:59.9899744Z                                                                                    ^
2025-09-29T03:48:59.9900008Z src/core/GitManager.h:144:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9900137Z                                             const std::string& branch = "",
2025-09-29T03:48:59.9900233Z                                                              ^
2025-09-29T03:48:59.9900499Z src/core/GitManager.h:144:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9900617Z                                             const std::string& branch = "",
2025-09-29T03:48:59.9900714Z                                                               ^
2025-09-29T03:48:59.9900975Z src/core/GitManager.h:144:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9901094Z                                             const std::string& branch = "",
2025-09-29T03:48:59.9901199Z                                                                            ^
2025-09-29T03:48:59.9901461Z src/core/GitManager.h:145:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9901570Z                                             bool force = false,
2025-09-29T03:48:59.9901665Z                                                                ^
2025-09-29T03:48:59.9902047Z src/core/GitManager.h:146:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9902196Z                                             ProgressCallback progressCallback = nullptr);
2025-09-29T03:48:59.9902310Z                                                                                          ^
2025-09-29T03:48:59.9902572Z src/core/GitManager.h:148:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9902659Z     // Event callbacks
2025-09-29T03:48:59.9902749Z                       ^
2025-09-29T03:48:59.9903011Z src/core/GitManager.h:149:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9903132Z     void setLogCallback(LogCallback callback);
2025-09-29T03:48:59.9903229Z                                               ^
2025-09-29T03:48:59.9903496Z src/core/GitManager.h:152:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9903578Z private:
2025-09-29T03:48:59.9903654Z         ^
2025-09-29T03:48:59.9903926Z src/core/GitManager.h:153:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9904010Z     class Impl;
2025-09-29T03:48:59.9904083Z                ^
2025-09-29T03:48:59.9904348Z src/core/GitManager.h:154:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9904451Z     std::unique_ptr<Impl> pImpl;
2025-09-29T03:48:59.9904539Z                                 ^
2025-09-29T03:48:59.9904805Z src/core/GitManager.h:156:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9905045Z     GitOperationResult executeGitCommand(const std::vector<std::string>& args,
2025-09-29T03:48:59.9905122Z                       ^
2025-09-29T03:48:59.9905390Z src/core/GitManager.h:156:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9905620Z     GitOperationResult executeGitCommand(const std::vector<std::string>& args,
2025-09-29T03:48:59.9905728Z                                                                        ^
2025-09-29T03:48:59.9905997Z src/core/GitManager.h:156:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9906227Z     GitOperationResult executeGitCommand(const std::vector<std::string>& args,
2025-09-29T03:48:59.9906329Z                                                                         ^
2025-09-29T03:48:59.9906591Z src/core/GitManager.h:156:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9906922Z     GitOperationResult executeGitCommand(const std::vector<std::string>& args,
2025-09-29T03:48:59.9907026Z                                                                               ^
2025-09-29T03:48:59.9907292Z src/core/GitManager.h:157:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9907420Z                                        const std::string& workingDir = "",
2025-09-29T03:48:59.9907516Z                                                         ^
2025-09-29T03:48:59.9907782Z src/core/GitManager.h:157:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9908024Z                                        const std::string& workingDir = "",
2025-09-29T03:48:59.9908125Z                                                          ^
2025-09-29T03:48:59.9908386Z src/core/GitManager.h:157:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9908513Z                                        const std::string& workingDir = "",
2025-09-29T03:48:59.9908613Z                                                                           ^
2025-09-29T03:48:59.9908873Z src/core/GitManager.h:158:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9909041Z                                        ProgressCallback progressCallback = nullptr) const;
2025-09-29T03:48:59.9909151Z                                                                                           ^
2025-09-29T03:48:59.9909541Z src/core/GitManager.h:160:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9909736Z     std::vector<std::string> parseGitOutput(const std::string& output, 
2025-09-29T03:48:59.9909820Z                             ^
2025-09-29T03:48:59.9910091Z src/core/GitManager.h:160:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9910276Z     std::vector<std::string> parseGitOutput(const std::string& output, 
2025-09-29T03:48:59.9910383Z                                                              ^
2025-09-29T03:48:59.9910645Z src/core/GitManager.h:160:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9910826Z     std::vector<std::string> parseGitOutput(const std::string& output, 
2025-09-29T03:48:59.9910925Z                                                               ^
2025-09-29T03:48:59.9911189Z src/core/GitManager.h:160:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9911364Z     std::vector<std::string> parseGitOutput(const std::string& output, 
2025-09-29T03:48:59.9911465Z                                                                       ^
2025-09-29T03:48:59.9911728Z src/core/GitManager.h:161:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9911862Z                                           const std::string& delimiter = "\n") const;
2025-09-29T03:48:59.9911971Z                                                            ^
2025-09-29T03:48:59.9912236Z src/core/GitManager.h:161:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9912365Z                                           const std::string& delimiter = "\n") const;
2025-09-29T03:48:59.9912471Z                                                             ^
2025-09-29T03:48:59.9912734Z src/core/GitManager.h:161:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9912861Z                                           const std::string& delimiter = "\n") const;
2025-09-29T03:48:59.9912972Z                                                                                      ^
2025-09-29T03:48:59.9913232Z src/core/GitManager.h:162:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9913400Z     GitCommit parseCommit(const std::string& commitData) const;
2025-09-29T03:48:59.9913498Z                                            ^
2025-09-29T03:48:59.9913937Z src/core/GitManager.h:162:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9914106Z     GitCommit parseCommit(const std::string& commitData) const;
2025-09-29T03:48:59.9914202Z                                             ^
2025-09-29T03:48:59.9914465Z src/core/GitManager.h:162:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9914630Z     GitCommit parseCommit(const std::string& commitData) const;
2025-09-29T03:48:59.9914736Z                                                                ^
2025-09-29T03:48:59.9915000Z src/core/GitManager.h:163:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9915163Z     GitBranch parseBranch(const std::string& branchData) const;
2025-09-29T03:48:59.9915254Z                                            ^
2025-09-29T03:48:59.9915520Z src/core/GitManager.h:163:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9915686Z     GitBranch parseBranch(const std::string& branchData) const;
2025-09-29T03:48:59.9915776Z                                             ^
2025-09-29T03:48:59.9916047Z src/core/GitManager.h:163:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9916206Z     GitBranch parseBranch(const std::string& branchData) const;
2025-09-29T03:48:59.9916300Z                                                                ^
2025-09-29T03:48:59.9916658Z src/core/GitManager.h:164:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9916864Z     GitFileChange parseFileChange(const std::string& statusLine) const;
2025-09-29T03:48:59.9916962Z                                                    ^
2025-09-29T03:48:59.9917232Z src/core/GitManager.h:164:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9917429Z     GitFileChange parseFileChange(const std::string& statusLine) const;
2025-09-29T03:48:59.9917528Z                                                     ^
2025-09-29T03:48:59.9917795Z src/core/GitManager.h:164:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9918165Z     GitFileChange parseFileChange(const std::string& statusLine) const;
2025-09-29T03:48:59.9918272Z                                                                        ^
2025-09-29T03:48:59.9918544Z src/core/GitManager.h:165:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9918831Z     GitDiff parseDiff(const std::string& diffOutput, const std::string& filePath = "") const;
2025-09-29T03:48:59.9918922Z                                        ^
2025-09-29T03:48:59.9919198Z src/core/GitManager.h:165:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9919463Z     GitDiff parseDiff(const std::string& diffOutput, const std::string& filePath = "") const;
2025-09-29T03:48:59.9919554Z                                         ^
2025-09-29T03:48:59.9919823Z src/core/GitManager.h:165:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9920092Z     GitDiff parseDiff(const std::string& diffOutput, const std::string& filePath = "") const;
2025-09-29T03:48:59.9920188Z                                                     ^
2025-09-29T03:48:59.9920457Z src/core/GitManager.h:165:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9920723Z     GitDiff parseDiff(const std::string& diffOutput, const std::string& filePath = "") const;
2025-09-29T03:48:59.9920822Z                                                                       ^
2025-09-29T03:48:59.9921094Z src/core/GitManager.h:165:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9921355Z     GitDiff parseDiff(const std::string& diffOutput, const std::string& filePath = "") const;
2025-09-29T03:48:59.9921457Z                                                                        ^
2025-09-29T03:48:59.9921872Z src/core/GitManager.h:168:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:48:59.9921957Z }
2025-09-29T03:48:59.9922030Z  ^
2025-09-29T03:49:00.0142779Z src/core/GitManager.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0143024Z #include "GitManager.h"
2025-09-29T03:49:00.0143174Z ^
2025-09-29T03:49:00.0143794Z src/core/GitManager.cpp:21:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0143996Z public:
2025-09-29T03:49:00.0144146Z        ^
2025-09-29T03:49:00.0144749Z src/core/GitManager.cpp:22:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0144981Z     std::string repositoryPath;
2025-09-29T03:49:00.0145147Z                                ^
2025-09-29T03:49:00.0145725Z src/core/GitManager.cpp:23:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0145926Z     std::string lastError;
2025-09-29T03:49:00.0146097Z                           ^
2025-09-29T03:49:00.0146680Z src/core/GitManager.cpp:24:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0146879Z     LogCallback logCallback;
2025-09-29T03:49:00.0147053Z                             ^
2025-09-29T03:49:00.0147631Z src/core/GitManager.cpp:25:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0148091Z     ProgressCallback progressCallback;
2025-09-29T03:49:00.0148732Z                                       ^
2025-09-29T03:49:00.0149353Z src/core/GitManager.cpp:27:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0149733Z     Impl(const std::string& repoPath) : repositoryPath(repoPath) {
2025-09-29T03:49:00.0149895Z                           ^
2025-09-29T03:49:00.0150510Z src/core/GitManager.cpp:27:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0150870Z     Impl(const std::string& repoPath) : repositoryPath(repoPath) {
2025-09-29T03:49:00.0151038Z                            ^
2025-09-29T03:49:00.0151619Z src/core/GitManager.cpp:28:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0151792Z #ifdef USE_LIBGIT2
2025-09-29T03:49:00.0151943Z                   ^
2025-09-29T03:49:00.0152532Z src/core/GitManager.cpp:30:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0152677Z #endif
2025-09-29T03:49:00.0152823Z       ^
2025-09-29T03:49:00.0153415Z src/core/GitManager.cpp:31:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0153563Z     }
2025-09-29T03:49:00.0153706Z      ^
2025-09-29T03:49:00.0154292Z src/core/GitManager.cpp:34:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0154455Z #ifdef USE_LIBGIT2
2025-09-29T03:49:00.0154602Z                   ^
2025-09-29T03:49:00.0155178Z src/core/GitManager.cpp:36:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0155330Z #endif
2025-09-29T03:49:00.0155477Z       ^
2025-09-29T03:49:00.0156046Z src/core/GitManager.cpp:37:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0156198Z     }
2025-09-29T03:49:00.0156344Z      ^
2025-09-29T03:49:00.0156917Z src/core/GitManager.cpp:39:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0157382Z     GitOperationResult executeGitCommand(const std::string& command) {
2025-09-29T03:49:00.0157586Z                                                           ^
2025-09-29T03:49:00.0158386Z src/core/GitManager.cpp:39:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0158829Z     GitOperationResult executeGitCommand(const std::string& command) {
2025-09-29T03:49:00.0159035Z                                                            ^
2025-09-29T03:49:00.0159877Z src/core/GitManager.cpp:39:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0160316Z     GitOperationResult executeGitCommand(const std::string& command) {
2025-09-29T03:49:00.0160532Z                                                                       ^
2025-09-29T03:49:00.0161117Z src/core/GitManager.cpp:40:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0161324Z         GitOperationResult result;
2025-09-29T03:49:00.0161502Z                                   ^
2025-09-29T03:49:00.0162095Z src/core/GitManager.cpp:41:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0162335Z         std::string fullCommand = "git " + command;
2025-09-29T03:49:00.0162532Z                                                    ^
2025-09-29T03:49:00.0163112Z src/core/GitManager.cpp:43:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0163295Z         SystemCommand cmd;
2025-09-29T03:49:00.0163474Z                           ^
2025-09-29T03:49:00.0164054Z src/core/GitManager.cpp:44:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0164426Z         auto cmdResult = cmd.execute(fullCommand, {}, repositoryPath);
2025-09-29T03:49:00.0164664Z                                                                       ^
2025-09-29T03:49:00.0165245Z src/core/GitManager.cpp:46:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0165671Z         result.exitCode = cmdResult.exitCode;
2025-09-29T03:49:00.0165868Z                                              ^
2025-09-29T03:49:00.0166455Z src/core/GitManager.cpp:47:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0166672Z         result.output = cmdResult.output;
2025-09-29T03:49:00.0166849Z                                          ^
2025-09-29T03:49:00.0167442Z src/core/GitManager.cpp:48:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0167661Z         result.error = cmdResult.error;
2025-09-29T03:49:00.0167833Z                                        ^
2025-09-29T03:49:00.0168626Z src/core/GitManager.cpp:49:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0169258Z         result.result = cmdResult.exitCode == 0 ? GitCommandResult::Success : GitCommandResult::Failed;
2025-09-29T03:49:00.0169474Z                                                                            ^
2025-09-29T03:49:00.0170135Z src/core/GitManager.cpp:49:104: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0170751Z         result.result = cmdResult.exitCode == 0 ? GitCommandResult::Success : GitCommandResult::Failed;
2025-09-29T03:49:00.0170985Z                                                                                                        ^
2025-09-29T03:49:00.0171588Z src/core/GitManager.cpp:51:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0171789Z         if (!result.isSuccess()) {
2025-09-29T03:49:00.0171958Z                                   ^
2025-09-29T03:49:00.0172552Z src/core/GitManager.cpp:52:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0172953Z             lastError = result.error.empty() ? result.output : result.error;
2025-09-29T03:49:00.0173162Z                                                                             ^
2025-09-29T03:49:00.0173770Z src/core/GitManager.cpp:53:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0173923Z         }
2025-09-29T03:49:00.0174071Z          ^
2025-09-29T03:49:00.0174656Z src/core/GitManager.cpp:55:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0174839Z         return result;
2025-09-29T03:49:00.0174998Z                       ^
2025-09-29T03:49:00.0175580Z src/core/GitManager.cpp:59:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0176169Z GitManager::GitManager(const std::string& repositoryPath) 
2025-09-29T03:49:00.0176347Z                                         ^
2025-09-29T03:49:00.0176931Z src/core/GitManager.cpp:59:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0177284Z GitManager::GitManager(const std::string& repositoryPath) 
2025-09-29T03:49:00.0177463Z                                          ^
2025-09-29T03:49:00.0178243Z src/core/GitManager.cpp:59:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0178594Z GitManager::GitManager(const std::string& repositoryPath) 
2025-09-29T03:49:00.0178796Z                                                          ^
2025-09-29T03:49:00.0179390Z src/core/GitManager.cpp:60:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0179671Z     : pImpl(std::make_unique<Impl>(repositoryPath)) {
2025-09-29T03:49:00.0179882Z                                                      ^
2025-09-29T03:49:00.0180469Z src/core/GitManager.cpp:65:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0181040Z GitOperationResult GitManager::initRepository(const std::string& path, bool bare) {
2025-09-29T03:49:00.0181252Z                                                                ^
2025-09-29T03:49:00.0181837Z src/core/GitManager.cpp:65:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0182602Z GitOperationResult GitManager::initRepository(const std::string& path, bool bare) {
2025-09-29T03:49:00.0182820Z                                                                 ^
2025-09-29T03:49:00.0183405Z src/core/GitManager.cpp:65:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0183955Z GitOperationResult GitManager::initRepository(const std::string& path, bool bare) {
2025-09-29T03:49:00.0184169Z                                                                       ^
2025-09-29T03:49:00.0184767Z src/core/GitManager.cpp:65:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0185315Z GitOperationResult GitManager::initRepository(const std::string& path, bool bare) {
2025-09-29T03:49:00.0185573Z                                                                                    ^
2025-09-29T03:49:00.0186155Z src/core/GitManager.cpp:66:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0186387Z     std::vector<std::string> args = {"init"};
2025-09-29T03:49:00.0186577Z                                              ^
2025-09-29T03:49:00.0187163Z src/core/GitManager.cpp:67:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0187319Z     if (bare) {
2025-09-29T03:49:00.0187476Z                ^
2025-09-29T03:49:00.0188274Z src/core/GitManager.cpp:68:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0188484Z         args.push_back("--bare");
2025-09-29T03:49:00.0188661Z                                  ^
2025-09-29T03:49:00.0189247Z src/core/GitManager.cpp:69:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0189396Z     }
2025-09-29T03:49:00.0189542Z      ^
2025-09-29T03:49:00.0190131Z src/core/GitManager.cpp:70:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0190319Z     args.push_back(path);
2025-09-29T03:49:00.0190483Z                          ^
2025-09-29T03:49:00.0191082Z src/core/GitManager.cpp:72:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0191303Z     auto result = executeGitCommand(args);
2025-09-29T03:49:00.0191479Z                                           ^
2025-09-29T03:49:00.0192066Z src/core/GitManager.cpp:73:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0192260Z     if (result.isSuccess()) {
2025-09-29T03:49:00.0192648Z                              ^
2025-09-29T03:49:00.0193233Z src/core/GitManager.cpp:74:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0193452Z         pImpl->repositoryPath = path;
2025-09-29T03:49:00.0193623Z                                      ^
2025-09-29T03:49:00.0194211Z src/core/GitManager.cpp:75:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0194367Z     }
2025-09-29T03:49:00.0194513Z      ^
2025-09-29T03:49:00.0195103Z src/core/GitManager.cpp:79:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0195779Z GitOperationResult GitManager::cloneRepository(const std::string& url, const std::string& path,
2025-09-29T03:49:00.0195930Z                   ^
2025-09-29T03:49:00.0196514Z src/core/GitManager.cpp:79:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0197172Z GitOperationResult GitManager::cloneRepository(const std::string& url, const std::string& path,
2025-09-29T03:49:00.0197398Z                                                                 ^
2025-09-29T03:49:00.0198178Z src/core/GitManager.cpp:79:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0198839Z GitOperationResult GitManager::cloneRepository(const std::string& url, const std::string& path,
2025-09-29T03:49:00.0199051Z                                                                  ^
2025-09-29T03:49:00.0199851Z src/core/GitManager.cpp:79:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0200512Z GitOperationResult GitManager::cloneRepository(const std::string& url, const std::string& path,
2025-09-29T03:49:00.0200743Z                                                                                         ^
2025-09-29T03:49:00.0201326Z src/core/GitManager.cpp:79:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0202065Z GitOperationResult GitManager::cloneRepository(const std::string& url, const std::string& path,
2025-09-29T03:49:00.0202314Z                                                                                          ^
2025-09-29T03:49:00.0202901Z src/core/GitManager.cpp:79:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0203555Z GitOperationResult GitManager::cloneRepository(const std::string& url, const std::string& path,
2025-09-29T03:49:00.0203782Z                                                                                                ^
2025-09-29T03:49:00.0204377Z src/core/GitManager.cpp:80:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0204645Z                                              ProgressCallback progressCallback) {
2025-09-29T03:49:00.0204868Z                                                                                  ^
2025-09-29T03:49:00.0205450Z src/core/GitManager.cpp:81:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0205823Z     std::vector<std::string> args = {"clone", "--progress", url, path};
2025-09-29T03:49:00.0206040Z                                                                        ^
2025-09-29T03:49:00.0206625Z src/core/GitManager.cpp:83:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0206979Z     auto result = executeGitCommand(args, "", progressCallback);
2025-09-29T03:49:00.0207176Z                                                                 ^
2025-09-29T03:49:00.0207774Z src/core/GitManager.cpp:84:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0208181Z     if (result.isSuccess()) {
2025-09-29T03:49:00.0208347Z                              ^
2025-09-29T03:49:00.0208933Z src/core/GitManager.cpp:85:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0209150Z         pImpl->repositoryPath = path;
2025-09-29T03:49:00.0209320Z                                      ^
2025-09-29T03:49:00.0210161Z src/core/GitManager.cpp:86:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0210310Z     }
2025-09-29T03:49:00.0210464Z      ^
2025-09-29T03:49:00.0211051Z src/core/GitManager.cpp:90:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0211530Z GitOperationResult GitManager::openRepository(const std::string& path) {
2025-09-29T03:49:00.0211722Z                                                                ^
2025-09-29T03:49:00.0212306Z src/core/GitManager.cpp:90:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0212777Z GitOperationResult GitManager::openRepository(const std::string& path) {
2025-09-29T03:49:00.0212967Z                                                                 ^
2025-09-29T03:49:00.0213541Z src/core/GitManager.cpp:90:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0214015Z GitOperationResult GitManager::openRepository(const std::string& path) {
2025-09-29T03:49:00.0214231Z                                                                         ^
2025-09-29T03:49:00.0214806Z src/core/GitManager.cpp:91:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0215017Z     if (!isValidRepository(path)) {
2025-09-29T03:49:00.0215187Z                                    ^
2025-09-29T03:49:00.0215765Z src/core/GitManager.cpp:92:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0216524Z         return {GitCommandResult::InvalidRepository, "", "Not a valid git repository", 1};
2025-09-29T03:49:00.0216768Z                                                         ^
2025-09-29T03:49:00.0217368Z src/core/GitManager.cpp:92:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0218129Z         return {GitCommandResult::InvalidRepository, "", "Not a valid git repository", 1};
2025-09-29T03:49:00.0218367Z                                                                                           ^
2025-09-29T03:49:00.0218959Z src/core/GitManager.cpp:93:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0219105Z     }
2025-09-29T03:49:00.0219249Z      ^
2025-09-29T03:49:00.0219840Z src/core/GitManager.cpp:95:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0220050Z     pImpl->repositoryPath = path;
2025-09-29T03:49:00.0220223Z                                  ^
2025-09-29T03:49:00.0220821Z src/core/GitManager.cpp:99:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0221231Z bool GitManager::isValidRepository(const std::string& path) const {
2025-09-29T03:49:00.0221422Z                                                     ^
2025-09-29T03:49:00.0221998Z src/core/GitManager.cpp:99:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0222403Z bool GitManager::isValidRepository(const std::string& path) const {
2025-09-29T03:49:00.0222596Z                                                      ^
2025-09-29T03:49:00.0223167Z src/core/GitManager.cpp:99:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0223571Z bool GitManager::isValidRepository(const std::string& path) const {
2025-09-29T03:49:00.0223774Z                                                                    ^
2025-09-29T03:49:00.0224367Z src/core/GitManager.cpp:100:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0224583Z     namespace fs = std::filesystem;
2025-09-29T03:49:00.0224748Z                                    ^
2025-09-29T03:49:00.0225334Z src/core/GitManager.cpp:102:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0225563Z     std::filesystem::path repoPath(path);
2025-09-29T03:49:00.0225737Z                                          ^
2025-09-29T03:49:00.0226317Z src/core/GitManager.cpp:103:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0226764Z     if (!std::filesystem::exists(repoPath)) {
2025-09-29T03:49:00.0226945Z                                              ^
2025-09-29T03:49:00.0227532Z src/core/GitManager.cpp:104:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0227698Z         return false;
2025-09-29T03:49:00.0228036Z                      ^
2025-09-29T03:49:00.0228633Z src/core/GitManager.cpp:105:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0228778Z     }
2025-09-29T03:49:00.0228928Z      ^
2025-09-29T03:49:00.0229514Z src/core/GitManager.cpp:107:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0229712Z     // Check for .git directory or file
2025-09-29T03:49:00.0229887Z                                        ^
2025-09-29T03:49:00.0230476Z src/core/GitManager.cpp:108:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0230759Z     std::filesystem::path gitPath = repoPath / ".git";
2025-09-29T03:49:00.0230948Z                                                       ^
2025-09-29T03:49:00.0231540Z src/core/GitManager.cpp:109:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0231765Z     if (std::filesystem::exists(gitPath)) {
2025-09-29T03:49:00.0231942Z                                            ^
2025-09-29T03:49:00.0232738Z src/core/GitManager.cpp:110:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0232901Z         return true;
2025-09-29T03:49:00.0233055Z                     ^
2025-09-29T03:49:00.0233646Z src/core/GitManager.cpp:111:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0233789Z     }
2025-09-29T03:49:00.0233930Z      ^
2025-09-29T03:49:00.0234510Z src/core/GitManager.cpp:113:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0234729Z     // Check if this is a bare repository
2025-09-29T03:49:00.0234899Z                                          ^
2025-09-29T03:49:00.0235482Z src/core/GitManager.cpp:114:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0235767Z     std::filesystem::path headPath = repoPath / "HEAD";
2025-09-29T03:49:00.0235957Z                                                        ^
2025-09-29T03:49:00.0236543Z src/core/GitManager.cpp:115:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0236880Z     std::filesystem::path objectsPath = repoPath / "objects";
2025-09-29T03:49:00.0237076Z                                                              ^
2025-09-29T03:49:00.0237662Z src/core/GitManager.cpp:116:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0238120Z     std::filesystem::path refsPath = repoPath / "refs";
2025-09-29T03:49:00.0238306Z                                                        ^
2025-09-29T03:49:00.0238901Z src/core/GitManager.cpp:118:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0239670Z     return std::filesystem::exists(headPath) && std::filesystem::exists(objectsPath) && std::filesystem::exists(refsPath);
2025-09-29T03:49:00.0239852Z                                                ^
2025-09-29T03:49:00.0240447Z src/core/GitManager.cpp:118:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0241205Z     return std::filesystem::exists(headPath) && std::filesystem::exists(objectsPath) && std::filesystem::exists(refsPath);
2025-09-29T03:49:00.0241426Z                                                                                        ^
2025-09-29T03:49:00.0242004Z src/core/GitManager.cpp:121:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0242316Z GitRepository GitManager::getRepositoryInfo() const {
2025-09-29T03:49:00.0242499Z                                                      ^
2025-09-29T03:49:00.0243303Z src/core/GitManager.cpp:122:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0243481Z     GitRepository repo;
2025-09-29T03:49:00.0259512Z                        ^
2025-09-29T03:49:00.0260240Z src/core/GitManager.cpp:123:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0260481Z     repo.path = pImpl->repositoryPath;
2025-09-29T03:49:00.0260651Z                                       ^
2025-09-29T03:49:00.0261280Z src/core/GitManager.cpp:124:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0261562Z     repo.workingDirectory = pImpl->repositoryPath;
2025-09-29T03:49:00.0261743Z                                                   ^
2025-09-29T03:49:00.0262326Z src/core/GitManager.cpp:126:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0262845Z     std::filesystem::path gitDir = std::filesystem::path(pImpl->repositoryPath) / ".git";
2025-09-29T03:49:00.0263025Z                                   ^
2025-09-29T03:49:00.0263599Z src/core/GitManager.cpp:126:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0264105Z     std::filesystem::path gitDir = std::filesystem::path(pImpl->repositoryPath) / ".git";
2025-09-29T03:49:00.0264319Z                                                                                          ^
2025-09-29T03:49:00.0265236Z src/core/GitManager.cpp:128:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0265460Z     if (std::filesystem::exists(gitDir)) {
2025-09-29T03:49:00.0265641Z                                           ^
2025-09-29T03:49:00.0266217Z src/core/GitManager.cpp:129:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0266464Z         if (std::filesystem::is_directory(gitDir)) {
2025-09-29T03:49:00.0266655Z                                                     ^
2025-09-29T03:49:00.0267235Z src/core/GitManager.cpp:130:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0267456Z             repo.gitDirectory = gitDir.string();
2025-09-29T03:49:00.0267641Z                                                 ^
2025-09-29T03:49:00.0268443Z src/core/GitManager.cpp:131:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0268602Z         } else {
2025-09-29T03:49:00.0268759Z                 ^
2025-09-29T03:49:00.0269345Z src/core/GitManager.cpp:132:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0269562Z             // Handle git worktrees and submodules
2025-09-29T03:49:00.0269740Z                                                   ^
2025-09-29T03:49:00.0270351Z src/core/GitManager.cpp:133:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0270569Z             std::ifstream gitFile(gitDir);
2025-09-29T03:49:00.0270747Z                                           ^
2025-09-29T03:49:00.0271329Z src/core/GitManager.cpp:134:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0271504Z             std::string line;
2025-09-29T03:49:00.0271664Z                              ^
2025-09-29T03:49:00.0272243Z src/core/GitManager.cpp:135:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0272613Z             if (std::getline(gitFile, line) && line.substr(0, 8) == "gitdir: ") {
2025-09-29T03:49:00.0272835Z                                                                                  ^
2025-09-29T03:49:00.0273425Z src/core/GitManager.cpp:136:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0273645Z                 repo.gitDirectory = line.substr(8);
2025-09-29T03:49:00.0273826Z                                                    ^
2025-09-29T03:49:00.0274402Z src/core/GitManager.cpp:137:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0274762Z             }
2025-09-29T03:49:00.0274904Z              ^
2025-09-29T03:49:00.0275475Z src/core/GitManager.cpp:138:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0275625Z         }
2025-09-29T03:49:00.0275769Z          ^
2025-09-29T03:49:00.0276338Z src/core/GitManager.cpp:139:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0276488Z     } else {
2025-09-29T03:49:00.0276630Z             ^
2025-09-29T03:49:00.0277200Z src/core/GitManager.cpp:140:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0277372Z         // Bare repository
2025-09-29T03:49:00.0277538Z                           ^
2025-09-29T03:49:00.0278313Z src/core/GitManager.cpp:141:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0278563Z         repo.gitDirectory = pImpl->repositoryPath;
2025-09-29T03:49:00.0278757Z                                                   ^
2025-09-29T03:49:00.0279327Z src/core/GitManager.cpp:142:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0279498Z         repo.isBare = true;
2025-09-29T03:49:00.0279662Z                            ^
2025-09-29T03:49:00.0280235Z src/core/GitManager.cpp:143:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0280380Z     }
2025-09-29T03:49:00.0280531Z      ^
2025-09-29T03:49:00.0281381Z src/core/GitManager.cpp:145:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0281586Z     repo.head = getCurrentBranch();
2025-09-29T03:49:00.0281747Z                                    ^
2025-09-29T03:49:00.0282317Z src/core/GitManager.cpp:146:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0282498Z     repo.status = getStatus();
2025-09-29T03:49:00.0282754Z                               ^
2025-09-29T03:49:00.0283330Z src/core/GitManager.cpp:151:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0283552Z GitStatus GitManager::getStatus() const {
2025-09-29T03:49:00.0283719Z                                          ^
2025-09-29T03:49:00.0284285Z src/core/GitManager.cpp:152:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0284674Z     auto result = executeGitCommand({"status", "--porcelain=v1", "-b"});
2025-09-29T03:49:00.0284883Z                                                                         ^
2025-09-29T03:49:00.0285451Z src/core/GitManager.cpp:153:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0285629Z     if (!result.isSuccess()) {
2025-09-29T03:49:00.0285780Z                               ^
2025-09-29T03:49:00.0286339Z src/core/GitManager.cpp:154:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0286495Z         return {};
2025-09-29T03:49:00.0286644Z                   ^
2025-09-29T03:49:00.0287204Z src/core/GitManager.cpp:155:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0287348Z     }
2025-09-29T03:49:00.0287487Z      ^
2025-09-29T03:49:00.0288250Z src/core/GitManager.cpp:157:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0288414Z     GitStatus status;
2025-09-29T03:49:00.0288570Z                      ^
2025-09-29T03:49:00.0289146Z src/core/GitManager.cpp:158:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0289382Z     auto lines = parseGitOutput(result.output);
2025-09-29T03:49:00.0289567Z                                                ^
2025-09-29T03:49:00.0290126Z src/core/GitManager.cpp:160:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0290393Z     if (!lines.empty() && lines[0].substr(0, 2) == "##") {
2025-09-29T03:49:00.0290588Z                                                           ^
2025-09-29T03:49:00.0291360Z src/core/GitManager.cpp:161:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0291596Z         std::string branchLine = lines[0].substr(3);
2025-09-29T03:49:00.0291784Z                                                     ^
2025-09-29T03:49:00.0292341Z src/core/GitManager.cpp:163:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0292525Z         // Parse branch information
2025-09-29T03:49:00.0292687Z                                    ^
2025-09-29T03:49:00.0293260Z src/core/GitManager.cpp:164:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0293627Z         std::regex branchRegex(R"(([^.]+)(?:\.\.\.([^[\s]+))?\s*(?:\[([^\]]+)\])?)");
2025-09-29T03:49:00.0293781Z                                ^
2025-09-29T03:49:00.0294345Z src/core/GitManager.cpp:164:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0294704Z         std::regex branchRegex(R"(([^.]+)(?:\.\.\.([^[\s]+))?\s*(?:\[([^\]]+)\])?)");
2025-09-29T03:49:00.0294910Z                                                                                      ^
2025-09-29T03:49:00.0295480Z src/core/GitManager.cpp:165:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0295651Z         std::smatch matches;
2025-09-29T03:49:00.0295807Z                             ^
2025-09-29T03:49:00.0296375Z src/core/GitManager.cpp:167:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0296869Z         if (std::regex_search(branchLine, matches, branchRegex)) {
2025-09-29T03:49:00.0297067Z                                                                   ^
2025-09-29T03:49:00.0297635Z src/core/GitManager.cpp:168:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0298045Z             status.currentBranch = matches[1].str();
2025-09-29T03:49:00.0298233Z                                                     ^
2025-09-29T03:49:00.0298829Z src/core/GitManager.cpp:169:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0299011Z             if (matches[2].matched) {
2025-09-29T03:49:00.0299174Z                                      ^
2025-09-29T03:49:00.0299741Z src/core/GitManager.cpp:170:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0299985Z                 status.upstreamBranch = matches[2].str();
2025-09-29T03:49:00.0300176Z                                                          ^
2025-09-29T03:49:00.0300746Z src/core/GitManager.cpp:171:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0300897Z             }
2025-09-29T03:49:00.0301039Z              ^
2025-09-29T03:49:00.0301602Z src/core/GitManager.cpp:173:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0301788Z             if (matches[3].matched) {
2025-09-29T03:49:00.0301955Z                                      ^
2025-09-29T03:49:00.0302590Z src/core/GitManager.cpp:174:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0302824Z                 std::string trackInfo = matches[3].str();
2025-09-29T03:49:00.0303005Z                                                          ^
2025-09-29T03:49:00.0303567Z src/core/GitManager.cpp:175:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0303856Z                 std::regex trackRegex(R"(ahead (\d+)|behind (\d+))");
2025-09-29T03:49:00.0304059Z                                                                      ^
2025-09-29T03:49:00.0304628Z src/core/GitManager.cpp:176:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0305073Z                 std::sregex_iterator iter(trackInfo.begin(), trackInfo.end(), trackRegex);
2025-09-29T03:49:00.0305287Z                                                                              ^
2025-09-29T03:49:00.0306059Z src/core/GitManager.cpp:176:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0306495Z                 std::sregex_iterator iter(trackInfo.begin(), trackInfo.end(), trackRegex);
2025-09-29T03:49:00.0306715Z                                                                                           ^
2025-09-29T03:49:00.0307281Z src/core/GitManager.cpp:177:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0307483Z                 std::sregex_iterator end;
2025-09-29T03:49:00.0307661Z                                          ^
2025-09-29T03:49:00.0308418Z src/core/GitManager.cpp:179:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0308609Z                 for (; iter != end; ++iter) {
2025-09-29T03:49:00.0308793Z                                              ^
2025-09-29T03:49:00.0309356Z src/core/GitManager.cpp:180:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0309551Z                     if ((*iter)[1].matched) {
2025-09-29T03:49:00.0309726Z                                              ^
2025-09-29T03:49:00.0310293Z src/core/GitManager.cpp:181:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0310575Z                         status.aheadCount = std::stoi((*iter)[1].str());
2025-09-29T03:49:00.0310784Z                                                                         ^
2025-09-29T03:49:00.0311548Z src/core/GitManager.cpp:182:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0311749Z                     } else if ((*iter)[2].matched) {
2025-09-29T03:49:00.0311924Z                                                     ^
2025-09-29T03:49:00.0312495Z src/core/GitManager.cpp:183:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0312767Z                         status.behindCount = std::stoi((*iter)[2].str());
2025-09-29T03:49:00.0312972Z                                                                          ^
2025-09-29T03:49:00.0313538Z src/core/GitManager.cpp:184:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0313688Z                     }
2025-09-29T03:49:00.0313837Z                      ^
2025-09-29T03:49:00.0314398Z src/core/GitManager.cpp:185:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0314541Z                 }
2025-09-29T03:49:00.0314681Z                  ^
2025-09-29T03:49:00.0315248Z src/core/GitManager.cpp:186:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0315396Z             }
2025-09-29T03:49:00.0315537Z              ^
2025-09-29T03:49:00.0316094Z src/core/GitManager.cpp:187:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0316246Z         }
2025-09-29T03:49:00.0316385Z          ^
2025-09-29T03:49:00.0316950Z src/core/GitManager.cpp:188:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0317096Z     }
2025-09-29T03:49:00.0317233Z      ^
2025-09-29T03:49:00.0317789Z src/core/GitManager.cpp:190:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0318129Z     // Parse file changes
2025-09-29T03:49:00.0318295Z                          ^
2025-09-29T03:49:00.0318854Z src/core/GitManager.cpp:191:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0319076Z     for (size_t i = 1; i < lines.size(); ++i) {
2025-09-29T03:49:00.0319263Z                                                ^
2025-09-29T03:49:00.0319821Z src/core/GitManager.cpp:192:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0320005Z         if (lines[i].length() >= 3) {
2025-09-29T03:49:00.0320173Z                                      ^
2025-09-29T03:49:00.0320740Z src/core/GitManager.cpp:193:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0321226Z             GitFileChange change = parseFileChange(lines[i]);
2025-09-29T03:49:00.0321420Z                                                              ^
2025-09-29T03:49:00.0321979Z src/core/GitManager.cpp:194:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0322185Z             status.changes.push_back(change);
2025-09-29T03:49:00.0322352Z                                              ^
2025-09-29T03:49:00.0322928Z src/core/GitManager.cpp:196:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0323357Z             // Any change (including untracked files) means we have uncommitted changes
2025-09-29T03:49:00.0323560Z                                                                                ^
2025-09-29T03:49:00.0324126Z src/core/GitManager.cpp:196:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0324548Z             // Any change (including untracked files) means we have uncommitted changes
2025-09-29T03:49:00.0324754Z                                                                                        ^
2025-09-29T03:49:00.0325318Z src/core/GitManager.cpp:197:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0325555Z             if (change.status != FileStatus::Ignored) {
2025-09-29T03:49:00.0325736Z                                                        ^
2025-09-29T03:49:00.0326481Z src/core/GitManager.cpp:198:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0326709Z                 status.hasUncommittedChanges = true;
2025-09-29T03:49:00.0326884Z                                                     ^
2025-09-29T03:49:00.0327453Z src/core/GitManager.cpp:199:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0327595Z             }
2025-09-29T03:49:00.0327738Z              ^
2025-09-29T03:49:00.0328498Z src/core/GitManager.cpp:200:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0328689Z             if (change.isStaged) {
2025-09-29T03:49:00.0328847Z                                   ^
2025-09-29T03:49:00.0329411Z src/core/GitManager.cpp:201:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0329629Z                 status.hasStagedChanges = true;
2025-09-29T03:49:00.0329801Z                                                ^
2025-09-29T03:49:00.0330365Z src/core/GitManager.cpp:202:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0330650Z             } else if (change.status != FileStatus::Untracked) {
2025-09-29T03:49:00.0330841Z                                                                 ^
2025-09-29T03:49:00.0331402Z src/core/GitManager.cpp:203:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0331625Z                 status.hasUnstagedChanges = true;
2025-09-29T03:49:00.0331807Z                                                  ^
2025-09-29T03:49:00.0332370Z src/core/GitManager.cpp:204:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0332518Z             }
2025-09-29T03:49:00.0332658Z              ^
2025-09-29T03:49:00.0333217Z src/core/GitManager.cpp:205:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0333357Z         }
2025-09-29T03:49:00.0333504Z          ^
2025-09-29T03:49:00.0334071Z src/core/GitManager.cpp:206:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0334209Z     }
2025-09-29T03:49:00.0334355Z      ^
2025-09-29T03:49:00.0334913Z src/core/GitManager.cpp:211:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0335166Z std::string GitManager::getCurrentBranch() const {
2025-09-29T03:49:00.0335340Z                                                   ^
2025-09-29T03:49:00.0336129Z src/core/GitManager.cpp:212:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0336468Z     auto result = executeGitCommand({"branch", "--show-current"});
2025-09-29T03:49:00.0336659Z                                                                   ^
2025-09-29T03:49:00.0337227Z src/core/GitManager.cpp:213:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0337494Z     if (result.isSuccess() && !result.output.empty()) {
2025-09-29T03:49:00.0337682Z                                                        ^
2025-09-29T03:49:00.0338440Z src/core/GitManager.cpp:214:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0338655Z         return GitUtils::trim(result.output);
2025-09-29T03:49:00.0338824Z                                              ^
2025-09-29T03:49:00.0339391Z src/core/GitManager.cpp:215:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0339540Z     }
2025-09-29T03:49:00.0339675Z      ^
2025-09-29T03:49:00.0340234Z src/core/GitManager.cpp:217:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0340424Z     // Fallback: try symbolic-ref
2025-09-29T03:49:00.0340582Z                                  ^
2025-09-29T03:49:00.0341147Z src/core/GitManager.cpp:218:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0341506Z     result = executeGitCommand({"symbolic-ref", "--short", "HEAD"});
2025-09-29T03:49:00.0341885Z                                                                     ^
2025-09-29T03:49:00.0342445Z src/core/GitManager.cpp:219:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0342714Z     if (result.isSuccess() && !result.output.empty()) {
2025-09-29T03:49:00.0342891Z                                                        ^
2025-09-29T03:49:00.0343444Z src/core/GitManager.cpp:220:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0343667Z         return GitUtils::trim(result.output);
2025-09-29T03:49:00.0343834Z                                              ^
2025-09-29T03:49:00.0344384Z src/core/GitManager.cpp:221:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0344520Z     }
2025-09-29T03:49:00.0344663Z      ^
2025-09-29T03:49:00.0345214Z src/core/GitManager.cpp:223:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0345390Z     // Fallback: detached HEAD
2025-09-29T03:49:00.0345562Z                               ^
2025-09-29T03:49:00.0346111Z src/core/GitManager.cpp:224:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0346472Z     result = executeGitCommand({"rev-parse", "--short", "HEAD"});
2025-09-29T03:49:00.0346667Z                                                                  ^
2025-09-29T03:49:00.0347220Z src/core/GitManager.cpp:225:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0347485Z     if (result.isSuccess() && !result.output.empty()) {
2025-09-29T03:49:00.0347664Z                                                        ^
2025-09-29T03:49:00.0348428Z src/core/GitManager.cpp:226:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0348747Z         return "HEAD detached at " + GitUtils::trim(result.output);
2025-09-29T03:49:00.0348939Z                                                                    ^
2025-09-29T03:49:00.0349507Z src/core/GitManager.cpp:227:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0349645Z     }
2025-09-29T03:49:00.0349779Z      ^
2025-09-29T03:49:00.0350341Z src/core/GitManager.cpp:232:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0350599Z std::string GitManager::getRepositoryPath() const {
2025-09-29T03:49:00.0350772Z                                                    ^
2025-09-29T03:49:00.0351555Z src/core/GitManager.cpp:236:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0352054Z GitOperationResult GitManager::addFiles(const std::vector<std::string>& files) {
2025-09-29T03:49:00.0352249Z                                                                       ^
2025-09-29T03:49:00.0352811Z src/core/GitManager.cpp:236:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0353302Z GitOperationResult GitManager::addFiles(const std::vector<std::string>& files) {
2025-09-29T03:49:00.0353502Z                                                                        ^
2025-09-29T03:49:00.0354060Z src/core/GitManager.cpp:236:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0354553Z GitOperationResult GitManager::addFiles(const std::vector<std::string>& files) {
2025-09-29T03:49:00.0354753Z                                                                                 ^
2025-09-29T03:49:00.0355313Z src/core/GitManager.cpp:237:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0355487Z     if (files.empty()) {
2025-09-29T03:49:00.0355637Z                         ^
2025-09-29T03:49:00.0356189Z src/core/GitManager.cpp:238:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0356442Z         return {GitCommandResult::Success, "", "", 0};
2025-09-29T03:49:00.0356614Z                                                       ^
2025-09-29T03:49:00.0357342Z src/core/GitManager.cpp:239:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0357487Z     }
2025-09-29T03:49:00.0357626Z      ^
2025-09-29T03:49:00.0358364Z src/core/GitManager.cpp:241:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0358579Z     std::vector<std::string> args = {"add"};
2025-09-29T03:49:00.0358757Z                                             ^
2025-09-29T03:49:00.0359320Z src/core/GitManager.cpp:242:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0359589Z     args.insert(args.end(), files.begin(), files.end());
2025-09-29T03:49:00.0359778Z                                                         ^
2025-09-29T03:49:00.0360332Z src/core/GitManager.cpp:247:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0360582Z GitOperationResult GitManager::addAllFiles() {
2025-09-29T03:49:00.0360769Z                                               ^
2025-09-29T03:49:00.0361327Z src/core/GitManager.cpp:251:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0361932Z GitOperationResult GitManager::removeFiles(const std::vector<std::string>& files, bool cached) {
2025-09-29T03:49:00.0362079Z                   ^
2025-09-29T03:49:00.0362624Z src/core/GitManager.cpp:251:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0363228Z GitOperationResult GitManager::removeFiles(const std::vector<std::string>& files, bool cached) {
2025-09-29T03:49:00.0363429Z                                                                          ^
2025-09-29T03:49:00.0363976Z src/core/GitManager.cpp:251:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0364576Z GitOperationResult GitManager::removeFiles(const std::vector<std::string>& files, bool cached) {
2025-09-29T03:49:00.0364770Z                                                                           ^
2025-09-29T03:49:00.0365331Z src/core/GitManager.cpp:251:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0365928Z GitOperationResult GitManager::removeFiles(const std::vector<std::string>& files, bool cached) {
2025-09-29T03:49:00.0366132Z                                                                                                 ^
2025-09-29T03:49:00.0366687Z src/core/GitManager.cpp:252:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0367043Z     if (files.empty()) {
2025-09-29T03:49:00.0367193Z                         ^
2025-09-29T03:49:00.0367744Z src/core/GitManager.cpp:253:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0368170Z         return {GitCommandResult::Success, "", "", 0};
2025-09-29T03:49:00.0368344Z                                                       ^
2025-09-29T03:49:00.0368896Z src/core/GitManager.cpp:254:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0369041Z     }
2025-09-29T03:49:00.0369175Z      ^
2025-09-29T03:49:00.0369725Z src/core/GitManager.cpp:256:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0369925Z     std::vector<std::string> args = {"rm"};
2025-09-29T03:49:00.0370090Z                                            ^
2025-09-29T03:49:00.0370636Z src/core/GitManager.cpp:257:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0370799Z     if (cached) {
2025-09-29T03:49:00.0370939Z                  ^
2025-09-29T03:49:00.0371483Z src/core/GitManager.cpp:258:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0371669Z         args.push_back("--cached");
2025-09-29T03:49:00.0371828Z                                    ^
2025-09-29T03:49:00.0372376Z src/core/GitManager.cpp:259:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0372516Z     }
2025-09-29T03:49:00.0372649Z      ^
2025-09-29T03:49:00.0373408Z src/core/GitManager.cpp:260:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0373680Z     args.insert(args.end(), files.begin(), files.end());
2025-09-29T03:49:00.0373868Z                                                         ^
2025-09-29T03:49:00.0374412Z src/core/GitManager.cpp:265:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0374929Z GitOperationResult GitManager::resetFiles(const std::vector<std::string>& files) {
2025-09-29T03:49:00.0375075Z                   ^
2025-09-29T03:49:00.0375625Z src/core/GitManager.cpp:265:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0376122Z GitOperationResult GitManager::resetFiles(const std::vector<std::string>& files) {
2025-09-29T03:49:00.0376322Z                                                                         ^
2025-09-29T03:49:00.0376876Z src/core/GitManager.cpp:265:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0377369Z GitOperationResult GitManager::resetFiles(const std::vector<std::string>& files) {
2025-09-29T03:49:00.0377567Z                                                                          ^
2025-09-29T03:49:00.0378344Z src/core/GitManager.cpp:265:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0378842Z GitOperationResult GitManager::resetFiles(const std::vector<std::string>& files) {
2025-09-29T03:49:00.0379056Z                                                                                   ^
2025-09-29T03:49:00.0379602Z src/core/GitManager.cpp:266:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0379766Z     if (files.empty()) {
2025-09-29T03:49:00.0379912Z                         ^
2025-09-29T03:49:00.0380462Z src/core/GitManager.cpp:267:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0380699Z         return executeGitCommand({"reset", "HEAD"});
2025-09-29T03:49:00.0380875Z                                                     ^
2025-09-29T03:49:00.0381429Z src/core/GitManager.cpp:268:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0381565Z     }
2025-09-29T03:49:00.0381698Z      ^
2025-09-29T03:49:00.0382254Z src/core/GitManager.cpp:270:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0382688Z     std::vector<std::string> args = {"reset", "HEAD"};
2025-09-29T03:49:00.0382861Z                                                       ^
2025-09-29T03:49:00.0383407Z src/core/GitManager.cpp:271:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0383683Z     args.insert(args.end(), files.begin(), files.end());
2025-09-29T03:49:00.0383856Z                                                         ^
2025-09-29T03:49:00.0384402Z src/core/GitManager.cpp:276:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0384857Z GitOperationResult GitManager::resetHard(const std::string& commitHash) {
2025-09-29T03:49:00.0385035Z                                                           ^
2025-09-29T03:49:00.0385582Z src/core/GitManager.cpp:276:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0386022Z GitOperationResult GitManager::resetHard(const std::string& commitHash) {
2025-09-29T03:49:00.0386212Z                                                            ^
2025-09-29T03:49:00.0386758Z src/core/GitManager.cpp:276:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0387197Z GitOperationResult GitManager::resetHard(const std::string& commitHash) {
2025-09-29T03:49:00.0387386Z                                                                          ^
2025-09-29T03:49:00.0388107Z src/core/GitManager.cpp:280:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0388786Z GitOperationResult GitManager::commit(const std::string& message, bool amend) {
2025-09-29T03:49:00.0389093Z                                                        ^
2025-09-29T03:49:00.0389642Z src/core/GitManager.cpp:280:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0390123Z GitOperationResult GitManager::commit(const std::string& message, bool amend) {
2025-09-29T03:49:00.0390297Z                                                         ^
2025-09-29T03:49:00.0390853Z src/core/GitManager.cpp:280:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0391333Z GitOperationResult GitManager::commit(const std::string& message, bool amend) {
2025-09-29T03:49:00.0391527Z                                                                                ^
2025-09-29T03:49:00.0392072Z src/core/GitManager.cpp:281:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0392360Z     std::vector<std::string> args = {"commit", "-m", message};
2025-09-29T03:49:00.0392561Z                                                               ^
2025-09-29T03:49:00.0393109Z src/core/GitManager.cpp:282:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0393255Z     if (amend) {
2025-09-29T03:49:00.0393399Z                 ^
2025-09-29T03:49:00.0393945Z src/core/GitManager.cpp:283:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0394160Z         args.insert(args.begin() + 1, "--amend");
2025-09-29T03:49:00.0394337Z                                                  ^
2025-09-29T03:49:00.0394883Z src/core/GitManager.cpp:284:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0395017Z     }
2025-09-29T03:49:00.0395152Z      ^
2025-09-29T03:49:00.0395705Z src/core/GitManager.cpp:289:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0396166Z GitOperationResult GitManager::commitWithFiles(const std::string& message, 
2025-09-29T03:49:00.0396312Z                   ^
2025-09-29T03:49:00.0396865Z src/core/GitManager.cpp:289:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0397316Z GitOperationResult GitManager::commitWithFiles(const std::string& message, 
2025-09-29T03:49:00.0397502Z                                                                 ^
2025-09-29T03:49:00.0398242Z src/core/GitManager.cpp:289:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0398896Z GitOperationResult GitManager::commitWithFiles(const std::string& message, 
2025-09-29T03:49:00.0399083Z                                                                  ^
2025-09-29T03:49:00.0399637Z src/core/GitManager.cpp:289:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0400089Z GitOperationResult GitManager::commitWithFiles(const std::string& message, 
2025-09-29T03:49:00.0400283Z                                                                           ^
2025-09-29T03:49:00.0400835Z src/core/GitManager.cpp:290:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0401084Z                                               const std::vector<std::string>& files) {
2025-09-29T03:49:00.0401278Z                                                                             ^
2025-09-29T03:49:00.0401834Z src/core/GitManager.cpp:290:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0402150Z                                               const std::vector<std::string>& files) {
2025-09-29T03:49:00.0402345Z                                                                              ^
2025-09-29T03:49:00.0402894Z src/core/GitManager.cpp:290:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0403140Z                                               const std::vector<std::string>& files) {
2025-09-29T03:49:00.0403602Z                                                                                       ^
2025-09-29T03:49:00.0404156Z src/core/GitManager.cpp:291:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0404328Z     // First add the files
2025-09-29T03:49:00.0404478Z                           ^
2025-09-29T03:49:00.0405027Z src/core/GitManager.cpp:292:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0405235Z     auto addResult = addFiles(files);
2025-09-29T03:49:00.0405393Z                                      ^
2025-09-29T03:49:00.0405941Z src/core/GitManager.cpp:293:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0406132Z     if (!addResult.isSuccess()) {
2025-09-29T03:49:00.0406285Z                                  ^
2025-09-29T03:49:00.0406831Z src/core/GitManager.cpp:294:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0406994Z         return addResult;
2025-09-29T03:49:00.0407159Z                          ^
2025-09-29T03:49:00.0407705Z src/core/GitManager.cpp:295:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0407841Z     }
2025-09-29T03:49:00.0408160Z      ^
2025-09-29T03:49:00.0408708Z src/core/GitManager.cpp:297:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0408857Z     // Then commit
2025-09-29T03:49:00.0409000Z                   ^
2025-09-29T03:49:00.0409553Z src/core/GitManager.cpp:301:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0409904Z std::vector<GitCommit> GitManager::getCommitHistory(int maxCount,
2025-09-29T03:49:00.0410053Z                       ^
2025-09-29T03:49:00.0410608Z src/core/GitManager.cpp:301:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0410952Z std::vector<GitCommit> GitManager::getCommitHistory(int maxCount,
2025-09-29T03:49:00.0411146Z                                                                  ^
2025-09-29T03:49:00.0411707Z src/core/GitManager.cpp:302:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0411924Z                                                    GitLogOptions options,
2025-09-29T03:49:00.0412114Z                                                                          ^
2025-09-29T03:49:00.0412666Z src/core/GitManager.cpp:303:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0413140Z                                                    const std::string& branch,
2025-09-29T03:49:00.0413330Z                                                                     ^
2025-09-29T03:49:00.0413883Z src/core/GitManager.cpp:303:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0414097Z                                                    const std::string& branch,
2025-09-29T03:49:00.0414286Z                                                                      ^
2025-09-29T03:49:00.0414844Z src/core/GitManager.cpp:303:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0415055Z                                                    const std::string& branch,
2025-09-29T03:49:00.0415245Z                                                                              ^
2025-09-29T03:49:00.0415797Z src/core/GitManager.cpp:304:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0416042Z                                                    const std::string& filePath) const {
2025-09-29T03:49:00.0416225Z                                                                     ^
2025-09-29T03:49:00.0416775Z src/core/GitManager.cpp:304:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0417009Z                                                    const std::string& filePath) const {
2025-09-29T03:49:00.0417193Z                                                                      ^
2025-09-29T03:49:00.0418097Z src/core/GitManager.cpp:304:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0418352Z                                                    const std::string& filePath) const {
2025-09-29T03:49:00.0418557Z                                                                                        ^
2025-09-29T03:49:00.0419103Z src/core/GitManager.cpp:305:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0419564Z     std::vector<std::string> args = {"log", "--pretty=format:%H|%h|%an|%ae|%s|%ct|%P", "-z"};
2025-09-29T03:49:00.0419721Z                                      ^
2025-09-29T03:49:00.0420270Z src/core/GitManager.cpp:305:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0420717Z     std::vector<std::string> args = {"log", "--pretty=format:%H|%h|%an|%ae|%s|%ct|%P", "-z"};
2025-09-29T03:49:00.0420933Z                                                                                              ^
2025-09-29T03:49:00.0421482Z src/core/GitManager.cpp:307:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0421649Z     if (maxCount > 0) {
2025-09-29T03:49:00.0421795Z                        ^
2025-09-29T03:49:00.0422340Z src/core/GitManager.cpp:308:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0422589Z         args.push_back("-" + std::to_string(maxCount));
2025-09-29T03:49:00.0422772Z                                                        ^
2025-09-29T03:49:00.0423314Z src/core/GitManager.cpp:309:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0423453Z     }
2025-09-29T03:49:00.0423585Z      ^
2025-09-29T03:49:00.0424123Z src/core/GitManager.cpp:311:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0424510Z     if ((options & GitLogOptions::FirstParentOnly) != GitLogOptions::None) {
2025-09-29T03:49:00.0424710Z                                                                             ^
2025-09-29T03:49:00.0425258Z src/core/GitManager.cpp:312:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0425455Z         args.push_back("--first-parent");
2025-09-29T03:49:00.0425623Z                                          ^
2025-09-29T03:49:00.0426160Z src/core/GitManager.cpp:313:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0426481Z     }
2025-09-29T03:49:00.0426624Z      ^
2025-09-29T03:49:00.0427167Z src/core/GitManager.cpp:315:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0427518Z     if ((options & GitLogOptions::ShowMerges) == GitLogOptions::None) {
2025-09-29T03:49:00.0427716Z                                                                        ^
2025-09-29T03:49:00.0428472Z src/core/GitManager.cpp:316:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0428673Z         args.push_back("--no-merges");
2025-09-29T03:49:00.0428832Z                                       ^
2025-09-29T03:49:00.0429398Z src/core/GitManager.cpp:317:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0429532Z     }
2025-09-29T03:49:00.0429663Z      ^
2025-09-29T03:49:00.0430218Z src/core/GitManager.cpp:319:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0430749Z     if ((options & GitLogOptions::FollowRenames) != GitLogOptions::None && !filePath.empty()) {
2025-09-29T03:49:00.0430941Z                                                                           ^
2025-09-29T03:49:00.0431516Z src/core/GitManager.cpp:319:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0432032Z     if ((options & GitLogOptions::FollowRenames) != GitLogOptions::None && !filePath.empty()) {
2025-09-29T03:49:00.0432468Z                                                                                                ^
2025-09-29T03:49:00.0433032Z src/core/GitManager.cpp:320:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0433211Z         args.push_back("--follow");
2025-09-29T03:49:00.0433368Z                                    ^
2025-09-29T03:49:00.0433919Z src/core/GitManager.cpp:321:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0434054Z     }
2025-09-29T03:49:00.0434196Z      ^
2025-09-29T03:49:00.0434753Z src/core/GitManager.cpp:323:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0434924Z     if (!branch.empty()) {
2025-09-29T03:49:00.0435073Z                           ^
2025-09-29T03:49:00.0435621Z src/core/GitManager.cpp:324:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0435805Z         args.push_back(branch);
2025-09-29T03:49:00.0435960Z                                ^
2025-09-29T03:49:00.0436515Z src/core/GitManager.cpp:325:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0436659Z     }
2025-09-29T03:49:00.0436793Z      ^
2025-09-29T03:49:00.0437339Z src/core/GitManager.cpp:327:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0437520Z     if (!filePath.empty()) {
2025-09-29T03:49:00.0437670Z                             ^
2025-09-29T03:49:00.0438413Z src/core/GitManager.cpp:328:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0438594Z         args.push_back("--");
2025-09-29T03:49:00.0438755Z                              ^
2025-09-29T03:49:00.0439304Z src/core/GitManager.cpp:329:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0439485Z         args.push_back(filePath);
2025-09-29T03:49:00.0439647Z                                  ^
2025-09-29T03:49:00.0440193Z src/core/GitManager.cpp:330:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0440337Z     }
2025-09-29T03:49:00.0440482Z      ^
2025-09-29T03:49:00.0441034Z src/core/GitManager.cpp:332:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0441241Z     auto result = executeGitCommand(args);
2025-09-29T03:49:00.0441401Z                                           ^
2025-09-29T03:49:00.0441949Z src/core/GitManager.cpp:333:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0442317Z     if (!result.isSuccess()) {
2025-09-29T03:49:00.0442463Z                               ^
2025-09-29T03:49:00.0443016Z src/core/GitManager.cpp:334:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0443160Z         return {};
2025-09-29T03:49:00.0443296Z                   ^
2025-09-29T03:49:00.0443845Z src/core/GitManager.cpp:335:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0443979Z     }
2025-09-29T03:49:00.0444117Z      ^
2025-09-29T03:49:00.0444648Z src/core/GitManager.cpp:337:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0444841Z     std::vector<GitCommit> commits;
2025-09-29T03:49:00.0444993Z                                    ^
2025-09-29T03:49:00.0445536Z src/core/GitManager.cpp:338:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0445797Z     // Split by null character since we used -z flag
2025-09-29T03:49:00.0445985Z                                                     ^
2025-09-29T03:49:00.0446541Z src/core/GitManager.cpp:339:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0446959Z     auto commitBlocks = GitUtils::split(result.output, std::string(1, '\0'));
2025-09-29T03:49:00.0447152Z                                                                              ^
2025-09-29T03:49:00.0447698Z src/core/GitManager.cpp:341:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0448270Z     for (const auto& block : commitBlocks) {
2025-09-29T03:49:00.0448430Z                    ^
2025-09-29T03:49:00.0448976Z src/core/GitManager.cpp:341:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0449184Z     for (const auto& block : commitBlocks) {
2025-09-29T03:49:00.0449334Z                     ^
2025-09-29T03:49:00.0449875Z src/core/GitManager.cpp:341:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0450082Z     for (const auto& block : commitBlocks) {
2025-09-29T03:49:00.0450254Z                                             ^
2025-09-29T03:49:00.0450798Z src/core/GitManager.cpp:342:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0450968Z         if (!block.empty()) {
2025-09-29T03:49:00.0451127Z                              ^
2025-09-29T03:49:00.0451684Z src/core/GitManager.cpp:343:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0451910Z             commits.push_back(parseCommit(block));
2025-09-29T03:49:00.0452087Z                                                   ^
2025-09-29T03:49:00.0452642Z src/core/GitManager.cpp:344:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0452780Z         }
2025-09-29T03:49:00.0452918Z          ^
2025-09-29T03:49:00.0453478Z src/core/GitManager.cpp:345:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0453623Z     }
2025-09-29T03:49:00.0453758Z      ^
2025-09-29T03:49:00.0454313Z src/core/GitManager.cpp:350:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0454762Z std::optional<GitCommit> GitManager::getCommit(const std::string& hash) const {
2025-09-29T03:49:00.0454954Z                                                                 ^
2025-09-29T03:49:00.0455509Z src/core/GitManager.cpp:350:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0455950Z std::optional<GitCommit> GitManager::getCommit(const std::string& hash) const {
2025-09-29T03:49:00.0456138Z                                                                  ^
2025-09-29T03:49:00.0456693Z src/core/GitManager.cpp:350:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0457125Z std::optional<GitCommit> GitManager::getCommit(const std::string& hash) const {
2025-09-29T03:49:00.0457322Z                                                                                ^
2025-09-29T03:49:00.0458240Z src/core/GitManager.cpp:351:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0458737Z     auto result = executeGitCommand({"show", "--pretty=format:%H|%h|%an|%ae|%s|%B|%ct|%P", 
2025-09-29T03:49:00.0458879Z                  ^
2025-09-29T03:49:00.0459429Z src/core/GitManager.cpp:351:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0459914Z     auto result = executeGitCommand({"show", "--pretty=format:%H|%h|%an|%ae|%s|%B|%ct|%P", 
2025-09-29T03:49:00.0460116Z                                                                                           ^
2025-09-29T03:49:00.0460666Z src/core/GitManager.cpp:352:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0460873Z                                    "--no-patch", hash});
2025-09-29T03:49:00.0461064Z                                                         ^
2025-09-29T03:49:00.0461634Z src/core/GitManager.cpp:353:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0461907Z     if (!result.isSuccess() || result.output.empty()) {
2025-09-29T03:49:00.0462084Z                                                        ^
2025-09-29T03:49:00.0462645Z src/core/GitManager.cpp:354:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0462831Z         return std::nullopt;
2025-09-29T03:49:00.0462982Z                             ^
2025-09-29T03:49:00.0463734Z src/core/GitManager.cpp:355:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0463878Z     }
2025-09-29T03:49:00.0464023Z      ^
2025-09-29T03:49:00.0464582Z src/core/GitManager.cpp:360:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0465143Z GitOperationResult GitManager::executeGitCommand(const std::vector<std::string>& args,
2025-09-29T03:49:00.0465302Z                   ^
2025-09-29T03:49:00.0465862Z src/core/GitManager.cpp:360:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0466406Z GitOperationResult GitManager::executeGitCommand(const std::vector<std::string>& args,
2025-09-29T03:49:00.0466620Z                                                                                ^
2025-09-29T03:49:00.0467177Z src/core/GitManager.cpp:360:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0467728Z GitOperationResult GitManager::executeGitCommand(const std::vector<std::string>& args,
2025-09-29T03:49:00.0468121Z                                                                                 ^
2025-09-29T03:49:00.0468687Z src/core/GitManager.cpp:360:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0469234Z GitOperationResult GitManager::executeGitCommand(const std::vector<std::string>& args,
2025-09-29T03:49:00.0469446Z                                                                                       ^
2025-09-29T03:49:00.0470010Z src/core/GitManager.cpp:361:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0470244Z                                                const std::string& workingDir,
2025-09-29T03:49:00.0470430Z                                                                 ^
2025-09-29T03:49:00.0471010Z src/core/GitManager.cpp:361:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0471246Z                                                const std::string& workingDir,
2025-09-29T03:49:00.0471436Z                                                                  ^
2025-09-29T03:49:00.0472018Z src/core/GitManager.cpp:361:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0472246Z                                                const std::string& workingDir,
2025-09-29T03:49:00.0472444Z                                                                              ^
2025-09-29T03:49:00.0473233Z src/core/GitManager.cpp:362:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0473526Z                                                ProgressCallback /*progressCallback*/) const {
2025-09-29T03:49:00.0473740Z                                                                                              ^
2025-09-29T03:49:00.0474312Z src/core/GitManager.cpp:363:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0474510Z     std::string gitCommand = "git";
2025-09-29T03:49:00.0474672Z                                    ^
2025-09-29T03:49:00.0475244Z src/core/GitManager.cpp:364:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0475659Z     std::string dir = workingDir.empty() ? pImpl->repositoryPath : workingDir;
2025-09-29T03:49:00.0475860Z                                                                               ^
2025-09-29T03:49:00.0476440Z src/core/GitManager.cpp:366:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0476609Z     SystemCommand cmd;
2025-09-29T03:49:00.0476759Z                       ^
2025-09-29T03:49:00.0477321Z src/core/GitManager.cpp:367:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0477588Z     auto result = cmd.execute(gitCommand, args, dir);
2025-09-29T03:49:00.0477767Z                                                      ^
2025-09-29T03:49:00.0478711Z src/core/GitManager.cpp:369:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0479059Z     GitCommandResult gitResult = GitCommandResult::Success;
2025-09-29T03:49:00.0479252Z                                                            ^
2025-09-29T03:49:00.0479821Z src/core/GitManager.cpp:370:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0480014Z     if (result.exitCode != 0) {
2025-09-29T03:49:00.0480182Z                                ^
2025-09-29T03:49:00.0480746Z src/core/GitManager.cpp:371:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0481142Z         if (result.output.find("not a git repository") != std::string::npos) {
2025-09-29T03:49:00.0481341Z                                                                               ^
2025-09-29T03:49:00.0481909Z src/core/GitManager.cpp:372:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0482206Z             gitResult = GitCommandResult::InvalidRepository;
2025-09-29T03:49:00.0482395Z                                                             ^
2025-09-29T03:49:00.0482974Z src/core/GitManager.cpp:373:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0483176Z         } else if (result.exitCode == 128) {
2025-09-29T03:49:00.0483357Z                                             ^
2025-09-29T03:49:00.0483927Z src/core/GitManager.cpp:374:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0484152Z             gitResult = GitCommandResult::Failed;
2025-09-29T03:49:00.0484332Z                                                  ^
2025-09-29T03:49:00.0484899Z src/core/GitManager.cpp:375:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0485045Z         } else {
2025-09-29T03:49:00.0485194Z                 ^
2025-09-29T03:49:00.0485767Z src/core/GitManager.cpp:376:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0485978Z             gitResult = GitCommandResult::Failed;
2025-09-29T03:49:00.0486156Z                                                  ^
2025-09-29T03:49:00.0486722Z src/core/GitManager.cpp:377:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0486864Z         }
2025-09-29T03:49:00.0487004Z          ^
2025-09-29T03:49:00.0487581Z src/core/GitManager.cpp:378:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0488096Z     }
2025-09-29T03:49:00.0488240Z      ^
2025-09-29T03:49:00.0488817Z src/core/GitManager.cpp:383:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0489255Z std::vector<std::string> GitManager::parseGitOutput(const std::string& output, 
2025-09-29T03:49:00.0489412Z                         ^
2025-09-29T03:49:00.0489984Z src/core/GitManager.cpp:383:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0490423Z std::vector<std::string> GitManager::parseGitOutput(const std::string& output, 
2025-09-29T03:49:00.0490622Z                                                                      ^
2025-09-29T03:49:00.0491184Z src/core/GitManager.cpp:383:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0491618Z std::vector<std::string> GitManager::parseGitOutput(const std::string& output, 
2025-09-29T03:49:00.0491815Z                                                                       ^
2025-09-29T03:49:00.0492389Z src/core/GitManager.cpp:383:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0492825Z std::vector<std::string> GitManager::parseGitOutput(const std::string& output, 
2025-09-29T03:49:00.0493018Z                                                                               ^
2025-09-29T03:49:00.0493581Z src/core/GitManager.cpp:384:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0494031Z                                                    const std::string& delimiter) const {
2025-09-29T03:49:00.0494234Z                                                                     ^
2025-09-29T03:49:00.0494801Z src/core/GitManager.cpp:384:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0495055Z                                                    const std::string& delimiter) const {
2025-09-29T03:49:00.0495255Z                                                                      ^
2025-09-29T03:49:00.0495829Z src/core/GitManager.cpp:384:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0496080Z                                                    const std::string& delimiter) const {
2025-09-29T03:49:00.0496289Z                                                                                         ^
2025-09-29T03:49:00.0496856Z src/core/GitManager.cpp:388:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0497313Z GitCommit GitManager::parseCommit(const std::string& commitData) const {
2025-09-29T03:49:00.0497496Z                                                    ^
2025-09-29T03:49:00.0498260Z src/core/GitManager.cpp:388:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0498704Z GitCommit GitManager::parseCommit(const std::string& commitData) const {
2025-09-29T03:49:00.0498888Z                                                     ^
2025-09-29T03:49:00.0499474Z src/core/GitManager.cpp:388:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0499898Z GitCommit GitManager::parseCommit(const std::string& commitData) const {
2025-09-29T03:49:00.0500104Z                                                                         ^
2025-09-29T03:49:00.0500677Z src/core/GitManager.cpp:389:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0500925Z     auto parts = GitUtils::split(commitData, "|");
2025-09-29T03:49:00.0501115Z                                                   ^
2025-09-29T03:49:00.0501679Z src/core/GitManager.cpp:390:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0501853Z     if (parts.size() < 7) {
2025-09-29T03:49:00.0502033Z                            ^
2025-09-29T03:49:00.0502671Z src/core/GitManager.cpp:391:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0503030Z         return {};
2025-09-29T03:49:00.0503175Z                   ^
2025-09-29T03:49:00.0503751Z src/core/GitManager.cpp:392:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0503895Z     }
2025-09-29T03:49:00.0504034Z      ^
2025-09-29T03:49:00.0504604Z src/core/GitManager.cpp:394:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0504767Z     GitCommit commit;
2025-09-29T03:49:00.0504915Z                      ^
2025-09-29T03:49:00.0505492Z src/core/GitManager.cpp:395:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0505667Z     commit.hash = parts[0];
2025-09-29T03:49:00.0505821Z                            ^
2025-09-29T03:49:00.0506384Z src/core/GitManager.cpp:396:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0506577Z     commit.shortHash = parts[1];
2025-09-29T03:49:00.0506738Z                                 ^
2025-09-29T03:49:00.0507309Z src/core/GitManager.cpp:397:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0507497Z     commit.author = parts[2];
2025-09-29T03:49:00.0507653Z                              ^
2025-09-29T03:49:00.0508458Z src/core/GitManager.cpp:398:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0508641Z     commit.email = parts[3];
2025-09-29T03:49:00.0508797Z                             ^
2025-09-29T03:49:00.0509558Z src/core/GitManager.cpp:399:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0509761Z     commit.shortMessage = parts[4];
2025-09-29T03:49:00.0509934Z                                    ^
2025-09-29T03:49:00.0510497Z src/core/GitManager.cpp:400:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0510854Z     commit.message = parts[4];  // Use the subject as the full message
2025-09-29T03:49:00.0511017Z                               ^
2025-09-29T03:49:00.0511596Z src/core/GitManager.cpp:400:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0511943Z     commit.message = parts[4];  // Use the subject as the full message
2025-09-29T03:49:00.0512148Z                                                                       ^
2025-09-29T03:49:00.0512719Z src/core/GitManager.cpp:402:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0512886Z     // Parse timestamp
2025-09-29T03:49:00.0513044Z                       ^
2025-09-29T03:49:00.0513620Z src/core/GitManager.cpp:403:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0513764Z     try {
2025-09-29T03:49:00.0513904Z          ^
2025-09-29T03:49:00.0514473Z src/core/GitManager.cpp:404:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0514809Z         auto timestamp = std::chrono::seconds(std::stoll(parts[5]));
2025-09-29T03:49:00.0515010Z                                                                     ^
2025-09-29T03:49:00.0515585Z src/core/GitManager.cpp:405:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0515982Z         commit.timestamp = std::chrono::system_clock::time_point(timestamp);
2025-09-29T03:49:00.0516181Z                                                                             ^
2025-09-29T03:49:00.0516756Z src/core/GitManager.cpp:406:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0516915Z     } catch (...) {
2025-09-29T03:49:00.0517065Z                    ^
2025-09-29T03:49:00.0517634Z src/core/GitManager.cpp:407:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0518106Z         commit.timestamp = std::chrono::system_clock::now();
2025-09-29T03:49:00.0518297Z                                                             ^
2025-09-29T03:49:00.0518879Z src/core/GitManager.cpp:408:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0519287Z     }
2025-09-29T03:49:00.0519426Z      ^
2025-09-29T03:49:00.0520014Z src/core/GitManager.cpp:410:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0520203Z     // Parse parent hashes
2025-09-29T03:49:00.0520357Z                           ^
2025-09-29T03:49:00.0520925Z src/core/GitManager.cpp:411:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0521116Z     if (!parts[6].empty()) {
2025-09-29T03:49:00.0521278Z                             ^
2025-09-29T03:49:00.0521850Z src/core/GitManager.cpp:412:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0522164Z         commit.parentHashes = GitUtils::split(parts[6], " ");
2025-09-29T03:49:00.0522355Z                                                              ^
2025-09-29T03:49:00.0522940Z src/core/GitManager.cpp:413:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0523090Z     }
2025-09-29T03:49:00.0523239Z      ^
2025-09-29T03:49:00.0523814Z src/core/GitManager.cpp:418:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0524331Z GitFileChange GitManager::parseFileChange(const std::string& statusLine) const {
2025-09-29T03:49:00.0524523Z                                                            ^
2025-09-29T03:49:00.0525098Z src/core/GitManager.cpp:418:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0525783Z GitFileChange GitManager::parseFileChange(const std::string& statusLine) const {
2025-09-29T03:49:00.0525982Z                                                             ^
2025-09-29T03:49:00.0526555Z src/core/GitManager.cpp:418:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0527054Z GitFileChange GitManager::parseFileChange(const std::string& statusLine) const {
2025-09-29T03:49:00.0527267Z                                                                                 ^
2025-09-29T03:49:00.0528022Z src/core/GitManager.cpp:419:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0528231Z     if (statusLine.length() < 3) {
2025-09-29T03:49:00.0528394Z                                   ^
2025-09-29T03:49:00.0528974Z src/core/GitManager.cpp:420:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0529126Z         return {};
2025-09-29T03:49:00.0529272Z                   ^
2025-09-29T03:49:00.0529859Z src/core/GitManager.cpp:421:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0530002Z     }
2025-09-29T03:49:00.0530141Z      ^
2025-09-29T03:49:00.0530722Z src/core/GitManager.cpp:423:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0530900Z     GitFileChange change;
2025-09-29T03:49:00.0531055Z                          ^
2025-09-29T03:49:00.0531636Z src/core/GitManager.cpp:424:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0531844Z     char stagedFlag = statusLine[0];
2025-09-29T03:49:00.0532009Z                                     ^
2025-09-29T03:49:00.0532582Z src/core/GitManager.cpp:425:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0532794Z     char unstagedFlag = statusLine[1];
2025-09-29T03:49:00.0532961Z                                       ^
2025-09-29T03:49:00.0533545Z src/core/GitManager.cpp:426:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0533779Z     change.filePath = statusLine.substr(3);
2025-09-29T03:49:00.0533953Z                                            ^
2025-09-29T03:49:00.0534531Z src/core/GitManager.cpp:428:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0534727Z     // Handle renames and copies
2025-09-29T03:49:00.0534890Z                                 ^
2025-09-29T03:49:00.0535675Z src/core/GitManager.cpp:429:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0535988Z     if (change.filePath.find(" -> ") != std::string::npos) {
2025-09-29T03:49:00.0536181Z                                                             ^
2025-09-29T03:49:00.0536762Z src/core/GitManager.cpp:430:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0537064Z         auto parts = GitUtils::split(change.filePath, " -> ");
2025-09-29T03:49:00.0537272Z                                                               ^
2025-09-29T03:49:00.0538028Z src/core/GitManager.cpp:431:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0538212Z         if (parts.size() == 2) {
2025-09-29T03:49:00.0538379Z                                 ^
2025-09-29T03:49:00.0538956Z src/core/GitManager.cpp:432:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0539156Z             change.oldPath = parts[0];
2025-09-29T03:49:00.0539338Z                                       ^
2025-09-29T03:49:00.0539924Z src/core/GitManager.cpp:433:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0540119Z             change.filePath = parts[1];
2025-09-29T03:49:00.0540290Z                                        ^
2025-09-29T03:49:00.0540881Z src/core/GitManager.cpp:434:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0541028Z         }
2025-09-29T03:49:00.0541180Z          ^
2025-09-29T03:49:00.0541976Z src/core/GitManager.cpp:435:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0542123Z     }
2025-09-29T03:49:00.0542265Z      ^
2025-09-29T03:49:00.0542863Z src/core/GitManager.cpp:437:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0543062Z     // Determine status based on flags
2025-09-29T03:49:00.0543226Z                                       ^
2025-09-29T03:49:00.0543821Z src/core/GitManager.cpp:438:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0544035Z     if (statusLine.substr(0, 2) == "??") {
2025-09-29T03:49:00.0544208Z                                           ^
2025-09-29T03:49:00.0544799Z src/core/GitManager.cpp:439:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0545032Z         change.status = FileStatus::Untracked;
2025-09-29T03:49:00.0545213Z                                               ^
2025-09-29T03:49:00.0545807Z src/core/GitManager.cpp:440:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0545998Z         change.isStaged = false;
2025-09-29T03:49:00.0546158Z                                 ^
2025-09-29T03:49:00.0546738Z src/core/GitManager.cpp:441:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0546973Z     } else if (statusLine.substr(0, 2) == "!!") {
2025-09-29T03:49:00.0547163Z                                                  ^
2025-09-29T03:49:00.0547747Z src/core/GitManager.cpp:442:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0548274Z         change.status = FileStatus::Ignored;
2025-09-29T03:49:00.0548464Z                                             ^
2025-09-29T03:49:00.0549047Z src/core/GitManager.cpp:443:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0549231Z         change.isStaged = false;
2025-09-29T03:49:00.0549407Z                                 ^
2025-09-29T03:49:00.0549991Z src/core/GitManager.cpp:444:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0550180Z     } else if (stagedFlag == 'A') {
2025-09-29T03:49:00.0550347Z                                    ^
2025-09-29T03:49:00.0550928Z src/core/GitManager.cpp:445:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0551147Z         change.status = FileStatus::Added;
2025-09-29T03:49:00.0551530Z                                           ^
2025-09-29T03:49:00.0552126Z src/core/GitManager.cpp:446:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0552313Z         change.isStaged = true;
2025-09-29T03:49:00.0552687Z                                ^
2025-09-29T03:49:00.0553270Z src/core/GitManager.cpp:447:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0553460Z     } else if (stagedFlag == 'M') {
2025-09-29T03:49:00.0553629Z                                    ^
2025-09-29T03:49:00.0554223Z src/core/GitManager.cpp:448:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0554438Z         change.status = FileStatus::Modified;
2025-09-29T03:49:00.0554614Z                                              ^
2025-09-29T03:49:00.0555206Z src/core/GitManager.cpp:449:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0555398Z         change.isStaged = true;
2025-09-29T03:49:00.0555560Z                                ^
2025-09-29T03:49:00.0556151Z src/core/GitManager.cpp:450:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0556334Z     } else if (stagedFlag == 'D') {
2025-09-29T03:49:00.0556496Z                                    ^
2025-09-29T03:49:00.0557078Z src/core/GitManager.cpp:451:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0557300Z         change.status = FileStatus::Deleted;
2025-09-29T03:49:00.0557664Z                                             ^
2025-09-29T03:49:00.0558447Z src/core/GitManager.cpp:452:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0558643Z         change.isStaged = true;
2025-09-29T03:49:00.0558804Z                                ^
2025-09-29T03:49:00.0559390Z src/core/GitManager.cpp:453:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0559593Z     } else if (stagedFlag == 'R') {
2025-09-29T03:49:00.0559755Z                                    ^
2025-09-29T03:49:00.0560340Z src/core/GitManager.cpp:454:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0560559Z         change.status = FileStatus::Renamed;
2025-09-29T03:49:00.0560728Z                                             ^
2025-09-29T03:49:00.0561313Z src/core/GitManager.cpp:455:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0561505Z         change.isStaged = true;
2025-09-29T03:49:00.0561672Z                                ^
2025-09-29T03:49:00.0562256Z src/core/GitManager.cpp:456:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0562440Z     } else if (stagedFlag == 'C') {
2025-09-29T03:49:00.0562609Z                                    ^
2025-09-29T03:49:00.0563191Z src/core/GitManager.cpp:457:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0563409Z         change.status = FileStatus::Copied;
2025-09-29T03:49:00.0563588Z                                            ^
2025-09-29T03:49:00.0564169Z src/core/GitManager.cpp:458:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0564351Z         change.isStaged = true;
2025-09-29T03:49:00.0564520Z                                ^
2025-09-29T03:49:00.0565098Z src/core/GitManager.cpp:459:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0565304Z     } else if (unstagedFlag == 'M') {
2025-09-29T03:49:00.0565470Z                                      ^
2025-09-29T03:49:00.0566059Z src/core/GitManager.cpp:460:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0566273Z         change.status = FileStatus::Modified;
2025-09-29T03:49:00.0566449Z                                              ^
2025-09-29T03:49:00.0567037Z src/core/GitManager.cpp:461:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0567466Z         change.isStaged = false;
2025-09-29T03:49:00.0567626Z                                 ^
2025-09-29T03:49:00.0568433Z src/core/GitManager.cpp:462:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0568636Z     } else if (unstagedFlag == 'D') {
2025-09-29T03:49:00.0568800Z                                      ^
2025-09-29T03:49:00.0569399Z src/core/GitManager.cpp:463:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0569635Z         change.status = FileStatus::Deleted;
2025-09-29T03:49:00.0569806Z                                             ^
2025-09-29T03:49:00.0570391Z src/core/GitManager.cpp:464:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0570583Z         change.isStaged = false;
2025-09-29T03:49:00.0570743Z                                 ^
2025-09-29T03:49:00.0571333Z src/core/GitManager.cpp:465:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0571623Z     } else if (unstagedFlag == 'U' || stagedFlag == 'U') {
2025-09-29T03:49:00.0571814Z                                                           ^
2025-09-29T03:49:00.0572398Z src/core/GitManager.cpp:466:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0572633Z         change.status = FileStatus::Conflicted;
2025-09-29T03:49:00.0572811Z                                                ^
2025-09-29T03:49:00.0573585Z src/core/GitManager.cpp:467:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0573781Z         change.isStaged = false;
2025-09-29T03:49:00.0573938Z                                 ^
2025-09-29T03:49:00.0574515Z src/core/GitManager.cpp:468:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0574707Z     } else if (unstagedFlag == 'A') {
2025-09-29T03:49:00.0574880Z                                      ^
2025-09-29T03:49:00.0575463Z src/core/GitManager.cpp:469:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0575794Z         // Added but not staged (shouldn't happen in normal workflow)
2025-09-29T03:49:00.0576005Z                                                                      ^
2025-09-29T03:49:00.0576586Z src/core/GitManager.cpp:470:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0576795Z         change.status = FileStatus::Added;
2025-09-29T03:49:00.0576982Z                                           ^
2025-09-29T03:49:00.0577557Z src/core/GitManager.cpp:471:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0577740Z         change.isStaged = false;
2025-09-29T03:49:00.0578080Z                                 ^
2025-09-29T03:49:00.0578679Z src/core/GitManager.cpp:472:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0578829Z     }
2025-09-29T03:49:00.0578969Z      ^
2025-09-29T03:49:00.0579561Z src/core/GitManager.cpp:477:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0579802Z std::string GitManager::getLastError() const {
2025-09-29T03:49:00.0579974Z                                               ^
2025-09-29T03:49:00.0580561Z src/core/GitManager.cpp:478:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0580748Z     return pImpl->lastError;
2025-09-29T03:49:00.0580906Z                             ^
2025-09-29T03:49:00.0581500Z src/core/GitManager.cpp:481:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0581763Z bool GitManager::hasUncommittedChanges() const {
2025-09-29T03:49:00.0581941Z                                                 ^
2025-09-29T03:49:00.0582520Z src/core/GitManager.cpp:485:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0582772Z bool GitManager::hasUnstagedChanges() const {
2025-09-29T03:49:00.0583158Z                                              ^
2025-09-29T03:49:00.0583733Z src/core/GitManager.cpp:489:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0583967Z bool GitManager::hasStagedChanges() const {
2025-09-29T03:49:00.0584138Z                                            ^
2025-09-29T03:49:00.0584713Z src/core/GitManager.cpp:493:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0585033Z void GitManager::setLogCallback(LogCallback callback) {
2025-09-29T03:49:00.0585222Z                                                        ^
2025-09-29T03:49:00.0585800Z src/core/GitManager.cpp:497:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0586209Z void GitManager::setProgressCallback(ProgressCallback callback) {
2025-09-29T03:49:00.0586412Z                                                                  ^
2025-09-29T03:49:00.0587000Z src/core/GitManager.cpp:501:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0587579Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url, 
2025-09-29T03:49:00.0587745Z                                ^
2025-09-29T03:49:00.0588511Z src/core/GitManager.cpp:501:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0589082Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url, 
2025-09-29T03:49:00.0589500Z                                                                                   ^
2025-09-29T03:49:00.0590085Z src/core/GitManager.cpp:501:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0590652Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url, 
2025-09-29T03:49:00.0590872Z                                                                                    ^
2025-09-29T03:49:00.0591473Z src/core/GitManager.cpp:501:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0592041Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url, 
2025-09-29T03:49:00.0592260Z                                                                                         ^
2025-09-29T03:49:00.0592839Z src/core/GitManager.cpp:502:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0593091Z                                                                const std::string& path,
2025-09-29T03:49:00.0593306Z                                                                                 ^
2025-09-29T03:49:00.0593887Z src/core/GitManager.cpp:502:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0594127Z                                                                const std::string& path,
2025-09-29T03:49:00.0594343Z                                                                                  ^
2025-09-29T03:49:00.0594928Z src/core/GitManager.cpp:502:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0595166Z                                                                const std::string& path,
2025-09-29T03:49:00.0595387Z                                                                                        ^
2025-09-29T03:49:00.0595982Z src/core/GitManager.cpp:503:100: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0596266Z                                                                ProgressCallback progressCallback) {
2025-09-29T03:49:00.0596501Z                                                                                                    ^
2025-09-29T03:49:00.0597082Z src/core/GitManager.cpp:504:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0597517Z     return std::async(std::launch::async, [this, url, path, progressCallback]() {
2025-09-29T03:49:00.0598102Z                                                                                  ^
2025-09-29T03:49:00.0598700Z src/core/GitManager.cpp:505:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0599010Z         return cloneRepository(url, path, progressCallback);
2025-09-29T03:49:00.0599204Z                                                             ^
2025-09-29T03:49:00.0599791Z src/core/GitManager.cpp:513:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0600240Z std::vector<GitBranch> GitManager::getBranches(bool includeRemote) const {
2025-09-29T03:49:00.0600443Z                                                                           ^
2025-09-29T03:49:00.0601036Z src/core/GitManager.cpp:514:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0601232Z     std::vector<GitBranch> branches;
2025-09-29T03:49:00.0601404Z                                     ^
2025-09-29T03:49:00.0602003Z src/core/GitManager.cpp:516:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0602240Z     // First, get current branch
2025-09-29T03:49:00.0602402Z                                 ^
2025-09-29T03:49:00.0602987Z src/core/GitManager.cpp:517:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0603246Z     std::string currentBranch = getCurrentBranch();
2025-09-29T03:49:00.0603430Z                                                    ^
2025-09-29T03:49:00.0604212Z src/core/GitManager.cpp:519:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0604639Z     // Get all branches using for-each-ref (more reliable than branch command)
2025-09-29T03:49:00.0604847Z                                                                               ^
2025-09-29T03:49:00.0605425Z src/core/GitManager.cpp:520:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0606486Z     std::vector<std::string> args = {"for-each-ref", "--format=%(refname:short)|%(objectname:short)|%(committerdate:iso)|%(upstream:short)|%(upstream:track)|%(subject)"};
2025-09-29T03:49:00.0606652Z                                      ^
2025-09-29T03:49:00.0607255Z src/core/GitManager.cpp:520:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0608470Z     std::vector<std::string> args = {"for-each-ref", "--format=%(refname:short)|%(objectname:short)|%(committerdate:iso)|%(upstream:short)|%(upstream:track)|%(subject)"};
2025-09-29T03:49:00.0608669Z                                                     ^
2025-09-29T03:49:00.0609287Z src/core/GitManager.cpp:520:124: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0610306Z     std::vector<std::string> args = {"for-each-ref", "--format=%(refname:short)|%(objectname:short)|%(committerdate:iso)|%(upstream:short)|%(upstream:track)|%(subject)"};
2025-09-29T03:49:00.0610555Z                                                                                                                            ^
2025-09-29T03:49:00.0611175Z src/core/GitManager.cpp:520:171: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0612195Z     std::vector<std::string> args = {"for-each-ref", "--format=%(refname:short)|%(objectname:short)|%(committerdate:iso)|%(upstream:short)|%(upstream:track)|%(subject)"};
2025-09-29T03:49:00.0612495Z                                                                                                                                                                           ^
2025-09-29T03:49:00.0613103Z src/core/GitManager.cpp:522:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0613284Z     if (includeRemote) {
2025-09-29T03:49:00.0613443Z                         ^
2025-09-29T03:49:00.0614043Z src/core/GitManager.cpp:523:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0614442Z         args.push_back("refs/heads");
2025-09-29T03:49:00.0614604Z                                      ^
2025-09-29T03:49:00.0615197Z src/core/GitManager.cpp:524:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0615404Z         args.push_back("refs/remotes");
2025-09-29T03:49:00.0615578Z                                        ^
2025-09-29T03:49:00.0616167Z src/core/GitManager.cpp:525:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0616323Z     } else {
2025-09-29T03:49:00.0616479Z             ^
2025-09-29T03:49:00.0617069Z src/core/GitManager.cpp:526:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0617271Z         args.push_back("refs/heads");
2025-09-29T03:49:00.0617436Z                                      ^
2025-09-29T03:49:00.0618227Z src/core/GitManager.cpp:527:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0618375Z     }
2025-09-29T03:49:00.0618538Z      ^
2025-09-29T03:49:00.0619136Z src/core/GitManager.cpp:529:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0619354Z     auto result = executeGitCommand(args);
2025-09-29T03:49:00.0619545Z                                           ^
2025-09-29T03:49:00.0620137Z src/core/GitManager.cpp:530:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0620326Z     if (!result.isSuccess()) {
2025-09-29T03:49:00.0620494Z                               ^
2025-09-29T03:49:00.0621288Z src/core/GitManager.cpp:531:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0621476Z         return branches;
2025-09-29T03:49:00.0621639Z                         ^
2025-09-29T03:49:00.0622250Z src/core/GitManager.cpp:532:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0622397Z     }
2025-09-29T03:49:00.0622542Z      ^
2025-09-29T03:49:00.0623143Z src/core/GitManager.cpp:534:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0623444Z     auto lines = parseGitOutput(result.output, "\n");
2025-09-29T03:49:00.0623639Z                                                      ^
2025-09-29T03:49:00.0624244Z src/core/GitManager.cpp:535:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0624437Z     for (const auto& line : lines) {
2025-09-29T03:49:00.0624593Z                    ^
2025-09-29T03:49:00.0625203Z src/core/GitManager.cpp:535:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0625398Z     for (const auto& line : lines) {
2025-09-29T03:49:00.0625557Z                     ^
2025-09-29T03:49:00.0626156Z src/core/GitManager.cpp:535:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0626349Z     for (const auto& line : lines) {
2025-09-29T03:49:00.0626517Z                                     ^
2025-09-29T03:49:00.0627122Z src/core/GitManager.cpp:536:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0627322Z         if (line.empty()) continue;
2025-09-29T03:49:00.0627482Z                          ^
2025-09-29T03:49:00.0628272Z src/core/GitManager.cpp:536:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0628465Z         if (line.empty()) continue;
2025-09-29T03:49:00.0628641Z                                    ^
2025-09-29T03:49:00.0629253Z src/core/GitManager.cpp:538:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0629491Z         auto parts = GitUtils::split(line, "|");
2025-09-29T03:49:00.0629682Z                                                 ^
2025-09-29T03:49:00.0630277Z src/core/GitManager.cpp:539:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0630472Z         if (parts.size() < 6) continue;
2025-09-29T03:49:00.0630643Z                              ^
2025-09-29T03:49:00.0631475Z src/core/GitManager.cpp:539:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0631670Z         if (parts.size() < 6) continue;
2025-09-29T03:49:00.0631849Z                                        ^
2025-09-29T03:49:00.0632451Z src/core/GitManager.cpp:541:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0632628Z         GitBranch branch;
2025-09-29T03:49:00.0632788Z                          ^
2025-09-29T03:49:00.0633400Z src/core/GitManager.cpp:542:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0633589Z         branch.name = parts[0];
2025-09-29T03:49:00.0633751Z                                ^
2025-09-29T03:49:00.0634358Z src/core/GitManager.cpp:543:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0634550Z         branch.fullName = parts[0];
2025-09-29T03:49:00.0634715Z                                    ^
2025-09-29T03:49:00.0635326Z src/core/GitManager.cpp:545:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0635523Z         // Check if it's a remote branch
2025-09-29T03:49:00.0635696Z                                         ^
2025-09-29T03:49:00.0636293Z src/core/GitManager.cpp:546:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0636722Z         if (branch.name.find("origin/") == 0 || branch.name.find("remotes/") == 0) {
2025-09-29T03:49:00.0637128Z                                                                                     ^
2025-09-29T03:49:00.0637732Z src/core/GitManager.cpp:547:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0638147Z             branch.isRemote = true;
2025-09-29T03:49:00.0638315Z                                    ^
2025-09-29T03:49:00.0638916Z src/core/GitManager.cpp:548:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0639118Z             // Remove remote prefix
2025-09-29T03:49:00.0639279Z                                    ^
2025-09-29T03:49:00.0639876Z src/core/GitManager.cpp:549:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0640114Z             if (branch.name.find("remotes/") == 0) {
2025-09-29T03:49:00.0640298Z                                                     ^
2025-09-29T03:49:00.0640891Z src/core/GitManager.cpp:550:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0641129Z                 branch.name = branch.name.substr(8);
2025-09-29T03:49:00.0641313Z                                                     ^
2025-09-29T03:49:00.0641925Z src/core/GitManager.cpp:551:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0642075Z             }
2025-09-29T03:49:00.0642234Z              ^
2025-09-29T03:49:00.0642838Z src/core/GitManager.cpp:552:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0643000Z         } else {
2025-09-29T03:49:00.0643158Z                 ^
2025-09-29T03:49:00.0643758Z src/core/GitManager.cpp:553:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0643949Z             branch.isRemote = false;
2025-09-29T03:49:00.0644127Z                                     ^
2025-09-29T03:49:00.0644727Z src/core/GitManager.cpp:554:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0644877Z         }
2025-09-29T03:49:00.0645025Z          ^
2025-09-29T03:49:00.0645647Z src/core/GitManager.cpp:556:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0645838Z         // Check if current branch
2025-09-29T03:49:00.0646002Z                                   ^
2025-09-29T03:49:00.0646610Z src/core/GitManager.cpp:557:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0647150Z         branch.isCurrent = (branch.name == currentBranch || branch.fullName == currentBranch);
2025-09-29T03:49:00.0647626Z                           ^
2025-09-29T03:49:00.0648506Z src/core/GitManager.cpp:557:95: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0649117Z         branch.isCurrent = (branch.name == currentBranch || branch.fullName == currentBranch);
2025-09-29T03:49:00.0649354Z                                                                                               ^
2025-09-29T03:49:00.0649982Z src/core/GitManager.cpp:559:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0650173Z         // Parse upstream branch
2025-09-29T03:49:00.0650340Z                                 ^
2025-09-29T03:49:00.0650938Z src/core/GitManager.cpp:560:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0651156Z         if (!parts[3].empty()) {
2025-09-29T03:49:00.0651330Z                                 ^
2025-09-29T03:49:00.0651934Z src/core/GitManager.cpp:561:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0652177Z             branch.upstreamBranch = parts[3];
2025-09-29T03:49:00.0652362Z                                              ^
2025-09-29T03:49:00.0652964Z src/core/GitManager.cpp:562:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0653121Z         }
2025-09-29T03:49:00.0653268Z          ^
2025-09-29T03:49:00.0653871Z src/core/GitManager.cpp:564:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0654347Z         // Parse ahead/behind counts from tracking info
2025-09-29T03:49:00.0654558Z                                                        ^
2025-09-29T03:49:00.0655160Z src/core/GitManager.cpp:565:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0655344Z         if (!parts[4].empty()) {
2025-09-29T03:49:00.0655517Z                                 ^
2025-09-29T03:49:00.0656128Z src/core/GitManager.cpp:566:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0656359Z             std::regex aheadRegex("ahead (\\d+)");
2025-09-29T03:49:00.0656552Z                                                   ^
2025-09-29T03:49:00.0657154Z src/core/GitManager.cpp:567:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0657384Z             std::regex behindRegex("behind (\\d+)");
2025-09-29T03:49:00.0657574Z                                                     ^
2025-09-29T03:49:00.0658374Z src/core/GitManager.cpp:568:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0658561Z             std::smatch matches;
2025-09-29T03:49:00.0658726Z                                 ^
2025-09-29T03:49:00.0659332Z src/core/GitManager.cpp:570:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0659643Z             if (std::regex_search(parts[4], matches, aheadRegex)) {
2025-09-29T03:49:00.0659859Z                                                                    ^
2025-09-29T03:49:00.0660469Z src/core/GitManager.cpp:571:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0660723Z                 branch.aheadCount = std::stoi(matches[1]);
2025-09-29T03:49:00.0660919Z                                                           ^
2025-09-29T03:49:00.0661531Z src/core/GitManager.cpp:572:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0661683Z             }
2025-09-29T03:49:00.0661838Z              ^
2025-09-29T03:49:00.0662443Z src/core/GitManager.cpp:573:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0662752Z             if (std::regex_search(parts[4], matches, behindRegex)) {
2025-09-29T03:49:00.0662958Z                                                                     ^
2025-09-29T03:49:00.0663563Z src/core/GitManager.cpp:574:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0664036Z                 branch.behindCount = std::stoi(matches[1]);
2025-09-29T03:49:00.0664234Z                                                            ^
2025-09-29T03:49:00.0664834Z src/core/GitManager.cpp:575:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0664991Z             }
2025-09-29T03:49:00.0665141Z              ^
2025-09-29T03:49:00.0665740Z src/core/GitManager.cpp:576:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0665902Z         }
2025-09-29T03:49:00.0666051Z          ^
2025-09-29T03:49:00.0666655Z src/core/GitManager.cpp:578:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0666928Z         // Create minimal commit info from available data
2025-09-29T03:49:00.0667120Z                                                          ^
2025-09-29T03:49:00.0668152Z src/core/GitManager.cpp:579:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0668358Z         if (!parts[1].empty()) {
2025-09-29T03:49:00.0668529Z                                 ^
2025-09-29T03:49:00.0669132Z src/core/GitManager.cpp:580:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0669312Z             GitCommit commit;
2025-09-29T03:49:00.0669483Z                              ^
2025-09-29T03:49:00.0670082Z src/core/GitManager.cpp:581:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0670499Z             commit.shortHash = parts[1];
2025-09-29T03:49:00.0670686Z                                         ^
2025-09-29T03:49:00.0671288Z src/core/GitManager.cpp:582:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0671620Z             commit.hash = parts[1]; // We only have short hash for now
2025-09-29T03:49:00.0671838Z                                                                       ^
2025-09-29T03:49:00.0672447Z src/core/GitManager.cpp:583:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0672663Z             commit.shortMessage = parts[5];
2025-09-29T03:49:00.0672846Z                                            ^
2025-09-29T03:49:00.0673456Z src/core/GitManager.cpp:585:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0673624Z             // Parse date
2025-09-29T03:49:00.0673785Z                          ^
2025-09-29T03:49:00.0674403Z src/core/GitManager.cpp:586:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0674594Z             if (!parts[2].empty()) {
2025-09-29T03:49:00.0674764Z                                     ^
2025-09-29T03:49:00.0675368Z src/core/GitManager.cpp:587:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0675526Z                 try {
2025-09-29T03:49:00.0675684Z                      ^
2025-09-29T03:49:00.0676294Z src/core/GitManager.cpp:588:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0676503Z                     // Parse ISO date format
2025-09-29T03:49:00.0676682Z                                             ^
2025-09-29T03:49:00.0677281Z src/core/GitManager.cpp:589:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0677478Z                     std::tm tm = {};
2025-09-29T03:49:00.0677647Z                                     ^
2025-09-29T03:49:00.0678444Z src/core/GitManager.cpp:590:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0678685Z                     std::istringstream ss(parts[2]);
2025-09-29T03:49:00.0678873Z                                                     ^
2025-09-29T03:49:00.0679472Z src/core/GitManager.cpp:591:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0679731Z                     ss >> std::get_time(&tm, "%Y-%m-%d %H:%M:%S");
2025-09-29T03:49:00.0680152Z                                                                   ^
2025-09-29T03:49:00.0680755Z src/core/GitManager.cpp:592:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0681237Z                     commit.timestamp = std::chrono::system_clock::from_time_t(std::mktime(&tm));
2025-09-29T03:49:00.0681415Z                                       ^
2025-09-29T03:49:00.0682019Z src/core/GitManager.cpp:592:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0682497Z                     commit.timestamp = std::chrono::system_clock::from_time_t(std::mktime(&tm));
2025-09-29T03:49:00.0682723Z                                                                                                 ^
2025-09-29T03:49:00.0683323Z src/core/GitManager.cpp:593:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0683495Z                 } catch (...) {
2025-09-29T03:49:00.0683667Z                                ^
2025-09-29T03:49:00.0684279Z src/core/GitManager.cpp:594:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0684597Z                     commit.timestamp = std::chrono::system_clock::now();
2025-09-29T03:49:00.0684811Z                                                                         ^
2025-09-29T03:49:00.0685413Z src/core/GitManager.cpp:595:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0685563Z                 }
2025-09-29T03:49:00.0685720Z                  ^
2025-09-29T03:49:00.0686512Z src/core/GitManager.cpp:596:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0686666Z             }
2025-09-29T03:49:00.0686821Z              ^
2025-09-29T03:49:00.0687425Z src/core/GitManager.cpp:597:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0687629Z             branch.lastCommit = commit;
2025-09-29T03:49:00.0687801Z                                        ^
2025-09-29T03:49:00.0688601Z src/core/GitManager.cpp:598:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0688754Z         }
2025-09-29T03:49:00.0688903Z          ^
2025-09-29T03:49:00.0689506Z src/core/GitManager.cpp:600:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0689702Z         branches.push_back(branch);
2025-09-29T03:49:00.0689868Z                                    ^
2025-09-29T03:49:00.0690482Z src/core/GitManager.cpp:601:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0690631Z     }
2025-09-29T03:49:00.0690777Z      ^
2025-09-29T03:49:00.0691376Z src/core/GitManager.cpp:606:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0692115Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-09-29T03:49:00.0692320Z                                                              ^
2025-09-29T03:49:00.0692939Z src/core/GitManager.cpp:606:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0693656Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-09-29T03:49:00.0693858Z                                                               ^
2025-09-29T03:49:00.0694465Z src/core/GitManager.cpp:606:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0695188Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-09-29T03:49:00.0695394Z                                                                     ^
2025-09-29T03:49:00.0696002Z src/core/GitManager.cpp:606:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0696711Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-09-29T03:49:00.0696936Z                                                                                       ^
2025-09-29T03:49:00.0697754Z src/core/GitManager.cpp:606:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0698650Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-09-29T03:49:00.0698879Z                                                                                        ^
2025-09-29T03:49:00.0699513Z src/core/GitManager.cpp:606:102: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0700235Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-09-29T03:49:00.0700469Z                                                                                                      ^
2025-09-29T03:49:00.0701078Z src/core/GitManager.cpp:607:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0701356Z     std::vector<std::string> args = {"branch", name};
2025-09-29T03:49:00.0701562Z                                                      ^
2025-09-29T03:49:00.0702235Z src/core/GitManager.cpp:609:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0702443Z     // Add start point if provided
2025-09-29T03:49:00.0702622Z                                   ^
2025-09-29T03:49:00.0703240Z src/core/GitManager.cpp:610:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0703442Z     if (!startPoint.empty()) {
2025-09-29T03:49:00.0703825Z                               ^
2025-09-29T03:49:00.0704447Z src/core/GitManager.cpp:611:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0704647Z         args.push_back(startPoint);
2025-09-29T03:49:00.0704821Z                                    ^
2025-09-29T03:49:00.0705435Z src/core/GitManager.cpp:612:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0705592Z     }
2025-09-29T03:49:00.0705739Z      ^
2025-09-29T03:49:00.0706362Z src/core/GitManager.cpp:617:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0706926Z GitOperationResult GitManager::deleteBranch(const std::string& name, bool force) {
2025-09-29T03:49:00.0707127Z                                                              ^
2025-09-29T03:49:00.0707744Z src/core/GitManager.cpp:617:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0708496Z GitOperationResult GitManager::deleteBranch(const std::string& name, bool force) {
2025-09-29T03:49:00.0708695Z                                                               ^
2025-09-29T03:49:00.0709314Z src/core/GitManager.cpp:617:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0709863Z GitOperationResult GitManager::deleteBranch(const std::string& name, bool force) {
2025-09-29T03:49:00.0710067Z                                                                     ^
2025-09-29T03:49:00.0710693Z src/core/GitManager.cpp:617:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0711242Z GitOperationResult GitManager::deleteBranch(const std::string& name, bool force) {
2025-09-29T03:49:00.0711460Z                                                                                   ^
2025-09-29T03:49:00.0712074Z src/core/GitManager.cpp:618:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0712311Z     std::vector<std::string> args = {"branch"};
2025-09-29T03:49:00.0712504Z                                                ^
2025-09-29T03:49:00.0713114Z src/core/GitManager.cpp:620:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0713390Z     // Use -d for safe delete or -D for force delete
2025-09-29T03:49:00.0713580Z                                                     ^
2025-09-29T03:49:00.0714191Z src/core/GitManager.cpp:621:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0714621Z     args.push_back(force ? "-D" : "-d");
2025-09-29T03:49:00.0714800Z                                         ^
2025-09-29T03:49:00.0715408Z src/core/GitManager.cpp:622:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0715607Z     args.push_back(name);
2025-09-29T03:49:00.0715770Z                          ^
2025-09-29T03:49:00.0716378Z src/core/GitManager.cpp:627:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0716875Z GitOperationResult GitManager::checkoutBranch(const std::string& name) {
2025-09-29T03:49:00.0717079Z                                                                ^
2025-09-29T03:49:00.0717690Z src/core/GitManager.cpp:627:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0718354Z GitOperationResult GitManager::checkoutBranch(const std::string& name) {
2025-09-29T03:49:00.0718571Z                                                                 ^
2025-09-29T03:49:00.0719191Z src/core/GitManager.cpp:627:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0719663Z GitOperationResult GitManager::checkoutBranch(const std::string& name) {
2025-09-29T03:49:00.0719883Z                                                                         ^
2025-09-29T03:49:00.0720493Z src/core/GitManager.cpp:632:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0721048Z std::vector<GitStash> GitManager::getStashes() const {
2025-09-29T03:49:00.0721256Z                                                       ^
2025-09-29T03:49:00.0721877Z src/core/GitManager.cpp:633:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0722081Z     std::vector<GitStash> stashes;
2025-09-29T03:49:00.0722257Z                                   ^
2025-09-29T03:49:00.0722862Z src/core/GitManager.cpp:635:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0723126Z     // Get stash list with more detailed information
2025-09-29T03:49:00.0723321Z                                                     ^
2025-09-29T03:49:00.0723924Z src/core/GitManager.cpp:636:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0724398Z     auto result = executeGitCommand({"stash", "list", "--format=%gd|%s|%cn|%ct"});
2025-09-29T03:49:00.0724612Z                                                                                   ^
2025-09-29T03:49:00.0725233Z src/core/GitManager.cpp:637:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0725514Z     if (!result.isSuccess() || result.output.empty()) {
2025-09-29T03:49:00.0725709Z                                                        ^
2025-09-29T03:49:00.0726321Z src/core/GitManager.cpp:638:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0726493Z         return stashes;
2025-09-29T03:49:00.0726660Z                        ^
2025-09-29T03:49:00.0727268Z src/core/GitManager.cpp:639:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0727415Z     }
2025-09-29T03:49:00.0727561Z      ^
2025-09-29T03:49:00.0728376Z src/core/GitManager.cpp:641:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0728657Z     auto lines = parseGitOutput(result.output, "\n");
2025-09-29T03:49:00.0728843Z                                                      ^
2025-09-29T03:49:00.0729459Z src/core/GitManager.cpp:642:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0729634Z     int index = 0;
2025-09-29T03:49:00.0729788Z                   ^
2025-09-29T03:49:00.0730387Z src/core/GitManager.cpp:644:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0730585Z     for (const auto& line : lines) {
2025-09-29T03:49:00.0730743Z                    ^
2025-09-29T03:49:00.0731573Z src/core/GitManager.cpp:644:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0731770Z     for (const auto& line : lines) {
2025-09-29T03:49:00.0731926Z                     ^
2025-09-29T03:49:00.0732525Z src/core/GitManager.cpp:644:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0732715Z     for (const auto& line : lines) {
2025-09-29T03:49:00.0732893Z                                     ^
2025-09-29T03:49:00.0733501Z src/core/GitManager.cpp:645:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0733692Z         if (line.empty()) continue;
2025-09-29T03:49:00.0733862Z                          ^
2025-09-29T03:49:00.0734461Z src/core/GitManager.cpp:645:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0734646Z         if (line.empty()) continue;
2025-09-29T03:49:00.0734819Z                                    ^
2025-09-29T03:49:00.0735423Z src/core/GitManager.cpp:647:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0735661Z         auto parts = GitUtils::split(line, "|");
2025-09-29T03:49:00.0735844Z                                                 ^
2025-09-29T03:49:00.0736451Z src/core/GitManager.cpp:648:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0736649Z         if (parts.size() < 4) continue;
2025-09-29T03:49:00.0736814Z                              ^
2025-09-29T03:49:00.0737705Z src/core/GitManager.cpp:648:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0738119Z         if (parts.size() < 4) continue;
2025-09-29T03:49:00.0738301Z                                        ^
2025-09-29T03:49:00.0738908Z src/core/GitManager.cpp:650:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0739079Z         GitStash stash;
2025-09-29T03:49:00.0739237Z                        ^
2025-09-29T03:49:00.0739860Z src/core/GitManager.cpp:651:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0740047Z         stash.name = parts[0];
2025-09-29T03:49:00.0740210Z                               ^
2025-09-29T03:49:00.0740807Z src/core/GitManager.cpp:652:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0741007Z         stash.message = parts[1];
2025-09-29T03:49:00.0741175Z                                  ^
2025-09-29T03:49:00.0741781Z src/core/GitManager.cpp:653:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0741970Z         stash.index = index++;
2025-09-29T03:49:00.0742133Z                               ^
2025-09-29T03:49:00.0742734Z src/core/GitManager.cpp:655:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0743014Z         // Extract branch name from the message if present
2025-09-29T03:49:00.0743209Z                                                           ^
2025-09-29T03:49:00.0743819Z src/core/GitManager.cpp:656:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0744053Z         std::regex branchRegex("On ([^:]+):");
2025-09-29T03:49:00.0744234Z                                               ^
2025-09-29T03:49:00.0744835Z src/core/GitManager.cpp:657:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0745017Z         std::smatch matches;
2025-09-29T03:49:00.0745187Z                             ^
2025-09-29T03:49:00.0745791Z src/core/GitManager.cpp:658:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0746140Z         if (std::regex_search(stash.message, matches, branchRegex)) {
2025-09-29T03:49:00.0746354Z                                                                      ^
2025-09-29T03:49:00.0746959Z src/core/GitManager.cpp:659:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0747381Z             stash.branch = matches[1];
2025-09-29T03:49:00.0747557Z                                       ^
2025-09-29T03:49:00.0748346Z src/core/GitManager.cpp:660:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0748497Z         }
2025-09-29T03:49:00.0748644Z          ^
2025-09-29T03:49:00.0749252Z src/core/GitManager.cpp:662:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0749430Z         // Parse timestamp
2025-09-29T03:49:00.0749592Z                           ^
2025-09-29T03:49:00.0750207Z src/core/GitManager.cpp:663:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0750363Z         try {
2025-09-29T03:49:00.0750515Z              ^
2025-09-29T03:49:00.0751120Z src/core/GitManager.cpp:664:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0751475Z             auto timestamp = std::chrono::seconds(std::stoll(parts[3]));
2025-09-29T03:49:00.0751696Z                                                                         ^
2025-09-29T03:49:00.0752303Z src/core/GitManager.cpp:665:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0752710Z             stash.timestamp = std::chrono::system_clock::time_point(timestamp);
2025-09-29T03:49:00.0752925Z                                                                                ^
2025-09-29T03:49:00.0753526Z src/core/GitManager.cpp:666:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0753900Z         } catch (...) {
2025-09-29T03:49:00.0754064Z                        ^
2025-09-29T03:49:00.0754663Z src/core/GitManager.cpp:667:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0754966Z             stash.timestamp = std::chrono::system_clock::now();
2025-09-29T03:49:00.0755165Z                                                                ^
2025-09-29T03:49:00.0755762Z src/core/GitManager.cpp:668:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0755923Z         }
2025-09-29T03:49:00.0756068Z          ^
2025-09-29T03:49:00.0756661Z src/core/GitManager.cpp:670:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0756864Z         stashes.push_back(stash);
2025-09-29T03:49:00.0757031Z                                  ^
2025-09-29T03:49:00.0757630Z src/core/GitManager.cpp:671:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0757787Z     }
2025-09-29T03:49:00.0758127Z      ^
2025-09-29T03:49:00.0758731Z src/core/GitManager.cpp:677:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0759329Z GitOperationResult GitManager::stash(const std::string& message, bool includeUntracked) {
2025-09-29T03:49:00.0759524Z                                                       ^
2025-09-29T03:49:00.0760119Z src/core/GitManager.cpp:677:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0760714Z GitOperationResult GitManager::stash(const std::string& message, bool includeUntracked) {
2025-09-29T03:49:00.0760914Z                                                        ^
2025-09-29T03:49:00.0761512Z src/core/GitManager.cpp:677:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0762106Z GitOperationResult GitManager::stash(const std::string& message, bool includeUntracked) {
2025-09-29T03:49:00.0762325Z                                                                 ^
2025-09-29T03:49:00.0762925Z src/core/GitManager.cpp:677:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0763518Z GitOperationResult GitManager::stash(const std::string& message, bool includeUntracked) {
2025-09-29T03:49:00.0763745Z                                                                                          ^
2025-09-29T03:49:00.0764345Z src/core/GitManager.cpp:678:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0764826Z     std::vector<std::string> args = {"stash", "push"};
2025-09-29T03:49:00.0765012Z                                                       ^
2025-09-29T03:49:00.0765620Z src/core/GitManager.cpp:680:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0765805Z     if (!message.empty()) {
2025-09-29T03:49:00.0765968Z                            ^
2025-09-29T03:49:00.0766582Z src/core/GitManager.cpp:681:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0766770Z         args.push_back("-m");
2025-09-29T03:49:00.0766933Z                              ^
2025-09-29T03:49:00.0767539Z src/core/GitManager.cpp:682:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0767729Z         args.push_back(message);
2025-09-29T03:49:00.0768078Z                                 ^
2025-09-29T03:49:00.0768657Z src/core/GitManager.cpp:683:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0768801Z     }
2025-09-29T03:49:00.0768935Z      ^
2025-09-29T03:49:00.0769472Z src/core/GitManager.cpp:685:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0769641Z     if (includeUntracked) {
2025-09-29T03:49:00.0769781Z                            ^
2025-09-29T03:49:00.0770298Z src/core/GitManager.cpp:686:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0770823Z         args.push_back("--include-untracked");
2025-09-29T03:49:00.0771043Z                                               ^
2025-09-29T03:49:00.0771614Z src/core/GitManager.cpp:687:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0771764Z     }
2025-09-29T03:49:00.0771902Z      ^
2025-09-29T03:49:00.0772475Z src/core/GitManager.cpp:692:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0772811Z GitOperationResult GitManager::stashPop(int index) {
2025-09-29T03:49:00.0773009Z                                                     ^
2025-09-29T03:49:00.0773612Z src/core/GitManager.cpp:693:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0773873Z     std::vector<std::string> args = {"stash", "pop"};
2025-09-29T03:49:00.0774065Z                                                      ^
2025-09-29T03:49:00.0774661Z src/core/GitManager.cpp:695:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0774847Z     if (index > 0) {
2025-09-29T03:49:00.0775014Z                     ^
2025-09-29T03:49:00.0775639Z src/core/GitManager.cpp:696:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0775965Z         args.push_back("stash@{" + std::to_string(index) + "}");
2025-09-29T03:49:00.0776181Z                                                                 ^
2025-09-29T03:49:00.0776790Z src/core/GitManager.cpp:697:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0776958Z     }
2025-09-29T03:49:00.0777108Z      ^
2025-09-29T03:49:00.0777776Z src/core/GitManager.cpp:702:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0778399Z GitOperationResult GitManager::stashApply(int index) {
2025-09-29T03:49:00.0778598Z                                                       ^
2025-09-29T03:49:00.0779223Z src/core/GitManager.cpp:703:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0779541Z     std::vector<std::string> args = {"stash", "apply"};
2025-09-29T03:49:00.0779740Z                                                        ^
2025-09-29T03:49:00.0780372Z src/core/GitManager.cpp:705:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0780543Z     if (index >= 0) {
2025-09-29T03:49:00.0780703Z                      ^
2025-09-29T03:49:00.0781317Z src/core/GitManager.cpp:706:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0781959Z         args.push_back("stash@{" + std::to_string(index) + "}");
2025-09-29T03:49:00.0782165Z                                                                 ^
2025-09-29T03:49:00.0782778Z src/core/GitManager.cpp:707:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0782936Z     }
2025-09-29T03:49:00.0783086Z      ^
2025-09-29T03:49:00.0783714Z src/core/GitManager.cpp:712:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0784067Z GitOperationResult GitManager::stashDrop(int index) {
2025-09-29T03:49:00.0784252Z                                                      ^
2025-09-29T03:49:00.0784870Z src/core/GitManager.cpp:713:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0785142Z     std::vector<std::string> args = {"stash", "drop"};
2025-09-29T03:49:00.0785327Z                                                       ^
2025-09-29T03:49:00.0786004Z src/core/GitManager.cpp:715:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0786179Z     if (index >= 0) {
2025-09-29T03:49:00.0786349Z                      ^
2025-09-29T03:49:00.0786981Z src/core/GitManager.cpp:716:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0787320Z         args.push_back("stash@{" + std::to_string(index) + "}");
2025-09-29T03:49:00.0787534Z                                                                 ^
2025-09-29T03:49:00.0788715Z src/core/GitManager.cpp:717:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0788887Z     }
2025-09-29T03:49:00.0789045Z      ^
2025-09-29T03:49:00.0789706Z src/core/GitManager.cpp:722:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0789988Z GitOperationResult GitManager::stashClear() {
2025-09-29T03:49:00.0790185Z                                              ^
2025-09-29T03:49:00.0790830Z src/core/GitManager.cpp:727:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0791316Z GitDiff GitManager::getCommitDiff(const std::string& commitHash) const {
2025-09-29T03:49:00.0791511Z                                                    ^
2025-09-29T03:49:00.0792150Z src/core/GitManager.cpp:727:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0792616Z GitDiff GitManager::getCommitDiff(const std::string& commitHash) const {
2025-09-29T03:49:00.0792818Z                                                     ^
2025-09-29T03:49:00.0793438Z src/core/GitManager.cpp:727:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0793891Z GitDiff GitManager::getCommitDiff(const std::string& commitHash) const {
2025-09-29T03:49:00.0794097Z                                                                         ^
2025-09-29T03:49:00.0794707Z src/core/GitManager.cpp:728:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0794885Z     GitDiff diff;
2025-09-29T03:49:00.0795034Z                  ^
2025-09-29T03:49:00.0795639Z src/core/GitManager.cpp:730:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0795892Z     // Get diff for the first changed file in a commit
2025-09-29T03:49:00.0796079Z                                                       ^
2025-09-29T03:49:00.0796710Z src/core/GitManager.cpp:731:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0797411Z     auto filesResult = executeGitCommand({"diff-tree", "--no-commit-id", "--name-status", "-r", commitHash});
2025-09-29T03:49:00.0797599Z                                          ^
2025-09-29T03:49:00.0798522Z src/core/GitManager.cpp:731:110: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0799243Z     auto filesResult = executeGitCommand({"diff-tree", "--no-commit-id", "--name-status", "-r", commitHash});
2025-09-29T03:49:00.0799787Z                                                                                                              ^
2025-09-29T03:49:00.0800437Z src/core/GitManager.cpp:732:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0800840Z     if (!filesResult.isSuccess() || filesResult.output.empty()) {
2025-09-29T03:49:00.0801050Z                                                                  ^
2025-09-29T03:49:00.0801719Z src/core/GitManager.cpp:733:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0801901Z         return diff;
2025-09-29T03:49:00.0802061Z                     ^
2025-09-29T03:49:00.0802764Z src/core/GitManager.cpp:734:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0802929Z     }
2025-09-29T03:49:00.0803073Z      ^
2025-09-29T03:49:00.0803679Z src/core/GitManager.cpp:736:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0804024Z     auto files = parseGitOutput(filesResult.output, "\n");
2025-09-29T03:49:00.0804227Z                                                           ^
2025-09-29T03:49:00.0804844Z src/core/GitManager.cpp:737:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0824914Z     if (files.empty()) {
2025-09-29T03:49:00.0825140Z                         ^
2025-09-29T03:49:00.0825832Z src/core/GitManager.cpp:738:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0826342Z         return diff;
2025-09-29T03:49:00.0826523Z                     ^
2025-09-29T03:49:00.0827185Z src/core/GitManager.cpp:739:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0827338Z     }
2025-09-29T03:49:00.0827489Z      ^
2025-09-29T03:49:00.0828410Z src/core/GitManager.cpp:741:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0828634Z     // Get the first file's diff
2025-09-29T03:49:00.0828808Z                                 ^
2025-09-29T03:49:00.0829440Z src/core/GitManager.cpp:742:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0829743Z     auto fileParts = GitUtils::split(files[0], "\t");
2025-09-29T03:49:00.0829934Z                                                      ^
2025-09-29T03:49:00.0830562Z src/core/GitManager.cpp:743:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0830793Z     if (fileParts.size() < 2) {
2025-09-29T03:49:00.0830975Z                                ^
2025-09-29T03:49:00.0831604Z src/core/GitManager.cpp:744:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0831775Z         return diff;
2025-09-29T03:49:00.0831928Z                     ^
2025-09-29T03:49:00.0832522Z src/core/GitManager.cpp:745:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0832677Z     }
2025-09-29T03:49:00.0832830Z      ^
2025-09-29T03:49:00.0833427Z src/core/GitManager.cpp:747:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0833647Z     std::string fileName = fileParts[1];
2025-09-29T03:49:00.0833829Z                                         ^
2025-09-29T03:49:00.0834401Z src/core/GitManager.cpp:748:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0834600Z     diff.filePath = fileName;
2025-09-29T03:49:00.0834771Z                              ^
2025-09-29T03:49:00.0835359Z src/core/GitManager.cpp:750:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0835544Z     // Determine file status
2025-09-29T03:49:00.0835703Z                             ^
2025-09-29T03:49:00.0836294Z src/core/GitManager.cpp:751:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0836480Z     if (fileParts[0] == "A") {
2025-09-29T03:49:00.0836900Z                               ^
2025-09-29T03:49:00.0837489Z src/core/GitManager.cpp:752:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0837670Z         diff.isNewFile = true;
2025-09-29T03:49:00.0837827Z                               ^
2025-09-29T03:49:00.0838659Z src/core/GitManager.cpp:753:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0838865Z     } else if (fileParts[0] == "D") {
2025-09-29T03:49:00.0839040Z                                      ^
2025-09-29T03:49:00.0839633Z src/core/GitManager.cpp:754:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0839831Z         diff.isDeletedFile = true;
2025-09-29T03:49:00.0839997Z                                   ^
2025-09-29T03:49:00.0840575Z src/core/GitManager.cpp:755:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0840730Z     }
2025-09-29T03:49:00.0840877Z      ^
2025-09-29T03:49:00.0841460Z src/core/GitManager.cpp:757:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0841657Z     // Get the actual diff content
2025-09-29T03:49:00.0841829Z                                   ^
2025-09-29T03:49:00.0842397Z src/core/GitManager.cpp:758:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0842730Z     // Use show for the commit to handle initial commits properly
2025-09-29T03:49:00.0842933Z                                                                  ^
2025-09-29T03:49:00.0843721Z src/core/GitManager.cpp:759:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0844166Z     auto diffResult = executeGitCommand({"show", commitHash, "--", fileName});
2025-09-29T03:49:00.0844385Z                                                                               ^
2025-09-29T03:49:00.0844962Z src/core/GitManager.cpp:760:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0845170Z     if (!diffResult.isSuccess()) {
2025-09-29T03:49:00.0845339Z                                   ^
2025-09-29T03:49:00.0845904Z src/core/GitManager.cpp:761:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0846065Z         return diff;
2025-09-29T03:49:00.0846228Z                     ^
2025-09-29T03:49:00.0846802Z src/core/GitManager.cpp:762:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0846947Z     }
2025-09-29T03:49:00.0847100Z      ^
2025-09-29T03:49:00.0847689Z src/core/GitManager.cpp:764:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0848067Z     // Parse diff hunks
2025-09-29T03:49:00.0848237Z                        ^
2025-09-29T03:49:00.0848813Z src/core/GitManager.cpp:765:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0849120Z     auto lines = parseGitOutput(diffResult.output, "\n");
2025-09-29T03:49:00.0849576Z                                                          ^
2025-09-29T03:49:00.0850156Z src/core/GitManager.cpp:766:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0850363Z     GitDiffHunk* currentHunk = nullptr;
2025-09-29T03:49:00.0850511Z                ^
2025-09-29T03:49:00.0851083Z src/core/GitManager.cpp:766:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0851282Z     GitDiffHunk* currentHunk = nullptr;
2025-09-29T03:49:00.0851430Z                 ^
2025-09-29T03:49:00.0851999Z src/core/GitManager.cpp:766:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0852206Z     GitDiffHunk* currentHunk = nullptr;
2025-09-29T03:49:00.0852376Z                                        ^
2025-09-29T03:49:00.0852933Z src/core/GitManager.cpp:768:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0853134Z     for (const auto& line : lines) {
2025-09-29T03:49:00.0853499Z                    ^
2025-09-29T03:49:00.0854064Z src/core/GitManager.cpp:768:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0854254Z     for (const auto& line : lines) {
2025-09-29T03:49:00.0854404Z                     ^
2025-09-29T03:49:00.0854966Z src/core/GitManager.cpp:768:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0855158Z     for (const auto& line : lines) {
2025-09-29T03:49:00.0855326Z                                     ^
2025-09-29T03:49:00.0855893Z src/core/GitManager.cpp:769:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0856077Z         if (line.empty()) continue;
2025-09-29T03:49:00.0856246Z                          ^
2025-09-29T03:49:00.0856806Z src/core/GitManager.cpp:769:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0856986Z         if (line.empty()) continue;
2025-09-29T03:49:00.0857159Z                                    ^
2025-09-29T03:49:00.0857722Z src/core/GitManager.cpp:771:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0858093Z         // Check for hunk header
2025-09-29T03:49:00.0858275Z                                 ^
2025-09-29T03:49:00.0858837Z src/core/GitManager.cpp:772:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0859024Z         if (line.substr(0, 2) == "@@") {
2025-09-29T03:49:00.0859193Z                                         ^
2025-09-29T03:49:00.0859967Z src/core/GitManager.cpp:773:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0860367Z             std::regex hunkRegex("@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@");
2025-09-29T03:49:00.0860587Z                                                                                     ^
2025-09-29T03:49:00.0861170Z src/core/GitManager.cpp:774:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0861361Z             std::smatch matches;
2025-09-29T03:49:00.0861523Z                                 ^
2025-09-29T03:49:00.0862092Z src/core/GitManager.cpp:775:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0862347Z             if (std::regex_search(line, matches, hunkRegex)) {
2025-09-29T03:49:00.0862544Z                                                               ^
2025-09-29T03:49:00.0863114Z src/core/GitManager.cpp:776:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0863300Z                 GitDiffHunk hunk;
2025-09-29T03:49:00.0863464Z                                  ^
2025-09-29T03:49:00.0864031Z src/core/GitManager.cpp:777:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0864210Z                 hunk.header = line;
2025-09-29T03:49:00.0864368Z                                    ^
2025-09-29T03:49:00.0864928Z src/core/GitManager.cpp:778:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0865174Z                 hunk.oldStart = std::stoi(matches[1]);
2025-09-29T03:49:00.0865362Z                                                       ^
2025-09-29T03:49:00.0865923Z src/core/GitManager.cpp:779:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0866298Z                 hunk.oldCount = matches[2].matched ? std::stoi(matches[2]) : 1;
2025-09-29T03:49:00.0866506Z                                                                                ^
2025-09-29T03:49:00.0867078Z src/core/GitManager.cpp:780:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0867311Z                 hunk.newStart = std::stoi(matches[3]);
2025-09-29T03:49:00.0867489Z                                                       ^
2025-09-29T03:49:00.0868230Z src/core/GitManager.cpp:781:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0868597Z                 hunk.newCount = matches[4].matched ? std::stoi(matches[4]) : 1;
2025-09-29T03:49:00.0869008Z                                                                                ^
2025-09-29T03:49:00.0869569Z src/core/GitManager.cpp:782:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0869785Z                 diff.hunks.push_back(hunk);
2025-09-29T03:49:00.0869962Z                                            ^
2025-09-29T03:49:00.0870522Z src/core/GitManager.cpp:783:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0870741Z                 currentHunk = &diff.hunks.back();
2025-09-29T03:49:00.0870932Z                                                  ^
2025-09-29T03:49:00.0871492Z src/core/GitManager.cpp:784:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0871638Z             }
2025-09-29T03:49:00.0871805Z              ^
2025-09-29T03:49:00.0872361Z src/core/GitManager.cpp:785:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0872588Z         } else if (currentHunk && !line.empty()) {
2025-09-29T03:49:00.0872776Z                                                   ^
2025-09-29T03:49:00.0873330Z src/core/GitManager.cpp:786:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0873511Z             GitDiffLine diffLine;
2025-09-29T03:49:00.0873677Z                                  ^
2025-09-29T03:49:00.0874409Z src/core/GitManager.cpp:787:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0874585Z             if (line[0] == '+') {
2025-09-29T03:49:00.0874744Z                                  ^
2025-09-29T03:49:00.0875305Z src/core/GitManager.cpp:788:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0875567Z                 diffLine.type = GitDiffLine::Type::Addition;
2025-09-29T03:49:00.0875758Z                                                             ^
2025-09-29T03:49:00.0876332Z src/core/GitManager.cpp:789:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0876541Z                 diffLine.content = line.substr(1);
2025-09-29T03:49:00.0876714Z                                                   ^
2025-09-29T03:49:00.0877274Z src/core/GitManager.cpp:790:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0877461Z             } else if (line[0] == '-') {
2025-09-29T03:49:00.0877629Z                                         ^
2025-09-29T03:49:00.0878405Z src/core/GitManager.cpp:791:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0878662Z                 diffLine.type = GitDiffLine::Type::Deletion;
2025-09-29T03:49:00.0878848Z                                                             ^
2025-09-29T03:49:00.0879403Z src/core/GitManager.cpp:792:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0879625Z                 diffLine.content = line.substr(1);
2025-09-29T03:49:00.0879798Z                                                   ^
2025-09-29T03:49:00.0880349Z src/core/GitManager.cpp:793:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0880540Z             } else if (line[0] == ' ') {
2025-09-29T03:49:00.0880703Z                                         ^
2025-09-29T03:49:00.0881257Z src/core/GitManager.cpp:794:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0881520Z                 diffLine.type = GitDiffLine::Type::Context;
2025-09-29T03:49:00.0881702Z                                                            ^
2025-09-29T03:49:00.0882266Z src/core/GitManager.cpp:795:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0882475Z                 diffLine.content = line.substr(1);
2025-09-29T03:49:00.0882646Z                                                   ^
2025-09-29T03:49:00.0883394Z src/core/GitManager.cpp:796:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0883742Z             } else if (line.substr(0, 4) == "diff" || line.substr(0, 5) == "index" ||
2025-09-29T03:49:00.0883959Z                                                                                      ^
2025-09-29T03:49:00.0884520Z src/core/GitManager.cpp:797:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0884811Z                       line.substr(0, 3) == "+++" || line.substr(0, 3) == "---") {
2025-09-29T03:49:00.0885030Z                                                                                  ^
2025-09-29T03:49:00.0885586Z src/core/GitManager.cpp:798:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0885836Z                 diffLine.type = GitDiffLine::Type::Header;
2025-09-29T03:49:00.0886019Z                                                           ^
2025-09-29T03:49:00.0886569Z src/core/GitManager.cpp:799:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0886768Z                 diffLine.content = line;
2025-09-29T03:49:00.0886940Z                                         ^
2025-09-29T03:49:00.0887490Z src/core/GitManager.cpp:800:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0887640Z             } else {
2025-09-29T03:49:00.0887796Z                     ^
2025-09-29T03:49:00.0888724Z src/core/GitManager.cpp:801:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0888891Z                 continue;
2025-09-29T03:49:00.0889053Z                          ^
2025-09-29T03:49:00.0889604Z src/core/GitManager.cpp:802:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0889746Z             }
2025-09-29T03:49:00.0889888Z              ^
2025-09-29T03:49:00.0890442Z src/core/GitManager.cpp:803:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0890668Z             currentHunk->lines.push_back(diffLine);
2025-09-29T03:49:00.0890849Z                                                    ^
2025-09-29T03:49:00.0891407Z src/core/GitManager.cpp:804:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0891549Z         }
2025-09-29T03:49:00.0891690Z          ^
2025-09-29T03:49:00.0892252Z src/core/GitManager.cpp:805:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0892391Z     }
2025-09-29T03:49:00.0892529Z      ^
2025-09-29T03:49:00.0893089Z src/core/GitManager.cpp:810:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0893614Z std::vector<GitDiff> GitManager::getCommitDiffAll(const std::string& commitHash) const {
2025-09-29T03:49:00.0893761Z                     ^
2025-09-29T03:49:00.0894310Z src/core/GitManager.cpp:810:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0894823Z std::vector<GitDiff> GitManager::getCommitDiffAll(const std::string& commitHash) const {
2025-09-29T03:49:00.0895022Z                                                                    ^
2025-09-29T03:49:00.0895606Z src/core/GitManager.cpp:810:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0896134Z std::vector<GitDiff> GitManager::getCommitDiffAll(const std::string& commitHash) const {
2025-09-29T03:49:00.0896336Z                                                                     ^
2025-09-29T03:49:00.0896950Z src/core/GitManager.cpp:810:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0897476Z std::vector<GitDiff> GitManager::getCommitDiffAll(const std::string& commitHash) const {
2025-09-29T03:49:00.0897697Z                                                                                         ^
2025-09-29T03:49:00.0898546Z src/core/GitManager.cpp:811:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0898999Z     std::vector<GitDiff> diffs;
2025-09-29T03:49:00.0899159Z                                ^
2025-09-29T03:49:00.0899726Z src/core/GitManager.cpp:813:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0899922Z     // Get all changed files in a commit
2025-09-29T03:49:00.0900092Z                                         ^
2025-09-29T03:49:00.0900665Z src/core/GitManager.cpp:814:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0901341Z     auto filesResult = executeGitCommand({"diff-tree", "--no-commit-id", "--name-status", "-r", commitHash});
2025-09-29T03:49:00.0901515Z                                          ^
2025-09-29T03:49:00.0902106Z src/core/GitManager.cpp:814:110: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0902798Z     auto filesResult = executeGitCommand({"diff-tree", "--no-commit-id", "--name-status", "-r", commitHash});
2025-09-29T03:49:00.0903058Z                                                                                                              ^
2025-09-29T03:49:00.0903654Z src/core/GitManager.cpp:815:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0904004Z     if (!filesResult.isSuccess() || filesResult.output.empty()) {
2025-09-29T03:49:00.0904198Z                                                                  ^
2025-09-29T03:49:00.0904753Z src/core/GitManager.cpp:816:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0905189Z         return diffs;
2025-09-29T03:49:00.0905365Z                      ^
2025-09-29T03:49:00.0905970Z src/core/GitManager.cpp:817:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0906112Z     }
2025-09-29T03:49:00.0906252Z      ^
2025-09-29T03:49:00.0906848Z src/core/GitManager.cpp:819:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0907167Z     auto files = parseGitOutput(filesResult.output, "\n");
2025-09-29T03:49:00.0907357Z                                                           ^
2025-09-29T03:49:00.0908242Z src/core/GitManager.cpp:821:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0908439Z     for (const auto& file : files) {
2025-09-29T03:49:00.0908590Z                    ^
2025-09-29T03:49:00.0909164Z src/core/GitManager.cpp:821:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0909348Z     for (const auto& file : files) {
2025-09-29T03:49:00.0909509Z                     ^
2025-09-29T03:49:00.0910073Z src/core/GitManager.cpp:821:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0910264Z     for (const auto& file : files) {
2025-09-29T03:49:00.0910425Z                                     ^
2025-09-29T03:49:00.0910997Z src/core/GitManager.cpp:822:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0911203Z         if (file.empty()) continue;
2025-09-29T03:49:00.0911357Z                          ^
2025-09-29T03:49:00.0911929Z src/core/GitManager.cpp:822:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0912116Z         if (file.empty()) continue;
2025-09-29T03:49:00.0912270Z                                    ^
2025-09-29T03:49:00.0912829Z src/core/GitManager.cpp:824:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0913099Z         auto fileParts = GitUtils::split(file, "\t");
2025-09-29T03:49:00.0913282Z                                                      ^
2025-09-29T03:49:00.0913838Z src/core/GitManager.cpp:825:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0914039Z         if (fileParts.size() < 2) continue;
2025-09-29T03:49:00.0914217Z                                  ^
2025-09-29T03:49:00.0914773Z src/core/GitManager.cpp:825:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0915230Z         if (fileParts.size() < 2) continue;
2025-09-29T03:49:00.0915411Z                                            ^
2025-09-29T03:49:00.0915969Z src/core/GitManager.cpp:827:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0916178Z         std::string fileName = fileParts[1];
2025-09-29T03:49:00.0916357Z                                             ^
2025-09-29T03:49:00.0916919Z src/core/GitManager.cpp:828:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0917076Z         GitDiff diff;
2025-09-29T03:49:00.0917229Z                      ^
2025-09-29T03:49:00.0917789Z src/core/GitManager.cpp:829:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0918178Z         diff.filePath = fileName;
2025-09-29T03:49:00.0918337Z                                  ^
2025-09-29T03:49:00.0918902Z src/core/GitManager.cpp:831:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0919088Z         // Determine file status
2025-09-29T03:49:00.0919241Z                                 ^
2025-09-29T03:49:00.0919804Z src/core/GitManager.cpp:832:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0919974Z         if (fileParts[0] == "A") {
2025-09-29T03:49:00.0920130Z                                   ^
2025-09-29T03:49:00.0920701Z src/core/GitManager.cpp:833:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0921208Z             diff.isNewFile = true;
2025-09-29T03:49:00.0921375Z                                   ^
2025-09-29T03:49:00.0921952Z src/core/GitManager.cpp:834:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0922149Z         } else if (fileParts[0] == "D") {
2025-09-29T03:49:00.0922315Z                                          ^
2025-09-29T03:49:00.0922876Z src/core/GitManager.cpp:835:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0923091Z             diff.isDeletedFile = true;
2025-09-29T03:49:00.0923252Z                                       ^
2025-09-29T03:49:00.0923818Z src/core/GitManager.cpp:836:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0924245Z         } else if (fileParts[0].find("R") != std::string::npos && fileParts.size() >= 3) {
2025-09-29T03:49:00.0924442Z                                                                  ^
2025-09-29T03:49:00.0925016Z src/core/GitManager.cpp:836:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0925426Z         } else if (fileParts[0].find("R") != std::string::npos && fileParts.size() >= 3) {
2025-09-29T03:49:00.0925639Z                                                                                           ^
2025-09-29T03:49:00.0926210Z src/core/GitManager.cpp:837:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0926395Z             // Handle renames
2025-09-29T03:49:00.0926552Z                              ^
2025-09-29T03:49:00.0927121Z src/core/GitManager.cpp:838:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0927316Z             diff.oldPath = fileParts[1];
2025-09-29T03:49:00.0927489Z                                         ^
2025-09-29T03:49:00.0928243Z src/core/GitManager.cpp:839:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0928443Z             diff.filePath = fileParts[2];
2025-09-29T03:49:00.0928613Z                                          ^
2025-09-29T03:49:00.0929162Z src/core/GitManager.cpp:840:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0929300Z         }
2025-09-29T03:49:00.0929445Z          ^
2025-09-29T03:49:00.0929985Z src/core/GitManager.cpp:842:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0930418Z         // Get the actual diff content for this file
2025-09-29T03:49:00.0930588Z                                                     ^
2025-09-29T03:49:00.0931143Z src/core/GitManager.cpp:843:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0931466Z         // Use show for the commit to handle initial commits properly
2025-09-29T03:49:00.0931662Z                                                                      ^
2025-09-29T03:49:00.0932235Z src/core/GitManager.cpp:844:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0932669Z         auto diffResult = executeGitCommand({"show", commitHash, "--", fileName});
2025-09-29T03:49:00.0932876Z                                                                                   ^
2025-09-29T03:49:00.0933448Z src/core/GitManager.cpp:845:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0933648Z         if (!diffResult.isSuccess()) {
2025-09-29T03:49:00.0933822Z                                       ^
2025-09-29T03:49:00.0934380Z src/core/GitManager.cpp:846:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0934535Z             continue;
2025-09-29T03:49:00.0934685Z                      ^
2025-09-29T03:49:00.0935238Z src/core/GitManager.cpp:847:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0935389Z         }
2025-09-29T03:49:00.0935526Z          ^
2025-09-29T03:49:00.0936288Z src/core/GitManager.cpp:849:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0936472Z         // Check if binary
2025-09-29T03:49:00.0936623Z                           ^
2025-09-29T03:49:00.0937187Z src/core/GitManager.cpp:850:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0937576Z         if (diffResult.output.find("Binary files") != std::string::npos) {
2025-09-29T03:49:00.0937776Z                                                                           ^
2025-09-29T03:49:00.0938552Z src/core/GitManager.cpp:851:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0938743Z             diff.isBinary = true;
2025-09-29T03:49:00.0938900Z                                  ^
2025-09-29T03:49:00.0939454Z src/core/GitManager.cpp:852:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0939636Z             diffs.push_back(diff);
2025-09-29T03:49:00.0939800Z                                   ^
2025-09-29T03:49:00.0940362Z src/core/GitManager.cpp:853:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0940512Z             continue;
2025-09-29T03:49:00.0940666Z                      ^
2025-09-29T03:49:00.0941218Z src/core/GitManager.cpp:854:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0941360Z         }
2025-09-29T03:49:00.0941501Z          ^
2025-09-29T03:49:00.0942068Z src/core/GitManager.cpp:856:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0942243Z         // Parse diff hunks
2025-09-29T03:49:00.0942397Z                            ^
2025-09-29T03:49:00.0942958Z src/core/GitManager.cpp:857:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0943258Z         auto lines = parseGitOutput(diffResult.output, "\n");
2025-09-29T03:49:00.0943446Z                                                              ^
2025-09-29T03:49:00.0944023Z src/core/GitManager.cpp:858:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0944229Z         GitDiffHunk* currentHunk = nullptr;
2025-09-29T03:49:00.0944374Z                    ^
2025-09-29T03:49:00.0944936Z src/core/GitManager.cpp:858:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0945135Z         GitDiffHunk* currentHunk = nullptr;
2025-09-29T03:49:00.0945277Z                     ^
2025-09-29T03:49:00.0946060Z src/core/GitManager.cpp:858:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0946254Z         GitDiffHunk* currentHunk = nullptr;
2025-09-29T03:49:00.0946417Z                                            ^
2025-09-29T03:49:00.0946964Z src/core/GitManager.cpp:859:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0947159Z         int oldLineNum = 0, newLineNum = 0;
2025-09-29T03:49:00.0947317Z                                            ^
2025-09-29T03:49:00.0948070Z src/core/GitManager.cpp:861:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0948270Z         for (const auto& line : lines) {
2025-09-29T03:49:00.0948419Z                        ^
2025-09-29T03:49:00.0948979Z src/core/GitManager.cpp:861:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0949213Z         for (const auto& line : lines) {
2025-09-29T03:49:00.0949375Z                         ^
2025-09-29T03:49:00.0949959Z src/core/GitManager.cpp:861:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0950150Z         for (const auto& line : lines) {
2025-09-29T03:49:00.0950353Z                                         ^
2025-09-29T03:49:00.0950938Z src/core/GitManager.cpp:862:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0951120Z             if (line.empty()) continue;
2025-09-29T03:49:00.0951275Z                              ^
2025-09-29T03:49:00.0952026Z src/core/GitManager.cpp:862:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0952209Z             if (line.empty()) continue;
2025-09-29T03:49:00.0952370Z                                        ^
2025-09-29T03:49:00.0952931Z src/core/GitManager.cpp:864:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0953124Z             // Check for hunk header
2025-09-29T03:49:00.0953303Z                                     ^
2025-09-29T03:49:00.0953852Z src/core/GitManager.cpp:865:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0954028Z             if (line.substr(0, 2) == "@@") {
2025-09-29T03:49:00.0954191Z                                             ^
2025-09-29T03:49:00.0954740Z src/core/GitManager.cpp:866:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0955107Z                 std::regex hunkRegex("@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@");
2025-09-29T03:49:00.0955333Z                                                                                         ^
2025-09-29T03:49:00.0955914Z src/core/GitManager.cpp:867:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0956093Z                 std::smatch matches;
2025-09-29T03:49:00.0956251Z                                     ^
2025-09-29T03:49:00.0956817Z src/core/GitManager.cpp:868:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0957094Z                 if (std::regex_search(line, matches, hunkRegex)) {
2025-09-29T03:49:00.0957291Z                                                                   ^
2025-09-29T03:49:00.0958093Z src/core/GitManager.cpp:869:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0958279Z                     GitDiffHunk hunk;
2025-09-29T03:49:00.0958442Z                                      ^
2025-09-29T03:49:00.0959024Z src/core/GitManager.cpp:870:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0959212Z                     hunk.header = line;
2025-09-29T03:49:00.0959376Z                                        ^
2025-09-29T03:49:00.0959935Z src/core/GitManager.cpp:871:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0960174Z                     hunk.oldStart = std::stoi(matches[1]);
2025-09-29T03:49:00.0960359Z                                                           ^
2025-09-29T03:49:00.0961165Z src/core/GitManager.cpp:872:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0961535Z                     hunk.oldCount = matches[2].matched ? std::stoi(matches[2]) : 1;
2025-09-29T03:49:00.0961742Z                                                                                    ^
2025-09-29T03:49:00.0962303Z src/core/GitManager.cpp:873:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0962544Z                     hunk.newStart = std::stoi(matches[3]);
2025-09-29T03:49:00.0962725Z                                                           ^
2025-09-29T03:49:00.0963292Z src/core/GitManager.cpp:874:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0963650Z                     hunk.newCount = matches[4].matched ? std::stoi(matches[4]) : 1;
2025-09-29T03:49:00.0963849Z                                                                                    ^
2025-09-29T03:49:00.0964420Z src/core/GitManager.cpp:875:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0964635Z                     diff.hunks.push_back(hunk);
2025-09-29T03:49:00.0964810Z                                                ^
2025-09-29T03:49:00.0965391Z src/core/GitManager.cpp:876:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0965600Z                     currentHunk = &diff.hunks.back();
2025-09-29T03:49:00.0965993Z                                                      ^
2025-09-29T03:49:00.0966558Z src/core/GitManager.cpp:877:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0966756Z                     oldLineNum = hunk.oldStart;
2025-09-29T03:49:00.0966933Z                                                ^
2025-09-29T03:49:00.0967493Z src/core/GitManager.cpp:878:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0967696Z                     newLineNum = hunk.newStart;
2025-09-29T03:49:00.0968050Z                                                ^
2025-09-29T03:49:00.0968611Z src/core/GitManager.cpp:879:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0968756Z                 }
2025-09-29T03:49:00.0968908Z                  ^
2025-09-29T03:49:00.0969467Z src/core/GitManager.cpp:880:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0969701Z             } else if (currentHunk && !line.empty()) {
2025-09-29T03:49:00.0969890Z                                                       ^
2025-09-29T03:49:00.0970472Z src/core/GitManager.cpp:881:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0970657Z                 GitDiffLine diffLine;
2025-09-29T03:49:00.0970818Z                                      ^
2025-09-29T03:49:00.0971393Z src/core/GitManager.cpp:882:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0971570Z                 if (line[0] == '+') {
2025-09-29T03:49:00.0971730Z                                      ^
2025-09-29T03:49:00.0972302Z src/core/GitManager.cpp:883:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0972564Z                     diffLine.type = GitDiffLine::Type::Addition;
2025-09-29T03:49:00.0972756Z                                                                 ^
2025-09-29T03:49:00.0973342Z src/core/GitManager.cpp:884:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0973559Z                     diffLine.content = line.substr(1);
2025-09-29T03:49:00.0973737Z                                                       ^
2025-09-29T03:49:00.0974304Z src/core/GitManager.cpp:885:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0974546Z                     diffLine.newLineNumber = newLineNum++;
2025-09-29T03:49:00.0974964Z                                                           ^
2025-09-29T03:49:00.0975543Z src/core/GitManager.cpp:886:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0975737Z                 } else if (line[0] == '-') {
2025-09-29T03:49:00.0975910Z                                             ^
2025-09-29T03:49:00.0976473Z src/core/GitManager.cpp:887:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0976738Z                     diffLine.type = GitDiffLine::Type::Deletion;
2025-09-29T03:49:00.0976932Z                                                                 ^
2025-09-29T03:49:00.0977474Z src/core/GitManager.cpp:888:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0977687Z                     diffLine.content = line.substr(1);
2025-09-29T03:49:00.0978107Z                                                       ^
2025-09-29T03:49:00.0978666Z src/core/GitManager.cpp:889:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0978905Z                     diffLine.oldLineNumber = oldLineNum++;
2025-09-29T03:49:00.0979074Z                                                           ^
2025-09-29T03:49:00.0979607Z src/core/GitManager.cpp:890:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0979782Z                 } else if (line[0] == ' ') {
2025-09-29T03:49:00.0979948Z                                             ^
2025-09-29T03:49:00.0980711Z src/core/GitManager.cpp:891:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0980977Z                     diffLine.type = GitDiffLine::Type::Context;
2025-09-29T03:49:00.0981175Z                                                                ^
2025-09-29T03:49:00.0981724Z src/core/GitManager.cpp:892:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0981935Z                     diffLine.content = line.substr(1);
2025-09-29T03:49:00.0982126Z                                                       ^
2025-09-29T03:49:00.0982675Z src/core/GitManager.cpp:893:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0982898Z                     diffLine.oldLineNumber = oldLineNum++;
2025-09-29T03:49:00.0983082Z                                                           ^
2025-09-29T03:49:00.0983626Z src/core/GitManager.cpp:894:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0983857Z                     diffLine.newLineNumber = newLineNum++;
2025-09-29T03:49:00.0984031Z                                                           ^
2025-09-29T03:49:00.0984583Z src/core/GitManager.cpp:895:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0984928Z                 } else if (line.substr(0, 4) == "diff" || line.substr(0, 5) == "index" ||
2025-09-29T03:49:00.0985102Z                                                          ^
2025-09-29T03:49:00.0985669Z src/core/GitManager.cpp:895:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0986002Z                 } else if (line.substr(0, 4) == "diff" || line.substr(0, 5) == "index" ||
2025-09-29T03:49:00.0986209Z                                                                                          ^
2025-09-29T03:49:00.0986762Z src/core/GitManager.cpp:896:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0987058Z                           line.substr(0, 3) == "+++" || line.substr(0, 3) == "---") {
2025-09-29T03:49:00.0987237Z                                                        ^
2025-09-29T03:49:00.0987793Z src/core/GitManager.cpp:896:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0988337Z                           line.substr(0, 3) == "+++" || line.substr(0, 3) == "---") {
2025-09-29T03:49:00.0988544Z                                                                                      ^
2025-09-29T03:49:00.0989351Z src/core/GitManager.cpp:897:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0989602Z                     diffLine.type = GitDiffLine::Type::Header;
2025-09-29T03:49:00.0989786Z                                                               ^
2025-09-29T03:49:00.0990343Z src/core/GitManager.cpp:898:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0990541Z                     diffLine.content = line;
2025-09-29T03:49:00.0990716Z                                             ^
2025-09-29T03:49:00.0991269Z src/core/GitManager.cpp:899:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0991431Z                 } else {
2025-09-29T03:49:00.0991590Z                         ^
2025-09-29T03:49:00.0992143Z src/core/GitManager.cpp:900:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0992310Z                     continue;
2025-09-29T03:49:00.0992475Z                              ^
2025-09-29T03:49:00.0993010Z src/core/GitManager.cpp:901:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0993148Z                 }
2025-09-29T03:49:00.0993290Z                  ^
2025-09-29T03:49:00.0993825Z src/core/GitManager.cpp:902:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0994046Z                 currentHunk->lines.push_back(diffLine);
2025-09-29T03:49:00.0994421Z                                                        ^
2025-09-29T03:49:00.0994970Z src/core/GitManager.cpp:903:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0995109Z             }
2025-09-29T03:49:00.0995242Z              ^
2025-09-29T03:49:00.0995784Z src/core/GitManager.cpp:904:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0995919Z         }
2025-09-29T03:49:00.0996050Z          ^
2025-09-29T03:49:00.0996598Z src/core/GitManager.cpp:906:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0996769Z         diffs.push_back(diff);
2025-09-29T03:49:00.0996918Z                               ^
2025-09-29T03:49:00.0997458Z src/core/GitManager.cpp:907:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0997630Z     }
2025-09-29T03:49:00.0997793Z      ^
2025-09-29T03:49:00.0998636Z src/core/GitManager.cpp:913:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0998947Z std::vector<GitRemote> GitManager::getRemotes() const {
2025-09-29T03:49:00.0999118Z                                                        ^
2025-09-29T03:49:00.0999648Z src/core/GitManager.cpp:914:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.0999839Z     std::vector<GitRemote> remotes;
2025-09-29T03:49:00.0999989Z                                    ^
2025-09-29T03:49:00.1000550Z src/core/GitManager.cpp:916:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1000850Z     auto result = pImpl->executeGitCommand("remote -v");
2025-09-29T03:49:00.1001026Z                                                         ^
2025-09-29T03:49:00.1001562Z src/core/GitManager.cpp:917:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1001737Z     if (result.isSuccess()) {
2025-09-29T03:49:00.1001891Z                              ^
2025-09-29T03:49:00.1002516Z src/core/GitManager.cpp:918:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1002752Z         std::istringstream stream(result.output);
2025-09-29T03:49:00.1002937Z                                                  ^
2025-09-29T03:49:00.1003492Z src/core/GitManager.cpp:919:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1003661Z         std::string line;
2025-09-29T03:49:00.1004068Z                          ^
2025-09-29T03:49:00.1004625Z src/core/GitManager.cpp:920:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1004820Z         std::set<std::string> seenNames;
2025-09-29T03:49:00.1004990Z                                         ^
2025-09-29T03:49:00.1005544Z src/core/GitManager.cpp:922:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1005750Z         while (std::getline(stream, line)) {
2025-09-29T03:49:00.1005919Z                                             ^
2025-09-29T03:49:00.1006496Z src/core/GitManager.cpp:923:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1006673Z             if (!line.empty()) {
2025-09-29T03:49:00.1006835Z                                 ^
2025-09-29T03:49:00.1007403Z src/core/GitManager.cpp:924:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1007640Z                 auto parts = GitUtils::split(line, "\t");
2025-09-29T03:49:00.1007830Z                                                          ^
2025-09-29T03:49:00.1008716Z src/core/GitManager.cpp:925:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1008911Z                 if (parts.size() >= 2) {
2025-09-29T03:49:00.1009074Z                                         ^
2025-09-29T03:49:00.1009645Z src/core/GitManager.cpp:926:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1009851Z                     std::string name = parts[0];
2025-09-29T03:49:00.1010264Z                                                 ^
2025-09-29T03:49:00.1010829Z src/core/GitManager.cpp:928:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1011225Z                     // Only add each remote once (git remote -v shows fetch and push URLs)
2025-09-29T03:49:00.1011439Z                                                                                           ^
2025-09-29T03:49:00.1012001Z src/core/GitManager.cpp:929:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1012259Z                     if (seenNames.find(name) == seenNames.end()) {
2025-09-29T03:49:00.1012453Z                                                                   ^
2025-09-29T03:49:00.1013008Z src/core/GitManager.cpp:930:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1013198Z                         GitRemote remote;
2025-09-29T03:49:00.1013379Z                                          ^
2025-09-29T03:49:00.1013928Z src/core/GitManager.cpp:931:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1014121Z                         remote.name = name;
2025-09-29T03:49:00.1014288Z                                            ^
2025-09-29T03:49:00.1014841Z src/core/GitManager.cpp:933:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1015080Z                         // Parse URL and type from the second part
2025-09-29T03:49:00.1015273Z                                                                   ^
2025-09-29T03:49:00.1015826Z src/core/GitManager.cpp:934:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1016096Z                         auto urlParts = GitUtils::split(parts[1], " ");
2025-09-29T03:49:00.1016298Z                                                                        ^
2025-09-29T03:49:00.1016859Z src/core/GitManager.cpp:935:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1017067Z                         if (!urlParts.empty()) {
2025-09-29T03:49:00.1017252Z                                                 ^
2025-09-29T03:49:00.1017818Z src/core/GitManager.cpp:936:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1018222Z                             remote.url = urlParts[0];
2025-09-29T03:49:00.1018416Z                                                      ^
2025-09-29T03:49:00.1019214Z src/core/GitManager.cpp:937:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1019550Z                             remote.pushUrl = urlParts[0]; // Default to same as fetch
2025-09-29T03:49:00.1019762Z                                                                                      ^
2025-09-29T03:49:00.1020331Z src/core/GitManager.cpp:938:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1020486Z                         }
2025-09-29T03:49:00.1020648Z                          ^
2025-09-29T03:49:00.1021217Z src/core/GitManager.cpp:940:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1021420Z                         remotes.push_back(remote);
2025-09-29T03:49:00.1021593Z                                                   ^
2025-09-29T03:49:00.1022162Z src/core/GitManager.cpp:941:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1022369Z                         seenNames.insert(name);
2025-09-29T03:49:00.1022538Z                                                ^
2025-09-29T03:49:00.1023108Z src/core/GitManager.cpp:942:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1023256Z                     }
2025-09-29T03:49:00.1023402Z                      ^
2025-09-29T03:49:00.1023971Z src/core/GitManager.cpp:943:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1024308Z                 }
2025-09-29T03:49:00.1024450Z                  ^
2025-09-29T03:49:00.1024990Z src/core/GitManager.cpp:944:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1025134Z             }
2025-09-29T03:49:00.1025269Z              ^
2025-09-29T03:49:00.1025804Z src/core/GitManager.cpp:945:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1025941Z         }
2025-09-29T03:49:00.1026080Z          ^
2025-09-29T03:49:00.1026606Z src/core/GitManager.cpp:947:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1026834Z         // Get push URLs if different from fetch URLs
2025-09-29T03:49:00.1027006Z                                                      ^
2025-09-29T03:49:00.1027550Z src/core/GitManager.cpp:948:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1027736Z         for (auto& remote : remotes) {
2025-09-29T03:49:00.1028123Z                  ^
2025-09-29T03:49:00.1028684Z src/core/GitManager.cpp:948:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1028867Z         for (auto& remote : remotes) {
2025-09-29T03:49:00.1029021Z                   ^
2025-09-29T03:49:00.1029565Z src/core/GitManager.cpp:948:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1029742Z         for (auto& remote : remotes) {
2025-09-29T03:49:00.1029916Z                                       ^
2025-09-29T03:49:00.1030458Z src/core/GitManager.cpp:949:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1030963Z             auto pushResult = pImpl->executeGitCommand("remote get-url --push " + remote.name);
2025-09-29T03:49:00.1031117Z                              ^
2025-09-29T03:49:00.1031678Z src/core/GitManager.cpp:949:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1032175Z             auto pushResult = pImpl->executeGitCommand("remote get-url --push " + remote.name);
2025-09-29T03:49:00.1032390Z                                                                                                ^
2025-09-29T03:49:00.1032947Z src/core/GitManager.cpp:950:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1033284Z             if (pushResult.isSuccess() && !pushResult.output.empty()) {
2025-09-29T03:49:00.1033478Z                                                                        ^
2025-09-29T03:49:00.1034337Z src/core/GitManager.cpp:951:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1034636Z                 remote.pushUrl = GitUtils::trim(pushResult.output);
2025-09-29T03:49:00.1034826Z                                                                    ^
2025-09-29T03:49:00.1035378Z src/core/GitManager.cpp:952:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1035514Z             }
2025-09-29T03:49:00.1035651Z              ^
2025-09-29T03:49:00.1036205Z src/core/GitManager.cpp:953:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1036341Z         }
2025-09-29T03:49:00.1036477Z          ^
2025-09-29T03:49:00.1037019Z src/core/GitManager.cpp:954:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1037163Z     }
2025-09-29T03:49:00.1037297Z      ^
2025-09-29T03:49:00.1037837Z src/core/GitManager.cpp:959:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1038633Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-09-29T03:49:00.1038820Z                                                           ^
2025-09-29T03:49:00.1039371Z src/core/GitManager.cpp:959:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1039938Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-09-29T03:49:00.1040342Z                                                            ^
2025-09-29T03:49:00.1040948Z src/core/GitManager.cpp:959:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1041562Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-09-29T03:49:00.1041756Z                                                                  ^
2025-09-29T03:49:00.1042301Z src/core/GitManager.cpp:959:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1042854Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-09-29T03:49:00.1043058Z                                                                                    ^
2025-09-29T03:49:00.1043587Z src/core/GitManager.cpp:959:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1044131Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-09-29T03:49:00.1044347Z                                                                                     ^
2025-09-29T03:49:00.1044885Z src/core/GitManager.cpp:959:92: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1045441Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-09-29T03:49:00.1045659Z                                                                                            ^
2025-09-29T03:49:00.1046213Z src/core/GitManager.cpp:960:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1046407Z     if (name.empty() || url.empty()) {
2025-09-29T03:49:00.1046572Z                                       ^
2025-09-29T03:49:00.1047118Z src/core/GitManager.cpp:961:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1047307Z         GitOperationResult result;
2025-09-29T03:49:00.1047470Z                                   ^
2025-09-29T03:49:00.1048223Z src/core/GitManager.cpp:962:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1048454Z         result.result = GitCommandResult::Failed;
2025-09-29T03:49:00.1048633Z                                                  ^
2025-09-29T03:49:00.1049178Z src/core/GitManager.cpp:963:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1049459Z         result.error = "Remote name and URL cannot be empty";
2025-09-29T03:49:00.1049895Z                                                              ^
2025-09-29T03:49:00.1050453Z src/core/GitManager.cpp:964:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1050610Z         return result;
2025-09-29T03:49:00.1050756Z                       ^
2025-09-29T03:49:00.1051313Z src/core/GitManager.cpp:965:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1051450Z     }
2025-09-29T03:49:00.1051585Z      ^
2025-09-29T03:49:00.1052143Z src/core/GitManager.cpp:967:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1052411Z     std::string command = "remote add " + name + " " + url;
2025-09-29T03:49:00.1052594Z                                                            ^
2025-09-29T03:49:00.1053135Z src/core/GitManager.cpp:971:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1053564Z GitOperationResult GitManager::removeRemote(const std::string& name) {
2025-09-29T03:49:00.1053751Z                                                              ^
2025-09-29T03:49:00.1054293Z src/core/GitManager.cpp:971:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1054718Z GitOperationResult GitManager::removeRemote(const std::string& name) {
2025-09-29T03:49:00.1054902Z                                                               ^
2025-09-29T03:49:00.1055642Z src/core/GitManager.cpp:971:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1056072Z GitOperationResult GitManager::removeRemote(const std::string& name) {
2025-09-29T03:49:00.1056267Z                                                                       ^
2025-09-29T03:49:00.1056826Z src/core/GitManager.cpp:972:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1057006Z     if (name.empty()) {
2025-09-29T03:49:00.1057157Z                        ^
2025-09-29T03:49:00.1057717Z src/core/GitManager.cpp:973:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1058174Z         GitOperationResult result;
2025-09-29T03:49:00.1058339Z                                   ^
2025-09-29T03:49:00.1058904Z src/core/GitManager.cpp:974:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1059141Z         result.result = GitCommandResult::Failed;
2025-09-29T03:49:00.1059321Z                                                  ^
2025-09-29T03:49:00.1059883Z src/core/GitManager.cpp:975:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1060132Z         result.error = "Remote name cannot be empty";
2025-09-29T03:49:00.1060319Z                                                      ^
2025-09-29T03:49:00.1060878Z src/core/GitManager.cpp:976:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1061043Z         return result;
2025-09-29T03:49:00.1061208Z                       ^
2025-09-29T03:49:00.1061768Z src/core/GitManager.cpp:977:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1061907Z     }
2025-09-29T03:49:00.1062040Z      ^
2025-09-29T03:49:00.1062602Z src/core/GitManager.cpp:979:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1062854Z     std::string command = "remote remove " + name;
2025-09-29T03:49:00.1063029Z                                                   ^
2025-09-29T03:49:00.1063601Z src/core/GitManager.cpp:983:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1064255Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-09-29T03:49:00.1064438Z                                                              ^
2025-09-29T03:49:00.1064999Z src/core/GitManager.cpp:983:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1065892Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-09-29T03:49:00.1066083Z                                                               ^
2025-09-29T03:49:00.1066646Z src/core/GitManager.cpp:983:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1067288Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-09-29T03:49:00.1067488Z                                                                        ^
2025-09-29T03:49:00.1068317Z src/core/GitManager.cpp:983:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1068974Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-09-29T03:49:00.1069192Z                                                                                          ^
2025-09-29T03:49:00.1069754Z src/core/GitManager.cpp:983:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1070414Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-09-29T03:49:00.1070666Z                                                                                           ^
2025-09-29T03:49:00.1071242Z src/core/GitManager.cpp:983:102: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1071891Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-09-29T03:49:00.1072339Z                                                                                                      ^
2025-09-29T03:49:00.1072906Z src/core/GitManager.cpp:984:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1073139Z     if (oldName.empty() || newName.empty()) {
2025-09-29T03:49:00.1073308Z                                              ^
2025-09-29T03:49:00.1073859Z src/core/GitManager.cpp:985:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1074089Z         GitOperationResult result;
2025-09-29T03:49:00.1074255Z                                   ^
2025-09-29T03:49:00.1074808Z src/core/GitManager.cpp:986:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1075047Z         result.result = GitCommandResult::Failed;
2025-09-29T03:49:00.1075220Z                                                  ^
2025-09-29T03:49:00.1075775Z src/core/GitManager.cpp:987:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1076025Z         result.error = "Remote names cannot be empty";
2025-09-29T03:49:00.1076210Z                                                       ^
2025-09-29T03:49:00.1076760Z src/core/GitManager.cpp:988:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1076919Z         return result;
2025-09-29T03:49:00.1077076Z                       ^
2025-09-29T03:49:00.1077632Z src/core/GitManager.cpp:989:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1077771Z     }
2025-09-29T03:49:00.1078097Z      ^
2025-09-29T03:49:00.1078668Z src/core/GitManager.cpp:991:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1079009Z     std::string command = "remote rename " + oldName + " " + newName;
2025-09-29T03:49:00.1079210Z                                                                      ^
2025-09-29T03:49:00.1079785Z src/core/GitManager.cpp:996:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1080030Z std::vector<GitTag> GitManager::getTags() const {
2025-09-29T03:49:00.1080200Z                                                  ^
2025-09-29T03:49:00.1080758Z src/core/GitManager.cpp:997:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1080936Z     std::vector<GitTag> tags;
2025-09-29T03:49:00.1081318Z                              ^
2025-09-29T03:49:00.1081880Z src/core/GitManager.cpp:999:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1082067Z     // Get all tags with their details
2025-09-29T03:49:00.1082228Z                                       ^
2025-09-29T03:49:00.1082792Z src/core/GitManager.cpp:1000:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1083011Z     auto result = pImpl->executeGitCommand(
2025-09-29T03:49:00.1083152Z                  ^
2025-09-29T03:49:00.1083724Z src/core/GitManager.cpp:1000:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1083930Z     auto result = pImpl->executeGitCommand(
2025-09-29T03:49:00.1084098Z                                            ^
2025-09-29T03:49:00.1084653Z src/core/GitManager.cpp:1001:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1085237Z         "for-each-ref --format='%(refname:short)|%(objectname:short)|%(taggerdate:short)|%(subject)' refs/tags"
2025-09-29T03:49:00.1085395Z                       ^
2025-09-29T03:49:00.1085952Z src/core/GitManager.cpp:1001:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1086501Z         "for-each-ref --format='%(refname:short)|%(objectname:short)|%(taggerdate:short)|%(subject)' refs/tags"
2025-09-29T03:49:00.1086688Z                                                                      ^
2025-09-29T03:49:00.1087431Z src/core/GitManager.cpp:1001:112: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1088159Z         "for-each-ref --format='%(refname:short)|%(objectname:short)|%(taggerdate:short)|%(subject)' refs/tags"
2025-09-29T03:49:00.1088376Z                                                                                                                ^
2025-09-29T03:49:00.1088904Z src/core/GitManager.cpp:1002:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1089048Z     );
2025-09-29T03:49:00.1089176Z       ^
2025-09-29T03:49:00.1089702Z src/core/GitManager.cpp:1004:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1089871Z     if (result.isSuccess()) {
2025-09-29T03:49:00.1090020Z                              ^
2025-09-29T03:49:00.1090541Z src/core/GitManager.cpp:1005:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1090760Z         std::istringstream stream(result.output);
2025-09-29T03:49:00.1090934Z                                                  ^
2025-09-29T03:49:00.1091455Z src/core/GitManager.cpp:1006:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1091611Z         std::string line;
2025-09-29T03:49:00.1091756Z                          ^
2025-09-29T03:49:00.1092282Z src/core/GitManager.cpp:1008:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1092470Z         while (std::getline(stream, line)) {
2025-09-29T03:49:00.1092638Z                                             ^
2025-09-29T03:49:00.1093154Z src/core/GitManager.cpp:1009:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1093314Z             if (!line.empty()) {
2025-09-29T03:49:00.1093459Z                                 ^
2025-09-29T03:49:00.1093980Z src/core/GitManager.cpp:1010:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1094197Z                 auto parts = GitUtils::split(line, "|");
2025-09-29T03:49:00.1094371Z                                                         ^
2025-09-29T03:49:00.1094895Z src/core/GitManager.cpp:1011:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1095067Z                 if (!parts.empty()) {
2025-09-29T03:49:00.1095217Z                                      ^
2025-09-29T03:49:00.1095746Z src/core/GitManager.cpp:1012:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1096090Z                     GitTag tag;
2025-09-29T03:49:00.1096233Z                                ^
2025-09-29T03:49:00.1096764Z src/core/GitManager.cpp:1013:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1096931Z                     tag.name = parts[0];
2025-09-29T03:49:00.1097080Z                                         ^
2025-09-29T03:49:00.1097595Z src/core/GitManager.cpp:1015:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1097778Z                     if (parts.size() > 1) {
2025-09-29T03:49:00.1098154Z                                            ^
2025-09-29T03:49:00.1098692Z src/core/GitManager.cpp:1016:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1098885Z                         tag.commitHash = parts[1];
2025-09-29T03:49:00.1099043Z                                                   ^
2025-09-29T03:49:00.1099559Z src/core/GitManager.cpp:1017:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1099710Z                     }
2025-09-29T03:49:00.1099847Z                      ^
2025-09-29T03:49:00.1100362Z src/core/GitManager.cpp:1019:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1100584Z                     if (parts.size() > 2 && !parts[2].empty()) {
2025-09-29T03:49:00.1100758Z                                                                 ^
2025-09-29T03:49:00.1101464Z src/core/GitManager.cpp:1020:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1101636Z                         tag.date = parts[2];
2025-09-29T03:49:00.1101795Z                                             ^
2025-09-29T03:49:00.1102386Z src/core/GitManager.cpp:1021:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1102566Z                         tag.isAnnotated = true;
2025-09-29T03:49:00.1102726Z                                                ^
2025-09-29T03:49:00.1103245Z src/core/GitManager.cpp:1022:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1103384Z                     } else {
2025-09-29T03:49:00.1103528Z                             ^
2025-09-29T03:49:00.1104037Z src/core/GitManager.cpp:1023:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1104208Z                         tag.isAnnotated = false;
2025-09-29T03:49:00.1104362Z                                                 ^
2025-09-29T03:49:00.1104886Z src/core/GitManager.cpp:1024:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1105020Z                     }
2025-09-29T03:49:00.1105154Z                      ^
2025-09-29T03:49:00.1105673Z src/core/GitManager.cpp:1026:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1105838Z                     if (parts.size() > 3) {
2025-09-29T03:49:00.1105993Z                                            ^
2025-09-29T03:49:00.1106512Z src/core/GitManager.cpp:1027:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1106683Z                         tag.message = parts[3];
2025-09-29T03:49:00.1106837Z                                                ^
2025-09-29T03:49:00.1107364Z src/core/GitManager.cpp:1028:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1107498Z                     }
2025-09-29T03:49:00.1107629Z                      ^
2025-09-29T03:49:00.1108362Z src/core/GitManager.cpp:1030:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1108542Z                     tags.push_back(tag);
2025-09-29T03:49:00.1108693Z                                         ^
2025-09-29T03:49:00.1109207Z src/core/GitManager.cpp:1031:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1109342Z                 }
2025-09-29T03:49:00.1109677Z                  ^
2025-09-29T03:49:00.1110195Z src/core/GitManager.cpp:1032:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1110327Z             }
2025-09-29T03:49:00.1110454Z              ^
2025-09-29T03:49:00.1111015Z src/core/GitManager.cpp:1033:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1111234Z         }
2025-09-29T03:49:00.1111446Z          ^
2025-09-29T03:49:00.1112053Z src/core/GitManager.cpp:1034:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1112269Z     }
2025-09-29T03:49:00.1112415Z      ^
2025-09-29T03:49:00.1112969Z src/core/GitManager.cpp:1039:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1113529Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-09-29T03:49:00.1113711Z                                                           ^
2025-09-29T03:49:00.1114234Z src/core/GitManager.cpp:1039:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1114778Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-09-29T03:49:00.1114950Z                                                            ^
2025-09-29T03:49:00.1115477Z src/core/GitManager.cpp:1039:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1116007Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-09-29T03:49:00.1116374Z                                                                  ^
2025-09-29T03:49:00.1116905Z src/core/GitManager.cpp:1039:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1117435Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-09-29T03:49:00.1117627Z                                                                                    ^
2025-09-29T03:49:00.1118337Z src/core/GitManager.cpp:1039:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1118871Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-09-29T03:49:00.1119062Z                                                                                     ^
2025-09-29T03:49:00.1119589Z src/core/GitManager.cpp:1039:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1120127Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-09-29T03:49:00.1120320Z                                                                                              ^
2025-09-29T03:49:00.1120829Z src/core/GitManager.cpp:1040:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1121046Z                                        const std::string& commitHash) {
2025-09-29T03:49:00.1121212Z                                                         ^
2025-09-29T03:49:00.1121726Z src/core/GitManager.cpp:1040:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1121931Z                                        const std::string& commitHash) {
2025-09-29T03:49:00.1122098Z                                                          ^
2025-09-29T03:49:00.1122624Z src/core/GitManager.cpp:1040:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1122879Z                                        const std::string& commitHash) {
2025-09-29T03:49:00.1123064Z                                                                        ^
2025-09-29T03:49:00.1123607Z src/core/GitManager.cpp:1041:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1123775Z     if (name.empty()) {
2025-09-29T03:49:00.1123913Z                        ^
2025-09-29T03:49:00.1124405Z src/core/GitManager.cpp:1042:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1124776Z         GitOperationResult result;
2025-09-29T03:49:00.1124918Z                                   ^
2025-09-29T03:49:00.1125409Z src/core/GitManager.cpp:1043:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1125623Z         result.result = GitCommandResult::Failed;
2025-09-29T03:49:00.1125784Z                                                  ^
2025-09-29T03:49:00.1126310Z src/core/GitManager.cpp:1044:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1126625Z         result.error = "Tag name cannot be empty";
2025-09-29T03:49:00.1126794Z                                                   ^
2025-09-29T03:49:00.1127305Z src/core/GitManager.cpp:1045:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1127447Z         return result;
2025-09-29T03:49:00.1127586Z                       ^
2025-09-29T03:49:00.1128264Z src/core/GitManager.cpp:1046:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1128403Z     }
2025-09-29T03:49:00.1128533Z      ^
2025-09-29T03:49:00.1129061Z src/core/GitManager.cpp:1048:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1129249Z     std::string command = "tag";
2025-09-29T03:49:00.1129404Z                                 ^
2025-09-29T03:49:00.1129938Z src/core/GitManager.cpp:1050:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1130104Z     if (!message.empty()) {
2025-09-29T03:49:00.1130454Z                            ^
2025-09-29T03:49:00.1131001Z src/core/GitManager.cpp:1051:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1131164Z         // Create annotated tag
2025-09-29T03:49:00.1131310Z                                ^
2025-09-29T03:49:00.1131839Z src/core/GitManager.cpp:1052:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1132095Z         command += " -a " + name + " -m \"" + message + "\"";
2025-09-29T03:49:00.1132267Z                                                              ^
2025-09-29T03:49:00.1132802Z src/core/GitManager.cpp:1053:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1132933Z     } else {
2025-09-29T03:49:00.1133060Z             ^
2025-09-29T03:49:00.1133569Z src/core/GitManager.cpp:1054:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1133744Z         // Create lightweight tag
2025-09-29T03:49:00.1133899Z                                  ^
2025-09-29T03:49:00.1134416Z src/core/GitManager.cpp:1055:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1134576Z         command += " " + name;
2025-09-29T03:49:00.1134716Z                               ^
2025-09-29T03:49:00.1135233Z src/core/GitManager.cpp:1056:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1135375Z     }
2025-09-29T03:49:00.1135500Z      ^
2025-09-29T03:49:00.1136012Z src/core/GitManager.cpp:1058:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1136251Z     if (commitHash != "HEAD" && !commitHash.empty()) {
2025-09-29T03:49:00.1136415Z                                                       ^
2025-09-29T03:49:00.1136924Z src/core/GitManager.cpp:1059:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1137089Z         command += " " + commitHash;
2025-09-29T03:49:00.1137254Z                                     ^
2025-09-29T03:49:00.1137769Z src/core/GitManager.cpp:1060:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1138138Z     }
2025-09-29T03:49:00.1138279Z      ^
2025-09-29T03:49:00.1138801Z src/core/GitManager.cpp:1065:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1139193Z GitOperationResult GitManager::deleteTag(const std::string& name) {
2025-09-29T03:49:00.1139581Z                                                           ^
2025-09-29T03:49:00.1140094Z src/core/GitManager.cpp:1065:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1140462Z GitOperationResult GitManager::deleteTag(const std::string& name) {
2025-09-29T03:49:00.1140636Z                                                            ^
2025-09-29T03:49:00.1141154Z src/core/GitManager.cpp:1065:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1141527Z GitOperationResult GitManager::deleteTag(const std::string& name) {
2025-09-29T03:49:00.1141709Z                                                                    ^
2025-09-29T03:49:00.1142228Z src/core/GitManager.cpp:1066:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1142383Z     if (name.empty()) {
2025-09-29T03:49:00.1142524Z                        ^
2025-09-29T03:49:00.1143039Z src/core/GitManager.cpp:1067:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1143232Z         GitOperationResult result;
2025-09-29T03:49:00.1143381Z                                   ^
2025-09-29T03:49:00.1143898Z src/core/GitManager.cpp:1068:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1144111Z         result.result = GitCommandResult::Failed;
2025-09-29T03:49:00.1144271Z                                                  ^
2025-09-29T03:49:00.1144956Z src/core/GitManager.cpp:1069:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1145172Z         result.error = "Tag name cannot be empty";
2025-09-29T03:49:00.1145332Z                                                   ^
2025-09-29T03:49:00.1145842Z src/core/GitManager.cpp:1070:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1145996Z         return result;
2025-09-29T03:49:00.1146133Z                       ^
2025-09-29T03:49:00.1146652Z src/core/GitManager.cpp:1071:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1146786Z     }
2025-09-29T03:49:00.1146913Z      ^
2025-09-29T03:49:00.1147422Z src/core/GitManager.cpp:1073:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1147619Z     std::string command = "tag -d " + name;
2025-09-29T03:49:00.1147777Z                                            ^
2025-09-29T03:49:00.1148484Z src/core/GitManager.cpp:1077:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1148866Z GitOperationResult GitManager::pushTags(const std::string& remote) {
2025-09-29T03:49:00.1149047Z                                                          ^
2025-09-29T03:49:00.1149557Z src/core/GitManager.cpp:1077:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1149928Z GitOperationResult GitManager::pushTags(const std::string& remote) {
2025-09-29T03:49:00.1150109Z                                                           ^
2025-09-29T03:49:00.1150621Z src/core/GitManager.cpp:1077:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1150992Z GitOperationResult GitManager::pushTags(const std::string& remote) {
2025-09-29T03:49:00.1151176Z                                                                     ^
2025-09-29T03:49:00.1151686Z src/core/GitManager.cpp:1078:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1151926Z     std::string command = "push " + remote + " --tags";
2025-09-29T03:49:00.1152101Z                                                        ^
2025-09-29T03:49:00.1152610Z src/core/GitManager.cpp:1082:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1152744Z }
2025-09-29T03:49:00.1152870Z  ^
2025-09-29T03:49:00.1153386Z src/core/GitManager.cpp:1105:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1154685Z // 以及我的MacBook Pro M1不要半夜自己malloc出1000000个0的heap然后里面存了个夷陵老祖的元神
2025-09-29T03:49:00.1155235Z src/core/SystemCommand.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1155389Z #include <string>
2025-09-29T03:49:00.1155518Z ^
2025-09-29T03:49:00.1156043Z src/core/SystemCommand.h:9:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1156226Z struct SystemCommandResult {
2025-09-29T03:49:00.1156373Z                             ^
2025-09-29T03:49:00.1156914Z src/core/SystemCommand.h:10:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1157055Z     int exitCode;
2025-09-29T03:49:00.1157193Z                  ^
2025-09-29T03:49:00.1157707Z src/core/SystemCommand.h:11:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1158052Z     std::string output;
2025-09-29T03:49:00.1158201Z                        ^
2025-09-29T03:49:00.1158731Z src/core/SystemCommand.h:12:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1158906Z     std::string error;
2025-09-29T03:49:00.1159051Z                       ^
2025-09-29T03:49:00.1159582Z src/core/SystemCommand.h:16:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1159912Z using OutputCallback = std::function<void(const std::string&)>;
2025-09-29T03:49:00.1160086Z                                                            ^
2025-09-29T03:49:00.1160820Z src/core/SystemCommand.h:19:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1160963Z public:
2025-09-29T03:49:00.1161095Z        ^
2025-09-29T03:49:00.1161617Z src/core/SystemCommand.h:20:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1161768Z     SystemCommand();
2025-09-29T03:49:00.1161905Z                     ^
2025-09-29T03:49:00.1162426Z src/core/SystemCommand.h:21:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1162591Z     ~SystemCommand();
2025-09-29T03:49:00.1162728Z                      ^
2025-09-29T03:49:00.1163270Z src/core/SystemCommand.h:23:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1163456Z     // Execute command synchronously
2025-09-29T03:49:00.1163608Z                                     ^
2025-09-29T03:49:00.1164128Z src/core/SystemCommand.h:24:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1164451Z     SystemCommandResult execute(const std::string& command, 
2025-09-29T03:49:00.1164614Z                                                  ^
2025-09-29T03:49:00.1165133Z src/core/SystemCommand.h:24:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1165435Z     SystemCommandResult execute(const std::string& command, 
2025-09-29T03:49:00.1165595Z                                                   ^
2025-09-29T03:49:00.1166112Z src/core/SystemCommand.h:24:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1166415Z     SystemCommandResult execute(const std::string& command, 
2025-09-29T03:49:00.1166581Z                                                            ^
2025-09-29T03:49:00.1167095Z src/core/SystemCommand.h:25:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1167336Z                                const std::vector<std::string>& args = {},
2025-09-29T03:49:00.1167516Z                                                              ^
2025-09-29T03:49:00.1168231Z src/core/SystemCommand.h:25:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1168468Z                                const std::vector<std::string>& args = {},
2025-09-29T03:49:00.1168641Z                                                               ^
2025-09-29T03:49:00.1169161Z src/core/SystemCommand.h:25:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1169568Z                                const std::vector<std::string>& args = {},
2025-09-29T03:49:00.1169756Z                                                                          ^
2025-09-29T03:49:00.1170280Z src/core/SystemCommand.h:26:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1170510Z                                const std::string& workingDirectory = "");
2025-09-29T03:49:00.1170685Z                                                 ^
2025-09-29T03:49:00.1171211Z src/core/SystemCommand.h:26:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1171441Z                                const std::string& workingDirectory = "");
2025-09-29T03:49:00.1171609Z                                                  ^
2025-09-29T03:49:00.1172120Z src/core/SystemCommand.h:26:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1172347Z                                const std::string& workingDirectory = "");
2025-09-29T03:49:00.1172541Z                                                                          ^
2025-09-29T03:49:00.1173056Z src/core/SystemCommand.h:28:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1173293Z     // Execute command with real-time output callback
2025-09-29T03:49:00.1173466Z                                                      ^
2025-09-29T03:49:00.1173982Z src/core/SystemCommand.h:29:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1174550Z     SystemCommandResult executeWithCallback(const std::string& command,
2025-09-29T03:49:00.1174720Z                                             ^
2025-09-29T03:49:00.1175254Z src/core/SystemCommand.h:29:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1175646Z     SystemCommandResult executeWithCallback(const std::string& command,
2025-09-29T03:49:00.1175826Z                                                              ^
2025-09-29T03:49:00.1176360Z src/core/SystemCommand.h:29:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1176745Z     SystemCommandResult executeWithCallback(const std::string& command,
2025-09-29T03:49:00.1176914Z                                                               ^
2025-09-29T03:49:00.1177439Z src/core/SystemCommand.h:29:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1177829Z     SystemCommandResult executeWithCallback(const std::string& command,
2025-09-29T03:49:00.1178220Z                                                                        ^
2025-09-29T03:49:00.1178758Z src/core/SystemCommand.h:30:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1178985Z                                            const std::vector<std::string>& args,
2025-09-29T03:49:00.1179164Z                                                                          ^
2025-09-29T03:49:00.1179699Z src/core/SystemCommand.h:30:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1179920Z                                            const std::vector<std::string>& args,
2025-09-29T03:49:00.1180231Z                                                                           ^
2025-09-29T03:49:00.1180756Z src/core/SystemCommand.h:30:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1180982Z                                            const std::vector<std::string>& args,
2025-09-29T03:49:00.1181168Z                                                                                 ^
2025-09-29T03:49:00.1181691Z src/core/SystemCommand.h:31:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1181912Z                                            OutputCallback outputCallback,
2025-09-29T03:49:00.1182090Z                                                                          ^
2025-09-29T03:49:00.1182802Z src/core/SystemCommand.h:32:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1183052Z                                            const std::string& workingDirectory = "");
2025-09-29T03:49:00.1183226Z                                                             ^
2025-09-29T03:49:00.1183750Z src/core/SystemCommand.h:32:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1184000Z                                            const std::string& workingDirectory = "");
2025-09-29T03:49:00.1184169Z                                                              ^
2025-09-29T03:49:00.1184693Z src/core/SystemCommand.h:32:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1184932Z                                            const std::string& workingDirectory = "");
2025-09-29T03:49:00.1185120Z                                                                                      ^
2025-09-29T03:49:00.1185650Z src/core/SystemCommand.h:34:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1185830Z     // Execute command asynchronously
2025-09-29T03:49:00.1185980Z                                      ^
2025-09-29T03:49:00.1186498Z src/core/SystemCommand.h:35:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1186725Z     void executeAsync(const std::string& command,
2025-09-29T03:49:00.1186880Z                                        ^
2025-09-29T03:49:00.1187568Z src/core/SystemCommand.h:35:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1187797Z     void executeAsync(const std::string& command,
2025-09-29T03:49:00.1188106Z                                         ^
2025-09-29T03:49:00.1188626Z src/core/SystemCommand.h:35:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1188849Z     void executeAsync(const std::string& command,
2025-09-29T03:49:00.1189019Z                                                  ^
2025-09-29T03:49:00.1189531Z src/core/SystemCommand.h:36:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1189747Z                      const std::vector<std::string>& args,
2025-09-29T03:49:00.1189913Z                                                    ^
2025-09-29T03:49:00.1190429Z src/core/SystemCommand.h:36:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1190644Z                      const std::vector<std::string>& args,
2025-09-29T03:49:00.1190811Z                                                     ^
2025-09-29T03:49:00.1191325Z src/core/SystemCommand.h:36:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1191520Z                      const std::vector<std::string>& args,
2025-09-29T03:49:00.1191711Z                                                           ^
2025-09-29T03:49:00.1192225Z src/core/SystemCommand.h:37:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1192529Z                      std::function<void(const SystemCommandResult&)> callback,
2025-09-29T03:49:00.1192715Z                                                                  ^
2025-09-29T03:49:00.1193236Z src/core/SystemCommand.h:37:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1193531Z                      std::function<void(const SystemCommandResult&)> callback,
2025-09-29T03:49:00.1193730Z                                                                               ^
2025-09-29T03:49:00.1194248Z src/core/SystemCommand.h:38:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1194472Z                      const std::string& workingDirectory = "");
2025-09-29T03:49:00.1194632Z                                       ^
2025-09-29T03:49:00.1195150Z src/core/SystemCommand.h:38:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1195594Z                      const std::string& workingDirectory = "");
2025-09-29T03:49:00.1195752Z                                        ^
2025-09-29T03:49:00.1196269Z src/core/SystemCommand.h:38:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1196485Z                      const std::string& workingDirectory = "");
2025-09-29T03:49:00.1196666Z                                                                ^
2025-09-29T03:49:00.1197188Z src/core/SystemCommand.h:40:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1197352Z     // Cancel running command
2025-09-29T03:49:00.1197502Z                              ^
2025-09-29T03:49:00.1198200Z src/core/SystemCommand.h:41:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1198346Z     void cancel();
2025-09-29T03:49:00.1198477Z                   ^
2025-09-29T03:49:00.1199000Z src/core/SystemCommand.h:43:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1199180Z     // Set environment variables
2025-09-29T03:49:00.1199327Z                                 ^
2025-09-29T03:49:00.1199848Z src/core/SystemCommand.h:44:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1200298Z     void setEnvironmentVariable(const std::string& name, const std::string& value);
2025-09-29T03:49:00.1200462Z                                                  ^
2025-09-29T03:49:00.1201165Z src/core/SystemCommand.h:44:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1201610Z     void setEnvironmentVariable(const std::string& name, const std::string& value);
2025-09-29T03:49:00.1201774Z                                                   ^
2025-09-29T03:49:00.1202357Z src/core/SystemCommand.h:44:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1202797Z     void setEnvironmentVariable(const std::string& name, const std::string& value);
2025-09-29T03:49:00.1202978Z                                                         ^
2025-09-29T03:49:00.1203493Z src/core/SystemCommand.h:44:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1203939Z     void setEnvironmentVariable(const std::string& name, const std::string& value);
2025-09-29T03:49:00.1204123Z                                                                           ^
2025-09-29T03:49:00.1204647Z src/core/SystemCommand.h:44:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1205085Z     void setEnvironmentVariable(const std::string& name, const std::string& value);
2025-09-29T03:49:00.1205268Z                                                                            ^
2025-09-29T03:49:00.1205783Z src/core/SystemCommand.h:44:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1206225Z     void setEnvironmentVariable(const std::string& name, const std::string& value);
2025-09-29T03:49:00.1206420Z                                                                                    ^
2025-09-29T03:49:00.1206935Z src/core/SystemCommand.h:45:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1207139Z     void clearEnvironmentVariables();
2025-09-29T03:49:00.1207290Z                                      ^
2025-09-29T03:49:00.1207803Z src/core/SystemCommand.h:47:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1208162Z     // Set timeout (in milliseconds)
2025-09-29T03:49:00.1208312Z                                     ^
2025-09-29T03:49:00.1208828Z src/core/SystemCommand.h:48:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1209007Z     void setTimeout(int timeoutMs);
2025-09-29T03:49:00.1209152Z                                    ^
2025-09-29T03:49:00.1209669Z src/core/SystemCommand.h:50:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1210038Z     // Check if command is available
2025-09-29T03:49:00.1210194Z                                     ^
2025-09-29T03:49:00.1210709Z src/core/SystemCommand.h:51:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1211014Z     static bool isCommandAvailable(const std::string& command);
2025-09-29T03:49:00.1211186Z                                                     ^
2025-09-29T03:49:00.1211714Z src/core/SystemCommand.h:51:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1212017Z     static bool isCommandAvailable(const std::string& command);
2025-09-29T03:49:00.1212190Z                                                      ^
2025-09-29T03:49:00.1212717Z src/core/SystemCommand.h:51:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1213012Z     static bool isCommandAvailable(const std::string& command);
2025-09-29T03:49:00.1213200Z                                                                ^
2025-09-29T03:49:00.1213710Z src/core/SystemCommand.h:53:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1213871Z     // Get system command for git
2025-09-29T03:49:00.1214025Z                                  ^
2025-09-29T03:49:00.1214532Z src/core/SystemCommand.h:54:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1214716Z     static std::string getGitCommand();
2025-09-29T03:49:00.1215033Z                                        ^
2025-09-29T03:49:00.1215558Z src/core/SystemCommand.h:56:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1215696Z private:
2025-09-29T03:49:00.1215824Z         ^
2025-09-29T03:49:00.1216344Z src/core/SystemCommand.h:57:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1216483Z     class Impl;
2025-09-29T03:49:00.1216611Z                ^
2025-09-29T03:49:00.1217135Z src/core/SystemCommand.h:60:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1217272Z #ifdef _WIN32
2025-09-29T03:49:00.1217398Z              ^
2025-09-29T03:49:00.1218072Z src/core/SystemCommand.h:61:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1218430Z     SystemCommandResult executeWindows(const std::string& command,
2025-09-29T03:49:00.1218597Z                                                         ^
2025-09-29T03:49:00.1219116Z src/core/SystemCommand.h:61:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1219459Z     SystemCommandResult executeWindows(const std::string& command,
2025-09-29T03:49:00.1219623Z                                                          ^
2025-09-29T03:49:00.1220133Z src/core/SystemCommand.h:61:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1220474Z     SystemCommandResult executeWindows(const std::string& command,
2025-09-29T03:49:00.1220658Z                                                                   ^
2025-09-29T03:49:00.1221170Z src/core/SystemCommand.h:62:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1221391Z                                        const std::vector<std::string>& args,
2025-09-29T03:49:00.1221570Z                                                                      ^
2025-09-29T03:49:00.1222085Z src/core/SystemCommand.h:62:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1222302Z                                        const std::vector<std::string>& args,
2025-09-29T03:49:00.1222483Z                                                                       ^
2025-09-29T03:49:00.1222997Z src/core/SystemCommand.h:62:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1223212Z                                        const std::vector<std::string>& args,
2025-09-29T03:49:00.1223575Z                                                                             ^
2025-09-29T03:49:00.1224087Z src/core/SystemCommand.h:63:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1224316Z                                        const std::string& workingDirectory);
2025-09-29T03:49:00.1224482Z                                                         ^
2025-09-29T03:49:00.1224997Z src/core/SystemCommand.h:63:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1225219Z                                        const std::string& workingDirectory);
2025-09-29T03:49:00.1225388Z                                                          ^
2025-09-29T03:49:00.1225898Z src/core/SystemCommand.h:64:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1226027Z #else
2025-09-29T03:49:00.1226162Z      ^
2025-09-29T03:49:00.1226670Z src/core/SystemCommand.h:65:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1226991Z     SystemCommandResult executeUnix(const std::string& command,
2025-09-29T03:49:00.1227160Z                                                      ^
2025-09-29T03:49:00.1227667Z src/core/SystemCommand.h:65:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1228211Z     SystemCommandResult executeUnix(const std::string& command,
2025-09-29T03:49:00.1228383Z                                                       ^
2025-09-29T03:49:00.1229084Z src/core/SystemCommand.h:65:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1229406Z     SystemCommandResult executeUnix(const std::string& command,
2025-09-29T03:49:00.1229575Z                                                                ^
2025-09-29T03:49:00.1230093Z src/core/SystemCommand.h:66:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1230306Z                                     const std::vector<std::string>& args,
2025-09-29T03:49:00.1230489Z                                                                   ^
2025-09-29T03:49:00.1231007Z src/core/SystemCommand.h:66:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1231217Z                                     const std::vector<std::string>& args,
2025-09-29T03:49:00.1231394Z                                                                    ^
2025-09-29T03:49:00.1231918Z src/core/SystemCommand.h:66:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1232124Z                                     const std::vector<std::string>& args,
2025-09-29T03:49:00.1232304Z                                                                          ^
2025-09-29T03:49:00.1232819Z src/core/SystemCommand.h:67:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1233031Z                                     const std::string& workingDirectory);
2025-09-29T03:49:00.1233199Z                                                      ^
2025-09-29T03:49:00.1233714Z src/core/SystemCommand.h:67:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1233926Z                                     const std::string& workingDirectory);
2025-09-29T03:49:00.1234086Z                                                       ^
2025-09-29T03:49:00.1234603Z src/core/SystemCommand.h:71:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1234732Z }
2025-09-29T03:49:00.1234865Z  ^
2025-09-29T03:49:00.1235350Z src/core/GitUtils.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1235509Z #include "GitUtils.h"
2025-09-29T03:49:00.1235636Z ^
2025-09-29T03:49:00.1236119Z src/core/GitUtils.cpp:13:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1236302Z     " ", "~", "^", ":", "?", "*", "[", "\\", "..", "@{", "//"
2025-09-29T03:49:00.1236650Z                                                              ^
2025-09-29T03:49:00.1237128Z src/core/GitUtils.cpp:16:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1237363Z     ".jpg", ".jpeg", ".png", ".gif", ".bmp", ".tiff", ".ico",
2025-09-29T03:49:00.1237506Z                             ^
2025-09-29T03:49:00.1238155Z src/core/GitUtils.cpp:16:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1238393Z     ".jpg", ".jpeg", ".png", ".gif", ".bmp", ".tiff", ".ico",
2025-09-29T03:49:00.1238542Z                                     ^
2025-09-29T03:49:00.1239024Z src/core/GitUtils.cpp:16:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1239244Z     ".jpg", ".jpeg", ".png", ".gif", ".bmp", ".tiff", ".ico",
2025-09-29T03:49:00.1239420Z                                                              ^
2025-09-29T03:49:00.1239899Z src/core/GitUtils.cpp:17:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1240142Z     ".exe", ".dll", ".so", ".dylib", ".zip", ".tar", ".gz", ".rar",
2025-09-29T03:49:00.1240278Z            ^
2025-09-29T03:49:00.1240758Z src/core/GitUtils.cpp:17:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1240982Z     ".exe", ".dll", ".so", ".dylib", ".zip", ".tar", ".gz", ".rar",
2025-09-29T03:49:00.1241130Z                           ^
2025-09-29T03:49:00.1241784Z src/core/GitUtils.cpp:17:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1242011Z     ".exe", ".dll", ".so", ".dylib", ".zip", ".tar", ".gz", ".rar",
2025-09-29T03:49:00.1242178Z                                             ^
2025-09-29T03:49:00.1242672Z src/core/GitUtils.cpp:17:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1242899Z     ".exe", ".dll", ".so", ".dylib", ".zip", ".tar", ".gz", ".rar",
2025-09-29T03:49:00.1243078Z                                                            ^
2025-09-29T03:49:00.1243565Z src/core/GitUtils.cpp:17:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1243792Z     ".exe", ".dll", ".so", ".dylib", ".zip", ".tar", ".gz", ".rar",
2025-09-29T03:49:00.1243968Z                                                                    ^
2025-09-29T03:49:00.1244455Z src/core/GitUtils.cpp:18:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1244696Z     ".pdf", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx"
2025-09-29T03:49:00.1244827Z            ^
2025-09-29T03:49:00.1245318Z src/core/GitUtils.cpp:18:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1245540Z     ".pdf", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx"
2025-09-29T03:49:00.1245690Z                                     ^
2025-09-29T03:49:00.1246179Z src/core/GitUtils.cpp:18:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1246405Z     ".pdf", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx"
2025-09-29T03:49:00.1246572Z                                                              ^
2025-09-29T03:49:00.1247056Z src/core/GitUtils.cpp:22:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1247309Z std::string GitUtils::trim(const std::string& str) {
2025-09-29T03:49:00.1247466Z                                             ^
2025-09-29T03:49:00.1248123Z src/core/GitUtils.cpp:22:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1248377Z std::string GitUtils::trim(const std::string& str) {
2025-09-29T03:49:00.1248537Z                                              ^
2025-09-29T03:49:00.1249022Z src/core/GitUtils.cpp:22:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1249262Z std::string GitUtils::trim(const std::string& str) {
2025-09-29T03:49:00.1249426Z                                                     ^
2025-09-29T03:49:00.1250094Z src/core/GitUtils.cpp:26:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1250363Z std::string GitUtils::trimLeft(const std::string& str) {
2025-09-29T03:49:00.1250525Z                                                 ^
2025-09-29T03:49:00.1251008Z src/core/GitUtils.cpp:26:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1251262Z std::string GitUtils::trimLeft(const std::string& str) {
2025-09-29T03:49:00.1251436Z                                                  ^
2025-09-29T03:49:00.1251921Z src/core/GitUtils.cpp:26:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1252177Z std::string GitUtils::trimLeft(const std::string& str) {
2025-09-29T03:49:00.1252351Z                                                         ^
2025-09-29T03:49:00.1252846Z src/core/GitUtils.cpp:27:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1253122Z     size_t start = str.find_first_not_of(WHITESPACE_CHARS);
2025-09-29T03:49:00.1253302Z                                                            ^
2025-09-29T03:49:00.1253785Z src/core/GitUtils.cpp:31:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1254056Z std::string GitUtils::trimRight(const std::string& str) {
2025-09-29T03:49:00.1254221Z                                                  ^
2025-09-29T03:49:00.1254948Z src/core/GitUtils.cpp:31:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1255218Z std::string GitUtils::trimRight(const std::string& str) {
2025-09-29T03:49:00.1255381Z                                                   ^
2025-09-29T03:49:00.1255875Z src/core/GitUtils.cpp:31:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1256140Z std::string GitUtils::trimRight(const std::string& str) {
2025-09-29T03:49:00.1256309Z                                                          ^
2025-09-29T03:49:00.1256810Z src/core/GitUtils.cpp:32:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1257050Z     size_t end = str.find_last_not_of(WHITESPACE_CHARS);
2025-09-29T03:49:00.1257212Z                                                         ^
2025-09-29T03:49:00.1257703Z src/core/GitUtils.cpp:36:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1258394Z std::vector<std::string> GitUtils::split(const std::string& str, const std::string& delimiter) {
2025-09-29T03:49:00.1258567Z                                                           ^
2025-09-29T03:49:00.1259063Z src/core/GitUtils.cpp:36:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1259547Z std::vector<std::string> GitUtils::split(const std::string& str, const std::string& delimiter) {
2025-09-29T03:49:00.1259716Z                                                            ^
2025-09-29T03:49:00.1260219Z src/core/GitUtils.cpp:36:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1260700Z std::vector<std::string> GitUtils::split(const std::string& str, const std::string& delimiter) {
2025-09-29T03:49:00.1260881Z                                                                 ^
2025-09-29T03:49:00.1261379Z src/core/GitUtils.cpp:36:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1261869Z std::vector<std::string> GitUtils::split(const std::string& str, const std::string& delimiter) {
2025-09-29T03:49:00.1262060Z                                                                                   ^
2025-09-29T03:49:00.1262549Z src/core/GitUtils.cpp:36:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1263036Z std::vector<std::string> GitUtils::split(const std::string& str, const std::string& delimiter) {
2025-09-29T03:49:00.1263229Z                                                                                    ^
2025-09-29T03:49:00.1263932Z src/core/GitUtils.cpp:36:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1264421Z std::vector<std::string> GitUtils::split(const std::string& str, const std::string& delimiter) {
2025-09-29T03:49:00.1264623Z                                                                                                 ^
2025-09-29T03:49:00.1265110Z src/core/GitUtils.cpp:37:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1265299Z     std::vector<std::string> tokens;
2025-09-29T03:49:00.1265451Z                                     ^
2025-09-29T03:49:00.1265935Z src/core/GitUtils.cpp:38:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1266092Z     size_t start = 0;
2025-09-29T03:49:00.1266230Z                      ^
2025-09-29T03:49:00.1266715Z src/core/GitUtils.cpp:39:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1266901Z     size_t end = str.find(delimiter);
2025-09-29T03:49:00.1267053Z                                      ^
2025-09-29T03:49:00.1267538Z src/core/GitUtils.cpp:41:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1267717Z     while (end != std::string::npos) {
2025-09-29T03:49:00.1268045Z                                       ^
2025-09-29T03:49:00.1268544Z src/core/GitUtils.cpp:42:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1268974Z         tokens.push_back(str.substr(start, end - start));
2025-09-29T03:49:00.1269159Z                                                          ^
2025-09-29T03:49:00.1269646Z src/core/GitUtils.cpp:43:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1269830Z         start = end + delimiter.length();
2025-09-29T03:49:00.1269991Z                                          ^
2025-09-29T03:49:00.1270476Z src/core/GitUtils.cpp:44:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1270664Z         end = str.find(delimiter, start);
2025-09-29T03:49:00.1270816Z                                          ^
2025-09-29T03:49:00.1271309Z src/core/GitUtils.cpp:45:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1271439Z     }
2025-09-29T03:49:00.1271568Z      ^
2025-09-29T03:49:00.1272061Z src/core/GitUtils.cpp:47:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1272257Z     tokens.push_back(str.substr(start));
2025-09-29T03:49:00.1272408Z                                         ^
2025-09-29T03:49:00.1272899Z src/core/GitUtils.cpp:51:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1273397Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-09-29T03:49:00.1273565Z                                                          ^
2025-09-29T03:49:00.1274067Z src/core/GitUtils.cpp:51:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1274559Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-09-29T03:49:00.1274728Z                                                           ^
2025-09-29T03:49:00.1275214Z src/core/GitUtils.cpp:51:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1275713Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-09-29T03:49:00.1275902Z                                                                  ^
2025-09-29T03:49:00.1276391Z src/core/GitUtils.cpp:51:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1276886Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-09-29T03:49:00.1277076Z                                                                                    ^
2025-09-29T03:49:00.1277746Z src/core/GitUtils.cpp:51:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1278417Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-09-29T03:49:00.1278613Z                                                                                     ^
2025-09-29T03:49:00.1279101Z src/core/GitUtils.cpp:51:98: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1279608Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-09-29T03:49:00.1279812Z                                                                                                  ^
2025-09-29T03:49:00.1280298Z src/core/GitUtils.cpp:52:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1280482Z     if (parts.empty()) return "";
2025-09-29T03:49:00.1280626Z                       ^
2025-09-29T03:49:00.1281121Z src/core/GitUtils.cpp:52:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1281296Z     if (parts.empty()) return "";
2025-09-29T03:49:00.1281447Z                                  ^
2025-09-29T03:49:00.1281932Z src/core/GitUtils.cpp:54:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1282108Z     std::string result = parts[0];
2025-09-29T03:49:00.1282263Z                                   ^
2025-09-29T03:49:00.1282930Z src/core/GitUtils.cpp:55:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1283135Z     for (size_t i = 1; i < parts.size(); ++i) {
2025-09-29T03:49:00.1283306Z                                                ^
2025-09-29T03:49:00.1283793Z src/core/GitUtils.cpp:56:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1283969Z         result += delimiter + parts[i];
2025-09-29T03:49:00.1284128Z                                        ^
2025-09-29T03:49:00.1284621Z src/core/GitUtils.cpp:57:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1284751Z     }
2025-09-29T03:49:00.1284882Z      ^
2025-09-29T03:49:00.1285379Z src/core/GitUtils.cpp:61:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1285793Z bool GitUtils::startsWith(const std::string& str, const std::string& prefix) {
2025-09-29T03:49:00.1285954Z                                            ^
2025-09-29T03:49:00.1286455Z src/core/GitUtils.cpp:61:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1286859Z bool GitUtils::startsWith(const std::string& str, const std::string& prefix) {
2025-09-29T03:49:00.1287020Z                                             ^
2025-09-29T03:49:00.1287515Z src/core/GitUtils.cpp:61:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1288173Z bool GitUtils::startsWith(const std::string& str, const std::string& prefix) {
2025-09-29T03:49:00.1288372Z                                                                    ^
2025-09-29T03:49:00.1288867Z src/core/GitUtils.cpp:61:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1289271Z bool GitUtils::startsWith(const std::string& str, const std::string& prefix) {
2025-09-29T03:49:00.1289453Z                                                                     ^
2025-09-29T03:49:00.1289946Z src/core/GitUtils.cpp:61:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1290353Z bool GitUtils::startsWith(const std::string& str, const std::string& prefix) {
2025-09-29T03:49:00.1290541Z                                                                               ^
2025-09-29T03:49:00.1291030Z src/core/GitUtils.cpp:62:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1291227Z     return str.size() >= prefix.size() && 
2025-09-29T03:49:00.1291381Z                                          ^
2025-09-29T03:49:00.1292064Z src/core/GitUtils.cpp:66:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1292467Z bool GitUtils::endsWith(const std::string& str, const std::string& suffix) {
2025-09-29T03:49:00.1292619Z                                          ^
2025-09-29T03:49:00.1293102Z src/core/GitUtils.cpp:66:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1293489Z bool GitUtils::endsWith(const std::string& str, const std::string& suffix) {
2025-09-29T03:49:00.1293649Z                                           ^
2025-09-29T03:49:00.1294131Z src/core/GitUtils.cpp:66:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1294516Z bool GitUtils::endsWith(const std::string& str, const std::string& suffix) {
2025-09-29T03:49:00.1294694Z                                                                  ^
2025-09-29T03:49:00.1295176Z src/core/GitUtils.cpp:66:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1295568Z bool GitUtils::endsWith(const std::string& str, const std::string& suffix) {
2025-09-29T03:49:00.1295887Z                                                                   ^
2025-09-29T03:49:00.1296371Z src/core/GitUtils.cpp:66:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1296757Z bool GitUtils::endsWith(const std::string& str, const std::string& suffix) {
2025-09-29T03:49:00.1297109Z                                                                             ^
2025-09-29T03:49:00.1297595Z src/core/GitUtils.cpp:67:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1297777Z     return str.size() >= suffix.size() && 
2025-09-29T03:49:00.1298873Z                                          ^
2025-09-29T03:49:00.1299403Z src/core/GitUtils.cpp:71:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1299666Z std::string GitUtils::toLower(const std::string& str) {
2025-09-29T03:49:00.1299856Z                                                ^
2025-09-29T03:49:00.1300347Z src/core/GitUtils.cpp:71:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1300595Z std::string GitUtils::toLower(const std::string& str) {
2025-09-29T03:49:00.1300764Z                                                 ^
2025-09-29T03:49:00.1301248Z src/core/GitUtils.cpp:71:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1301502Z std::string GitUtils::toLower(const std::string& str) {
2025-09-29T03:49:00.1301680Z                                                        ^
2025-09-29T03:49:00.1302162Z src/core/GitUtils.cpp:72:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1302391Z     std::string result = str;
2025-09-29T03:49:00.1302540Z                              ^
2025-09-29T03:49:00.1303029Z src/core/GitUtils.cpp:73:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1303401Z     std::transform(result.begin(), result.end(), result.begin(), ::tolower);
2025-09-29T03:49:00.1303585Z                                                                             ^
2025-09-29T03:49:00.1304075Z src/core/GitUtils.cpp:77:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1304327Z std::string GitUtils::toUpper(const std::string& str) {
2025-09-29T03:49:00.1304488Z                                                ^
2025-09-29T03:49:00.1304983Z src/core/GitUtils.cpp:77:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1305229Z std::string GitUtils::toUpper(const std::string& str) {
2025-09-29T03:49:00.1305389Z                                                 ^
2025-09-29T03:49:00.1305880Z src/core/GitUtils.cpp:77:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1306127Z std::string GitUtils::toUpper(const std::string& str) {
2025-09-29T03:49:00.1306500Z                                                        ^
2025-09-29T03:49:00.1306990Z src/core/GitUtils.cpp:78:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1307157Z     std::string result = str;
2025-09-29T03:49:00.1307300Z                              ^
2025-09-29T03:49:00.1307783Z src/core/GitUtils.cpp:79:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1308368Z     std::transform(result.begin(), result.end(), result.begin(), ::toupper);
2025-09-29T03:49:00.1308554Z                                                                             ^
2025-09-29T03:49:00.1309040Z src/core/GitUtils.cpp:84:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1309360Z std::string GitUtils::normalizePath(const std::string& path) {
2025-09-29T03:49:00.1309525Z                                                      ^
2025-09-29T03:49:00.1310018Z src/core/GitUtils.cpp:84:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1310326Z std::string GitUtils::normalizePath(const std::string& path) {
2025-09-29T03:49:00.1310489Z                                                       ^
2025-09-29T03:49:00.1310973Z src/core/GitUtils.cpp:84:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1311278Z std::string GitUtils::normalizePath(const std::string& path) {
2025-09-29T03:49:00.1311453Z                                                               ^
2025-09-29T03:49:00.1312116Z src/core/GitUtils.cpp:85:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1312315Z     namespace fs = std::filesystem;
2025-09-29T03:49:00.1312465Z                                    ^
2025-09-29T03:49:00.1312956Z src/core/GitUtils.cpp:86:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1313089Z     try {
2025-09-29T03:49:00.1313233Z          ^
2025-09-29T03:49:00.1313708Z src/core/GitUtils.cpp:87:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1313969Z         return fs::weakly_canonical(fs::path(path)).string();
2025-09-29T03:49:00.1314143Z                                                              ^
2025-09-29T03:49:00.1314623Z src/core/GitUtils.cpp:88:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1314804Z     } catch (const std::exception&) {
2025-09-29T03:49:00.1314956Z                                  ^
2025-09-29T03:49:00.1315446Z src/core/GitUtils.cpp:88:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1315621Z     } catch (const std::exception&) {
2025-09-29T03:49:00.1315789Z                                      ^
2025-09-29T03:49:00.1316271Z src/core/GitUtils.cpp:89:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1316419Z         return path;
2025-09-29T03:49:00.1316561Z                     ^
2025-09-29T03:49:00.1317047Z src/core/GitUtils.cpp:93:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1317336Z std::string GitUtils::getFileName(const std::string& path) {
2025-09-29T03:49:00.1317501Z                                                    ^
2025-09-29T03:49:00.1318156Z src/core/GitUtils.cpp:93:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1318439Z std::string GitUtils::getFileName(const std::string& path) {
2025-09-29T03:49:00.1318612Z                                                     ^
2025-09-29T03:49:00.1319096Z src/core/GitUtils.cpp:93:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1319382Z std::string GitUtils::getFileName(const std::string& path) {
2025-09-29T03:49:00.1319553Z                                                             ^
2025-09-29T03:49:00.1320029Z src/core/GitUtils.cpp:94:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1320400Z     namespace fs = std::filesystem;
2025-09-29T03:49:00.1320546Z                                    ^
2025-09-29T03:49:00.1321025Z src/core/GitUtils.cpp:98:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1321357Z std::string GitUtils::getFileExtension(const std::string& path) {
2025-09-29T03:49:00.1321528Z                                                         ^
2025-09-29T03:49:00.1322015Z src/core/GitUtils.cpp:98:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1322339Z std::string GitUtils::getFileExtension(const std::string& path) {
2025-09-29T03:49:00.1322509Z                                                          ^
2025-09-29T03:49:00.1322982Z src/core/GitUtils.cpp:98:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1323300Z std::string GitUtils::getFileExtension(const std::string& path) {
2025-09-29T03:49:00.1323484Z                                                                  ^
2025-09-29T03:49:00.1323958Z src/core/GitUtils.cpp:99:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1324137Z     namespace fs = std::filesystem;
2025-09-29T03:49:00.1324279Z                                    ^
2025-09-29T03:49:00.1324771Z src/core/GitUtils.cpp:103:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1325063Z std::string GitUtils::getDirectory(const std::string& path) {
2025-09-29T03:49:00.1325434Z                                                     ^
2025-09-29T03:49:00.1325927Z src/core/GitUtils.cpp:103:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1326217Z std::string GitUtils::getDirectory(const std::string& path) {
2025-09-29T03:49:00.1326387Z                                                      ^
2025-09-29T03:49:00.1326879Z src/core/GitUtils.cpp:103:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1327176Z std::string GitUtils::getDirectory(const std::string& path) {
2025-09-29T03:49:00.1327351Z                                                              ^
2025-09-29T03:49:00.1327837Z src/core/GitUtils.cpp:104:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1328182Z     namespace fs = std::filesystem;
2025-09-29T03:49:00.1328336Z                                    ^
2025-09-29T03:49:00.1328831Z src/core/GitUtils.cpp:108:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1329269Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-09-29T03:49:00.1329432Z                                                  ^
2025-09-29T03:49:00.1329926Z src/core/GitUtils.cpp:108:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1330356Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-09-29T03:49:00.1330527Z                                                   ^
2025-09-29T03:49:00.1331024Z src/core/GitUtils.cpp:108:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1331448Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-09-29T03:49:00.1331617Z                                                          ^
2025-09-29T03:49:00.1332111Z src/core/GitUtils.cpp:108:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1332543Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-09-29T03:49:00.1332727Z                                                                            ^
2025-09-29T03:49:00.1333220Z src/core/GitUtils.cpp:108:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1333646Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-09-29T03:49:00.1334021Z                                                                             ^
2025-09-29T03:49:00.1334516Z src/core/GitUtils.cpp:108:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1334942Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-09-29T03:49:00.1335129Z                                                                                      ^
2025-09-29T03:49:00.1335623Z src/core/GitUtils.cpp:109:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1335799Z     namespace fs = std::filesystem;
2025-09-29T03:49:00.1335945Z                                    ^
2025-09-29T03:49:00.1336431Z src/core/GitUtils.cpp:113:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1336711Z bool GitUtils::isAbsolutePath(const std::string& path) {
2025-09-29T03:49:00.1336870Z                                                ^
2025-09-29T03:49:00.1337358Z src/core/GitUtils.cpp:113:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1337637Z bool GitUtils::isAbsolutePath(const std::string& path) {
2025-09-29T03:49:00.1337798Z                                                 ^
2025-09-29T03:49:00.1338446Z src/core/GitUtils.cpp:113:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1338719Z bool GitUtils::isAbsolutePath(const std::string& path) {
2025-09-29T03:49:00.1338887Z                                                         ^
2025-09-29T03:49:00.1339550Z src/core/GitUtils.cpp:114:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1339731Z     namespace fs = std::filesystem;
2025-09-29T03:49:00.1339874Z                                    ^
2025-09-29T03:49:00.1340361Z src/core/GitUtils.cpp:118:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1340967Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-09-29T03:49:00.1341255Z                                                         ^
2025-09-29T03:49:00.1342147Z src/core/GitUtils.cpp:118:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1342703Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-09-29T03:49:00.1342987Z                                                          ^
2025-09-29T03:49:00.1343515Z src/core/GitUtils.cpp:118:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1359517Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-09-29T03:49:00.1359732Z                                                                ^
2025-09-29T03:49:00.1360285Z src/core/GitUtils.cpp:118:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1360797Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-09-29T03:49:00.1361000Z                                                                                  ^
2025-09-29T03:49:00.1361515Z src/core/GitUtils.cpp:118:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1362003Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-09-29T03:49:00.1362191Z                                                                                   ^
2025-09-29T03:49:00.1362703Z src/core/GitUtils.cpp:118:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1363202Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-09-29T03:49:00.1363397Z                                                                                         ^
2025-09-29T03:49:00.1363900Z src/core/GitUtils.cpp:119:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1364084Z     namespace fs = std::filesystem;
2025-09-29T03:49:00.1364501Z                                    ^
2025-09-29T03:49:00.1365003Z src/core/GitUtils.cpp:120:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1365138Z     try {
2025-09-29T03:49:00.1365276Z          ^
2025-09-29T03:49:00.1365769Z src/core/GitUtils.cpp:121:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1366081Z         return fs::relative(fs::path(to), fs::path(from)).string();
2025-09-29T03:49:00.1366270Z                                                                    ^
2025-09-29T03:49:00.1366780Z src/core/GitUtils.cpp:122:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1366962Z     } catch (const std::exception&) {
2025-09-29T03:49:00.1367119Z                                  ^
2025-09-29T03:49:00.1367616Z src/core/GitUtils.cpp:122:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1367793Z     } catch (const std::exception&) {
2025-09-29T03:49:00.1368138Z                                      ^
2025-09-29T03:49:00.1368645Z src/core/GitUtils.cpp:123:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1368787Z         return to;
2025-09-29T03:49:00.1368919Z                   ^
2025-09-29T03:49:00.1369421Z src/core/GitUtils.cpp:128:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1369794Z std::string GitUtils::shortenHash(const std::string& hash, int length) {
2025-09-29T03:49:00.1370190Z                                                    ^
2025-09-29T03:49:00.1370710Z src/core/GitUtils.cpp:128:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1371076Z std::string GitUtils::shortenHash(const std::string& hash, int length) {
2025-09-29T03:49:00.1371246Z                                                     ^
2025-09-29T03:49:00.1371751Z src/core/GitUtils.cpp:128:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1372125Z std::string GitUtils::shortenHash(const std::string& hash, int length) {
2025-09-29T03:49:00.1372313Z                                                                         ^
2025-09-29T03:49:00.1372827Z src/core/GitUtils.cpp:129:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1373071Z     if (hash.length() <= static_cast<size_t>(length)) {
2025-09-29T03:49:00.1373240Z                                                        ^
2025-09-29T03:49:00.1373747Z src/core/GitUtils.cpp:130:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1373903Z         return hash;
2025-09-29T03:49:00.1374042Z                     ^
2025-09-29T03:49:00.1374542Z src/core/GitUtils.cpp:131:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1374679Z     }
2025-09-29T03:49:00.1374806Z      ^
2025-09-29T03:49:00.1375302Z src/core/GitUtils.cpp:135:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1375568Z bool GitUtils::isValidHash(const std::string& hash) {
2025-09-29T03:49:00.1375734Z                                             ^
2025-09-29T03:49:00.1376229Z src/core/GitUtils.cpp:135:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1376482Z bool GitUtils::isValidHash(const std::string& hash) {
2025-09-29T03:49:00.1376653Z                                              ^
2025-09-29T03:49:00.1377165Z src/core/GitUtils.cpp:135:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1377416Z bool GitUtils::isValidHash(const std::string& hash) {
2025-09-29T03:49:00.1377589Z                                                      ^
2025-09-29T03:49:00.1378267Z src/core/GitUtils.cpp:136:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1378549Z     if (hash.empty() || hash.length() < 4 || hash.length() > 40) {
2025-09-29T03:49:00.1378734Z                                                                   ^
2025-09-29T03:49:00.1379423Z src/core/GitUtils.cpp:137:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1379572Z         return false;
2025-09-29T03:49:00.1379711Z                      ^
2025-09-29T03:49:00.1380215Z src/core/GitUtils.cpp:138:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1380345Z     }
2025-09-29T03:49:00.1380473Z      ^
2025-09-29T03:49:00.1381009Z src/core/GitUtils.cpp:140:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1381294Z     return std::all_of(hash.begin(), hash.end(), [](char c) {
2025-09-29T03:49:00.1381458Z                                                 ^
2025-09-29T03:49:00.1381962Z src/core/GitUtils.cpp:140:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1382226Z     return std::all_of(hash.begin(), hash.end(), [](char c) {
2025-09-29T03:49:00.1382410Z                                                              ^
2025-09-29T03:49:00.1382910Z src/core/GitUtils.cpp:141:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1383082Z         return std::isxdigit(c);
2025-09-29T03:49:00.1383230Z                                 ^
2025-09-29T03:49:00.1383726Z src/core/GitUtils.cpp:145:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1384218Z std::string GitUtils::formatCommitMessage(const std::string& message, int maxLength) {
2025-09-29T03:49:00.1384568Z                                                            ^
2025-09-29T03:49:00.1385068Z src/core/GitUtils.cpp:145:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1385550Z std::string GitUtils::formatCommitMessage(const std::string& message, int maxLength) {
2025-09-29T03:49:00.1385719Z                                                             ^
2025-09-29T03:49:00.1386213Z src/core/GitUtils.cpp:145:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1386698Z std::string GitUtils::formatCommitMessage(const std::string& message, int maxLength) {
2025-09-29T03:49:00.1386881Z                                                                      ^
2025-09-29T03:49:00.1387374Z src/core/GitUtils.cpp:145:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1388018Z std::string GitUtils::formatCommitMessage(const std::string& message, int maxLength) {
2025-09-29T03:49:00.1388229Z                                                                                       ^
2025-09-29T03:49:00.1388729Z src/core/GitUtils.cpp:146:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1389003Z     if (message.length() <= static_cast<size_t>(maxLength)) {
2025-09-29T03:49:00.1389174Z                                                              ^
2025-09-29T03:49:00.1389674Z src/core/GitUtils.cpp:147:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1389831Z         return message;
2025-09-29T03:49:00.1389984Z                        ^
2025-09-29T03:49:00.1390476Z src/core/GitUtils.cpp:148:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1390604Z     }
2025-09-29T03:49:00.1390739Z      ^
2025-09-29T03:49:00.1391233Z src/core/GitUtils.cpp:150:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1391415Z     auto lines = split(message, "\n");
2025-09-29T03:49:00.1391578Z                                       ^
2025-09-29T03:49:00.1392069Z src/core/GitUtils.cpp:151:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1392235Z     if (lines.empty()) return "";
2025-09-29T03:49:00.1392373Z                       ^
2025-09-29T03:49:00.1392882Z src/core/GitUtils.cpp:151:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1393044Z     if (lines.empty()) return "";
2025-09-29T03:49:00.1393384Z                                  ^
2025-09-29T03:49:00.1393887Z src/core/GitUtils.cpp:153:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1394070Z     std::string firstLine = lines[0];
2025-09-29T03:49:00.1394218Z                                      ^
2025-09-29T03:49:00.1394722Z src/core/GitUtils.cpp:154:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1395010Z     if (firstLine.length() <= static_cast<size_t>(maxLength)) {
2025-09-29T03:49:00.1395193Z                                                                ^
2025-09-29T03:49:00.1395701Z src/core/GitUtils.cpp:155:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1395856Z         return firstLine;
2025-09-29T03:49:00.1396000Z                          ^
2025-09-29T03:49:00.1396494Z src/core/GitUtils.cpp:156:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1396640Z     }
2025-09-29T03:49:00.1396769Z      ^
2025-09-29T03:49:00.1397270Z src/core/GitUtils.cpp:161:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1397746Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-09-29T03:49:00.1398067Z                                                     ^
2025-09-29T03:49:00.1398576Z src/core/GitUtils.cpp:161:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1399223Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-09-29T03:49:00.1399396Z                                                      ^
2025-09-29T03:49:00.1399896Z src/core/GitUtils.cpp:161:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1400364Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-09-29T03:49:00.1400536Z                                                            ^
2025-09-29T03:49:00.1401044Z src/core/GitUtils.cpp:161:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1401500Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-09-29T03:49:00.1401697Z                                                                              ^
2025-09-29T03:49:00.1402196Z src/core/GitUtils.cpp:161:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1402727Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-09-29T03:49:00.1402931Z                                                                               ^
2025-09-29T03:49:00.1403440Z src/core/GitUtils.cpp:161:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1403906Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-09-29T03:49:00.1404113Z                                                                                        ^
2025-09-29T03:49:00.1404627Z src/core/GitUtils.cpp:162:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1404815Z     if (name.empty() && email.empty()) {
2025-09-29T03:49:00.1404982Z                                         ^
2025-09-29T03:49:00.1405484Z src/core/GitUtils.cpp:163:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1405641Z         return "Unknown";
2025-09-29T03:49:00.1405794Z                          ^
2025-09-29T03:49:00.1406301Z src/core/GitUtils.cpp:164:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1406434Z     }
2025-09-29T03:49:00.1406565Z      ^
2025-09-29T03:49:00.1407076Z src/core/GitUtils.cpp:165:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1407232Z     if (name.empty()) {
2025-09-29T03:49:00.1407376Z                        ^
2025-09-29T03:49:00.1408267Z src/core/GitUtils.cpp:166:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1408420Z         return email;
2025-09-29T03:49:00.1408558Z                      ^
2025-09-29T03:49:00.1409068Z src/core/GitUtils.cpp:167:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1409200Z     }
2025-09-29T03:49:00.1409328Z      ^
2025-09-29T03:49:00.1409827Z src/core/GitUtils.cpp:168:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1409994Z     if (email.empty()) {
2025-09-29T03:49:00.1410144Z                         ^
2025-09-29T03:49:00.1410652Z src/core/GitUtils.cpp:169:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1410803Z         return name;
2025-09-29T03:49:00.1410940Z                     ^
2025-09-29T03:49:00.1411432Z src/core/GitUtils.cpp:170:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1411564Z     }
2025-09-29T03:49:00.1411707Z      ^
2025-09-29T03:49:00.1412206Z src/core/GitUtils.cpp:174:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1412756Z std::string GitUtils::formatTimestamp(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:49:00.1412917Z                                       ^
2025-09-29T03:49:00.1413423Z src/core/GitUtils.cpp:174:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1414140Z std::string GitUtils::formatTimestamp(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:49:00.1414346Z                                                                                  ^
2025-09-29T03:49:00.1414846Z src/core/GitUtils.cpp:174:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1415365Z std::string GitUtils::formatTimestamp(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:49:00.1415564Z                                                                                   ^
2025-09-29T03:49:00.1416070Z src/core/GitUtils.cpp:174:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1416593Z std::string GitUtils::formatTimestamp(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:49:00.1416803Z                                                                                                ^
2025-09-29T03:49:00.1417304Z src/core/GitUtils.cpp:175:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1417612Z     auto time_t = std::chrono::system_clock::to_time_t(timestamp);
2025-09-29T03:49:00.1417802Z                                                                   ^
2025-09-29T03:49:00.1418539Z src/core/GitUtils.cpp:176:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1418706Z     std::stringstream ss;
2025-09-29T03:49:00.1418858Z                          ^
2025-09-29T03:49:00.1419359Z src/core/GitUtils.cpp:177:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1419661Z     ss << std::put_time(std::localtime(&time_t), "%Y-%m-%d %H:%M:%S");
2025-09-29T03:49:00.1419851Z                                                                       ^
2025-09-29T03:49:00.1420356Z src/core/GitUtils.cpp:181:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1420920Z std::string GitUtils::formatRelativeTime(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:49:00.1421087Z                                          ^
2025-09-29T03:49:00.1421596Z src/core/GitUtils.cpp:181:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1422146Z std::string GitUtils::formatRelativeTime(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:49:00.1422343Z                                                                                     ^
2025-09-29T03:49:00.1422863Z src/core/GitUtils.cpp:181:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1423612Z std::string GitUtils::formatRelativeTime(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:49:00.1423805Z                                                                                      ^
2025-09-29T03:49:00.1424318Z src/core/GitUtils.cpp:181:99: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1424871Z std::string GitUtils::formatRelativeTime(const std::chrono::system_clock::time_point& timestamp) {
2025-09-29T03:49:00.1425087Z                                                                                                   ^
2025-09-29T03:49:00.1425603Z src/core/GitUtils.cpp:182:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1425819Z     auto now = std::chrono::system_clock::now();
2025-09-29T03:49:00.1425983Z                                                 ^
2025-09-29T03:49:00.1426502Z src/core/GitUtils.cpp:183:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1426693Z     auto duration = now - timestamp;
2025-09-29T03:49:00.1426845Z                                     ^
2025-09-29T03:49:00.1427355Z src/core/GitUtils.cpp:185:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1427781Z     auto seconds = std::chrono::duration_cast<std::chrono::seconds>(duration).count();
2025-09-29T03:49:00.1428083Z                   ^
2025-09-29T03:49:00.1428777Z src/core/GitUtils.cpp:185:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1429211Z     auto seconds = std::chrono::duration_cast<std::chrono::seconds>(duration).count();
2025-09-29T03:49:00.1429405Z                                                                                       ^
2025-09-29T03:49:00.1429910Z src/core/GitUtils.cpp:186:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1430086Z     auto minutes = seconds / 60;
2025-09-29T03:49:00.1430244Z                                 ^
2025-09-29T03:49:00.1430747Z src/core/GitUtils.cpp:187:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1430918Z     auto hours = minutes / 60;
2025-09-29T03:49:00.1431063Z                               ^
2025-09-29T03:49:00.1431561Z src/core/GitUtils.cpp:188:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1431723Z     auto days = hours / 24;
2025-09-29T03:49:00.1431869Z                            ^
2025-09-29T03:49:00.1432378Z src/core/GitUtils.cpp:189:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1432539Z     auto weeks = days / 7;
2025-09-29T03:49:00.1432689Z                           ^
2025-09-29T03:49:00.1433202Z src/core/GitUtils.cpp:190:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1433361Z     auto months = days / 30;
2025-09-29T03:49:00.1433522Z                             ^
2025-09-29T03:49:00.1434029Z src/core/GitUtils.cpp:191:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1434189Z     auto years = days / 365;
2025-09-29T03:49:00.1434339Z                             ^
2025-09-29T03:49:00.1434850Z src/core/GitUtils.cpp:193:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1434997Z     if (years > 0) {
2025-09-29T03:49:00.1435137Z                     ^
2025-09-29T03:49:00.1435656Z src/core/GitUtils.cpp:194:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1436020Z         return std::to_string(years) + (years == 1 ? " year ago" : " years ago");
2025-09-29T03:49:00.1436211Z                                                                                  ^
2025-09-29T03:49:00.1436729Z src/core/GitUtils.cpp:195:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1436888Z     } else if (months > 0) {
2025-09-29T03:49:00.1437291Z                             ^
2025-09-29T03:49:00.1437811Z src/core/GitUtils.cpp:196:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1438368Z         return std::to_string(months) + (months == 1 ? " month ago" : " months ago");
2025-09-29T03:49:00.1438524Z                                        ^
2025-09-29T03:49:00.1438986Z src/core/GitUtils.cpp:196:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1439340Z         return std::to_string(months) + (months == 1 ? " month ago" : " months ago");
2025-09-29T03:49:00.1439510Z                                                                                      ^
2025-09-29T03:49:00.1440000Z src/core/GitUtils.cpp:197:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1440153Z     } else if (weeks > 0) {
2025-09-29T03:49:00.1440291Z                            ^
2025-09-29T03:49:00.1440785Z src/core/GitUtils.cpp:198:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1441146Z         return std::to_string(weeks) + (weeks == 1 ? " week ago" : " weeks ago");
2025-09-29T03:49:00.1441340Z                                                                                  ^
2025-09-29T03:49:00.1441854Z src/core/GitUtils.cpp:199:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1442017Z     } else if (days > 0) {
2025-09-29T03:49:00.1442164Z                           ^
2025-09-29T03:49:00.1442939Z src/core/GitUtils.cpp:200:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1443295Z         return std::to_string(days) + (days == 1 ? " day ago" : " days ago");
2025-09-29T03:49:00.1443493Z                                                                              ^
2025-09-29T03:49:00.1444036Z src/core/GitUtils.cpp:201:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1444212Z     } else if (hours > 0) {
2025-09-29T03:49:00.1444356Z                            ^
2025-09-29T03:49:00.1444882Z src/core/GitUtils.cpp:202:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1445246Z         return std::to_string(hours) + (hours == 1 ? " hour ago" : " hours ago");
2025-09-29T03:49:00.1445434Z                                                                                  ^
2025-09-29T03:49:00.1445955Z src/core/GitUtils.cpp:203:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1446139Z     } else if (minutes > 0) {
2025-09-29T03:49:00.1446301Z                              ^
2025-09-29T03:49:00.1446838Z src/core/GitUtils.cpp:204:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1447253Z         return std::to_string(minutes) + (minutes == 1 ? " minute ago" : " minutes ago");
2025-09-29T03:49:00.1447416Z                                         ^
2025-09-29T03:49:00.1448267Z src/core/GitUtils.cpp:204:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1448691Z         return std::to_string(minutes) + (minutes == 1 ? " minute ago" : " minutes ago");
2025-09-29T03:49:00.1448899Z                                                                                          ^
2025-09-29T03:49:00.1449420Z src/core/GitUtils.cpp:205:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1449557Z     } else {
2025-09-29T03:49:00.1449695Z             ^
2025-09-29T03:49:00.1450222Z src/core/GitUtils.cpp:206:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1450379Z         return "just now";
2025-09-29T03:49:00.1450530Z                           ^
2025-09-29T03:49:00.1451094Z src/core/GitUtils.cpp:210:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1451369Z std::string GitUtils::formatFileSize(size_t bytes) {
2025-09-29T03:49:00.1451538Z                                                     ^
2025-09-29T03:49:00.1452302Z src/core/GitUtils.cpp:211:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1452557Z     const char* units[] = {"B", "KB", "MB", "GB", "TB"};
2025-09-29T03:49:00.1452691Z               ^
2025-09-29T03:49:00.1453247Z src/core/GitUtils.cpp:211:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1453497Z     const char* units[] = {"B", "KB", "MB", "GB", "TB"};
2025-09-29T03:49:00.1453638Z                ^
2025-09-29T03:49:00.1454168Z src/core/GitUtils.cpp:211:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1454399Z     const char* units[] = {"B", "KB", "MB", "GB", "TB"};
2025-09-29T03:49:00.1454583Z                                                         ^
2025-09-29T03:49:00.1455080Z src/core/GitUtils.cpp:212:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1455285Z     double size = static_cast<double>(bytes);
2025-09-29T03:49:00.1455456Z                                              ^
2025-09-29T03:49:00.1455980Z src/core/GitUtils.cpp:213:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1456133Z     int unit = 0;
2025-09-29T03:49:00.1456269Z                  ^
2025-09-29T03:49:00.1456796Z src/core/GitUtils.cpp:215:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1456980Z     while (size >= 1024.0 && unit < 4) {
2025-09-29T03:49:00.1457366Z                                         ^
2025-09-29T03:49:00.1458135Z src/core/GitUtils.cpp:216:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1458308Z         size /= 1024.0;
2025-09-29T03:49:00.1458454Z                        ^
2025-09-29T03:49:00.1458985Z src/core/GitUtils.cpp:217:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1459121Z         unit++;
2025-09-29T03:49:00.1459271Z                ^
2025-09-29T03:49:00.1459800Z src/core/GitUtils.cpp:218:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1459931Z     }
2025-09-29T03:49:00.1460069Z      ^
2025-09-29T03:49:00.1460593Z src/core/GitUtils.cpp:220:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1460766Z     std::stringstream ss;
2025-09-29T03:49:00.1460911Z                          ^
2025-09-29T03:49:00.1461439Z src/core/GitUtils.cpp:221:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1461778Z     ss << std::fixed << std::setprecision(1) << size << " " << units[unit];
2025-09-29T03:49:00.1461972Z                                                                            ^
2025-09-29T03:49:00.1462508Z src/core/GitUtils.cpp:226:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1462824Z bool GitUtils::isValidBranchName(const std::string& name) {
2025-09-29T03:49:00.1462999Z                                                   ^
2025-09-29T03:49:00.1463532Z src/core/GitUtils.cpp:226:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1463838Z bool GitUtils::isValidBranchName(const std::string& name) {
2025-09-29T03:49:00.1464010Z                                                    ^
2025-09-29T03:49:00.1464542Z src/core/GitUtils.cpp:226:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1464842Z bool GitUtils::isValidBranchName(const std::string& name) {
2025-09-29T03:49:00.1465028Z                                                            ^
2025-09-29T03:49:00.1465549Z src/core/GitUtils.cpp:227:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1465852Z     if (name.empty() || name.front() == '.' || name.back() == '.' ||
2025-09-29T03:49:00.1466030Z                                                                     ^
2025-09-29T03:49:00.1466568Z src/core/GitUtils.cpp:228:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1467026Z         name.front() == '/' || name.back() == '/') {
2025-09-29T03:49:00.1467193Z                                                     ^
2025-09-29T03:49:00.1467733Z src/core/GitUtils.cpp:229:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1468095Z         return false;
2025-09-29T03:49:00.1468245Z                      ^
2025-09-29T03:49:00.1468802Z src/core/GitUtils.cpp:230:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1468939Z     }
2025-09-29T03:49:00.1469062Z      ^
2025-09-29T03:49:00.1469595Z src/core/GitUtils.cpp:232:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1469850Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-09-29T03:49:00.1469997Z                    ^
2025-09-29T03:49:00.1470538Z src/core/GitUtils.cpp:232:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1470793Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-09-29T03:49:00.1470942Z                     ^
2025-09-29T03:49:00.1471486Z src/core/GitUtils.cpp:232:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1471735Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-09-29T03:49:00.1471918Z                                                       ^
2025-09-29T03:49:00.1472646Z src/core/GitUtils.cpp:233:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1472889Z         if (name.find(invalid) != std::string::npos) {
2025-09-29T03:49:00.1473055Z                                                       ^
2025-09-29T03:49:00.1473565Z src/core/GitUtils.cpp:234:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1473719Z             return false;
2025-09-29T03:49:00.1473861Z                          ^
2025-09-29T03:49:00.1474390Z src/core/GitUtils.cpp:235:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1474532Z         }
2025-09-29T03:49:00.1474662Z          ^
2025-09-29T03:49:00.1475198Z src/core/GitUtils.cpp:236:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1475327Z     }
2025-09-29T03:49:00.1475454Z      ^
2025-09-29T03:49:00.1475976Z src/core/GitUtils.cpp:241:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1476343Z std::string GitUtils::sanitizeBranchName(const std::string& name) {
2025-09-29T03:49:00.1476520Z                                                           ^
2025-09-29T03:49:00.1477035Z src/core/GitUtils.cpp:241:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1477392Z std::string GitUtils::sanitizeBranchName(const std::string& name) {
2025-09-29T03:49:00.1477570Z                                                            ^
2025-09-29T03:49:00.1478268Z src/core/GitUtils.cpp:241:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1478637Z std::string GitUtils::sanitizeBranchName(const std::string& name) {
2025-09-29T03:49:00.1478819Z                                                                    ^
2025-09-29T03:49:00.1479324Z src/core/GitUtils.cpp:242:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1479500Z     std::string result = name;
2025-09-29T03:49:00.1479644Z                               ^
2025-09-29T03:49:00.1480161Z src/core/GitUtils.cpp:244:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1480389Z     // Replace invalid characters with dashes
2025-09-29T03:49:00.1480562Z                                              ^
2025-09-29T03:49:00.1481081Z src/core/GitUtils.cpp:245:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1481324Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-09-29T03:49:00.1481685Z                    ^
2025-09-29T03:49:00.1482210Z src/core/GitUtils.cpp:245:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1482447Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-09-29T03:49:00.1482594Z                     ^
2025-09-29T03:49:00.1483109Z src/core/GitUtils.cpp:245:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1483341Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-09-29T03:49:00.1483527Z                                                       ^
2025-09-29T03:49:00.1484038Z src/core/GitUtils.cpp:246:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1484195Z         size_t pos = 0;
2025-09-29T03:49:00.1484338Z                        ^
2025-09-29T03:49:00.1484859Z src/core/GitUtils.cpp:247:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1485189Z         while ((pos = result.find(invalid, pos)) != std::string::npos) {
2025-09-29T03:49:00.1485387Z                                                                         ^
2025-09-29T03:49:00.1485908Z src/core/GitUtils.cpp:248:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1486138Z             result.replace(pos, invalid.length(), "-");
2025-09-29T03:49:00.1486306Z                                                        ^
2025-09-29T03:49:00.1486816Z src/core/GitUtils.cpp:249:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1487206Z             pos += 1;
2025-09-29T03:49:00.1487565Z                      ^
2025-09-29T03:49:00.1488277Z src/core/GitUtils.cpp:250:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1488418Z         }
2025-09-29T03:49:00.1488563Z          ^
2025-09-29T03:49:00.1489128Z src/core/GitUtils.cpp:251:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1489257Z     }
2025-09-29T03:49:00.1489392Z      ^
2025-09-29T03:49:00.1489890Z src/core/GitUtils.cpp:253:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1490106Z     // Remove leading/trailing dots and slashes
2025-09-29T03:49:00.1490282Z                                                ^
2025-09-29T03:49:00.1490825Z src/core/GitUtils.cpp:254:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1491200Z     while (!result.empty() && (result.front() == '.' || result.front() == '/')) {
2025-09-29T03:49:00.1491399Z                                                                                  ^
2025-09-29T03:49:00.1491909Z src/core/GitUtils.cpp:255:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1492077Z         result.erase(0, 1);
2025-09-29T03:49:00.1492224Z                            ^
2025-09-29T03:49:00.1492746Z src/core/GitUtils.cpp:256:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1492886Z     }
2025-09-29T03:49:00.1493024Z      ^
2025-09-29T03:49:00.1493548Z src/core/GitUtils.cpp:257:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1493916Z     while (!result.empty() && (result.back() == '.' || result.back() == '/')) {
2025-09-29T03:49:00.1494116Z                                                                                ^
2025-09-29T03:49:00.1494637Z src/core/GitUtils.cpp:258:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1494812Z         result.pop_back();
2025-09-29T03:49:00.1494965Z                           ^
2025-09-29T03:49:00.1495495Z src/core/GitUtils.cpp:259:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1495625Z     }
2025-09-29T03:49:00.1495752Z      ^
2025-09-29T03:49:00.1496283Z src/core/GitUtils.cpp:264:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1496678Z std::string GitUtils::getShortBranchName(const std::string& fullName) {
2025-09-29T03:49:00.1497105Z                                                           ^
2025-09-29T03:49:00.1497639Z src/core/GitUtils.cpp:264:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1498296Z std::string GitUtils::getShortBranchName(const std::string& fullName) {
2025-09-29T03:49:00.1498481Z                                                            ^
2025-09-29T03:49:00.1499018Z src/core/GitUtils.cpp:264:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1499412Z std::string GitUtils::getShortBranchName(const std::string& fullName) {
2025-09-29T03:49:00.1499595Z                                                                        ^
2025-09-29T03:49:00.1500128Z src/core/GitUtils.cpp:265:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1500340Z     if (startsWith(fullName, "refs/heads/")) {
2025-09-29T03:49:00.1500504Z                                               ^
2025-09-29T03:49:00.1501044Z src/core/GitUtils.cpp:266:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1501229Z         return fullName.substr(11);
2025-09-29T03:49:00.1501384Z                                    ^
2025-09-29T03:49:00.1501918Z src/core/GitUtils.cpp:267:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1502058Z     }
2025-09-29T03:49:00.1502187Z      ^
2025-09-29T03:49:00.1502999Z src/core/GitUtils.cpp:268:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1503245Z     if (startsWith(fullName, "refs/remotes/")) {
2025-09-29T03:49:00.1503410Z                                                 ^
2025-09-29T03:49:00.1503943Z src/core/GitUtils.cpp:269:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1504124Z         return fullName.substr(13);
2025-09-29T03:49:00.1504274Z                                    ^
2025-09-29T03:49:00.1504789Z src/core/GitUtils.cpp:270:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1504916Z     }
2025-09-29T03:49:00.1505042Z      ^
2025-09-29T03:49:00.1505559Z src/core/GitUtils.cpp:271:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1505757Z     if (startsWith(fullName, "origin/")) {
2025-09-29T03:49:00.1505924Z                                           ^
2025-09-29T03:49:00.1506457Z src/core/GitUtils.cpp:272:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1506639Z         return fullName.substr(7);
2025-09-29T03:49:00.1506793Z                                   ^
2025-09-29T03:49:00.1507319Z src/core/GitUtils.cpp:273:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1507449Z     }
2025-09-29T03:49:00.1507578Z      ^
2025-09-29T03:49:00.1508293Z src/core/GitUtils.cpp:277:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1508641Z bool GitUtils::isRemoteBranch(const std::string& branchName) {
2025-09-29T03:49:00.1508798Z                                                ^
2025-09-29T03:49:00.1509318Z src/core/GitUtils.cpp:277:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1509647Z bool GitUtils::isRemoteBranch(const std::string& branchName) {
2025-09-29T03:49:00.1509811Z                                                 ^
2025-09-29T03:49:00.1510340Z src/core/GitUtils.cpp:277:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1510661Z bool GitUtils::isRemoteBranch(const std::string& branchName) {
2025-09-29T03:49:00.1510838Z                                                               ^
2025-09-29T03:49:00.1511357Z src/core/GitUtils.cpp:278:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1511605Z     return startsWith(branchName, "refs/remotes/") || 
2025-09-29T03:49:00.1511991Z                                                      ^
2025-09-29T03:49:00.1512503Z src/core/GitUtils.cpp:282:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1512919Z std::string GitUtils::getRemoteFromBranch(const std::string& branchName) {
2025-09-29T03:49:00.1513094Z                                                            ^
2025-09-29T03:49:00.1513601Z src/core/GitUtils.cpp:282:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1514014Z std::string GitUtils::getRemoteFromBranch(const std::string& branchName) {
2025-09-29T03:49:00.1514186Z                                                             ^
2025-09-29T03:49:00.1514689Z src/core/GitUtils.cpp:282:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1515085Z std::string GitUtils::getRemoteFromBranch(const std::string& branchName) {
2025-09-29T03:49:00.1515265Z                                                                           ^
2025-09-29T03:49:00.1515786Z src/core/GitUtils.cpp:283:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1516037Z     if (startsWith(branchName, "refs/remotes/")) {
2025-09-29T03:49:00.1516210Z                                                   ^
2025-09-29T03:49:00.1516739Z src/core/GitUtils.cpp:284:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1516986Z         auto parts = split(branchName.substr(13), "/");
2025-09-29T03:49:00.1517364Z                                                        ^
2025-09-29T03:49:00.1518071Z src/core/GitUtils.cpp:285:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1518279Z         return parts.empty() ? "" : parts[0];
2025-09-29T03:49:00.1518446Z                                              ^
2025-09-29T03:49:00.1518966Z src/core/GitUtils.cpp:286:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1519107Z     }
2025-09-29T03:49:00.1519241Z      ^
2025-09-29T03:49:00.1519759Z src/core/GitUtils.cpp:288:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1519956Z     auto slashPos = branchName.find('/');
2025-09-29T03:49:00.1520120Z                                          ^
2025-09-29T03:49:00.1520630Z src/core/GitUtils.cpp:289:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1520815Z     if (slashPos != std::string::npos) {
2025-09-29T03:49:00.1520963Z                                         ^
2025-09-29T03:49:00.1521488Z src/core/GitUtils.cpp:290:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1521696Z         return branchName.substr(0, slashPos);
2025-09-29T03:49:00.1521852Z                                               ^
2025-09-29T03:49:00.1522366Z src/core/GitUtils.cpp:291:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1522495Z     }
2025-09-29T03:49:00.1522626Z      ^
2025-09-29T03:49:00.1523133Z src/core/GitUtils.cpp:297:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1523428Z bool GitUtils::isValidGitUrl(const std::string& url) {
2025-09-29T03:49:00.1523653Z                                               ^
2025-09-29T03:49:00.1524175Z src/core/GitUtils.cpp:297:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1524441Z bool GitUtils::isValidGitUrl(const std::string& url) {
2025-09-29T03:49:00.1524606Z                                                ^
2025-09-29T03:49:00.1525123Z src/core/GitUtils.cpp:297:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1525408Z bool GitUtils::isValidGitUrl(const std::string& url) {
2025-09-29T03:49:00.1525573Z                                                       ^
2025-09-29T03:49:00.1526068Z src/core/GitUtils.cpp:298:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1526489Z     if (url.empty()) return false;
2025-09-29T03:49:00.1526635Z                     ^
2025-09-29T03:49:00.1527141Z src/core/GitUtils.cpp:298:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1527312Z     if (url.empty()) return false;
2025-09-29T03:49:00.1527471Z                                   ^
2025-09-29T03:49:00.1528206Z src/core/GitUtils.cpp:300:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1528370Z     // HTTP/HTTPS URLs
2025-09-29T03:49:00.1528530Z                       ^
2025-09-29T03:49:00.1529066Z src/core/GitUtils.cpp:301:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1529399Z     if (startsWith(url, "http://") || startsWith(url, "https://")) {
2025-09-29T03:49:00.1529583Z                                                                     ^
2025-09-29T03:49:00.1530121Z src/core/GitUtils.cpp:302:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1530386Z         return url.find(".git") != std::string::npos || 
2025-09-29T03:49:00.1530554Z                                                        ^
2025-09-29T03:49:00.1531085Z src/core/GitUtils.cpp:303:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1531326Z                url.find("github.com") != std::string::npos ||
2025-09-29T03:49:00.1531504Z                                                              ^
2025-09-29T03:49:00.1532258Z src/core/GitUtils.cpp:304:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1532501Z                url.find("gitlab.com") != std::string::npos ||
2025-09-29T03:49:00.1532674Z                                                              ^
2025-09-29T03:49:00.1533199Z src/core/GitUtils.cpp:305:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1533432Z                url.find("bitbucket.org") != std::string::npos;
2025-09-29T03:49:00.1533617Z                                                               ^
2025-09-29T03:49:00.1534143Z src/core/GitUtils.cpp:306:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1534273Z     }
2025-09-29T03:49:00.1534399Z      ^
2025-09-29T03:49:00.1534914Z src/core/GitUtils.cpp:308:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1535057Z     // SSH URLs
2025-09-29T03:49:00.1535189Z                ^
2025-09-29T03:49:00.1535718Z src/core/GitUtils.cpp:309:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1536021Z     if (startsWith(url, "git@") || startsWith(url, "ssh://")) {
2025-09-29T03:49:00.1536204Z                                                                ^
2025-09-29T03:49:00.1536733Z src/core/GitUtils.cpp:310:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1536890Z         return true;
2025-09-29T03:49:00.1537029Z                     ^
2025-09-29T03:49:00.1537575Z src/core/GitUtils.cpp:311:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1537706Z     }
2025-09-29T03:49:00.1537844Z      ^
2025-09-29T03:49:00.1538581Z src/core/GitUtils.cpp:313:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1538724Z     // File URLs
2025-09-29T03:49:00.1538913Z                 ^
2025-09-29T03:49:00.1539448Z src/core/GitUtils.cpp:314:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1539734Z     if (startsWith(url, "file://") || startsWith(url, "/")) {
2025-09-29T03:49:00.1539909Z                                                              ^
2025-09-29T03:49:00.1540413Z src/core/GitUtils.cpp:315:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1540562Z         return true;
2025-09-29T03:49:00.1540700Z                     ^
2025-09-29T03:49:00.1541225Z src/core/GitUtils.cpp:316:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1541578Z     }
2025-09-29T03:49:00.1541707Z      ^
2025-09-29T03:49:00.1542248Z src/core/GitUtils.cpp:321:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1542652Z std::string GitUtils::extractRepoNameFromUrl(const std::string& url) {
2025-09-29T03:49:00.1542828Z                                                               ^
2025-09-29T03:49:00.1543352Z src/core/GitUtils.cpp:321:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1543727Z std::string GitUtils::extractRepoNameFromUrl(const std::string& url) {
2025-09-29T03:49:00.1543896Z                                                                ^
2025-09-29T03:49:00.1544407Z src/core/GitUtils.cpp:321:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1544781Z std::string GitUtils::extractRepoNameFromUrl(const std::string& url) {
2025-09-29T03:49:00.1544979Z                                                                       ^
2025-09-29T03:49:00.1545483Z src/core/GitUtils.cpp:322:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1545659Z     std::string result = url;
2025-09-29T03:49:00.1545803Z                              ^
2025-09-29T03:49:00.1546305Z src/core/GitUtils.cpp:324:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1546467Z     // Remove protocol
2025-09-29T03:49:00.1546602Z                       ^
2025-09-29T03:49:00.1547316Z src/core/GitUtils.cpp:325:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1547535Z     size_t protocolEnd = result.find("://");
2025-09-29T03:49:00.1547692Z                                             ^
2025-09-29T03:49:00.1548391Z src/core/GitUtils.cpp:326:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1548602Z     if (protocolEnd != std::string::npos) {
2025-09-29T03:49:00.1548766Z                                            ^
2025-09-29T03:49:00.1549277Z src/core/GitUtils.cpp:327:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1549482Z         result = result.substr(protocolEnd + 3);
2025-09-29T03:49:00.1549664Z                                                 ^
2025-09-29T03:49:00.1550170Z src/core/GitUtils.cpp:328:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1550302Z     }
2025-09-29T03:49:00.1550432Z      ^
2025-09-29T03:49:00.1550935Z src/core/GitUtils.cpp:330:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1551112Z     // Remove user@host part for SSH
2025-09-29T03:49:00.1551272Z                                     ^
2025-09-29T03:49:00.1551785Z src/core/GitUtils.cpp:331:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1551959Z     size_t atPos = result.find('@');
2025-09-29T03:49:00.1552116Z                                     ^
2025-09-29T03:49:00.1552631Z src/core/GitUtils.cpp:332:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1552810Z     if (atPos != std::string::npos) {
2025-09-29T03:49:00.1552963Z                                      ^
2025-09-29T03:49:00.1553491Z src/core/GitUtils.cpp:333:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1553700Z         size_t colonPos = result.find(':', atPos);
2025-09-29T03:49:00.1553865Z                                                   ^
2025-09-29T03:49:00.1554395Z src/core/GitUtils.cpp:334:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1554588Z         if (colonPos != std::string::npos) {
2025-09-29T03:49:00.1554750Z                                             ^
2025-09-29T03:49:00.1555254Z src/core/GitUtils.cpp:335:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1555456Z             result = result.substr(colonPos + 1);
2025-09-29T03:49:00.1555945Z                                                  ^
2025-09-29T03:49:00.1556469Z src/core/GitUtils.cpp:336:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1556611Z         }
2025-09-29T03:49:00.1556748Z          ^
2025-09-29T03:49:00.1557274Z src/core/GitUtils.cpp:337:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1557416Z     }
2025-09-29T03:49:00.1557546Z      ^
2025-09-29T03:49:00.1558301Z src/core/GitUtils.cpp:339:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1558497Z     // Remove host part for HTTP
2025-09-29T03:49:00.1558648Z                                 ^
2025-09-29T03:49:00.1559184Z src/core/GitUtils.cpp:340:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1559374Z     size_t slashPos = result.find('/');
2025-09-29T03:49:00.1559538Z                                        ^
2025-09-29T03:49:00.1560082Z src/core/GitUtils.cpp:341:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1560273Z     if (slashPos != std::string::npos) {
2025-09-29T03:49:00.1560431Z                                         ^
2025-09-29T03:49:00.1560954Z src/core/GitUtils.cpp:342:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1561155Z         result = result.substr(slashPos + 1);
2025-09-29T03:49:00.1561327Z                                              ^
2025-09-29T03:49:00.1562074Z src/core/GitUtils.cpp:343:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1562219Z     }
2025-09-29T03:49:00.1562349Z      ^
2025-09-29T03:49:00.1562891Z src/core/GitUtils.cpp:345:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1563051Z     // Remove .git suffix
2025-09-29T03:49:00.1563208Z                          ^
2025-09-29T03:49:00.1563740Z src/core/GitUtils.cpp:346:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1563928Z     if (endsWith(result, ".git")) {
2025-09-29T03:49:00.1564082Z                                    ^
2025-09-29T03:49:00.1564613Z src/core/GitUtils.cpp:347:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1564868Z         result = result.substr(0, result.length() - 4);
2025-09-29T03:49:00.1565047Z                                                        ^
2025-09-29T03:49:00.1565593Z src/core/GitUtils.cpp:348:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1565738Z     }
2025-09-29T03:49:00.1565870Z      ^
2025-09-29T03:49:00.1566400Z src/core/GitUtils.cpp:350:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1566590Z     // Get just the repository name
2025-09-29T03:49:00.1566743Z                                    ^
2025-09-29T03:49:00.1567262Z src/core/GitUtils.cpp:351:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1567470Z     slashPos = result.find_last_of('/');
2025-09-29T03:49:00.1567628Z                                         ^
2025-09-29T03:49:00.1568340Z src/core/GitUtils.cpp:352:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1568542Z     if (slashPos != std::string::npos) {
2025-09-29T03:49:00.1568698Z                                         ^
2025-09-29T03:49:00.1569213Z src/core/GitUtils.cpp:353:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1569402Z         result = result.substr(slashPos + 1);
2025-09-29T03:49:00.1569576Z                                              ^
2025-09-29T03:49:00.1570110Z src/core/GitUtils.cpp:354:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1570246Z     }
2025-09-29T03:49:00.1570386Z      ^
2025-09-29T03:49:00.1570919Z src/core/GitUtils.cpp:359:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1571490Z std::string GitUtils::normalizeGitUrl(const std::string& url) {
2025-09-29T03:49:00.1571677Z                                                        ^
2025-09-29T03:49:00.1572216Z src/core/GitUtils.cpp:359:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1572547Z std::string GitUtils::normalizeGitUrl(const std::string& url) {
2025-09-29T03:49:00.1572727Z                                                         ^
2025-09-29T03:49:00.1573293Z src/core/GitUtils.cpp:359:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1573623Z std::string GitUtils::normalizeGitUrl(const std::string& url) {
2025-09-29T03:49:00.1573808Z                                                                ^
2025-09-29T03:49:00.1574351Z src/core/GitUtils.cpp:360:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1574542Z     std::string result = trim(url);
2025-09-29T03:49:00.1574709Z                                    ^
2025-09-29T03:49:00.1575256Z src/core/GitUtils.cpp:362:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1575519Z     // Convert SSH to HTTPS for GitHub, GitLab, Bitbucket
2025-09-29T03:49:00.1575697Z                                                          ^
2025-09-29T03:49:00.1576241Z src/core/GitUtils.cpp:363:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1576463Z     if (startsWith(result, "git@github.com:")) {
2025-09-29T03:49:00.1576855Z                                                 ^
2025-09-29T03:49:00.1577431Z src/core/GitUtils.cpp:364:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1577711Z         result = "https://github.com/" + result.substr(15);
2025-09-29T03:49:00.1578132Z                                                            ^
2025-09-29T03:49:00.1578688Z src/core/GitUtils.cpp:365:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1578866Z     } else if (startsWith(result, "git@gitlab.com:")) {
2025-09-29T03:49:00.1578972Z                                                        ^
2025-09-29T03:49:00.1579284Z src/core/GitUtils.cpp:366:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1579451Z         result = "https://gitlab.com/" + result.substr(15);
2025-09-29T03:49:00.1579556Z                                                            ^
2025-09-29T03:49:00.1579868Z src/core/GitUtils.cpp:367:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1580028Z     } else if (startsWith(result, "git@bitbucket.org:")) {
2025-09-29T03:49:00.1580127Z                                                           ^
2025-09-29T03:49:00.1580429Z src/core/GitUtils.cpp:368:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1580615Z         result = "https://bitbucket.org/" + result.substr(18);
2025-09-29T03:49:00.1580724Z                                                               ^
2025-09-29T03:49:00.1581041Z src/core/GitUtils.cpp:369:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1581122Z     }
2025-09-29T03:49:00.1581204Z      ^
2025-09-29T03:49:00.1581513Z src/core/GitUtils.cpp:371:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1581626Z     // Ensure .git suffix for HTTP URLs
2025-09-29T03:49:00.1581725Z                                        ^
2025-09-29T03:49:00.1582040Z src/core/GitUtils.cpp:372:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1582268Z     if ((startsWith(result, "http://") || startsWith(result, "https://")) &&
2025-09-29T03:49:00.1582386Z                                                                             ^
2025-09-29T03:49:00.1582681Z src/core/GitUtils.cpp:373:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1582975Z         !endsWith(result, ".git")) {
2025-09-29T03:49:00.1583068Z                                     ^
2025-09-29T03:49:00.1583366Z src/core/GitUtils.cpp:374:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1583462Z         result += ".git";
2025-09-29T03:49:00.1583548Z                          ^
2025-09-29T03:49:00.1583846Z src/core/GitUtils.cpp:375:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1583922Z     }
2025-09-29T03:49:00.1584015Z      ^
2025-09-29T03:49:00.1584305Z src/core/GitUtils.cpp:380:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1584469Z bool GitUtils::isHttpsUrl(const std::string& url) {
2025-09-29T03:49:00.1584567Z                                            ^
2025-09-29T03:49:00.1584867Z src/core/GitUtils.cpp:380:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1585020Z bool GitUtils::isHttpsUrl(const std::string& url) {
2025-09-29T03:49:00.1585125Z                                             ^
2025-09-29T03:49:00.1585412Z src/core/GitUtils.cpp:380:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1585555Z bool GitUtils::isHttpsUrl(const std::string& url) {
2025-09-29T03:49:00.1585656Z                                                    ^
2025-09-29T03:49:00.1585939Z src/core/GitUtils.cpp:384:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1586231Z bool GitUtils::isSshUrl(const std::string& url) {
2025-09-29T03:49:00.1586329Z                                          ^
2025-09-29T03:49:00.1586615Z src/core/GitUtils.cpp:384:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1586748Z bool GitUtils::isSshUrl(const std::string& url) {
2025-09-29T03:49:00.1586847Z                                           ^
2025-09-29T03:49:00.1587131Z src/core/GitUtils.cpp:384:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1587268Z bool GitUtils::isSshUrl(const std::string& url) {
2025-09-29T03:49:00.1587372Z                                                  ^
2025-09-29T03:49:00.1587651Z src/core/GitUtils.cpp:389:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1587807Z bool GitUtils::isValidEmail(const std::string& email) {
2025-09-29T03:49:00.1588187Z                                              ^
2025-09-29T03:49:00.1588500Z src/core/GitUtils.cpp:389:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1588656Z bool GitUtils::isValidEmail(const std::string& email) {
2025-09-29T03:49:00.1588759Z                                               ^
2025-09-29T03:49:00.1589040Z src/core/GitUtils.cpp:389:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1589192Z bool GitUtils::isValidEmail(const std::string& email) {
2025-09-29T03:49:00.1589305Z                                                        ^
2025-09-29T03:49:00.1589590Z src/core/GitUtils.cpp:390:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1589842Z     std::regex emailRegex(R"([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})");
2025-09-29T03:49:00.1589955Z                                                                                ^
2025-09-29T03:49:00.1590256Z src/core/GitUtils.cpp:394:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1590464Z bool GitUtils::isValidCommitMessage(const std::string& message) {
2025-09-29T03:49:00.1590566Z                                                      ^
2025-09-29T03:49:00.1590861Z src/core/GitUtils.cpp:394:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1591054Z bool GitUtils::isValidCommitMessage(const std::string& message) {
2025-09-29T03:49:00.1591151Z                                                       ^
2025-09-29T03:49:00.1591607Z src/core/GitUtils.cpp:394:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1591797Z bool GitUtils::isValidCommitMessage(const std::string& message) {
2025-09-29T03:49:00.1591907Z                                                                  ^
2025-09-29T03:49:00.1592193Z src/core/GitUtils.cpp:395:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1592324Z     if (message.empty() || trim(message).empty()) {
2025-09-29T03:49:00.1592429Z                                                    ^
2025-09-29T03:49:00.1592710Z src/core/GitUtils.cpp:396:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1592815Z         return false;
2025-09-29T03:49:00.1592899Z                      ^
2025-09-29T03:49:00.1593194Z src/core/GitUtils.cpp:397:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1593280Z     }
2025-09-29T03:49:00.1593359Z      ^
2025-09-29T03:49:00.1593648Z src/core/GitUtils.cpp:399:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1593879Z     // Check for reasonable length (first line should be under 50 chars ideally)
2025-09-29T03:49:00.1593990Z                                                                                 ^
2025-09-29T03:49:00.1594279Z src/core/GitUtils.cpp:400:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1594395Z     auto lines = split(message, "\n");
2025-09-29T03:49:00.1594626Z                                       ^
2025-09-29T03:49:00.1594916Z src/core/GitUtils.cpp:401:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1595039Z     if (!lines.empty() && lines[0].length() > 72) {
2025-09-29T03:49:00.1595140Z                                                    ^
2025-09-29T03:49:00.1595422Z src/core/GitUtils.cpp:402:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1595547Z         return false;  // Too long for first line
2025-09-29T03:49:00.1595637Z                      ^
2025-09-29T03:49:00.1595923Z src/core/GitUtils.cpp:402:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1596037Z         return false;  // Too long for first line
2025-09-29T03:49:00.1596138Z                                                  ^
2025-09-29T03:49:00.1596427Z src/core/GitUtils.cpp:403:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1596506Z     }
2025-09-29T03:49:00.1596588Z      ^
2025-09-29T03:49:00.1596881Z src/core/GitUtils.cpp:408:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1597056Z bool GitUtils::isBinaryFile(const std::string& filePath) {
2025-09-29T03:49:00.1597153Z                                              ^
2025-09-29T03:49:00.1597440Z src/core/GitUtils.cpp:408:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1597609Z bool GitUtils::isBinaryFile(const std::string& filePath) {
2025-09-29T03:49:00.1597708Z                                               ^
2025-09-29T03:49:00.1598274Z src/core/GitUtils.cpp:408:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1598453Z bool GitUtils::isBinaryFile(const std::string& filePath) {
2025-09-29T03:49:00.1598559Z                                                           ^
2025-09-29T03:49:00.1598849Z src/core/GitUtils.cpp:409:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1599011Z     std::string ext = toLower(getFileExtension(filePath));
2025-09-29T03:49:00.1599111Z                                                           ^
2025-09-29T03:49:00.1599399Z src/core/GitUtils.cpp:410:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1599636Z     return std::find(BINARY_EXTENSIONS.begin(), BINARY_EXTENSIONS.end(), ext) 
2025-09-29T03:49:00.1599745Z                                                                              ^
2025-09-29T03:49:00.1600204Z src/core/GitUtils.cpp:411:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1600321Z            != BINARY_EXTENSIONS.end();
2025-09-29T03:49:00.1600403Z              ^
2025-09-29T03:49:00.1600687Z src/core/GitUtils.cpp:414:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1600923Z std::string GitUtils::detectFileEncoding(const std::string& filePath) {
2025-09-29T03:49:00.1601036Z                                                           ^
2025-09-29T03:49:00.1601334Z src/core/GitUtils.cpp:414:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1601563Z std::string GitUtils::detectFileEncoding(const std::string& filePath) {
2025-09-29T03:49:00.1601673Z                                                            ^
2025-09-29T03:49:00.1601967Z src/core/GitUtils.cpp:414:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1602190Z std::string GitUtils::detectFileEncoding(const std::string& filePath) {
2025-09-29T03:49:00.1602303Z                                                                        ^
2025-09-29T03:49:00.1602662Z src/core/GitUtils.cpp:415:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1602807Z     std::ifstream file(filePath, std::ios::binary);
2025-09-29T03:49:00.1602908Z                                                    ^
2025-09-29T03:49:00.1603347Z src/core/GitUtils.cpp:416:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1603452Z     if (!file.is_open()) {
2025-09-29T03:49:00.1603548Z                           ^
2025-09-29T03:49:00.1603838Z src/core/GitUtils.cpp:417:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1603935Z         return "unknown";
2025-09-29T03:49:00.1604034Z                          ^
2025-09-29T03:49:00.1604337Z src/core/GitUtils.cpp:418:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1604417Z     }
2025-09-29T03:49:00.1604494Z      ^
2025-09-29T03:49:00.1604782Z src/core/GitUtils.cpp:420:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1604903Z     // Read first few bytes to detect encoding
2025-09-29T03:49:00.1605000Z                                               ^
2025-09-29T03:49:00.1605290Z src/core/GitUtils.cpp:421:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1605417Z     std::vector<unsigned char> buffer(4);
2025-09-29T03:49:00.1605515Z                                          ^
2025-09-29T03:49:00.1605808Z src/core/GitUtils.cpp:422:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1605969Z     file.read(reinterpret_cast<char*>(buffer.data()), 4);
2025-09-29T03:49:00.1606064Z                                    ^
2025-09-29T03:49:00.1606360Z src/core/GitUtils.cpp:422:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1606512Z     file.read(reinterpret_cast<char*>(buffer.data()), 4);
2025-09-29T03:49:00.1606615Z                                                          ^
2025-09-29T03:49:00.1606899Z src/core/GitUtils.cpp:423:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1607015Z     size_t bytesRead = file.gcount();
2025-09-29T03:49:00.1607107Z                                      ^
2025-09-29T03:49:00.1607395Z src/core/GitUtils.cpp:425:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1607497Z     if (bytesRead >= 3) {
2025-09-29T03:49:00.1607582Z                          ^
2025-09-29T03:49:00.1608012Z src/core/GitUtils.cpp:426:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1608117Z         // UTF-8 BOM
2025-09-29T03:49:00.1608199Z                     ^
2025-09-29T03:49:00.1608676Z src/core/GitUtils.cpp:427:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1608854Z         if (buffer[0] == 0xEF && buffer[1] == 0xBB && buffer[2] == 0xBF) {
2025-09-29T03:49:00.1608965Z                                                                           ^
2025-09-29T03:49:00.1609253Z src/core/GitUtils.cpp:428:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1609352Z             return "utf-8-bom";
2025-09-29T03:49:00.1609447Z                                ^
2025-09-29T03:49:00.1609739Z src/core/GitUtils.cpp:429:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1609821Z         }
2025-09-29T03:49:00.1609903Z          ^
2025-09-29T03:49:00.1610195Z src/core/GitUtils.cpp:430:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1610272Z     }
2025-09-29T03:49:00.1610353Z      ^
2025-09-29T03:49:00.1610636Z src/core/GitUtils.cpp:432:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1610735Z     if (bytesRead >= 2) {
2025-09-29T03:49:00.1610819Z                          ^
2025-09-29T03:49:00.1611108Z src/core/GitUtils.cpp:433:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1611194Z         // UTF-16 BOM
2025-09-29T03:49:00.1611276Z                      ^
2025-09-29T03:49:00.1611566Z src/core/GitUtils.cpp:434:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1611875Z         if ((buffer[0] == 0xFF && buffer[1] == 0xFE) ||
2025-09-29T03:49:00.1612068Z                                                        ^
2025-09-29T03:49:00.1612613Z src/core/GitUtils.cpp:435:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1612820Z             (buffer[0] == 0xFE && buffer[1] == 0xFF)) {
2025-09-29T03:49:00.1612996Z                                                        ^
2025-09-29T03:49:00.1613509Z src/core/GitUtils.cpp:436:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1613691Z             return "utf-16";
2025-09-29T03:49:00.1613840Z                             ^
2025-09-29T03:49:00.1614347Z src/core/GitUtils.cpp:437:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1614488Z         }
2025-09-29T03:49:00.1614616Z          ^
2025-09-29T03:49:00.1615118Z src/core/GitUtils.cpp:438:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1615257Z     }
2025-09-29T03:49:00.1615395Z      ^
2025-09-29T03:49:00.1615893Z src/core/GitUtils.cpp:440:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1616058Z     // Check for binary content
2025-09-29T03:49:00.1616212Z                                ^
2025-09-29T03:49:00.1616711Z src/core/GitUtils.cpp:441:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1616856Z     file.seekg(0);
2025-09-29T03:49:00.1617005Z                   ^
2025-09-29T03:49:00.1617505Z src/core/GitUtils.cpp:442:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1617808Z     std::string content((std::istreambuf_iterator<char>(file)),
2025-09-29T03:49:00.1618166Z                                                                ^
2025-09-29T03:49:00.1618668Z src/core/GitUtils.cpp:443:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1618881Z                        std::istreambuf_iterator<char>());
2025-09-29T03:49:00.1619062Z                                                          ^
2025-09-29T03:49:00.1619565Z src/core/GitUtils.cpp:445:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1619734Z     for (char c : content) {
2025-09-29T03:49:00.1619878Z                             ^
2025-09-29T03:49:00.1620381Z src/core/GitUtils.cpp:446:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1620729Z         if (c == 0) {
2025-09-29T03:49:00.1620868Z                      ^
2025-09-29T03:49:00.1621371Z src/core/GitUtils.cpp:447:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1621522Z             return "binary";
2025-09-29T03:49:00.1621664Z                             ^
2025-09-29T03:49:00.1622165Z src/core/GitUtils.cpp:448:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1622296Z         }
2025-09-29T03:49:00.1622427Z          ^
2025-09-29T03:49:00.1622932Z src/core/GitUtils.cpp:449:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1623070Z     }
2025-09-29T03:49:00.1623199Z      ^
2025-09-29T03:49:00.1623694Z src/core/GitUtils.cpp:455:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1624021Z std::string GitUtils::colorizeGitDiff(const std::string& diff) {
2025-09-29T03:49:00.1624193Z                                                        ^
2025-09-29T03:49:00.1624698Z src/core/GitUtils.cpp:455:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1625021Z std::string GitUtils::colorizeGitDiff(const std::string& diff) {
2025-09-29T03:49:00.1625192Z                                                         ^
2025-09-29T03:49:00.1625687Z src/core/GitUtils.cpp:455:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1625998Z std::string GitUtils::colorizeGitDiff(const std::string& diff) {
2025-09-29T03:49:00.1626371Z                                                                 ^
2025-09-29T03:49:00.1626876Z src/core/GitUtils.cpp:456:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1627054Z     auto lines = split(diff, "\n");
2025-09-29T03:49:00.1627212Z                                    ^
2025-09-29T03:49:00.1627708Z src/core/GitUtils.cpp:457:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1628042Z     std::string result;
2025-09-29T03:49:00.1628194Z                        ^
2025-09-29T03:49:00.1628698Z src/core/GitUtils.cpp:459:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1628866Z     for (const auto& line : lines) {
2025-09-29T03:49:00.1629005Z                    ^
2025-09-29T03:49:00.1629511Z src/core/GitUtils.cpp:459:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1629681Z     for (const auto& line : lines) {
2025-09-29T03:49:00.1629825Z                     ^
2025-09-29T03:49:00.1630329Z src/core/GitUtils.cpp:459:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1630494Z     for (const auto& line : lines) {
2025-09-29T03:49:00.1630645Z                                     ^
2025-09-29T03:49:00.1631148Z src/core/GitUtils.cpp:460:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1631312Z         if (startsWith(line, "+")) {
2025-09-29T03:49:00.1631467Z                                     ^
2025-09-29T03:49:00.1631977Z src/core/GitUtils.cpp:461:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1632264Z             result += "\033[32m" + line + "\033[0m\n";  // Green for additions
2025-09-29T03:49:00.1632434Z                                                       ^
2025-09-29T03:49:00.1632937Z src/core/GitUtils.cpp:461:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1633224Z             result += "\033[32m" + line + "\033[0m\n";  // Green for additions
2025-09-29T03:49:00.1633415Z                                                                               ^
2025-09-29T03:49:00.1633914Z src/core/GitUtils.cpp:462:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1634109Z         } else if (startsWith(line, "-")) {
2025-09-29T03:49:00.1634269Z                                            ^
2025-09-29T03:49:00.1634966Z src/core/GitUtils.cpp:463:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1635245Z             result += "\033[31m" + line + "\033[0m\n";  // Red for deletions
2025-09-29T03:49:00.1635412Z                                                       ^
2025-09-29T03:49:00.1635910Z src/core/GitUtils.cpp:463:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1636178Z             result += "\033[31m" + line + "\033[0m\n";  // Red for deletions
2025-09-29T03:49:00.1636370Z                                                                             ^
2025-09-29T03:49:00.1636868Z src/core/GitUtils.cpp:464:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1637056Z         } else if (startsWith(line, "@@")) {
2025-09-29T03:49:00.1637217Z                                             ^
2025-09-29T03:49:00.1637713Z src/core/GitUtils.cpp:465:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1638177Z             result += "\033[36m" + line + "\033[0m\n";  // Cyan for hunk headers
2025-09-29T03:49:00.1638352Z                                                       ^
2025-09-29T03:49:00.1638848Z src/core/GitUtils.cpp:465:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1639130Z             result += "\033[36m" + line + "\033[0m\n";  // Cyan for hunk headers
2025-09-29T03:49:00.1639325Z                                                                                 ^
2025-09-29T03:49:00.1640097Z src/core/GitUtils.cpp:466:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1640238Z         } else {
2025-09-29T03:49:00.1640380Z                 ^
2025-09-29T03:49:00.1640879Z src/core/GitUtils.cpp:467:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1641043Z             result += line + "\n";
2025-09-29T03:49:00.1641198Z                                   ^
2025-09-29T03:49:00.1641702Z src/core/GitUtils.cpp:468:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1641833Z         }
2025-09-29T03:49:00.1641960Z          ^
2025-09-29T03:49:00.1642476Z src/core/GitUtils.cpp:469:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1642607Z     }
2025-09-29T03:49:00.1642736Z      ^
2025-09-29T03:49:00.1643266Z src/core/GitUtils.cpp:474:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1643558Z int GitUtils::countLinesAdded(const std::string& diff) {
2025-09-29T03:49:00.1643722Z                                                ^
2025-09-29T03:49:00.1644228Z src/core/GitUtils.cpp:474:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1644497Z int GitUtils::countLinesAdded(const std::string& diff) {
2025-09-29T03:49:00.1644662Z                                                 ^
2025-09-29T03:49:00.1645160Z src/core/GitUtils.cpp:474:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1645431Z int GitUtils::countLinesAdded(const std::string& diff) {
2025-09-29T03:49:00.1645599Z                                                         ^
2025-09-29T03:49:00.1646093Z src/core/GitUtils.cpp:475:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1646274Z     auto lines = split(diff, "\n");
2025-09-29T03:49:00.1646422Z                                    ^
2025-09-29T03:49:00.1646921Z src/core/GitUtils.cpp:476:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1647073Z     int count = 0;
2025-09-29T03:49:00.1647208Z                   ^
2025-09-29T03:49:00.1647700Z src/core/GitUtils.cpp:478:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1648038Z     for (const auto& line : lines) {
2025-09-29T03:49:00.1648186Z                    ^
2025-09-29T03:49:00.1648688Z src/core/GitUtils.cpp:478:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1649050Z     for (const auto& line : lines) {
2025-09-29T03:49:00.1649198Z                     ^
2025-09-29T03:49:00.1649692Z src/core/GitUtils.cpp:478:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1649862Z     for (const auto& line : lines) {
2025-09-29T03:49:00.1650018Z                                     ^
2025-09-29T03:49:00.1650519Z src/core/GitUtils.cpp:479:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1650782Z         if (startsWith(line, "+") && !startsWith(line, "+++")) {
2025-09-29T03:49:00.1650967Z                                                                 ^
2025-09-29T03:49:00.1651462Z src/core/GitUtils.cpp:480:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1651601Z             count++;
2025-09-29T03:49:00.1651736Z                     ^
2025-09-29T03:49:00.1652243Z src/core/GitUtils.cpp:481:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1652372Z         }
2025-09-29T03:49:00.1652502Z          ^
2025-09-29T03:49:00.1652998Z src/core/GitUtils.cpp:482:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1653128Z     }
2025-09-29T03:49:00.1653264Z      ^
2025-09-29T03:49:00.1653751Z src/core/GitUtils.cpp:487:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1654223Z int GitUtils::countLinesRemoved(const std::string& diff) {
2025-09-29T03:49:00.1654392Z                                                  ^
2025-09-29T03:49:00.1654880Z src/core/GitUtils.cpp:487:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1655168Z int GitUtils::countLinesRemoved(const std::string& diff) {
2025-09-29T03:49:00.1655330Z                                                   ^
2025-09-29T03:49:00.1655817Z src/core/GitUtils.cpp:487:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1656107Z int GitUtils::countLinesRemoved(const std::string& diff) {
2025-09-29T03:49:00.1656277Z                                                           ^
2025-09-29T03:49:00.1656767Z src/core/GitUtils.cpp:488:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1656941Z     auto lines = split(diff, "\n");
2025-09-29T03:49:00.1657085Z                                    ^
2025-09-29T03:49:00.1657575Z src/core/GitUtils.cpp:489:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1657716Z     int count = 0;
2025-09-29T03:49:00.1658014Z                   ^
2025-09-29T03:49:00.1658507Z src/core/GitUtils.cpp:491:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1658670Z     for (const auto& line : lines) {
2025-09-29T03:49:00.1658810Z                    ^
2025-09-29T03:49:00.1659298Z src/core/GitUtils.cpp:491:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1659467Z     for (const auto& line : lines) {
2025-09-29T03:49:00.1659607Z                     ^
2025-09-29T03:49:00.1660094Z src/core/GitUtils.cpp:491:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1660256Z     for (const auto& line : lines) {
2025-09-29T03:49:00.1660405Z                                     ^
2025-09-29T03:49:00.1660897Z src/core/GitUtils.cpp:492:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1661160Z         if (startsWith(line, "-") && !startsWith(line, "---")) {
2025-09-29T03:49:00.1661335Z                                                                 ^
2025-09-29T03:49:00.1661830Z src/core/GitUtils.cpp:493:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1661967Z             count++;
2025-09-29T03:49:00.1662101Z                     ^
2025-09-29T03:49:00.1662593Z src/core/GitUtils.cpp:494:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1662915Z         }
2025-09-29T03:49:00.1663042Z          ^
2025-09-29T03:49:00.1663536Z src/core/GitUtils.cpp:495:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1663670Z     }
2025-09-29T03:49:00.1663796Z      ^
2025-09-29T03:49:00.1664275Z src/core/GitUtils.cpp:500:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1664607Z std::string GitUtils::extractHunkHeader(const std::string& line) {
2025-09-29T03:49:00.1664777Z                                                          ^
2025-09-29T03:49:00.1665260Z src/core/GitUtils.cpp:500:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1665586Z std::string GitUtils::extractHunkHeader(const std::string& line) {
2025-09-29T03:49:00.1665749Z                                                           ^
2025-09-29T03:49:00.1666232Z src/core/GitUtils.cpp:500:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1666558Z std::string GitUtils::extractHunkHeader(const std::string& line) {
2025-09-29T03:49:00.1666734Z                                                                   ^
2025-09-29T03:49:00.1667215Z src/core/GitUtils.cpp:501:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1667380Z     if (startsWith(line, "@@")) {
2025-09-29T03:49:00.1667531Z                                  ^
2025-09-29T03:49:00.1668351Z src/core/GitUtils.cpp:502:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1668532Z         size_t end = line.find("@@", 2);
2025-09-29T03:49:00.1668689Z                                         ^
2025-09-29T03:49:00.1669170Z src/core/GitUtils.cpp:503:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1669341Z         if (end != std::string::npos) {
2025-09-29T03:49:00.1669496Z                                        ^
2025-09-29T03:49:00.1669987Z src/core/GitUtils.cpp:504:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1670164Z             return line.substr(0, end + 2);
2025-09-29T03:49:00.1670322Z                                            ^
2025-09-29T03:49:00.1670807Z src/core/GitUtils.cpp:505:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1670936Z         }
2025-09-29T03:49:00.1671062Z          ^
2025-09-29T03:49:00.1671560Z src/core/GitUtils.cpp:506:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1671686Z     }
2025-09-29T03:49:00.1671809Z      ^
2025-09-29T03:49:00.1672293Z src/core/GitUtils.cpp:511:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1672779Z std::string GitUtils::formatProgress(int current, int total, const std::string& operation) {
2025-09-29T03:49:00.1672949Z                                                             ^
2025-09-29T03:49:00.1673453Z src/core/GitUtils.cpp:511:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1673932Z std::string GitUtils::formatProgress(int current, int total, const std::string& operation) {
2025-09-29T03:49:00.1674115Z                                                                               ^
2025-09-29T03:49:00.1674598Z src/core/GitUtils.cpp:511:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1675077Z std::string GitUtils::formatProgress(int current, int total, const std::string& operation) {
2025-09-29T03:49:00.1675257Z                                                                                ^
2025-09-29T03:49:00.1675736Z src/core/GitUtils.cpp:511:93: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1676215Z std::string GitUtils::formatProgress(int current, int total, const std::string& operation) {
2025-09-29T03:49:00.1676406Z                                                                                             ^
2025-09-29T03:49:00.1677069Z src/core/GitUtils.cpp:512:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1677219Z     if (total <= 0) {
2025-09-29T03:49:00.1677355Z                      ^
2025-09-29T03:49:00.1677833Z src/core/GitUtils.cpp:513:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1678297Z         return operation.empty() ? "Working..." : operation + "...";
2025-09-29T03:49:00.1678483Z                                                                     ^
2025-09-29T03:49:00.1678965Z src/core/GitUtils.cpp:514:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1679097Z     }
2025-09-29T03:49:00.1679224Z      ^
2025-09-29T03:49:00.1679702Z src/core/GitUtils.cpp:516:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1679894Z     int percentage = (current * 100) / total;
2025-09-29T03:49:00.1680065Z                                              ^
2025-09-29T03:49:00.1680544Z src/core/GitUtils.cpp:517:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1680819Z     std::string result = std::to_string(percentage) + "% (" + 
2025-09-29T03:49:00.1680992Z                                                              ^
2025-09-29T03:49:00.1681470Z src/core/GitUtils.cpp:518:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1681937Z                         std::to_string(current) + "/" + std::to_string(total) + ")";
2025-09-29T03:49:00.1682132Z                                                                                ^
2025-09-29T03:49:00.1682613Z src/core/GitUtils.cpp:518:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1682885Z                         std::to_string(current) + "/" + std::to_string(total) + ")";
2025-09-29T03:49:00.1683080Z                                                                                     ^
2025-09-29T03:49:00.1683588Z src/core/GitUtils.cpp:520:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1683754Z     if (!operation.empty()) {
2025-09-29T03:49:00.1683900Z                              ^
2025-09-29T03:49:00.1684372Z src/core/GitUtils.cpp:521:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1684545Z         result = operation + ": " + result;
2025-09-29T03:49:00.1684695Z                                            ^
2025-09-29T03:49:00.1685192Z src/core/GitUtils.cpp:522:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1685339Z     }
2025-09-29T03:49:00.1685467Z      ^
2025-09-29T03:49:00.1685957Z src/core/GitUtils.cpp:527:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1686289Z std::string GitUtils::formatTransferSpeed(size_t bytesPerSecond) {
2025-09-29T03:49:00.1686462Z                                                                   ^
2025-09-29T03:49:00.1686955Z src/core/GitUtils.cpp:531:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1687371Z std::string GitUtils::formatDuration(const std::chrono::milliseconds& duration) {
2025-09-29T03:49:00.1687496Z            ^
2025-09-29T03:49:00.1688135Z src/core/GitUtils.cpp:531:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1688557Z std::string GitUtils::formatDuration(const std::chrono::milliseconds& duration) {
2025-09-29T03:49:00.1688744Z                                                                     ^
2025-09-29T03:49:00.1689222Z src/core/GitUtils.cpp:531:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1689642Z std::string GitUtils::formatDuration(const std::chrono::milliseconds& duration) {
2025-09-29T03:49:00.1689819Z                                                                      ^
2025-09-29T03:49:00.1690501Z src/core/GitUtils.cpp:531:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1690926Z std::string GitUtils::formatDuration(const std::chrono::milliseconds& duration) {
2025-09-29T03:49:00.1691108Z                                                                                  ^
2025-09-29T03:49:00.1691590Z src/core/GitUtils.cpp:532:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1692001Z     auto seconds = std::chrono::duration_cast<std::chrono::seconds>(duration).count();
2025-09-29T03:49:00.1692137Z                   ^
2025-09-29T03:49:00.1692615Z src/core/GitUtils.cpp:532:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1693015Z     auto seconds = std::chrono::duration_cast<std::chrono::seconds>(duration).count();
2025-09-29T03:49:00.1693209Z                                                                                       ^
2025-09-29T03:49:00.1693681Z src/core/GitUtils.cpp:533:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1693861Z     auto minutes = seconds / 60;
2025-09-29T03:49:00.1694004Z                                 ^
2025-09-29T03:49:00.1694475Z src/core/GitUtils.cpp:534:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1694637Z     auto hours = minutes / 60;
2025-09-29T03:49:00.1694772Z                               ^
2025-09-29T03:49:00.1695243Z src/core/GitUtils.cpp:536:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1695565Z     if (hours > 0) {
2025-09-29T03:49:00.1695708Z                     ^
2025-09-29T03:49:00.1696180Z src/core/GitUtils.cpp:537:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1696369Z         return std::to_string(hours) + "h " + 
2025-09-29T03:49:00.1696527Z                                              ^
2025-09-29T03:49:00.1697000Z src/core/GitUtils.cpp:538:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1697197Z                std::to_string(minutes % 60) + "m " + 
2025-09-29T03:49:00.1697357Z                                                     ^
2025-09-29T03:49:00.1697829Z src/core/GitUtils.cpp:539:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1698194Z                std::to_string(seconds % 60) + "s";
2025-09-29T03:49:00.1698356Z                                                   ^
2025-09-29T03:49:00.1698836Z src/core/GitUtils.cpp:540:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1698990Z     } else if (minutes > 0) {
2025-09-29T03:49:00.1699127Z                              ^
2025-09-29T03:49:00.1699606Z src/core/GitUtils.cpp:541:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1699796Z         return std::to_string(minutes) + "m " + 
2025-09-29T03:49:00.1699941Z                                                ^
2025-09-29T03:49:00.1700423Z src/core/GitUtils.cpp:542:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1700600Z                std::to_string(seconds % 60) + "s";
2025-09-29T03:49:00.1700751Z                                                   ^
2025-09-29T03:49:00.1701228Z src/core/GitUtils.cpp:543:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1701356Z     } else {
2025-09-29T03:49:00.1701482Z             ^
2025-09-29T03:49:00.1701957Z src/core/GitUtils.cpp:544:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1702148Z         return std::to_string(seconds) + "s";
2025-09-29T03:49:00.1702296Z                                              ^
2025-09-29T03:49:00.1702826Z src/core/GitUtils.cpp:548:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1702960Z }
2025-09-29T03:49:00.1703083Z  ^
2025-09-29T03:49:00.1703750Z src/core/SystemCommand.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1704103Z #include "SystemCommand.h"
2025-09-29T03:49:00.1704224Z ^
2025-09-29T03:49:00.1704736Z src/core/SystemCommand.cpp:10:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1704886Z #include <windows.h>
2025-09-29T03:49:00.1705007Z ^
2025-09-29T03:49:00.1705514Z src/core/SystemCommand.cpp:13:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1705655Z #include <unistd.h>
2025-09-29T03:49:00.1705778Z ^
2025-09-29T03:49:00.1706285Z src/core/SystemCommand.cpp:24:8: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1706415Z public:
2025-09-29T03:49:00.1706545Z        ^
2025-09-29T03:49:00.1707068Z src/core/SystemCommand.cpp:25:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1707330Z     std::map<std::string, std::string> environmentVariables;
2025-09-29T03:49:00.1707511Z                                                             ^
2025-09-29T03:49:00.1708191Z src/core/SystemCommand.cpp:26:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1708384Z     int timeoutMs = 30000; // 30 seconds default
2025-09-29T03:49:00.1708536Z                                                 ^
2025-09-29T03:49:00.1709053Z src/core/SystemCommand.cpp:27:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1709208Z     bool cancelled = false;
2025-09-29T03:49:00.1709530Z                            ^
2025-09-29T03:49:00.1710058Z src/core/SystemCommand.cpp:29:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1710192Z #ifdef _WIN32
2025-09-29T03:49:00.1710318Z              ^
2025-09-29T03:49:00.1710831Z src/core/SystemCommand.cpp:30:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1711018Z     HANDLE process = INVALID_HANDLE_VALUE;
2025-09-29T03:49:00.1711174Z                                           ^
2025-09-29T03:49:00.1711678Z src/core/SystemCommand.cpp:32:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1711809Z #else
2025-09-29T03:49:00.1711934Z      ^
2025-09-29T03:49:00.1712434Z src/core/SystemCommand.cpp:34:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1712565Z #endif
2025-09-29T03:49:00.1712687Z       ^
2025-09-29T03:49:00.1713203Z src/core/SystemCommand.cpp:36:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1713488Z     std::string buildCommandLine(const std::string& command, 
2025-09-29T03:49:00.1713641Z                                                   ^
2025-09-29T03:49:00.1714147Z src/core/SystemCommand.cpp:36:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1714416Z     std::string buildCommandLine(const std::string& command, 
2025-09-29T03:49:00.1714575Z                                                    ^
2025-09-29T03:49:00.1715092Z src/core/SystemCommand.cpp:36:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1715351Z     std::string buildCommandLine(const std::string& command, 
2025-09-29T03:49:00.1715518Z                                                             ^
2025-09-29T03:49:00.1716026Z src/core/SystemCommand.cpp:37:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1716237Z                                 const std::vector<std::string>& args) {
2025-09-29T03:49:00.1716419Z                                                               ^
2025-09-29T03:49:00.1716928Z src/core/SystemCommand.cpp:37:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1717135Z                                 const std::vector<std::string>& args) {
2025-09-29T03:49:00.1717309Z                                                                ^
2025-09-29T03:49:00.1718163Z src/core/SystemCommand.cpp:37:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1718370Z                                 const std::vector<std::string>& args) {
2025-09-29T03:49:00.1718551Z                                                                        ^
2025-09-29T03:49:00.1719063Z src/core/SystemCommand.cpp:38:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1719237Z         std::string cmdLine = command;
2025-09-29T03:49:00.1719386Z                                       ^
2025-09-29T03:49:00.1719901Z src/core/SystemCommand.cpp:39:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1720063Z         for (const auto& arg : args) {
2025-09-29T03:49:00.1720198Z                        ^
2025-09-29T03:49:00.1720714Z src/core/SystemCommand.cpp:39:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1720874Z         for (const auto& arg : args) {
2025-09-29T03:49:00.1721016Z                         ^
2025-09-29T03:49:00.1721537Z src/core/SystemCommand.cpp:39:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1721696Z         for (const auto& arg : args) {
2025-09-29T03:49:00.1721839Z                                       ^
2025-09-29T03:49:00.1722356Z src/core/SystemCommand.cpp:40:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1722501Z             cmdLine += " ";
2025-09-29T03:49:00.1722639Z                            ^
2025-09-29T03:49:00.1723350Z src/core/SystemCommand.cpp:41:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1723541Z             // Quote arguments that contain spaces
2025-09-29T03:49:00.1723692Z                                                   ^
2025-09-29T03:49:00.1724199Z src/core/SystemCommand.cpp:42:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1724398Z             if (arg.find(' ') != std::string::npos) {
2025-09-29T03:49:00.1724565Z                                                      ^
2025-09-29T03:49:00.1725075Z src/core/SystemCommand.cpp:43:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1725247Z                 cmdLine += "\"" + arg + "\"";
2025-09-29T03:49:00.1725397Z                                              ^
2025-09-29T03:49:00.1725907Z src/core/SystemCommand.cpp:44:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1726044Z             } else {
2025-09-29T03:49:00.1726184Z                     ^
2025-09-29T03:49:00.1726690Z src/core/SystemCommand.cpp:45:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1726838Z                 cmdLine += arg;
2025-09-29T03:49:00.1726983Z                                ^
2025-09-29T03:49:00.1727493Z src/core/SystemCommand.cpp:46:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1727624Z             }
2025-09-29T03:49:00.1727756Z              ^
2025-09-29T03:49:00.1728423Z src/core/SystemCommand.cpp:47:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1728548Z         }
2025-09-29T03:49:00.1728675Z          ^
2025-09-29T03:49:00.1729185Z src/core/SystemCommand.cpp:48:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1729326Z         return cmdLine;
2025-09-29T03:49:00.1729459Z                        ^
2025-09-29T03:49:00.1729985Z src/core/SystemCommand.cpp:49:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1730107Z     }
2025-09-29T03:49:00.1730229Z      ^
2025-09-29T03:49:00.1730748Z src/core/SystemCommand.cpp:51:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1731057Z     std::vector<std::string> buildArgVector(const std::string& command,
2025-09-29T03:49:00.1731195Z                             ^
2025-09-29T03:49:00.1731893Z src/core/SystemCommand.cpp:51:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1732196Z     std::vector<std::string> buildArgVector(const std::string& command,
2025-09-29T03:49:00.1732366Z                                                              ^
2025-09-29T03:49:00.1732883Z src/core/SystemCommand.cpp:51:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1733184Z     std::vector<std::string> buildArgVector(const std::string& command,
2025-09-29T03:49:00.1733368Z                                                               ^
2025-09-29T03:49:00.1733892Z src/core/SystemCommand.cpp:51:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1734195Z     std::vector<std::string> buildArgVector(const std::string& command,
2025-09-29T03:49:00.1734370Z                                                                        ^
2025-09-29T03:49:00.1734883Z src/core/SystemCommand.cpp:52:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1735116Z                                            const std::vector<std::string>& args) {
2025-09-29T03:49:00.1735292Z                                                                          ^
2025-09-29T03:49:00.1735807Z src/core/SystemCommand.cpp:52:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1736029Z                                            const std::vector<std::string>& args) {
2025-09-29T03:49:00.1736415Z                                                                           ^
2025-09-29T03:49:00.1736932Z src/core/SystemCommand.cpp:52:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1737152Z                                            const std::vector<std::string>& args) {
2025-09-29T03:49:00.1737335Z                                                                                   ^
2025-09-29T03:49:00.1738003Z src/core/SystemCommand.cpp:53:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1738196Z         std::vector<std::string> argv;
2025-09-29T03:49:00.1738341Z                                       ^
2025-09-29T03:49:00.1738855Z src/core/SystemCommand.cpp:54:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1739026Z         argv.push_back(command);
2025-09-29T03:49:00.1739165Z                                 ^
2025-09-29T03:49:00.1739689Z src/core/SystemCommand.cpp:55:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1739932Z         argv.insert(argv.end(), args.begin(), args.end());
2025-09-29T03:49:00.1740097Z                                                           ^
2025-09-29T03:49:00.1740613Z src/core/SystemCommand.cpp:56:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1740754Z         return argv;
2025-09-29T03:49:00.1740891Z                     ^
2025-09-29T03:49:00.1741413Z src/core/SystemCommand.cpp:62:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1741587Z SystemCommand::~SystemCommand() {
2025-09-29T03:49:00.1741735Z                                  ^
2025-09-29T03:49:00.1742247Z src/core/SystemCommand.cpp:63:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1742381Z     cancel();
2025-09-29T03:49:00.1742518Z              ^
2025-09-29T03:49:00.1743042Z src/core/SystemCommand.cpp:66:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1743432Z SystemCommandResult SystemCommand::execute(const std::string& command,
2025-09-29T03:49:00.1743563Z                    ^
2025-09-29T03:49:00.1744085Z src/core/SystemCommand.cpp:66:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1744470Z SystemCommandResult SystemCommand::execute(const std::string& command,
2025-09-29T03:49:00.1744640Z                                                             ^
2025-09-29T03:49:00.1745396Z src/core/SystemCommand.cpp:66:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1745778Z SystemCommandResult SystemCommand::execute(const std::string& command,
2025-09-29T03:49:00.1745945Z                                                              ^
2025-09-29T03:49:00.1746469Z src/core/SystemCommand.cpp:66:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1746850Z SystemCommandResult SystemCommand::execute(const std::string& command,
2025-09-29T03:49:00.1747021Z                                                                       ^
2025-09-29T03:49:00.1747543Z src/core/SystemCommand.cpp:67:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1747762Z                                           const std::vector<std::string>& args,
2025-09-29T03:49:00.1748100Z                                                                         ^
2025-09-29T03:49:00.1748641Z src/core/SystemCommand.cpp:67:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1748855Z                                           const std::vector<std::string>& args,
2025-09-29T03:49:00.1749031Z                                                                          ^
2025-09-29T03:49:00.1749552Z src/core/SystemCommand.cpp:67:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1750030Z                                           const std::vector<std::string>& args,
2025-09-29T03:49:00.1750271Z                                                                                ^
2025-09-29T03:49:00.1750792Z src/core/SystemCommand.cpp:68:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1751019Z                                           const std::string& workingDirectory) {
2025-09-29T03:49:00.1751187Z                                                            ^
2025-09-29T03:49:00.1751713Z src/core/SystemCommand.cpp:68:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1751938Z                                           const std::string& workingDirectory) {
2025-09-29T03:49:00.1752100Z                                                             ^
2025-09-29T03:49:00.1752618Z src/core/SystemCommand.cpp:68:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1752840Z                                           const std::string& workingDirectory) {
2025-09-29T03:49:00.1753028Z                                                                                 ^
2025-09-29T03:49:00.1753547Z src/core/SystemCommand.cpp:69:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1753718Z     pImpl->cancelled = false;
2025-09-29T03:49:00.1753861Z                              ^
2025-09-29T03:49:00.1754376Z src/core/SystemCommand.cpp:71:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1754524Z #ifdef _WIN32
2025-09-29T03:49:00.1754652Z              ^
2025-09-29T03:49:00.1755169Z src/core/SystemCommand.cpp:73:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1755296Z #else
2025-09-29T03:49:00.1755427Z      ^
2025-09-29T03:49:00.1755942Z src/core/SystemCommand.cpp:79:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1756372Z SystemCommandResult SystemCommand::executeWindows(const std::string& command,
2025-09-29T03:49:00.1756518Z                    ^
2025-09-29T03:49:00.1757035Z src/core/SystemCommand.cpp:79:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1757461Z SystemCommandResult SystemCommand::executeWindows(const std::string& command,
2025-09-29T03:49:00.1757641Z                                                                    ^
2025-09-29T03:49:00.1758312Z src/core/SystemCommand.cpp:79:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1758923Z SystemCommandResult SystemCommand::executeWindows(const std::string& command,
2025-09-29T03:49:00.1759103Z                                                                     ^
2025-09-29T03:49:00.1759621Z src/core/SystemCommand.cpp:79:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1760044Z SystemCommandResult SystemCommand::executeWindows(const std::string& command,
2025-09-29T03:49:00.1760229Z                                                                              ^
2025-09-29T03:49:00.1760752Z src/core/SystemCommand.cpp:80:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1760974Z                                                   const std::vector<std::string>& args,
2025-09-29T03:49:00.1761155Z                                                                                 ^
2025-09-29T03:49:00.1761681Z src/core/SystemCommand.cpp:80:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1761905Z                                                   const std::vector<std::string>& args,
2025-09-29T03:49:00.1762088Z                                                                                  ^
2025-09-29T03:49:00.1762610Z src/core/SystemCommand.cpp:80:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1762822Z                                                   const std::vector<std::string>& args,
2025-09-29T03:49:00.1763177Z                                                                                        ^
2025-09-29T03:49:00.1763714Z src/core/SystemCommand.cpp:81:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1763937Z                                                   const std::string& workingDirectory) {
2025-09-29T03:49:00.1764105Z                                                                    ^
2025-09-29T03:49:00.1764630Z src/core/SystemCommand.cpp:81:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1764853Z                                                   const std::string& workingDirectory) {
2025-09-29T03:49:00.1765023Z                                                                     ^
2025-09-29T03:49:00.1765540Z src/core/SystemCommand.cpp:81:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1765761Z                                                   const std::string& workingDirectory) {
2025-09-29T03:49:00.1765951Z                                                                                         ^
2025-09-29T03:49:00.1766472Z src/core/SystemCommand.cpp:82:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1766631Z     SECURITY_ATTRIBUTES sa;
2025-09-29T03:49:00.1766769Z                            ^
2025-09-29T03:49:00.1767290Z src/core/SystemCommand.cpp:83:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1767489Z     sa.nLength = sizeof(SECURITY_ATTRIBUTES);
2025-09-29T03:49:00.1767642Z                                              ^
2025-09-29T03:49:00.1768309Z src/core/SystemCommand.cpp:84:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1768506Z     sa.lpSecurityDescriptor = NULL;
2025-09-29T03:49:00.1768651Z                                    ^
2025-09-29T03:49:00.1769166Z src/core/SystemCommand.cpp:85:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1769345Z     sa.bInheritHandle = TRUE;
2025-09-29T03:49:00.1769485Z                              ^
2025-09-29T03:49:00.1769999Z src/core/SystemCommand.cpp:87:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1770183Z     HANDLE hStdoutRead, hStdoutWrite;
2025-09-29T03:49:00.1770329Z                                      ^
2025-09-29T03:49:00.1770841Z src/core/SystemCommand.cpp:88:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1771215Z     HANDLE hStderrRead, hStderrWrite;
2025-09-29T03:49:00.1771368Z                                      ^
2025-09-29T03:49:00.1771883Z src/core/SystemCommand.cpp:90:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1772063Z     // Create pipes for stdout and stderr
2025-09-29T03:49:00.1772219Z                                          ^
2025-09-29T03:49:00.1772740Z src/core/SystemCommand.cpp:91:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1772994Z     if (!CreatePipe(&hStdoutRead, &hStdoutWrite, &sa, 0) ||
2025-09-29T03:49:00.1773167Z                                                            ^
2025-09-29T03:49:00.1773680Z src/core/SystemCommand.cpp:92:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1773916Z         !CreatePipe(&hStderrRead, &hStderrWrite, &sa, 0)) {
2025-09-29T03:49:00.1774092Z                                                            ^
2025-09-29T03:49:00.1774606Z src/core/SystemCommand.cpp:93:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1774846Z         return {-1, "", "Failed to create pipes", false};
2025-09-29T03:49:00.1775013Z                                                          ^
2025-09-29T03:49:00.1775534Z src/core/SystemCommand.cpp:94:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1775659Z     }
2025-09-29T03:49:00.1775782Z      ^
2025-09-29T03:49:00.1776482Z src/core/SystemCommand.cpp:96:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1776694Z     // Make sure the read handles are not inherited
2025-09-29T03:49:00.1776857Z                                                    ^
2025-09-29T03:49:00.1777376Z src/core/SystemCommand.cpp:97:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1777689Z     SetHandleInformation(hStdoutRead, HANDLE_FLAG_INHERIT, 0);
2025-09-29T03:49:00.1778049Z                                                               ^
2025-09-29T03:49:00.1778579Z src/core/SystemCommand.cpp:98:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1778878Z     SetHandleInformation(hStderrRead, HANDLE_FLAG_INHERIT, 0);
2025-09-29T03:49:00.1779043Z                                                               ^
2025-09-29T03:49:00.1779586Z src/core/SystemCommand.cpp:100:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1779740Z     STARTUPINFO si;
2025-09-29T03:49:00.1779872Z                    ^
2025-09-29T03:49:00.1780399Z src/core/SystemCommand.cpp:101:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1780568Z     PROCESS_INFORMATION pi;
2025-09-29T03:49:00.1780706Z                            ^
2025-09-29T03:49:00.1781228Z src/core/SystemCommand.cpp:102:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1781412Z     ZeroMemory(&si, sizeof(si));
2025-09-29T03:49:00.1781552Z                                 ^
2025-09-29T03:49:00.1782078Z src/core/SystemCommand.cpp:103:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1782229Z     si.cb = sizeof(si);
2025-09-29T03:49:00.1782366Z                        ^
2025-09-29T03:49:00.1782891Z src/core/SystemCommand.cpp:104:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1783061Z     si.hStdError = hStderrWrite;
2025-09-29T03:49:00.1783208Z                                 ^
2025-09-29T03:49:00.1783734Z src/core/SystemCommand.cpp:105:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1783902Z     si.hStdOutput = hStdoutWrite;
2025-09-29T03:49:00.1784050Z                                  ^
2025-09-29T03:49:00.1784572Z src/core/SystemCommand.cpp:106:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1784985Z     si.hStdInput = GetStdHandle(STD_INPUT_HANDLE);
2025-09-29T03:49:00.1785147Z                                                   ^
2025-09-29T03:49:00.1785674Z src/core/SystemCommand.cpp:107:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1785851Z     si.dwFlags |= STARTF_USESTDHANDLES;
2025-09-29T03:49:00.1786001Z                                        ^
2025-09-29T03:49:00.1786533Z src/core/SystemCommand.cpp:109:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1786843Z     std::string cmdLine = pImpl->buildCommandLine(command, args);
2025-09-29T03:49:00.1787018Z                                                                  ^
2025-09-29T03:49:00.1787548Z src/core/SystemCommand.cpp:111:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1787707Z     // Set environment variables
2025-09-29T03:49:00.1787993Z                                 ^
2025-09-29T03:49:00.1788551Z src/core/SystemCommand.cpp:112:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1788707Z     std::string envBlock;
2025-09-29T03:49:00.1788843Z                          ^
2025-09-29T03:49:00.1789377Z src/core/SystemCommand.cpp:113:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1789591Z     if (!pImpl->environmentVariables.empty()) {
2025-09-29T03:49:00.1789744Z                                                ^
2025-09-29T03:49:00.1790462Z src/core/SystemCommand.cpp:114:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1790772Z         for (const auto& [key, value] : pImpl->environmentVariables) {
2025-09-29T03:49:00.1790909Z                        ^
2025-09-29T03:49:00.1791435Z src/core/SystemCommand.cpp:114:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1791727Z         for (const auto& [key, value] : pImpl->environmentVariables) {
2025-09-29T03:49:00.1791873Z                         ^
2025-09-29T03:49:00.1792396Z src/core/SystemCommand.cpp:114:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1792683Z         for (const auto& [key, value] : pImpl->environmentVariables) {
2025-09-29T03:49:00.1792859Z                                                                       ^
2025-09-29T03:49:00.1793384Z src/core/SystemCommand.cpp:115:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1793576Z             envBlock += key + "=" + value + '\0';
2025-09-29T03:49:00.1793730Z                                                  ^
2025-09-29T03:49:00.1794254Z src/core/SystemCommand.cpp:116:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1794380Z         }
2025-09-29T03:49:00.1794512Z          ^
2025-09-29T03:49:00.1795036Z src/core/SystemCommand.cpp:117:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1795188Z         envBlock += '\0';
2025-09-29T03:49:00.1795329Z                          ^
2025-09-29T03:49:00.1795855Z src/core/SystemCommand.cpp:118:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1795979Z     }
2025-09-29T03:49:00.1796108Z      ^
2025-09-29T03:49:00.1796635Z src/core/SystemCommand.cpp:120:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1796800Z     BOOL success = CreateProcess(
2025-09-29T03:49:00.1796943Z                                  ^
2025-09-29T03:49:00.1797484Z src/core/SystemCommand.cpp:121:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1797612Z         NULL,
2025-09-29T03:49:00.1797741Z              ^
2025-09-29T03:49:00.1798429Z src/core/SystemCommand.cpp:122:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1798551Z         const_cast<char*>(cmdLine.c_str()),
2025-09-29T03:49:00.1798868Z                        ^
2025-09-29T03:49:00.1799196Z src/core/SystemCommand.cpp:122:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1799304Z         const_cast<char*>(cmdLine.c_str()),
2025-09-29T03:49:00.1799399Z                                            ^
2025-09-29T03:49:00.1799699Z src/core/SystemCommand.cpp:123:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1799785Z         NULL,
2025-09-29T03:49:00.1799861Z              ^
2025-09-29T03:49:00.1800163Z src/core/SystemCommand.cpp:124:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1800259Z         NULL,
2025-09-29T03:49:00.1800338Z              ^
2025-09-29T03:49:00.1800641Z src/core/SystemCommand.cpp:125:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1800720Z         TRUE,
2025-09-29T03:49:00.1800794Z              ^
2025-09-29T03:49:00.1801091Z src/core/SystemCommand.cpp:126:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1801171Z         0,
2025-09-29T03:49:00.1801252Z           ^
2025-09-29T03:49:00.1801548Z src/core/SystemCommand.cpp:127:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1801727Z         envBlock.empty() ? NULL : const_cast<char*>(envBlock.c_str()),
2025-09-29T03:49:00.1801831Z                                                  ^
2025-09-29T03:49:00.1802133Z src/core/SystemCommand.cpp:127:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1802440Z         envBlock.empty() ? NULL : const_cast<char*>(envBlock.c_str()),
2025-09-29T03:49:00.1802605Z                                                                       ^
2025-09-29T03:49:00.1802909Z src/core/SystemCommand.cpp:128:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1803096Z         workingDirectory.empty() ? NULL : workingDirectory.c_str(),
2025-09-29T03:49:00.1803215Z                                                                    ^
2025-09-29T03:49:00.1803519Z src/core/SystemCommand.cpp:129:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1803592Z         &si,
2025-09-29T03:49:00.1803664Z             ^
2025-09-29T03:49:00.1803967Z src/core/SystemCommand.cpp:130:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1804043Z         &pi
2025-09-29T03:49:00.1804116Z            ^
2025-09-29T03:49:00.1804439Z src/core/SystemCommand.cpp:131:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1804512Z     );
2025-09-29T03:49:00.1804586Z       ^
2025-09-29T03:49:00.1804886Z src/core/SystemCommand.cpp:133:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1804985Z     CloseHandle(hStdoutWrite);
2025-09-29T03:49:00.1805068Z                               ^
2025-09-29T03:49:00.1805374Z src/core/SystemCommand.cpp:134:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1805482Z     CloseHandle(hStderrWrite);
2025-09-29T03:49:00.1805562Z                               ^
2025-09-29T03:49:00.1805860Z src/core/SystemCommand.cpp:136:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1805946Z     if (!success) {
2025-09-29T03:49:00.1806022Z                    ^
2025-09-29T03:49:00.1806319Z src/core/SystemCommand.cpp:137:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1806424Z         CloseHandle(hStdoutRead);
2025-09-29T03:49:00.1806509Z                                  ^
2025-09-29T03:49:00.1806808Z src/core/SystemCommand.cpp:138:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1806904Z         CloseHandle(hStderrRead);
2025-09-29T03:49:00.1806992Z                                  ^
2025-09-29T03:49:00.1807289Z src/core/SystemCommand.cpp:139:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1807533Z         return {-1, "", "Failed to create process", false};
2025-09-29T03:49:00.1807642Z                                                            ^
2025-09-29T03:49:00.1808106Z src/core/SystemCommand.cpp:140:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1808182Z     }
2025-09-29T03:49:00.1808259Z      ^
2025-09-29T03:49:00.1808556Z src/core/SystemCommand.cpp:142:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1808662Z     pImpl->process = pi.hProcess;
2025-09-29T03:49:00.1808745Z                                  ^
2025-09-29T03:49:00.1809051Z src/core/SystemCommand.cpp:143:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1809146Z     pImpl->thread = pi.hThread;
2025-09-29T03:49:00.1809229Z                                ^
2025-09-29T03:49:00.1809534Z src/core/SystemCommand.cpp:145:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1809623Z     // Read output
2025-09-29T03:49:00.1809698Z                   ^
2025-09-29T03:49:00.1810000Z src/core/SystemCommand.cpp:146:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1810099Z     std::string output, error;
2025-09-29T03:49:00.1810180Z                               ^
2025-09-29T03:49:00.1810476Z src/core/SystemCommand.cpp:147:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1810568Z     DWORD bytesRead;
2025-09-29T03:49:00.1810784Z                     ^
2025-09-29T03:49:00.1811088Z src/core/SystemCommand.cpp:148:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1811181Z     char buffer[4096];
2025-09-29T03:49:00.1822575Z                       ^
2025-09-29T03:49:00.1823113Z src/core/SystemCommand.cpp:150:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1823358Z     // Wait for process completion with timeout
2025-09-29T03:49:00.1823534Z                                                ^
2025-09-29T03:49:00.1824093Z src/core/SystemCommand.cpp:151:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1824416Z     DWORD waitResult = WaitForSingleObject(pi.hProcess, pImpl->timeoutMs);
2025-09-29T03:49:00.1824533Z                                                                           ^
2025-09-29T03:49:00.1824861Z src/core/SystemCommand.cpp:153:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1825026Z     if (waitResult == WAIT_TIMEOUT || pImpl->cancelled) {
2025-09-29T03:49:00.1825129Z                                                          ^
2025-09-29T03:49:00.1825442Z src/core/SystemCommand.cpp:154:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1825578Z         TerminateProcess(pi.hProcess, -1);
2025-09-29T03:49:00.1825671Z                                           ^
2025-09-29T03:49:00.1825990Z src/core/SystemCommand.cpp:155:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1826101Z         CloseHandle(pi.hProcess);
2025-09-29T03:49:00.1826194Z                                  ^
2025-09-29T03:49:00.1826504Z src/core/SystemCommand.cpp:156:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1826606Z         CloseHandle(pi.hThread);
2025-09-29T03:49:00.1826697Z                                 ^
2025-09-29T03:49:00.1827001Z src/core/SystemCommand.cpp:157:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1827097Z         CloseHandle(hStdoutRead);
2025-09-29T03:49:00.1827186Z                                  ^
2025-09-29T03:49:00.1827481Z src/core/SystemCommand.cpp:158:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1827576Z         CloseHandle(hStderrRead);
2025-09-29T03:49:00.1827659Z                                  ^
2025-09-29T03:49:00.1828569Z src/core/SystemCommand.cpp:159:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1828754Z         return {-1, "", "Process timed out or was cancelled", false};
2025-09-29T03:49:00.1828863Z                                                                      ^
2025-09-29T03:49:00.1829196Z src/core/SystemCommand.cpp:160:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1829275Z     }
2025-09-29T03:49:00.1829350Z      ^
2025-09-29T03:49:00.1829674Z src/core/SystemCommand.cpp:162:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1829756Z     // Read stdout
2025-09-29T03:49:00.1829835Z                   ^
2025-09-29T03:49:00.1830134Z src/core/SystemCommand.cpp:163:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1830434Z     while (ReadFile(hStdoutRead, buffer, sizeof(buffer) - 1, &bytesRead, NULL) && bytesRead > 0) {
2025-09-29T03:49:00.1830558Z                                                                                  ^
2025-09-29T03:49:00.1830860Z src/core/SystemCommand.cpp:163:99: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1831145Z     while (ReadFile(hStdoutRead, buffer, sizeof(buffer) - 1, &bytesRead, NULL) && bytesRead > 0) {
2025-09-29T03:49:00.1831259Z                                                                                                   ^
2025-09-29T03:49:00.1831705Z src/core/SystemCommand.cpp:164:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1831821Z         buffer[bytesRead] = '\0';
2025-09-29T03:49:00.1831908Z                                  ^
2025-09-29T03:49:00.1832203Z src/core/SystemCommand.cpp:165:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1832302Z         output += buffer;
2025-09-29T03:49:00.1832386Z                          ^
2025-09-29T03:49:00.1832691Z src/core/SystemCommand.cpp:166:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1832772Z     }
2025-09-29T03:49:00.1832845Z      ^
2025-09-29T03:49:00.1833140Z src/core/SystemCommand.cpp:168:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1833222Z     // Read stderr
2025-09-29T03:49:00.1833305Z                   ^
2025-09-29T03:49:00.1833613Z src/core/SystemCommand.cpp:169:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1833898Z     while (ReadFile(hStderrRead, buffer, sizeof(buffer) - 1, &bytesRead, NULL) && bytesRead > 0) {
2025-09-29T03:49:00.1834016Z                                                                                  ^
2025-09-29T03:49:00.1834317Z src/core/SystemCommand.cpp:169:99: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1834591Z     while (ReadFile(hStderrRead, buffer, sizeof(buffer) - 1, &bytesRead, NULL) && bytesRead > 0) {
2025-09-29T03:49:00.1834715Z                                                                                                   ^
2025-09-29T03:49:00.1835020Z src/core/SystemCommand.cpp:170:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1835117Z         buffer[bytesRead] = '\0';
2025-09-29T03:49:00.1835208Z                                  ^
2025-09-29T03:49:00.1835504Z src/core/SystemCommand.cpp:171:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1835591Z         error += buffer;
2025-09-29T03:49:00.1835680Z                         ^
2025-09-29T03:49:00.1835984Z src/core/SystemCommand.cpp:172:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1836057Z     }
2025-09-29T03:49:00.1836132Z      ^
2025-09-29T03:49:00.1836435Z src/core/SystemCommand.cpp:174:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1836518Z     DWORD exitCode;
2025-09-29T03:49:00.1836750Z                    ^
2025-09-29T03:49:00.1837053Z src/core/SystemCommand.cpp:175:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1837190Z     GetExitCodeProcess(pi.hProcess, &exitCode);
2025-09-29T03:49:00.1837286Z                                                ^
2025-09-29T03:49:00.1837587Z src/core/SystemCommand.cpp:177:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1837696Z     CloseHandle(pi.hProcess);
2025-09-29T03:49:00.1837781Z                              ^
2025-09-29T03:49:00.1838228Z src/core/SystemCommand.cpp:178:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1838337Z     CloseHandle(pi.hThread);
2025-09-29T03:49:00.1838421Z                             ^
2025-09-29T03:49:00.1838716Z src/core/SystemCommand.cpp:179:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1838815Z     CloseHandle(hStdoutRead);
2025-09-29T03:49:00.1838906Z                              ^
2025-09-29T03:49:00.1839201Z src/core/SystemCommand.cpp:180:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1839295Z     CloseHandle(hStderrRead);
2025-09-29T03:49:00.1839386Z                              ^
2025-09-29T03:49:00.1839685Z src/core/SystemCommand.cpp:182:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1839807Z     pImpl->process = INVALID_HANDLE_VALUE;
2025-09-29T03:49:00.1839909Z                                           ^
2025-09-29T03:49:00.1840346Z src/core/SystemCommand.cpp:183:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1840464Z     pImpl->thread = INVALID_HANDLE_VALUE;
2025-09-29T03:49:00.1840561Z                                          ^
2025-09-29T03:49:00.1840864Z src/core/SystemCommand.cpp:190:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1841119Z SystemCommandResult SystemCommand::executeUnix(const std::string& command,
2025-09-29T03:49:00.1841214Z                    ^
2025-09-29T03:49:00.1841514Z src/core/SystemCommand.cpp:190:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1841751Z SystemCommandResult SystemCommand::executeUnix(const std::string& command,
2025-09-29T03:49:00.1841861Z                                                                 ^
2025-09-29T03:49:00.1842166Z src/core/SystemCommand.cpp:190:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1842401Z SystemCommandResult SystemCommand::executeUnix(const std::string& command,
2025-09-29T03:49:00.1842509Z                                                                  ^
2025-09-29T03:49:00.1842815Z src/core/SystemCommand.cpp:190:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1843043Z SystemCommandResult SystemCommand::executeUnix(const std::string& command,
2025-09-29T03:49:00.1843151Z                                                                           ^
2025-09-29T03:49:00.1843462Z src/core/SystemCommand.cpp:191:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1843599Z                                                const std::vector<std::string>& args,
2025-09-29T03:49:00.1843706Z                                                                              ^
2025-09-29T03:49:00.1844010Z src/core/SystemCommand.cpp:191:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1844141Z                                                const std::vector<std::string>& args,
2025-09-29T03:49:00.1844252Z                                                                               ^
2025-09-29T03:49:00.1844553Z src/core/SystemCommand.cpp:191:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1844676Z                                                const std::vector<std::string>& args,
2025-09-29T03:49:00.1844989Z                                                                                     ^
2025-09-29T03:49:00.1845292Z src/core/SystemCommand.cpp:192:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1845423Z                                                const std::string& workingDirectory) {
2025-09-29T03:49:00.1845525Z                                                                 ^
2025-09-29T03:49:00.1845830Z src/core/SystemCommand.cpp:192:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1845964Z                                                const std::string& workingDirectory) {
2025-09-29T03:49:00.1846069Z                                                                  ^
2025-09-29T03:49:00.1846367Z src/core/SystemCommand.cpp:192:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1846502Z                                                const std::string& workingDirectory) {
2025-09-29T03:49:00.1846618Z                                                                                      ^
2025-09-29T03:49:00.1846916Z src/core/SystemCommand.cpp:193:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1847027Z     int pipeOut[2], pipeErr[2];
2025-09-29T03:49:00.1847114Z                                ^
2025-09-29T03:49:00.1847411Z src/core/SystemCommand.cpp:195:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1847656Z     if (pipe(pipeOut) == -1 || pipe(pipeErr) == -1) {
2025-09-29T03:49:00.1847758Z                                                      ^
2025-09-29T03:49:00.1848189Z src/core/SystemCommand.cpp:196:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1848316Z         return {-1, "", "Failed to create pipes"};
2025-09-29T03:49:00.1848413Z                                                   ^
2025-09-29T03:49:00.1848718Z src/core/SystemCommand.cpp:197:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1848805Z     }
2025-09-29T03:49:00.1848877Z      ^
2025-09-29T03:49:00.1849176Z src/core/SystemCommand.cpp:199:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1849267Z     pid_t pid = fork();
2025-09-29T03:49:00.1849355Z                        ^
2025-09-29T03:49:00.1849656Z src/core/SystemCommand.cpp:200:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1849744Z     if (pid == -1) {
2025-09-29T03:49:00.1849834Z                     ^
2025-09-29T03:49:00.1850126Z src/core/SystemCommand.cpp:201:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1850347Z         close(pipeOut[0]); close(pipeOut[1]);
2025-09-29T03:49:00.1850436Z                           ^
2025-09-29T03:49:00.1850732Z src/core/SystemCommand.cpp:201:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1850846Z         close(pipeOut[0]); close(pipeOut[1]);
2025-09-29T03:49:00.1850940Z                                              ^
2025-09-29T03:49:00.1851243Z src/core/SystemCommand.cpp:202:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1851347Z         close(pipeErr[0]); close(pipeErr[1]);
2025-09-29T03:49:00.1851430Z                           ^
2025-09-29T03:49:00.1851734Z src/core/SystemCommand.cpp:202:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1851845Z         close(pipeErr[0]); close(pipeErr[1]);
2025-09-29T03:49:00.1851936Z                                              ^
2025-09-29T03:49:00.1852240Z src/core/SystemCommand.cpp:203:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1852354Z         return {-1, "", "Failed to fork process"};
2025-09-29T03:49:00.1852447Z                                                   ^
2025-09-29T03:49:00.1852756Z src/core/SystemCommand.cpp:204:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1852979Z     }
2025-09-29T03:49:00.1853055Z      ^
2025-09-29T03:49:00.1853356Z src/core/SystemCommand.cpp:206:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1853447Z     if (pid == 0) {
2025-09-29T03:49:00.1853530Z                    ^
2025-09-29T03:49:00.1853829Z src/core/SystemCommand.cpp:207:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1853924Z         // Child process
2025-09-29T03:49:00.1854011Z                         ^
2025-09-29T03:49:00.1854306Z src/core/SystemCommand.cpp:208:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1854404Z         close(pipeOut[0]);
2025-09-29T03:49:00.1854487Z                           ^
2025-09-29T03:49:00.1854779Z src/core/SystemCommand.cpp:209:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1854868Z         close(pipeErr[0]);
2025-09-29T03:49:00.1854959Z                           ^
2025-09-29T03:49:00.1855252Z src/core/SystemCommand.cpp:211:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1855360Z         dup2(pipeOut[1], STDOUT_FILENO);
2025-09-29T03:49:00.1855454Z                                         ^
2025-09-29T03:49:00.1855782Z src/core/SystemCommand.cpp:212:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1855889Z         dup2(pipeErr[1], STDERR_FILENO);
2025-09-29T03:49:00.1856138Z                                         ^
2025-09-29T03:49:00.1856450Z src/core/SystemCommand.cpp:214:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1856543Z         close(pipeOut[1]);
2025-09-29T03:49:00.1856628Z                           ^
2025-09-29T03:49:00.1856932Z src/core/SystemCommand.cpp:215:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1857026Z         close(pipeErr[1]);
2025-09-29T03:49:00.1857117Z                           ^
2025-09-29T03:49:00.1857420Z src/core/SystemCommand.cpp:217:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1857536Z         // Change working directory if specified
2025-09-29T03:49:00.1857631Z                                                 ^
2025-09-29T03:49:00.1858057Z src/core/SystemCommand.cpp:218:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1858169Z         if (!workingDirectory.empty()) {
2025-09-29T03:49:00.1858261Z                                         ^
2025-09-29T03:49:00.1858561Z src/core/SystemCommand.cpp:219:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1858689Z             if (chdir(workingDirectory.c_str()) != 0) {
2025-09-29T03:49:00.1858790Z                                                        ^
2025-09-29T03:49:00.1859086Z src/core/SystemCommand.cpp:220:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1859193Z                 exit(EXIT_FAILURE);
2025-09-29T03:49:00.1859279Z                                    ^
2025-09-29T03:49:00.1859571Z src/core/SystemCommand.cpp:221:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1859653Z             }
2025-09-29T03:49:00.1859729Z              ^
2025-09-29T03:49:00.1860022Z src/core/SystemCommand.cpp:222:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1860105Z         }
2025-09-29T03:49:00.1860183Z          ^
2025-09-29T03:49:00.1860480Z src/core/SystemCommand.cpp:224:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1860576Z         // Set environment variables
2025-09-29T03:49:00.1860669Z                                     ^
2025-09-29T03:49:00.1860963Z src/core/SystemCommand.cpp:225:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1861146Z         for (const auto& [key, value] : pImpl->environmentVariables) {
2025-09-29T03:49:00.1861382Z                        ^
2025-09-29T03:49:00.1861683Z src/core/SystemCommand.cpp:225:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1861857Z         for (const auto& [key, value] : pImpl->environmentVariables) {
2025-09-29T03:49:00.1861945Z                         ^
2025-09-29T03:49:00.1862252Z src/core/SystemCommand.cpp:225:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1862424Z         for (const auto& [key, value] : pImpl->environmentVariables) {
2025-09-29T03:49:00.1862539Z                                                                       ^
2025-09-29T03:49:00.1862842Z src/core/SystemCommand.cpp:226:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1862954Z             setenv(key.c_str(), value.c_str(), 1);
2025-09-29T03:49:00.1863046Z                                                   ^
2025-09-29T03:49:00.1863353Z src/core/SystemCommand.cpp:227:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1863428Z         }
2025-09-29T03:49:00.1863504Z          ^
2025-09-29T03:49:00.1863805Z src/core/SystemCommand.cpp:229:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1863899Z         // Prepare arguments
2025-09-29T03:49:00.1863983Z                             ^
2025-09-29T03:49:00.1864410Z src/core/SystemCommand.cpp:230:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1864560Z         auto argv = pImpl->buildArgVector(command, args);
2025-09-29T03:49:00.1864660Z                                                          ^
2025-09-29T03:49:00.1864962Z src/core/SystemCommand.cpp:231:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1865061Z         std::vector<char*> cArgs;
2025-09-29T03:49:00.1865142Z                         ^
2025-09-29T03:49:00.1865442Z src/core/SystemCommand.cpp:231:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1865541Z         std::vector<char*> cArgs;
2025-09-29T03:49:00.1865626Z                                  ^
2025-09-29T03:49:00.1865919Z src/core/SystemCommand.cpp:232:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1866031Z         for (const auto& arg : argv) {
2025-09-29T03:49:00.1866113Z                        ^
2025-09-29T03:49:00.1866411Z src/core/SystemCommand.cpp:232:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1866514Z         for (const auto& arg : argv) {
2025-09-29T03:49:00.1866595Z                         ^
2025-09-29T03:49:00.1866890Z src/core/SystemCommand.cpp:232:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1866983Z         for (const auto& arg : argv) {
2025-09-29T03:49:00.1867076Z                                       ^
2025-09-29T03:49:00.1867375Z src/core/SystemCommand.cpp:233:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1867516Z             cArgs.push_back(const_cast<char*>(arg.c_str()));
2025-09-29T03:49:00.1867616Z                                            ^
2025-09-29T03:49:00.1868033Z src/core/SystemCommand.cpp:233:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1868169Z             cArgs.push_back(const_cast<char*>(arg.c_str()));
2025-09-29T03:49:00.1868285Z                                                             ^
2025-09-29T03:49:00.1868580Z src/core/SystemCommand.cpp:234:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1868654Z         }
2025-09-29T03:49:00.1868734Z          ^
2025-09-29T03:49:00.1869029Z src/core/SystemCommand.cpp:235:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1869127Z         cArgs.push_back(nullptr);
2025-09-29T03:49:00.1869355Z                                  ^
2025-09-29T03:49:00.1869657Z src/core/SystemCommand.cpp:237:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1869770Z         execvp(command.c_str(), cArgs.data());
2025-09-29T03:49:00.1869863Z                                               ^
2025-09-29T03:49:00.1870163Z src/core/SystemCommand.cpp:238:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1870254Z         exit(EXIT_FAILURE);
2025-09-29T03:49:00.1870337Z                            ^
2025-09-29T03:49:00.1870659Z src/core/SystemCommand.cpp:239:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1870733Z     }
2025-09-29T03:49:00.1870807Z      ^
2025-09-29T03:49:00.1871106Z src/core/SystemCommand.cpp:241:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1871202Z     // Parent process
2025-09-29T03:49:00.1871283Z                      ^
2025-09-29T03:49:00.1871586Z src/core/SystemCommand.cpp:242:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1871690Z     pImpl->childPid = pid;
2025-09-29T03:49:00.1871771Z                           ^
2025-09-29T03:49:00.1872063Z src/core/SystemCommand.cpp:243:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1872156Z     close(pipeOut[1]);
2025-09-29T03:49:00.1872236Z                       ^
2025-09-29T03:49:00.1872530Z src/core/SystemCommand.cpp:244:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1872749Z     close(pipeErr[1]);
2025-09-29T03:49:00.1872840Z                       ^
2025-09-29T03:49:00.1873134Z src/core/SystemCommand.cpp:246:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1873240Z     // Set non-blocking mode for reading
2025-09-29T03:49:00.1873336Z                                         ^
2025-09-29T03:49:00.1873629Z src/core/SystemCommand.cpp:247:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1873747Z     fcntl(pipeOut[0], F_SETFL, O_NONBLOCK);
2025-09-29T03:49:00.1873842Z                                            ^
2025-09-29T03:49:00.1874139Z src/core/SystemCommand.cpp:248:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1874246Z     fcntl(pipeErr[0], F_SETFL, O_NONBLOCK);
2025-09-29T03:49:00.1874334Z                                            ^
2025-09-29T03:49:00.1874639Z src/core/SystemCommand.cpp:250:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1874745Z     std::string output, error;
2025-09-29T03:49:00.1874829Z                               ^
2025-09-29T03:49:00.1875130Z src/core/SystemCommand.cpp:251:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1875215Z     char buffer[4096];
2025-09-29T03:49:00.1875297Z                       ^
2025-09-29T03:49:00.1875600Z src/core/SystemCommand.cpp:253:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1875744Z     auto startTime = std::chrono::steady_clock::now();
2025-09-29T03:49:00.1875846Z                                                       ^
2025-09-29T03:49:00.1876148Z src/core/SystemCommand.cpp:254:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1876321Z     auto timeout = std::chrono::milliseconds(pImpl->timeoutMs);
2025-09-29T03:49:00.1876424Z                                                                ^
2025-09-29T03:49:00.1876727Z src/core/SystemCommand.cpp:256:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1876816Z     while (true) {
2025-09-29T03:49:00.1876894Z                   ^
2025-09-29T03:49:00.1877189Z src/core/SystemCommand.cpp:257:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1877293Z         if (pImpl->cancelled) {
2025-09-29T03:49:00.1877378Z                                ^
2025-09-29T03:49:00.1877779Z src/core/SystemCommand.cpp:258:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1878006Z             kill(pid, SIGTERM);
2025-09-29T03:49:00.1878089Z                                ^
2025-09-29T03:49:00.1878398Z src/core/SystemCommand.cpp:259:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1878480Z             break;
2025-09-29T03:49:00.1878558Z                   ^
2025-09-29T03:49:00.1878864Z src/core/SystemCommand.cpp:260:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1878939Z         }
2025-09-29T03:49:00.1879022Z          ^
2025-09-29T03:49:00.1879316Z src/core/SystemCommand.cpp:262:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1879402Z         // Check timeout
2025-09-29T03:49:00.1879487Z                         ^
2025-09-29T03:49:00.1879783Z src/core/SystemCommand.cpp:263:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1879967Z         auto elapsed = std::chrono::steady_clock::now() - startTime;
2025-09-29T03:49:00.1880079Z                                                                     ^
2025-09-29T03:49:00.1880379Z src/core/SystemCommand.cpp:264:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1880472Z         if (elapsed > timeout) {
2025-09-29T03:49:00.1880555Z                                 ^
2025-09-29T03:49:00.1880998Z src/core/SystemCommand.cpp:265:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1881095Z             kill(pid, SIGTERM);
2025-09-29T03:49:00.1881177Z                                ^
2025-09-29T03:49:00.1881481Z src/core/SystemCommand.cpp:266:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1881612Z             waitpid(pid, nullptr, 0); // Clean up zombie
2025-09-29T03:49:00.1881713Z                                                         ^
2025-09-29T03:49:00.1882017Z src/core/SystemCommand.cpp:267:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1882111Z             close(pipeOut[0]);
2025-09-29T03:49:00.1882193Z                               ^
2025-09-29T03:49:00.1882487Z src/core/SystemCommand.cpp:268:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1882584Z             close(pipeErr[0]);
2025-09-29T03:49:00.1882665Z                               ^
2025-09-29T03:49:00.1882966Z src/core/SystemCommand.cpp:269:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1883070Z             pImpl->childPid = -1;
2025-09-29T03:49:00.1883155Z                                  ^
2025-09-29T03:49:00.1883456Z src/core/SystemCommand.cpp:270:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1883573Z             return {-1, "", "Process timed out"};
2025-09-29T03:49:00.1883673Z                                                  ^
2025-09-29T03:49:00.1883972Z src/core/SystemCommand.cpp:271:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1884053Z         }
2025-09-29T03:49:00.1884126Z          ^
2025-09-29T03:49:00.1884418Z src/core/SystemCommand.cpp:273:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1884524Z         // Check if process is still running
2025-09-29T03:49:00.1884621Z                                             ^
2025-09-29T03:49:00.1884919Z src/core/SystemCommand.cpp:274:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1884998Z         int status;
2025-09-29T03:49:00.1885081Z                    ^
2025-09-29T03:49:00.1885374Z src/core/SystemCommand.cpp:275:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1885504Z         pid_t result = waitpid(pid, &status, WNOHANG);
2025-09-29T03:49:00.1885743Z                                                       ^
2025-09-29T03:49:00.1886035Z src/core/SystemCommand.cpp:277:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1886122Z         // Read from pipes
2025-09-29T03:49:00.1886203Z                           ^
2025-09-29T03:49:00.1886500Z src/core/SystemCommand.cpp:278:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1886588Z         ssize_t bytesRead;
2025-09-29T03:49:00.1886668Z                           ^
2025-09-29T03:49:00.1886969Z src/core/SystemCommand.cpp:279:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1887162Z         while ((bytesRead = read(pipeOut[0], buffer, sizeof(buffer))) > 0) {
2025-09-29T03:49:00.1887268Z                                                                             ^
2025-09-29T03:49:00.1887568Z src/core/SystemCommand.cpp:280:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1887686Z             output.append(buffer, bytesRead);
2025-09-29T03:49:00.1887778Z                                              ^
2025-09-29T03:49:00.1888193Z src/core/SystemCommand.cpp:281:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1888269Z         }
2025-09-29T03:49:00.1888343Z          ^
2025-09-29T03:49:00.1888636Z src/core/SystemCommand.cpp:283:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1888961Z         while ((bytesRead = read(pipeErr[0], buffer, sizeof(buffer))) > 0) {
2025-09-29T03:49:00.1889070Z                                                                             ^
2025-09-29T03:49:00.1889365Z src/core/SystemCommand.cpp:284:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1889478Z             error.append(buffer, bytesRead);
2025-09-29T03:49:00.1889566Z                                             ^
2025-09-29T03:49:00.1889856Z src/core/SystemCommand.cpp:285:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1889940Z         }
2025-09-29T03:49:00.1890013Z          ^
2025-09-29T03:49:00.1890306Z src/core/SystemCommand.cpp:287:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1890399Z         if (result == pid) {
2025-09-29T03:49:00.1890487Z                             ^
2025-09-29T03:49:00.1890780Z src/core/SystemCommand.cpp:288:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1890881Z             // Process has finished
2025-09-29T03:49:00.1890973Z                                    ^
2025-09-29T03:49:00.1891265Z src/core/SystemCommand.cpp:289:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1891382Z             // Final read to get any remaining output
2025-09-29T03:49:00.1891481Z                                                      ^
2025-09-29T03:49:00.1891775Z src/core/SystemCommand.cpp:290:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1891867Z             ssize_t bytesRead;
2025-09-29T03:49:00.1891952Z                               ^
2025-09-29T03:49:00.1892246Z src/core/SystemCommand.cpp:291:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1892439Z             while ((bytesRead = read(pipeOut[0], buffer, sizeof(buffer))) > 0) {
2025-09-29T03:49:00.1892545Z                                                                                 ^
2025-09-29T03:49:00.1892848Z src/core/SystemCommand.cpp:292:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1892963Z                 output.append(buffer, bytesRead);
2025-09-29T03:49:00.1893055Z                                                  ^
2025-09-29T03:49:00.1893354Z src/core/SystemCommand.cpp:293:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1893429Z             }
2025-09-29T03:49:00.1893643Z              ^
2025-09-29T03:49:00.1893944Z src/core/SystemCommand.cpp:295:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1894128Z             while ((bytesRead = read(pipeErr[0], buffer, sizeof(buffer))) > 0) {
2025-09-29T03:49:00.1894230Z                                                                                 ^
2025-09-29T03:49:00.1894528Z src/core/SystemCommand.cpp:296:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1894637Z                 error.append(buffer, bytesRead);
2025-09-29T03:49:00.1894731Z                                                 ^
2025-09-29T03:49:00.1895025Z src/core/SystemCommand.cpp:297:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1895108Z             }
2025-09-29T03:49:00.1895181Z              ^
2025-09-29T03:49:00.1895473Z src/core/SystemCommand.cpp:299:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1895579Z             close(pipeOut[0]);
2025-09-29T03:49:00.1895662Z                               ^
2025-09-29T03:49:00.1895954Z src/core/SystemCommand.cpp:300:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1896049Z             close(pipeErr[0]);
2025-09-29T03:49:00.1896129Z                               ^
2025-09-29T03:49:00.1896420Z src/core/SystemCommand.cpp:302:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1896518Z             pImpl->childPid = -1;
2025-09-29T03:49:00.1896700Z                                  ^
2025-09-29T03:49:00.1897000Z src/core/SystemCommand.cpp:304:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1897195Z             int exitCode = WIFEXITED(status) ? WEXITSTATUS(status) : -1;
2025-09-29T03:49:00.1897308Z                                                                         ^
2025-09-29T03:49:00.1897603Z src/core/SystemCommand.cpp:305:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1897716Z             return {exitCode, output, error};
2025-09-29T03:49:00.1897815Z                                              ^
2025-09-29T03:49:00.1898220Z src/core/SystemCommand.cpp:306:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1898295Z         }
2025-09-29T03:49:00.1898377Z          ^
2025-09-29T03:49:00.1898670Z src/core/SystemCommand.cpp:308:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1898783Z         // Small delay to prevent busy waiting
2025-09-29T03:49:00.1898875Z                                               ^
2025-09-29T03:49:00.1899173Z src/core/SystemCommand.cpp:309:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1899340Z         std::this_thread::sleep_for(std::chrono::milliseconds(10));
2025-09-29T03:49:00.1899446Z                                                                    ^
2025-09-29T03:49:00.1899760Z src/core/SystemCommand.cpp:310:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1899835Z     }
2025-09-29T03:49:00.1899906Z      ^
2025-09-29T03:49:00.1900206Z src/core/SystemCommand.cpp:312:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1900353Z     // Should not reach here, but handle cleanup if it does
2025-09-29T03:49:00.1900454Z                                                            ^
2025-09-29T03:49:00.1900756Z src/core/SystemCommand.cpp:313:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1900845Z     close(pipeOut[0]);
2025-09-29T03:49:00.1900924Z                       ^
2025-09-29T03:49:00.1901215Z src/core/SystemCommand.cpp:314:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1901308Z     close(pipeErr[0]);
2025-09-29T03:49:00.1901391Z                       ^
2025-09-29T03:49:00.1901682Z src/core/SystemCommand.cpp:315:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1901926Z     pImpl->childPid = -1;
2025-09-29T03:49:00.1902006Z                          ^
2025-09-29T03:49:00.1902301Z src/core/SystemCommand.cpp:320:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1902626Z SystemCommandResult SystemCommand::executeWithCallback(const std::string& command,
2025-09-29T03:49:00.1902732Z                                                        ^
2025-09-29T03:49:00.1903035Z src/core/SystemCommand.cpp:320:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1903297Z SystemCommandResult SystemCommand::executeWithCallback(const std::string& command,
2025-09-29T03:49:00.1903406Z                                                                         ^
2025-09-29T03:49:00.1903708Z src/core/SystemCommand.cpp:320:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1903976Z SystemCommandResult SystemCommand::executeWithCallback(const std::string& command,
2025-09-29T03:49:00.1904084Z                                                                          ^
2025-09-29T03:49:00.1904375Z src/core/SystemCommand.cpp:320:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1904635Z SystemCommandResult SystemCommand::executeWithCallback(const std::string& command,
2025-09-29T03:49:00.1904748Z                                                                                   ^
2025-09-29T03:49:00.1905173Z src/core/SystemCommand.cpp:321:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1905313Z                                                        const std::vector<std::string>& args,
2025-09-29T03:49:00.1905428Z                                                                                      ^
2025-09-29T03:49:00.1905720Z src/core/SystemCommand.cpp:321:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1905854Z                                                        const std::vector<std::string>& args,
2025-09-29T03:49:00.1905968Z                                                                                       ^
2025-09-29T03:49:00.1906260Z src/core/SystemCommand.cpp:321:93: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1906385Z                                                        const std::vector<std::string>& args,
2025-09-29T03:49:00.1906506Z                                                                                             ^
2025-09-29T03:49:00.1906799Z src/core/SystemCommand.cpp:322:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1906927Z                                                        OutputCallback outputCallback,
2025-09-29T03:49:00.1907038Z                                                                                      ^
2025-09-29T03:49:00.1907334Z src/core/SystemCommand.cpp:323:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1907465Z                                                        const std::string& workingDirectory) {
2025-09-29T03:49:00.1907571Z                                                                         ^
2025-09-29T03:49:00.1907995Z src/core/SystemCommand.cpp:323:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1908128Z                                                        const std::string& workingDirectory) {
2025-09-29T03:49:00.1908242Z                                                                          ^
2025-09-29T03:49:00.1908535Z src/core/SystemCommand.cpp:323:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1908664Z                                                        const std::string& workingDirectory) {
2025-09-29T03:49:00.1908780Z                                                                                              ^
2025-09-29T03:49:00.1909263Z src/core/SystemCommand.cpp:324:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1909430Z     // For now, execute normally and call callback with full output
2025-09-29T03:49:00.1909532Z                                                                    ^
2025-09-29T03:49:00.1909837Z src/core/SystemCommand.cpp:325:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1909948Z     // TODO: Implement real-time streaming
2025-09-29T03:49:00.1910041Z                                           ^
2025-09-29T03:49:00.1910337Z src/core/SystemCommand.cpp:326:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1910488Z     auto result = execute(command, args, workingDirectory);
2025-09-29T03:49:00.1910587Z                                                            ^
2025-09-29T03:49:00.1910886Z src/core/SystemCommand.cpp:327:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1910985Z     if (outputCallback) {
2025-09-29T03:49:00.1911069Z                          ^
2025-09-29T03:49:00.1911363Z src/core/SystemCommand.cpp:328:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1911472Z         outputCallback(result.output);
2025-09-29T03:49:00.1911557Z                                       ^
2025-09-29T03:49:00.1911848Z src/core/SystemCommand.cpp:329:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1912083Z         if (!result.error.empty()) {
2025-09-29T03:49:00.1912175Z                                     ^
2025-09-29T03:49:00.1912468Z src/core/SystemCommand.cpp:330:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1912581Z             outputCallback(result.error);
2025-09-29T03:49:00.1912668Z                                          ^
2025-09-29T03:49:00.1912959Z src/core/SystemCommand.cpp:331:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1913042Z         }
2025-09-29T03:49:00.1913116Z          ^
2025-09-29T03:49:00.1913418Z src/core/SystemCommand.cpp:332:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1913492Z     }
2025-09-29T03:49:00.1913568Z      ^
2025-09-29T03:49:00.1913859Z src/core/SystemCommand.cpp:336:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1914027Z void SystemCommand::executeAsync(const std::string& command,
2025-09-29T03:49:00.1914118Z                                  ^
2025-09-29T03:49:00.1914421Z src/core/SystemCommand.cpp:336:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1914582Z void SystemCommand::executeAsync(const std::string& command,
2025-09-29T03:49:00.1914677Z                                                   ^
2025-09-29T03:49:00.1914975Z src/core/SystemCommand.cpp:336:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1915137Z void SystemCommand::executeAsync(const std::string& command,
2025-09-29T03:49:00.1915234Z                                                    ^
2025-09-29T03:49:00.1915532Z src/core/SystemCommand.cpp:336:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1915695Z void SystemCommand::executeAsync(const std::string& command,
2025-09-29T03:49:00.1915794Z                                                             ^
2025-09-29T03:49:00.1916095Z src/core/SystemCommand.cpp:337:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1916219Z                                 const std::vector<std::string>& args,
2025-09-29T03:49:00.1916319Z                                                               ^
2025-09-29T03:49:00.1916609Z src/core/SystemCommand.cpp:337:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1916734Z                                 const std::vector<std::string>& args,
2025-09-29T03:49:00.1916935Z                                                                ^
2025-09-29T03:49:00.1917227Z src/core/SystemCommand.cpp:337:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1917349Z                                 const std::vector<std::string>& args,
2025-09-29T03:49:00.1917450Z                                                                      ^
2025-09-29T03:49:00.1917745Z src/core/SystemCommand.cpp:338:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1918052Z                                 std::function<void(const SystemCommandResult&)> callback,
2025-09-29T03:49:00.1918159Z                                                                             ^
2025-09-29T03:49:00.1918452Z src/core/SystemCommand.cpp:338:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1918626Z                                 std::function<void(const SystemCommandResult&)> callback,
2025-09-29T03:49:00.1918745Z                                                                                          ^
2025-09-29T03:49:00.1919033Z src/core/SystemCommand.cpp:339:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1919160Z                                 const std::string& workingDirectory) {
2025-09-29T03:49:00.1919253Z                                                  ^
2025-09-29T03:49:00.1919676Z src/core/SystemCommand.cpp:339:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1919808Z                                 const std::string& workingDirectory) {
2025-09-29T03:49:00.1919899Z                                                   ^
2025-09-29T03:49:00.1920192Z src/core/SystemCommand.cpp:339:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1920316Z                                 const std::string& workingDirectory) {
2025-09-29T03:49:00.1920426Z                                                                       ^
2025-09-29T03:49:00.1920715Z src/core/SystemCommand.cpp:340:70: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1920898Z     std::thread([this, command, args, callback, workingDirectory]() {
2025-09-29T03:49:00.1920992Z                                                                      ^
2025-09-29T03:49:00.1921285Z src/core/SystemCommand.cpp:341:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1921443Z         auto result = execute(command, args, workingDirectory);
2025-09-29T03:49:00.1921545Z                                                                ^
2025-09-29T03:49:00.1921839Z src/core/SystemCommand.cpp:342:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1921925Z         if (callback) {
2025-09-29T03:49:00.1922013Z                        ^
2025-09-29T03:49:00.1922303Z src/core/SystemCommand.cpp:343:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1922398Z             callback(result);
2025-09-29T03:49:00.1922485Z                              ^
2025-09-29T03:49:00.1922776Z src/core/SystemCommand.cpp:344:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1922849Z         }
2025-09-29T03:49:00.1922922Z          ^
2025-09-29T03:49:00.1923222Z src/core/SystemCommand.cpp:348:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1923324Z void SystemCommand::cancel() {
2025-09-29T03:49:00.1923406Z                               ^
2025-09-29T03:49:00.1923711Z src/core/SystemCommand.cpp:349:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1923808Z     pImpl->cancelled = true;
2025-09-29T03:49:00.1923890Z                             ^
2025-09-29T03:49:00.1924191Z src/core/SystemCommand.cpp:351:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1924415Z #ifdef _WIN32
2025-09-29T03:49:00.1924490Z              ^
2025-09-29T03:49:00.1924784Z src/core/SystemCommand.cpp:352:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1924916Z     if (pImpl->process != INVALID_HANDLE_VALUE) {
2025-09-29T03:49:00.1925008Z                                                  ^
2025-09-29T03:49:00.1925300Z src/core/SystemCommand.cpp:353:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1925432Z         TerminateProcess(pImpl->process, -1);
2025-09-29T03:49:00.1925523Z                                              ^
2025-09-29T03:49:00.1925818Z src/core/SystemCommand.cpp:355:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1925902Z #else
2025-09-29T03:49:00.1925974Z      ^
2025-09-29T03:49:00.1926267Z src/core/SystemCommand.cpp:356:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1926380Z     if (pImpl->childPid != -1) {
2025-09-29T03:49:00.1926467Z                                 ^
2025-09-29T03:49:00.1926755Z src/core/SystemCommand.cpp:357:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1926859Z         kill(pImpl->childPid, SIGTERM);
2025-09-29T03:49:00.1926952Z                                        ^
2025-09-29T03:49:00.1927240Z src/core/SystemCommand.cpp:362:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1927640Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-09-29T03:49:00.1927753Z                                                             ^
2025-09-29T03:49:00.1928344Z src/core/SystemCommand.cpp:362:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1928647Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-09-29T03:49:00.1928752Z                                                              ^
2025-09-29T03:49:00.1929055Z src/core/SystemCommand.cpp:362:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1929347Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-09-29T03:49:00.1929457Z                                                                    ^
2025-09-29T03:49:00.1929754Z src/core/SystemCommand.cpp:362:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1930053Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-09-29T03:49:00.1930167Z                                                                                      ^
2025-09-29T03:49:00.1930458Z src/core/SystemCommand.cpp:362:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1930747Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-09-29T03:49:00.1930865Z                                                                                       ^
2025-09-29T03:49:00.1931154Z src/core/SystemCommand.cpp:362:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1931446Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-09-29T03:49:00.1931558Z                                                                                                ^
2025-09-29T03:49:00.1931862Z src/core/SystemCommand.cpp:366:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1931999Z void SystemCommand::clearEnvironmentVariables() {
2025-09-29T03:49:00.1932088Z                                                  ^
2025-09-29T03:49:00.1932381Z src/core/SystemCommand.cpp:370:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1932508Z void SystemCommand::setTimeout(int timeoutMs) {
2025-09-29T03:49:00.1932747Z                                                ^
2025-09-29T03:49:00.1933057Z src/core/SystemCommand.cpp:371:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1933159Z     pImpl->timeoutMs = timeoutMs;
2025-09-29T03:49:00.1933244Z                                  ^
2025-09-29T03:49:00.1933541Z src/core/SystemCommand.cpp:374:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1933742Z bool SystemCommand::isCommandAvailable(const std::string& command) {
2025-09-29T03:49:00.1933844Z                                                         ^
2025-09-29T03:49:00.1934136Z src/core/SystemCommand.cpp:374:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1934337Z bool SystemCommand::isCommandAvailable(const std::string& command) {
2025-09-29T03:49:00.1934436Z                                                          ^
2025-09-29T03:49:00.1934724Z src/core/SystemCommand.cpp:375:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1934814Z #ifdef _WIN32
2025-09-29T03:49:00.1934887Z              ^
2025-09-29T03:49:00.1935177Z src/core/SystemCommand.cpp:376:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1935320Z     std::string cmd = "where " + command + " >nul 2>&1";
2025-09-29T03:49:00.1935413Z                                                         ^
2025-09-29T03:49:00.1935706Z src/core/SystemCommand.cpp:378:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1935934Z #else
2025-09-29T03:49:00.1936011Z      ^
2025-09-29T03:49:00.1936301Z src/core/SystemCommand.cpp:379:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1936465Z     std::string cmd = "command -v " + command + " >/dev/null 2>&1";
2025-09-29T03:49:00.1936567Z                                                                    ^
2025-09-29T03:49:00.1936859Z src/core/SystemCommand.cpp:384:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1936985Z std::string SystemCommand::getGitCommand() {
2025-09-29T03:49:00.1937082Z                                             ^
2025-09-29T03:49:00.1937370Z src/core/SystemCommand.cpp:385:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1937473Z     if (isCommandAvailable("git")) {
2025-09-29T03:49:00.1937564Z                                     ^
2025-09-29T03:49:00.1937984Z src/core/SystemCommand.cpp:386:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1938070Z         return "git";
2025-09-29T03:49:00.1938157Z                      ^
2025-09-29T03:49:00.1938449Z src/core/SystemCommand.cpp:387:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1938521Z     }
2025-09-29T03:49:00.1938593Z      ^
2025-09-29T03:49:00.1938888Z src/core/SystemCommand.cpp:389:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1938971Z #ifdef _WIN32
2025-09-29T03:49:00.1939048Z              ^
2025-09-29T03:49:00.1939341Z src/core/SystemCommand.cpp:390:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1939466Z     // Try common Git installation paths on Windows
2025-09-29T03:49:00.1939563Z                                                    ^
2025-09-29T03:49:00.1939857Z src/core/SystemCommand.cpp:391:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1939964Z     std::vector<std::string> paths = {
2025-09-29T03:49:00.1940051Z                                       ^
2025-09-29T03:49:00.1940340Z src/core/SystemCommand.cpp:392:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1940461Z         "C:\\Program Files\\Git\\bin\\git.exe",
2025-09-29T03:49:00.1940553Z                                                ^
2025-09-29T03:49:00.1940856Z src/core/SystemCommand.cpp:393:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1941136Z         "C:\\Program Files (x86)\\Git\\bin\\git.exe",
2025-09-29T03:49:00.1941236Z                                                      ^
2025-09-29T03:49:00.1941559Z src/core/SystemCommand.cpp:394:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1941657Z         "C:\\Git\\bin\\git.exe"
2025-09-29T03:49:00.1941742Z                                ^
2025-09-29T03:49:00.1942052Z src/core/SystemCommand.cpp:395:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1942129Z     };
2025-09-29T03:49:00.1942202Z       ^
2025-09-29T03:49:00.1942502Z src/core/SystemCommand.cpp:397:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1942603Z     for (const auto& path : paths) {
2025-09-29T03:49:00.1942687Z                    ^
2025-09-29T03:49:00.1942980Z src/core/SystemCommand.cpp:397:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1943083Z     for (const auto& path : paths) {
2025-09-29T03:49:00.1943165Z                     ^
2025-09-29T03:49:00.1943458Z src/core/SystemCommand.cpp:397:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1943553Z     for (const auto& path : paths) {
2025-09-29T03:49:00.1943637Z                                     ^
2025-09-29T03:49:00.1943934Z src/core/SystemCommand.cpp:398:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1944386Z         if (GetFileAttributes(path.c_str()) != INVALID_FILE_ATTRIBUTES) {
2025-09-29T03:49:00.1944503Z                                                                          ^
2025-09-29T03:49:00.1944820Z src/core/SystemCommand.cpp:399:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1944908Z             return path;
2025-09-29T03:49:00.1944989Z                         ^
2025-09-29T03:49:00.1945285Z src/core/SystemCommand.cpp:400:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1945366Z         }
2025-09-29T03:49:00.1945438Z          ^
2025-09-29T03:49:00.1945737Z src/core/SystemCommand.cpp:402:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1945811Z #endif
2025-09-29T03:49:00.1945881Z       ^
2025-09-29T03:49:00.1946176Z src/core/SystemCommand.cpp:407:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1946258Z }
2025-09-29T03:49:00.1946329Z  ^
2025-09-29T03:49:00.1946636Z src/macos/Utils/GitBridge.h:13:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-09-29T03:49:00.1946894Z - (NSDictionary *)getFileDiff:(NSString *)filePath commitHash:(NSString *)commitHash;
2025-09-29T03:49:00.1946992Z                                                   ^
2025-09-29T03:49:00.3060064Z ##[error]Process completed with exit code 123.
2025-09-29T03:49:00.3129001Z Post job cleanup.
2025-09-29T03:49:00.5104600Z Post job cleanup.
2025-09-29T03:49:00.6331536Z [command]/usr/bin/git version
2025-09-29T03:49:00.6382423Z git version 2.51.0
2025-09-29T03:49:00.6439891Z Temporarily overriding HOME='/home/runner/work/_temp/6ce3cce6-c36b-4bc9-aeb3-f1befde7b399' before making global git config changes
2025-09-29T03:49:00.6441546Z Adding repository directory to the temporary git global config as a safe directory
2025-09-29T03:49:00.6448179Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/VersionTools/VersionTools
2025-09-29T03:49:00.6505839Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-09-29T03:49:00.6552813Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-09-29T03:49:00.6869098Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-09-29T03:49:00.6899688Z http.https://github.com/.extraheader
2025-09-29T03:49:00.6916607Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-09-29T03:49:00.6959660Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-09-29T03:49:00.7454455Z Cleaning up orphan processes
