2025-10-02T07:04:58.2135467Z Current runner version: '2.328.0'
2025-10-02T07:04:58.2160628Z ##[group]Runner Image Provisioner
2025-10-02T07:04:58.2161501Z Hosted Compute Agent
2025-10-02T07:04:58.2162063Z Version: 20250912.392
2025-10-02T07:04:58.2162622Z Commit: d921fda672a98b64f4f82364647e2f10b2267d0b
2025-10-02T07:04:58.2163371Z Build Date: 2025-09-12T15:23:14Z
2025-10-02T07:04:58.2163925Z ##[endgroup]
2025-10-02T07:04:58.2164488Z ##[group]Operating System
2025-10-02T07:04:58.2165101Z Ubuntu
2025-10-02T07:04:58.2165555Z 24.04.3
2025-10-02T07:04:58.2166022Z LTS
2025-10-02T07:04:58.2166474Z ##[endgroup]
2025-10-02T07:04:58.2166979Z ##[group]Runner Image
2025-10-02T07:04:58.2167648Z Image: ubuntu-24.04
2025-10-02T07:04:58.2168194Z Version: 20250922.53.1
2025-10-02T07:04:58.2169190Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250922.53/images/ubuntu/Ubuntu2404-Readme.md
2025-10-02T07:04:58.2170926Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250922.53
2025-10-02T07:04:58.2171945Z ##[endgroup]
2025-10-02T07:04:58.2174369Z ##[group]GITHUB_TOKEN Permissions
2025-10-02T07:04:58.2176366Z Actions: write
2025-10-02T07:04:58.2176930Z Attestations: write
2025-10-02T07:04:58.2177397Z Checks: write
2025-10-02T07:04:58.2178002Z Contents: write
2025-10-02T07:04:58.2178501Z Deployments: write
2025-10-02T07:04:58.2179001Z Discussions: write
2025-10-02T07:04:58.2179858Z Issues: write
2025-10-02T07:04:58.2180367Z Metadata: read
2025-10-02T07:04:58.2180833Z Models: read
2025-10-02T07:04:58.2181359Z Packages: write
2025-10-02T07:04:58.2181893Z Pages: write
2025-10-02T07:04:58.2182348Z PullRequests: write
2025-10-02T07:04:58.2182920Z RepositoryProjects: write
2025-10-02T07:04:58.2183446Z SecurityEvents: write
2025-10-02T07:04:58.2184064Z Statuses: write
2025-10-02T07:04:58.2184623Z ##[endgroup]
2025-10-02T07:04:58.2186814Z Secret source: Actions
2025-10-02T07:04:58.2187528Z Prepare workflow directory
2025-10-02T07:04:58.2518095Z Prepare all required actions
2025-10-02T07:04:58.2556673Z Getting action download info
2025-10-02T07:04:58.5768970Z Download action repository 'actions/checkout@v4' (SHA:08eba0b27e820071cde6df949e0beb9ba4906955)
2025-10-02T07:04:58.7871863Z Complete job name: Code Quality Check
2025-10-02T07:04:58.8629899Z ##[group]Run actions/checkout@v4
2025-10-02T07:04:58.8630764Z with:
2025-10-02T07:04:58.8631174Z   repository: Zixiao-Tech/VersionTools
2025-10-02T07:04:58.8631844Z   token: ***
2025-10-02T07:04:58.8632223Z   ssh-strict: true
2025-10-02T07:04:58.8632621Z   ssh-user: git
2025-10-02T07:04:58.8633023Z   persist-credentials: true
2025-10-02T07:04:58.8633464Z   clean: true
2025-10-02T07:04:58.8633865Z   sparse-checkout-cone-mode: true
2025-10-02T07:04:58.8634336Z   fetch-depth: 1
2025-10-02T07:04:58.8634726Z   fetch-tags: false
2025-10-02T07:04:58.8635121Z   show-progress: true
2025-10-02T07:04:58.8635522Z   lfs: false
2025-10-02T07:04:58.8635881Z   submodules: false
2025-10-02T07:04:58.8636289Z   set-safe-directory: true
2025-10-02T07:04:58.8636922Z ##[endgroup]
2025-10-02T07:04:58.9697776Z Syncing repository: Zixiao-Tech/VersionTools
2025-10-02T07:04:58.9699660Z ##[group]Getting Git version info
2025-10-02T07:04:58.9700574Z Working directory is '/home/runner/work/VersionTools/VersionTools'
2025-10-02T07:04:58.9701538Z [command]/usr/bin/git version
2025-10-02T07:04:58.9799103Z git version 2.51.0
2025-10-02T07:04:58.9825222Z ##[endgroup]
2025-10-02T07:04:58.9839361Z Temporarily overriding HOME='/home/runner/work/_temp/1116f462-6424-4df9-846e-571c3d175dd4' before making global git config changes
2025-10-02T07:04:58.9840767Z Adding repository directory to the temporary git global config as a safe directory
2025-10-02T07:04:58.9851778Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/VersionTools/VersionTools
2025-10-02T07:04:58.9886643Z Deleting the contents of '/home/runner/work/VersionTools/VersionTools'
2025-10-02T07:04:58.9890557Z ##[group]Initializing the repository
2025-10-02T07:04:58.9894347Z [command]/usr/bin/git init /home/runner/work/VersionTools/VersionTools
2025-10-02T07:04:59.0023075Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-10-02T07:04:59.0024183Z hint: is subject to change. To configure the initial branch name to use in all
2025-10-02T07:04:59.0025081Z hint: of your new repositories, which will suppress this warning, call:
2025-10-02T07:04:59.0025839Z hint:
2025-10-02T07:04:59.0026307Z hint: 	git config --global init.defaultBranch <name>
2025-10-02T07:04:59.0026862Z hint:
2025-10-02T07:04:59.0027400Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-10-02T07:04:59.0028294Z hint: 'development'. The just-created branch can be renamed via this command:
2025-10-02T07:04:59.0029581Z hint:
2025-10-02T07:04:59.0030077Z hint: 	git branch -m <name>
2025-10-02T07:04:59.0030513Z hint:
2025-10-02T07:04:59.0031086Z hint: Disable this message with "git config set advice.defaultBranchName false"
2025-10-02T07:04:59.0032082Z Initialized empty Git repository in /home/runner/work/VersionTools/VersionTools/.git/
2025-10-02T07:04:59.0040672Z [command]/usr/bin/git remote add origin https://github.com/Zixiao-Tech/VersionTools
2025-10-02T07:04:59.0079097Z ##[endgroup]
2025-10-02T07:04:59.0080017Z ##[group]Disabling automatic garbage collection
2025-10-02T07:04:59.0083348Z [command]/usr/bin/git config --local gc.auto 0
2025-10-02T07:04:59.0110661Z ##[endgroup]
2025-10-02T07:04:59.0111490Z ##[group]Setting up auth
2025-10-02T07:04:59.0117501Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-10-02T07:04:59.0146665Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-10-02T07:04:59.0497905Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-10-02T07:04:59.0525714Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-10-02T07:04:59.0744946Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-10-02T07:04:59.0778990Z ##[endgroup]
2025-10-02T07:04:59.0780791Z ##[group]Fetching the repository
2025-10-02T07:04:59.0796819Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +f525073835578ac3fe7bd36231d2d2f587ebe638:refs/remotes/origin/main
2025-10-02T07:04:59.5938288Z From https://github.com/Zixiao-Tech/VersionTools
2025-10-02T07:04:59.5939856Z  * [new ref]         f525073835578ac3fe7bd36231d2d2f587ebe638 -> origin/main
2025-10-02T07:04:59.5970974Z ##[endgroup]
2025-10-02T07:04:59.5973642Z ##[group]Determining the checkout info
2025-10-02T07:04:59.5974886Z ##[endgroup]
2025-10-02T07:04:59.5978513Z [command]/usr/bin/git sparse-checkout disable
2025-10-02T07:04:59.6019458Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-10-02T07:04:59.6116246Z ##[group]Checking out the ref
2025-10-02T07:04:59.6117727Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-10-02T07:04:59.6572903Z Switched to a new branch 'main'
2025-10-02T07:04:59.6575094Z branch 'main' set up to track 'origin/main'.
2025-10-02T07:04:59.6584848Z ##[endgroup]
2025-10-02T07:04:59.6622829Z [command]/usr/bin/git log -1 --format=%H
2025-10-02T07:04:59.6645414Z f525073835578ac3fe7bd36231d2d2f587ebe638
2025-10-02T07:04:59.6853236Z ##[group]Run sudo apt-get update
2025-10-02T07:04:59.6854489Z [36;1msudo apt-get update[0m
2025-10-02T07:04:59.6855793Z [36;1msudo apt-get install -y clang-format cppcheck[0m
2025-10-02T07:04:59.6894274Z shell: /usr/bin/bash -e {0}
2025-10-02T07:04:59.6895364Z ##[endgroup]
2025-10-02T07:04:59.8411439Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
2025-10-02T07:04:59.8925750Z Hit:6 https://packages.microsoft.com/repos/azure-cli noble InRelease
2025-10-02T07:04:59.8937328Z Hit:2 http://azure.archive.ubuntu.com/ubuntu noble InRelease
2025-10-02T07:04:59.8940661Z Get:7 https://packages.microsoft.com/ubuntu/24.04/prod noble InRelease [3600 B]
2025-10-02T07:04:59.8946940Z Get:3 http://azure.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
2025-10-02T07:04:59.8982768Z Get:4 http://azure.archive.ubuntu.com/ubuntu noble-backports InRelease [126 kB]
2025-10-02T07:04:59.9004228Z Get:5 http://azure.archive.ubuntu.com/ubuntu noble-security InRelease [126 kB]
2025-10-02T07:05:00.2163333Z Get:8 https://packages.microsoft.com/ubuntu/24.04/prod noble/main arm64 Packages [42.0 kB]
2025-10-02T07:05:00.2444919Z Get:9 https://packages.microsoft.com/ubuntu/24.04/prod noble/main armhf Packages [10.4 kB]
2025-10-02T07:05:00.2555088Z Get:10 https://packages.microsoft.com/ubuntu/24.04/prod noble/main amd64 Packages [58.8 kB]
2025-10-02T07:05:00.2571473Z Get:11 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [1475 kB]
2025-10-02T07:05:00.2664001Z Get:12 http://azure.archive.ubuntu.com/ubuntu noble-updates/main Translation-en [285 kB]
2025-10-02T07:05:00.2689914Z Get:13 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 Components [175 kB]
2025-10-02T07:05:00.2709745Z Get:14 http://azure.archive.ubuntu.com/ubuntu noble-updates/main amd64 c-n-f Metadata [15.3 kB]
2025-10-02T07:05:00.2720684Z Get:15 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1486 kB]
2025-10-02T07:05:00.2814145Z Get:16 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe Translation-en [300 kB]
2025-10-02T07:05:00.2843087Z Get:17 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Components [377 kB]
2025-10-02T07:05:00.2871762Z Get:18 http://azure.archive.ubuntu.com/ubuntu noble-updates/universe amd64 c-n-f Metadata [31.1 kB]
2025-10-02T07:05:00.2881436Z Get:19 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Packages [2034 kB]
2025-10-02T07:05:00.3003070Z Get:20 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted Translation-en [458 kB]
2025-10-02T07:05:00.3484990Z Get:21 http://azure.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Components [212 B]
2025-10-02T07:05:00.3495985Z Get:22 http://azure.archive.ubuntu.com/ubuntu noble-updates/multiverse Translation-en [6116 B]
2025-10-02T07:05:00.3504297Z Get:23 http://azure.archive.ubuntu.com/ubuntu noble-updates/multiverse amd64 Components [940 B]
2025-10-02T07:05:00.3515093Z Get:24 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 Packages [40.4 kB]
2025-10-02T07:05:00.3525833Z Get:25 http://azure.archive.ubuntu.com/ubuntu noble-backports/main Translation-en [9208 B]
2025-10-02T07:05:00.3535006Z Get:26 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 Components [7148 B]
2025-10-02T07:05:00.3544306Z Get:27 http://azure.archive.ubuntu.com/ubuntu noble-backports/main amd64 c-n-f Metadata [368 B]
2025-10-02T07:05:00.3552515Z Get:28 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Packages [28.9 kB]
2025-10-02T07:05:00.3568184Z Get:29 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe Translation-en [17.5 kB]
2025-10-02T07:05:00.3585762Z Get:30 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Components [11.0 kB]
2025-10-02T07:05:00.3594355Z Get:31 http://azure.archive.ubuntu.com/ubuntu noble-backports/universe amd64 c-n-f Metadata [1444 B]
2025-10-02T07:05:00.3611522Z Get:32 http://azure.archive.ubuntu.com/ubuntu noble-backports/restricted amd64 Components [212 B]
2025-10-02T07:05:00.3625954Z Get:33 http://azure.archive.ubuntu.com/ubuntu noble-backports/multiverse amd64 Components [212 B]
2025-10-02T07:05:00.3711629Z Get:34 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Packages [1198 kB]
2025-10-02T07:05:00.4237366Z Get:35 http://azure.archive.ubuntu.com/ubuntu noble-security/main Translation-en [201 kB]
2025-10-02T07:05:00.4260493Z Get:36 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 Components [21.5 kB]
2025-10-02T07:05:00.4267034Z Get:37 http://azure.archive.ubuntu.com/ubuntu noble-security/main amd64 c-n-f Metadata [8744 B]
2025-10-02T07:05:00.4279525Z Get:38 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Packages [881 kB]
2025-10-02T07:05:00.4324957Z Get:39 http://azure.archive.ubuntu.com/ubuntu noble-security/universe Translation-en [196 kB]
2025-10-02T07:05:00.4344454Z Get:40 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 Components [52.3 kB]
2025-10-02T07:05:00.4364007Z Get:41 http://azure.archive.ubuntu.com/ubuntu noble-security/universe amd64 c-n-f Metadata [18.0 kB]
2025-10-02T07:05:00.4372395Z Get:42 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Packages [1933 kB]
2025-10-02T07:05:00.4466034Z Get:43 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted Translation-en [438 kB]
2025-10-02T07:05:00.4496761Z Get:44 http://azure.archive.ubuntu.com/ubuntu noble-security/restricted amd64 Components [208 B]
2025-10-02T07:05:00.4505354Z Get:45 http://azure.archive.ubuntu.com/ubuntu noble-security/multiverse Translation-en [5844 B]
2025-10-02T07:05:00.4515814Z Get:46 http://azure.archive.ubuntu.com/ubuntu noble-security/multiverse amd64 Components [208 B]
2025-10-02T07:05:09.3438212Z Fetched 12.2 MB in 2s (7317 kB/s)
2025-10-02T07:05:10.0481403Z Reading package lists...
2025-10-02T07:05:10.0809746Z Reading package lists...
2025-10-02T07:05:10.2438535Z Building dependency tree...
2025-10-02T07:05:10.2446127Z Reading state information...
2025-10-02T07:05:10.4001045Z Suggested packages:
2025-10-02T07:05:10.4001516Z   cppcheck-gui clang clang-tidy
2025-10-02T07:05:10.4263669Z The following NEW packages will be installed:
2025-10-02T07:05:10.4271800Z   clang-format cppcheck
2025-10-02T07:05:10.4449805Z 0 upgraded, 2 newly installed, 0 to remove and 27 not upgraded.
2025-10-02T07:05:10.4450397Z Need to get 2142 kB of archives.
2025-10-02T07:05:10.4450925Z After this operation, 9530 kB of additional disk space will be used.
2025-10-02T07:05:10.4451614Z Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [144 B]
2025-10-02T07:05:10.4949792Z Get:2 http://azure.archive.ubuntu.com/ubuntu noble/universe amd64 clang-format amd64 1:18.0-59~exp2 [5970 B]
2025-10-02T07:05:10.5378605Z Get:3 http://azure.archive.ubuntu.com/ubuntu noble/universe amd64 cppcheck amd64 2.13.0-2ubuntu3 [2136 kB]
2025-10-02T07:05:10.8555680Z Fetched 2142 kB in 0s (14.1 MB/s)
2025-10-02T07:05:10.9056920Z Selecting previously unselected package clang-format:amd64.
2025-10-02T07:05:10.9527395Z (Reading database ... 
2025-10-02T07:05:10.9527866Z (Reading database ... 5%
2025-10-02T07:05:10.9528337Z (Reading database ... 10%
2025-10-02T07:05:10.9528724Z (Reading database ... 15%
2025-10-02T07:05:10.9529084Z (Reading database ... 20%
2025-10-02T07:05:10.9530285Z (Reading database ... 25%
2025-10-02T07:05:10.9530656Z (Reading database ... 30%
2025-10-02T07:05:10.9531006Z (Reading database ... 35%
2025-10-02T07:05:10.9531358Z (Reading database ... 40%
2025-10-02T07:05:10.9531701Z (Reading database ... 45%
2025-10-02T07:05:10.9532073Z (Reading database ... 50%
2025-10-02T07:05:11.1188722Z (Reading database ... 55%
2025-10-02T07:05:11.8975753Z (Reading database ... 60%
2025-10-02T07:05:12.5762132Z (Reading database ... 65%
2025-10-02T07:05:13.2464007Z (Reading database ... 70%
2025-10-02T07:05:13.9397610Z (Reading database ... 75%
2025-10-02T07:05:14.6831221Z (Reading database ... 80%
2025-10-02T07:05:15.4990079Z (Reading database ... 85%
2025-10-02T07:05:16.4118698Z (Reading database ... 90%
2025-10-02T07:05:17.2339590Z (Reading database ... 95%
2025-10-02T07:05:17.2340235Z (Reading database ... 100%
2025-10-02T07:05:17.2340886Z (Reading database ... 214164 files and directories currently installed.)
2025-10-02T07:05:17.2384200Z Preparing to unpack .../clang-format_1%3a18.0-59~exp2_amd64.deb ...
2025-10-02T07:05:17.2411487Z Unpacking clang-format:amd64 (1:18.0-59~exp2) ...
2025-10-02T07:05:17.3504969Z Selecting previously unselected package cppcheck.
2025-10-02T07:05:17.3637596Z Preparing to unpack .../cppcheck_2.13.0-2ubuntu3_amd64.deb ...
2025-10-02T07:05:17.3651214Z Unpacking cppcheck (2.13.0-2ubuntu3) ...
2025-10-02T07:05:17.4874748Z Setting up clang-format:amd64 (1:18.0-59~exp2) ...
2025-10-02T07:05:17.4907343Z Setting up cppcheck (2.13.0-2ubuntu3) ...
2025-10-02T07:05:17.4940892Z Processing triggers for man-db (2.12.0-4build2) ...
2025-10-02T07:07:08.0348699Z 
2025-10-02T07:07:08.0349584Z Running kernel seems to be up-to-date.
2025-10-02T07:07:08.0349982Z 
2025-10-02T07:07:08.0350109Z Restarting services...
2025-10-02T07:07:08.0425113Z 
2025-10-02T07:07:08.0425676Z Service restarts being deferred:
2025-10-02T07:07:08.0430216Z  systemctl restart hosted-compute-agent.service
2025-10-02T07:07:08.0430760Z 
2025-10-02T07:07:08.0430919Z No containers need to be restarted.
2025-10-02T07:07:08.0431199Z 
2025-10-02T07:07:08.0431391Z No user sessions are running outdated binaries.
2025-10-02T07:07:08.0431586Z 
2025-10-02T07:07:08.0431773Z No VM guests are running outdated hypervisor (qemu) binaries on this host.
2025-10-02T07:07:09.0711547Z ##[group]Run find src -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror || true
2025-10-02T07:07:09.0712158Z [36;1mfind src -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror || true[0m
2025-10-02T07:07:09.0746072Z shell: /usr/bin/bash -e {0}
2025-10-02T07:07:09.0746295Z ##[endgroup]
2025-10-02T07:07:12.2130127Z src/qt/utils/GitWorker.cpp:7:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2138347Z GitWorker::GitWorker(VersionTools::GitManager *gitManager, QObject *parent)
2025-10-02T07:07:12.2139083Z                                              ^
2025-10-02T07:07:12.2140070Z src/qt/utils/GitWorker.cpp:7:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2141080Z GitWorker::GitWorker(VersionTools::GitManager *gitManager, QObject *parent)
2025-10-02T07:07:12.2141728Z                                                ^
2025-10-02T07:07:12.2142563Z src/qt/utils/GitWorker.cpp:7:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2143558Z GitWorker::GitWorker(VersionTools::GitManager *gitManager, QObject *parent)
2025-10-02T07:07:12.2144231Z                                                                   ^
2025-10-02T07:07:12.2144997Z src/qt/utils/GitWorker.cpp:7:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2145982Z GitWorker::GitWorker(VersionTools::GitManager *gitManager, QObject *parent)
2025-10-02T07:07:12.2146645Z                                                                     ^
2025-10-02T07:07:12.2147390Z src/qt/utils/GitWorker.cpp:8:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2147869Z     : QObject(parent)
2025-10-02T07:07:12.2148084Z                      ^
2025-10-02T07:07:12.2148535Z src/qt/utils/GitWorker.cpp:9:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2148981Z     , m_gitManager(gitManager)
2025-10-02T07:07:12.2149184Z                               ^
2025-10-02T07:07:12.2149828Z src/qt/utils/GitWorker.cpp:10:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2150223Z {
2025-10-02T07:07:12.2150363Z  ^
2025-10-02T07:07:12.2150680Z src/qt/utils/GitWorker.cpp:13:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2151130Z void GitWorker::openRepository(const QString &path)
2025-10-02T07:07:12.2151396Z                                             ^
2025-10-02T07:07:12.2151782Z src/qt/utils/GitWorker.cpp:13:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2152213Z void GitWorker::openRepository(const QString &path)
2025-10-02T07:07:12.2152472Z                                               ^
2025-10-02T07:07:12.2152861Z src/qt/utils/GitWorker.cpp:13:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2153289Z void GitWorker::openRepository(const QString &path)
2025-10-02T07:07:12.2153833Z                                                    ^
2025-10-02T07:07:12.2154237Z src/qt/utils/GitWorker.cpp:15:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2154690Z     emit operationStarted(tr("Opening repository..."));
2025-10-02T07:07:12.2154966Z                                                        ^
2025-10-02T07:07:12.2155354Z src/qt/utils/GitWorker.cpp:17:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2155834Z     auto result = m_gitManager->openRepository(path.toStdString());
2025-10-02T07:07:12.2156145Z                                                                    ^
2025-10-02T07:07:12.2156549Z src/qt/utils/GitWorker.cpp:21:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2156994Z         emit operationFinished(tr("Repository opened"), true);
2025-10-02T07:07:12.2157477Z                                                               ^
2025-10-02T07:07:12.2157901Z src/qt/utils/GitWorker.cpp:31:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2158304Z void GitWorker::refreshStatus()
2025-10-02T07:07:12.2158510Z                                ^
2025-10-02T07:07:12.2158866Z src/qt/utils/GitWorker.cpp:33:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2159553Z     emit operationStarted(tr("Refreshing status..."));
2025-10-02T07:07:12.2159825Z                                                       ^
2025-10-02T07:07:12.2160221Z src/qt/utils/GitWorker.cpp:40:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2160635Z     } catch (const std::exception &e) {
2025-10-02T07:07:12.2160858Z                                  ^
2025-10-02T07:07:12.2161383Z src/qt/utils/GitWorker.cpp:40:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2162094Z     } catch (const std::exception &e) {
2025-10-02T07:07:12.2162478Z                                    ^
2025-10-02T07:07:12.2163120Z src/qt/utils/GitWorker.cpp:46:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2163895Z void GitWorker::stageFiles(const QStringList &files)
2025-10-02T07:07:12.2164353Z                                             ^
2025-10-02T07:07:12.2165022Z src/qt/utils/GitWorker.cpp:46:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2165785Z void GitWorker::stageFiles(const QStringList &files)
2025-10-02T07:07:12.2166230Z                                               ^
2025-10-02T07:07:12.2166901Z src/qt/utils/GitWorker.cpp:46:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2167648Z void GitWorker::stageFiles(const QStringList &files)
2025-10-02T07:07:12.2168098Z                                                     ^
2025-10-02T07:07:12.2168786Z src/qt/utils/GitWorker.cpp:48:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2169663Z     emit operationStarted(tr("Staging files..."));
2025-10-02T07:07:12.2170098Z                                                   ^
2025-10-02T07:07:12.2170769Z src/qt/utils/GitWorker.cpp:51:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2171465Z     for (const QString &file : files) {
2025-10-02T07:07:12.2171848Z                       ^
2025-10-02T07:07:12.2172507Z src/qt/utils/GitWorker.cpp:51:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2173210Z     for (const QString &file : files) {
2025-10-02T07:07:12.2173585Z                         ^
2025-10-02T07:07:12.2173958Z src/qt/utils/GitWorker.cpp:53:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2174343Z     }
2025-10-02T07:07:12.2174484Z      ^
2025-10-02T07:07:12.2174806Z src/qt/utils/GitWorker.cpp:55:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2175381Z     auto result = m_gitManager->addFiles(fileList);
2025-10-02T07:07:12.2175637Z                                                    ^
2025-10-02T07:07:12.2176019Z src/qt/utils/GitWorker.cpp:66:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2176471Z void GitWorker::unstageFiles(const QStringList &files)
2025-10-02T07:07:12.2176739Z                                               ^
2025-10-02T07:07:12.2177132Z src/qt/utils/GitWorker.cpp:66:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2177569Z void GitWorker::unstageFiles(const QStringList &files)
2025-10-02T07:07:12.2177842Z                                                 ^
2025-10-02T07:07:12.2178228Z src/qt/utils/GitWorker.cpp:66:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2178666Z void GitWorker::unstageFiles(const QStringList &files)
2025-10-02T07:07:12.2179089Z                                                       ^
2025-10-02T07:07:12.2179751Z src/qt/utils/GitWorker.cpp:68:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2180190Z     emit operationStarted(tr("Unstaging files..."));
2025-10-02T07:07:12.2180452Z                                                     ^
2025-10-02T07:07:12.2180835Z src/qt/utils/GitWorker.cpp:71:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2181230Z     for (const QString &file : files) {
2025-10-02T07:07:12.2181446Z                       ^
2025-10-02T07:07:12.2181782Z src/qt/utils/GitWorker.cpp:71:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2182177Z     for (const QString &file : files) {
2025-10-02T07:07:12.2182393Z                         ^
2025-10-02T07:07:12.2182739Z src/qt/utils/GitWorker.cpp:73:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2183153Z     }
2025-10-02T07:07:12.2183397Z      ^
2025-10-02T07:07:12.2183975Z src/qt/utils/GitWorker.cpp:75:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2184717Z     auto result = m_gitManager->resetFiles(fileList);
2025-10-02T07:07:12.2185156Z                                                      ^
2025-10-02T07:07:12.2185826Z src/qt/utils/GitWorker.cpp:86:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2186619Z void GitWorker::commitChanges(const QString &message)
2025-10-02T07:07:12.2187074Z                                            ^
2025-10-02T07:07:12.2187733Z src/qt/utils/GitWorker.cpp:86:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2188495Z void GitWorker::commitChanges(const QString &message)
2025-10-02T07:07:12.2188942Z                                              ^
2025-10-02T07:07:12.2189777Z src/qt/utils/GitWorker.cpp:86:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2190258Z void GitWorker::commitChanges(const QString &message)
2025-10-02T07:07:12.2190522Z                                                      ^
2025-10-02T07:07:12.2190903Z src/qt/utils/GitWorker.cpp:88:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2191315Z     emit operationStarted(tr("Creating commit..."));
2025-10-02T07:07:12.2191566Z                                                     ^
2025-10-02T07:07:12.2191940Z src/qt/utils/GitWorker.cpp:90:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2192387Z     auto result = m_gitManager->commit(message.toStdString());
2025-10-02T07:07:12.2192672Z                                                               ^
2025-10-02T07:07:12.2193078Z src/qt/utils/GitWorker.cpp:101:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2193504Z void GitWorker::fetchRepository()
2025-10-02T07:07:12.2193716Z                                  ^
2025-10-02T07:07:12.2194277Z src/qt/utils/GitWorker.cpp:103:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2194717Z     emit operationStarted(tr("Fetching from remote..."));
2025-10-02T07:07:12.2194991Z                                                          ^
2025-10-02T07:07:12.2195383Z src/qt/utils/GitWorker.cpp:105:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2195790Z     auto result = m_gitManager->fetch();
2025-10-02T07:07:12.2196015Z                                         ^
2025-10-02T07:07:12.2196392Z src/qt/utils/GitWorker.cpp:116:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2196805Z void GitWorker::pullRepository()
2025-10-02T07:07:12.2197015Z                                 ^
2025-10-02T07:07:12.2197389Z src/qt/utils/GitWorker.cpp:118:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2197948Z     emit operationStarted(tr("Pulling from remote..."));
2025-10-02T07:07:12.2198227Z                                                         ^
2025-10-02T07:07:12.2198623Z src/qt/utils/GitWorker.cpp:120:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2199027Z     auto result = m_gitManager->pull();
2025-10-02T07:07:12.2199469Z                                        ^
2025-10-02T07:07:12.2200055Z src/qt/utils/GitWorker.cpp:131:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2200472Z void GitWorker::pushRepository()
2025-10-02T07:07:12.2200671Z                                 ^
2025-10-02T07:07:12.2201034Z src/qt/utils/GitWorker.cpp:133:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2201464Z     emit operationStarted(tr("Pushing to remote..."));
2025-10-02T07:07:12.2201726Z                                                       ^
2025-10-02T07:07:12.2202126Z src/qt/utils/GitWorker.cpp:135:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2202535Z     auto result = m_gitManager->push();
2025-10-02T07:07:12.2202752Z                                        ^
2025-10-02T07:07:12.2203120Z src/qt/utils/GitWorker.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2203499Z #include <QObject>
2025-10-02T07:07:12.2203719Z ^
2025-10-02T07:07:12.2204029Z src/qt/utils/GitWorker.h:11:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2204423Z class GitWorker : public QObject
2025-10-02T07:07:12.2204624Z                                 ^
2025-10-02T07:07:12.2204990Z src/qt/utils/GitWorker.h:13:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2205361Z     Q_OBJECT
2025-10-02T07:07:12.2205510Z             ^
2025-10-02T07:07:12.2205820Z src/qt/utils/GitWorker.h:16:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2206358Z     explicit GitWorker(VersionTools::GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:07:12.2206739Z                                                ^
2025-10-02T07:07:12.2207118Z src/qt/utils/GitWorker.h:16:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2207638Z     explicit GitWorker(VersionTools::GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:07:12.2208000Z                                                  ^
2025-10-02T07:07:12.2208383Z src/qt/utils/GitWorker.h:16:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2208901Z     explicit GitWorker(VersionTools::GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:07:12.2209412Z                                                                     ^
2025-10-02T07:07:12.2209805Z src/qt/utils/GitWorker.h:16:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2210321Z     explicit GitWorker(VersionTools::GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:07:12.2210850Z                                                                       ^
2025-10-02T07:07:12.2211241Z src/qt/utils/GitWorker.h:16:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2211763Z     explicit GitWorker(VersionTools::GitManager *gitManager, QObject *parent = nullptr);
2025-10-02T07:07:12.2212139Z                                                                                         ^
2025-10-02T07:07:12.2212532Z src/qt/utils/GitWorker.h:19:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2212946Z     void openRepository(const QString &path);
2025-10-02T07:07:12.2213182Z                                      ^
2025-10-02T07:07:12.2213564Z src/qt/utils/GitWorker.h:19:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2213981Z     void openRepository(const QString &path);
2025-10-02T07:07:12.2214217Z                                        ^
2025-10-02T07:07:12.2214704Z src/qt/utils/GitWorker.h:21:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2275312Z     void stageFiles(const QStringList &files);
2025-10-02T07:07:12.2275812Z                                      ^
2025-10-02T07:07:12.2276532Z src/qt/utils/GitWorker.h:21:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2277204Z     void stageFiles(const QStringList &files);
2025-10-02T07:07:12.2277464Z                                        ^
2025-10-02T07:07:12.2277836Z src/qt/utils/GitWorker.h:22:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2278244Z     void unstageFiles(const QStringList &files);
2025-10-02T07:07:12.2278497Z                                        ^
2025-10-02T07:07:12.2278865Z src/qt/utils/GitWorker.h:22:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2279459Z     void unstageFiles(const QStringList &files);
2025-10-02T07:07:12.2279739Z                                          ^
2025-10-02T07:07:12.2280151Z src/qt/utils/GitWorker.h:23:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2280610Z     void commitChanges(const QString &message);
2025-10-02T07:07:12.2280853Z                                     ^
2025-10-02T07:07:12.2281216Z src/qt/utils/GitWorker.h:23:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2281622Z     void commitChanges(const QString &message);
2025-10-02T07:07:12.2281856Z                                       ^
2025-10-02T07:07:12.2282224Z src/qt/utils/GitWorker.h:26:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2282626Z     void pushRepository();
2025-10-02T07:07:12.2282822Z                           ^
2025-10-02T07:07:12.2283193Z src/qt/utils/GitWorker.h:29:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2283655Z     void repositoryOpened(const QString &path);
2025-10-02T07:07:12.2283898Z                                        ^
2025-10-02T07:07:12.2284269Z src/qt/utils/GitWorker.h:29:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2284676Z     void repositoryOpened(const QString &path);
2025-10-02T07:07:12.2284912Z                                          ^
2025-10-02T07:07:12.2285283Z src/qt/utils/GitWorker.h:31:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2285700Z     void operationStarted(const QString &operation);
2025-10-02T07:07:12.2285953Z                                        ^
2025-10-02T07:07:12.2286313Z src/qt/utils/GitWorker.h:31:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2286727Z     void operationStarted(const QString &operation);
2025-10-02T07:07:12.2286976Z                                          ^
2025-10-02T07:07:12.2287354Z src/qt/utils/GitWorker.h:32:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2288092Z     void operationFinished(const QString &operation, bool success);
2025-10-02T07:07:12.2288395Z                                         ^
2025-10-02T07:07:12.2288771Z src/qt/utils/GitWorker.h:32:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2289372Z     void operationFinished(const QString &operation, bool success);
2025-10-02T07:07:12.2289682Z                                           ^
2025-10-02T07:07:12.2290063Z src/qt/utils/GitWorker.h:33:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2290471Z     void errorOccurred(const QString &error);
2025-10-02T07:07:12.2290710Z                                     ^
2025-10-02T07:07:12.2291070Z src/qt/utils/GitWorker.h:33:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2291472Z     void errorOccurred(const QString &error);
2025-10-02T07:07:12.2291828Z                                       ^
2025-10-02T07:07:12.2292206Z src/qt/utils/GitWorker.h:33:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2292601Z     void errorOccurred(const QString &error);
2025-10-02T07:07:12.2292839Z                                              ^
2025-10-02T07:07:12.2293211Z src/qt/utils/GitWorker.h:36:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2293632Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:07:12.2293863Z                             ^
2025-10-02T07:07:12.2294214Z src/qt/utils/GitWorker.h:36:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2294614Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:07:12.2294833Z                               ^
2025-10-02T07:07:12.2295258Z src/qt/utils/ThemeManager.h:7:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2295659Z class ThemeManager
2025-10-02T07:07:12.2295834Z                   ^
2025-10-02T07:07:12.2296193Z src/qt/utils/ThemeManager.h:8:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2296596Z {
2025-10-02T07:07:12.2296732Z  ^
2025-10-02T07:07:12.2297071Z src/qt/utils/ThemeManager.h:10:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2297523Z     static void applyModernTheme(QApplication *app);
2025-10-02T07:07:12.2297788Z                                              ^
2025-10-02T07:07:12.2298181Z src/qt/utils/ThemeManager.h:10:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2298628Z     static void applyModernTheme(QApplication *app);
2025-10-02T07:07:12.2298886Z                                                ^
2025-10-02T07:07:12.2299397Z src/qt/utils/ThemeManager.h:11:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2299977Z     static void applyDarkTheme(QApplication *app);
2025-10-02T07:07:12.2300267Z                                            ^
2025-10-02T07:07:12.2300674Z src/qt/utils/ThemeManager.h:11:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2301103Z     static void applyDarkTheme(QApplication *app);
2025-10-02T07:07:12.2301359Z                                              ^
2025-10-02T07:07:12.2301768Z src/qt/utils/ThemeManager.h:12:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2302224Z     static void applyLightTheme(QApplication *app);
2025-10-02T07:07:12.2302489Z                                             ^
2025-10-02T07:07:12.2302882Z src/qt/utils/ThemeManager.h:12:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2303329Z     static void applyLightTheme(QApplication *app);
2025-10-02T07:07:12.2303584Z                                               ^
2025-10-02T07:07:12.2304017Z src/qt/utils/ThemeManager.h:12:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2304593Z     static void applyLightTheme(QApplication *app);
2025-10-02T07:07:12.2304854Z                                                    ^
2025-10-02T07:07:12.2305262Z src/qt/utils/ThemeManager.h:15:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2305719Z     static void setModernPalette(QPalette &palette);
2025-10-02T07:07:12.2305986Z                                          ^
2025-10-02T07:07:12.2306382Z src/qt/utils/ThemeManager.h:15:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2306823Z     static void setModernPalette(QPalette &palette);
2025-10-02T07:07:12.2307077Z                                            ^
2025-10-02T07:07:12.2307468Z src/qt/utils/ThemeManager.h:16:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2307904Z     static void setDarkPalette(QPalette &palette);
2025-10-02T07:07:12.2308264Z                                        ^
2025-10-02T07:07:12.2308671Z src/qt/utils/ThemeManager.h:16:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2309096Z     static void setDarkPalette(QPalette &palette);
2025-10-02T07:07:12.2309497Z                                          ^
2025-10-02T07:07:12.2309881Z src/qt/utils/ThemeManager.h:17:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2310312Z     static void setLightPalette(QPalette &palette);
2025-10-02T07:07:12.2310566Z                                         ^
2025-10-02T07:07:12.2310954Z src/qt/utils/ThemeManager.h:17:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2311383Z     static void setLightPalette(QPalette &palette);
2025-10-02T07:07:12.2311633Z                                           ^
2025-10-02T07:07:12.2312033Z src/qt/utils/ThemeManager.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2312453Z #include "ThemeManager.h"
2025-10-02T07:07:12.2312654Z ^
2025-10-02T07:07:12.2312990Z src/qt/utils/ThemeManager.cpp:7:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2313459Z void ThemeManager::applyModernTheme(QApplication *app)
2025-10-02T07:07:12.2313744Z                                                 ^
2025-10-02T07:07:12.2314144Z src/qt/utils/ThemeManager.cpp:7:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2314607Z void ThemeManager::applyModernTheme(QApplication *app)
2025-10-02T07:07:12.2314873Z                                                   ^
2025-10-02T07:07:12.2315272Z src/qt/utils/ThemeManager.cpp:7:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2315743Z void ThemeManager::applyModernTheme(QApplication *app)
2025-10-02T07:07:12.2316017Z                                                       ^
2025-10-02T07:07:12.2316432Z src/qt/utils/ThemeManager.cpp:19:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2316858Z     app->setPalette(palette);
2025-10-02T07:07:12.2317071Z                              ^
2025-10-02T07:07:12.2317641Z src/qt/utils/ThemeManager.cpp:24:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2318455Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-10-02T07:07:12.2318922Z                                               ^
2025-10-02T07:07:12.2319779Z src/qt/utils/ThemeManager.cpp:24:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2320580Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-10-02T07:07:12.2321034Z                                                 ^
2025-10-02T07:07:12.2321740Z src/qt/utils/ThemeManager.cpp:24:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2322531Z void ThemeManager::applyDarkTheme(QApplication *app)
2025-10-02T07:07:12.2323000Z                                                     ^
2025-10-02T07:07:12.2323884Z src/qt/utils/ThemeManager.cpp:26:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2324647Z     app->setStyle(QStyleFactory::create("Fusion"));
2025-10-02T07:07:12.2325081Z                                                    ^
2025-10-02T07:07:12.2325781Z src/qt/utils/ThemeManager.cpp:33:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2326589Z void ThemeManager::applyLightTheme(QApplication *app)
2025-10-02T07:07:12.2327056Z                                                ^
2025-10-02T07:07:12.2327777Z src/qt/utils/ThemeManager.cpp:33:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2328591Z void ThemeManager::applyLightTheme(QApplication *app)
2025-10-02T07:07:12.2329066Z                                                  ^
2025-10-02T07:07:12.2330089Z src/qt/utils/ThemeManager.cpp:33:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2330915Z void ThemeManager::applyLightTheme(QApplication *app)
2025-10-02T07:07:12.2331385Z                                                      ^
2025-10-02T07:07:12.2332091Z src/qt/utils/ThemeManager.cpp:35:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2332868Z     app->setStyle(QStyleFactory::create("Fusion"));
2025-10-02T07:07:12.2333307Z                                                    ^
2025-10-02T07:07:12.2334012Z src/qt/utils/ThemeManager.cpp:42:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2334827Z void ThemeManager::setModernPalette(QPalette &palette)
2025-10-02T07:07:12.2335291Z                                             ^
2025-10-02T07:07:12.2335993Z src/qt/utils/ThemeManager.cpp:42:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2336790Z void ThemeManager::setModernPalette(QPalette &palette)
2025-10-02T07:07:12.2337264Z                                               ^
2025-10-02T07:07:12.2337972Z src/qt/utils/ThemeManager.cpp:42:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2338778Z void ThemeManager::setModernPalette(QPalette &palette)
2025-10-02T07:07:12.2339397Z                                                       ^
2025-10-02T07:07:12.2340115Z src/qt/utils/ThemeManager.cpp:57:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2341003Z     palette.setColor(QPalette::HighlightedText, QColor(255, 255, 255));
2025-10-02T07:07:12.2341559Z                                                                        ^
2025-10-02T07:07:12.2342283Z src/qt/utils/ThemeManager.cpp:65:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2343087Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-10-02T07:07:12.2343536Z                                           ^
2025-10-02T07:07:12.2344239Z src/qt/utils/ThemeManager.cpp:65:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2345036Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-10-02T07:07:12.2345494Z                                             ^
2025-10-02T07:07:12.2346193Z src/qt/utils/ThemeManager.cpp:65:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2346981Z void ThemeManager::setDarkPalette(QPalette &palette)
2025-10-02T07:07:12.2347439Z                                                     ^
2025-10-02T07:07:12.2348140Z src/qt/utils/ThemeManager.cpp:80:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2349000Z     palette.setColor(QPalette::HighlightedText, QColor(0, 0, 0));
2025-10-02T07:07:12.2349660Z                                                                  ^
2025-10-02T07:07:12.2350388Z src/qt/utils/ThemeManager.cpp:87:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2351196Z void ThemeManager::setLightPalette(QPalette &palette)
2025-10-02T07:07:12.2351807Z                                            ^
2025-10-02T07:07:12.2352506Z src/qt/utils/ThemeManager.cpp:87:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2353301Z void ThemeManager::setLightPalette(QPalette &palette)
2025-10-02T07:07:12.2353759Z                                              ^
2025-10-02T07:07:12.2354451Z src/qt/utils/ThemeManager.cpp:87:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2355247Z void ThemeManager::setLightPalette(QPalette &palette)
2025-10-02T07:07:12.2355707Z                                                      ^
2025-10-02T07:07:12.2356408Z src/qt/utils/ThemeManager.cpp:95:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2357173Z QString ThemeManager::getModernStyleSheet()
2025-10-02T07:07:12.2357579Z                                            ^
2025-10-02T07:07:12.2358516Z src/qt/VersionToolsMainWindow.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2359444Z #include "VersionToolsMainWindow.h"
2025-10-02T07:07:12.2359813Z ^
2025-10-02T07:07:12.2360429Z src/qt/VersionToolsMainWindow.cpp:10:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2361189Z #include <QApplication>
2025-10-02T07:07:12.2361475Z ^
2025-10-02T07:07:12.2362086Z src/qt/VersionToolsMainWindow.cpp:27:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2363009Z VersionToolsMainWindow::VersionToolsMainWindow(QWidget *parent)
2025-10-02T07:07:12.2363558Z                                                       ^
2025-10-02T07:07:12.2364306Z src/qt/VersionToolsMainWindow.cpp:27:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2365226Z VersionToolsMainWindow::VersionToolsMainWindow(QWidget *parent)
2025-10-02T07:07:12.2365785Z                                                         ^
2025-10-02T07:07:12.2366543Z src/qt/VersionToolsMainWindow.cpp:28:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2367300Z     : QMainWindow(parent)
2025-10-02T07:07:12.2367601Z                          ^
2025-10-02T07:07:12.2368280Z src/qt/VersionToolsMainWindow.cpp:29:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2369041Z     , m_centralSplitter(nullptr)
2025-10-02T07:07:12.2369523Z                                 ^
2025-10-02T07:07:12.2370240Z src/qt/VersionToolsMainWindow.cpp:30:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2370763Z     , m_contentStack(nullptr)
2025-10-02T07:07:12.2370966Z                              ^
2025-10-02T07:07:12.2371366Z src/qt/VersionToolsMainWindow.cpp:31:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2371799Z     , m_sidebarWidget(nullptr)
2025-10-02T07:07:12.2371993Z                               ^
2025-10-02T07:07:12.2372399Z src/qt/VersionToolsMainWindow.cpp:32:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2372828Z     , m_changesWidget(nullptr)
2025-10-02T07:07:12.2373015Z      ^
2025-10-02T07:07:12.2373369Z src/qt/VersionToolsMainWindow.cpp:32:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2373796Z     , m_changesWidget(nullptr)
2025-10-02T07:07:12.2373995Z                               ^
2025-10-02T07:07:12.2374386Z src/qt/VersionToolsMainWindow.cpp:33:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2374822Z     , m_historyWidget(nullptr)
2025-10-02T07:07:12.2375015Z                               ^
2025-10-02T07:07:12.2375403Z src/qt/VersionToolsMainWindow.cpp:34:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2375834Z     , m_branchesWidget(nullptr)
2025-10-02T07:07:12.2376027Z                                ^
2025-10-02T07:07:12.2376566Z src/qt/VersionToolsMainWindow.cpp:35:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2377041Z     , m_gitManager(std::make_unique<GitManager>())
2025-10-02T07:07:12.2377282Z      ^
2025-10-02T07:07:12.2377640Z src/qt/VersionToolsMainWindow.cpp:35:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2378100Z     , m_gitManager(std::make_unique<GitManager>())
2025-10-02T07:07:12.2378350Z                                                   ^
2025-10-02T07:07:12.2378787Z src/qt/VersionToolsMainWindow.cpp:36:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2379382Z     , m_gitWorker(nullptr)
2025-10-02T07:07:12.2379704Z                           ^
2025-10-02T07:07:12.2380096Z src/qt/VersionToolsMainWindow.cpp:40:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2380517Z     resize(1400, 900);
2025-10-02T07:07:12.2380689Z                       ^
2025-10-02T07:07:12.2381209Z src/qt/VersionToolsMainWindow.cpp:43:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2381691Z     m_gitWorker = new GitWorker(m_gitManager.get(), this);
2025-10-02T07:07:12.2381968Z                                                           ^
2025-10-02T07:07:12.2382402Z src/qt/VersionToolsMainWindow.cpp:50:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2382831Z     connectSignals();
2025-10-02T07:07:12.2382997Z                      ^
2025-10-02T07:07:12.2383375Z src/qt/VersionToolsMainWindow.cpp:52:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2383802Z     loadSettings();
2025-10-02T07:07:12.2383962Z                    ^
2025-10-02T07:07:12.2384335Z src/qt/VersionToolsMainWindow.cpp:58:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2384793Z         QTimer::singleShot(100, [this, lastRepo]() {
2025-10-02T07:07:12.2385060Z                                                     ^
2025-10-02T07:07:12.2385485Z src/qt/VersionToolsMainWindow.cpp:59:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2385936Z             onRepositoryOpened(lastRepo);
2025-10-02T07:07:12.2386170Z                                          ^
2025-10-02T07:07:12.2386588Z src/qt/VersionToolsMainWindow.cpp:64:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2387069Z VersionToolsMainWindow::~VersionToolsMainWindow()
2025-10-02T07:07:12.2387337Z                                                  ^
2025-10-02T07:07:12.2387761Z src/qt/VersionToolsMainWindow.cpp:69:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2388218Z void VersionToolsMainWindow::createActions()
2025-10-02T07:07:12.2388467Z                                             ^
2025-10-02T07:07:12.2388901Z src/qt/VersionToolsMainWindow.cpp:75:95: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2389736Z     connect(m_openAction, &QAction::triggered, this, &VersionToolsMainWindow::openRepository);
2025-10-02T07:07:12.2390261Z                                                                                               ^
2025-10-02T07:07:12.2391054Z src/qt/VersionToolsMainWindow.cpp:80:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2392102Z     connect(m_cloneAction, &QAction::triggered, this, &VersionToolsMainWindow::cloneRepository);
2025-10-02T07:07:12.2392808Z                                                                                                 ^
2025-10-02T07:07:12.2393605Z src/qt/VersionToolsMainWindow.cpp:85:101: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2394678Z     connect(m_refreshAction, &QAction::triggered, this, &VersionToolsMainWindow::refreshRepository);
2025-10-02T07:07:12.2395411Z                                                                                                     ^
2025-10-02T07:07:12.2396374Z src/qt/VersionToolsMainWindow.cpp:90:97: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2397426Z     connect(m_settingsAction, &QAction::triggered, this, &VersionToolsMainWindow::showSettings);
2025-10-02T07:07:12.2398124Z                                                                                                 ^
2025-10-02T07:07:12.2398925Z src/qt/VersionToolsMainWindow.cpp:95:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2399973Z     connect(m_exitAction, &QAction::triggered, this, &QWidget::close);
2025-10-02T07:07:12.2400513Z                                                                       ^
2025-10-02T07:07:12.2401296Z src/qt/VersionToolsMainWindow.cpp:100:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2402463Z     connect(m_aboutAction, &QAction::triggered, this, &VersionToolsMainWindow::showAbout);
2025-10-02T07:07:12.2403147Z                                                                                           ^
2025-10-02T07:07:12.2403984Z src/qt/VersionToolsMainWindow.cpp:107:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2404804Z void VersionToolsMainWindow::createMenus()
2025-10-02T07:07:12.2405217Z                                           ^
2025-10-02T07:07:12.2405958Z src/qt/VersionToolsMainWindow.cpp:117:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2406745Z     m_fileMenu->addAction(m_exitAction);
2025-10-02T07:07:12.2407129Z                                         ^
2025-10-02T07:07:12.2407870Z src/qt/VersionToolsMainWindow.cpp:120:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2408656Z     // View menu items will be added by widgets
2025-10-02T07:07:12.2408915Z                                                ^
2025-10-02T07:07:12.2409616Z src/qt/VersionToolsMainWindow.cpp:123:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2410082Z     // Git menu items will be added by widgets
2025-10-02T07:07:12.2410319Z                                               ^
2025-10-02T07:07:12.2410741Z src/qt/VersionToolsMainWindow.cpp:130:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2411212Z void VersionToolsMainWindow::createToolBars()
2025-10-02T07:07:12.2411456Z                                              ^
2025-10-02T07:07:12.2411877Z src/qt/VersionToolsMainWindow.cpp:142:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2412344Z void VersionToolsMainWindow::createStatusBar()
2025-10-02T07:07:12.2412606Z                                               ^
2025-10-02T07:07:12.2413026Z src/qt/VersionToolsMainWindow.cpp:146:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2413481Z     statusBar()->addWidget(m_repositoryLabel);
2025-10-02T07:07:12.2413726Z                                               ^
2025-10-02T07:07:12.2414145Z src/qt/VersionToolsMainWindow.cpp:148:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2414621Z     statusBar()->addPermanentWidget(new QLabel("|"));
2025-10-02T07:07:12.2414891Z                                                      ^
2025-10-02T07:07:12.2415321Z src/qt/VersionToolsMainWindow.cpp:152:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2415792Z     statusBar()->addPermanentWidget(m_branchLabel);
2025-10-02T07:07:12.2416051Z                                                    ^
2025-10-02T07:07:12.2416481Z src/qt/VersionToolsMainWindow.cpp:154:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2416945Z     statusBar()->addPermanentWidget(new QLabel("|"));
2025-10-02T07:07:12.2417207Z                                                      ^
2025-10-02T07:07:12.2417781Z src/qt/VersionToolsMainWindow.cpp:157:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2418245Z     statusBar()->addPermanentWidget(m_statusLabel);
2025-10-02T07:07:12.2418503Z                                                    ^
2025-10-02T07:07:12.2418934Z src/qt/VersionToolsMainWindow.cpp:165:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2419912Z void VersionToolsMainWindow::setupCentralWidget()
2025-10-02T07:07:12.2420176Z                                                  ^
2025-10-02T07:07:12.2420607Z src/qt/VersionToolsMainWindow.cpp:168:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2421060Z     setCentralWidget(m_centralSplitter);
2025-10-02T07:07:12.2421290Z                                         ^
2025-10-02T07:07:12.2421713Z src/qt/VersionToolsMainWindow.cpp:173:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2422298Z     m_centralSplitter->addWidget(m_sidebarWidget);
2025-10-02T07:07:12.2422563Z                                                   ^
2025-10-02T07:07:12.2422990Z src/qt/VersionToolsMainWindow.cpp:177:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2423449Z     m_centralSplitter->addWidget(m_contentStack);
2025-10-02T07:07:12.2423699Z                                                  ^
2025-10-02T07:07:12.2424122Z src/qt/VersionToolsMainWindow.cpp:182:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2424636Z     m_branchesWidget = new BranchesWidget(m_gitManager.get(), this);
2025-10-02T07:07:12.2425004Z                                                                     ^
2025-10-02T07:07:12.2425799Z src/qt/VersionToolsMainWindow.cpp:186:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2426605Z     m_contentStack->addWidget(m_branchesWidget);
2025-10-02T07:07:12.2427030Z                                                 ^
2025-10-02T07:07:12.2427788Z src/qt/VersionToolsMainWindow.cpp:194:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2428623Z void VersionToolsMainWindow::connectSignals()
2025-10-02T07:07:12.2429050Z                                              ^
2025-10-02T07:07:12.2429944Z src/qt/VersionToolsMainWindow.cpp:196:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2430483Z     connect(m_sidebarWidget, &SidebarWidget::selectionChanged,
2025-10-02T07:07:12.2430784Z                                                               ^
2025-10-02T07:07:12.2431224Z src/qt/VersionToolsMainWindow.cpp:197:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2431737Z             this, &VersionToolsMainWindow::onSidebarSelectionChanged);
2025-10-02T07:07:12.2432018Z                  ^
2025-10-02T07:07:12.2432410Z src/qt/VersionToolsMainWindow.cpp:197:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2432943Z             this, &VersionToolsMainWindow::onSidebarSelectionChanged);
2025-10-02T07:07:12.2433250Z                                                                       ^
2025-10-02T07:07:12.2433700Z src/qt/VersionToolsMainWindow.cpp:199:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2434190Z     connect(m_gitWorker, &GitWorker::repositoryOpened,
2025-10-02T07:07:12.2434471Z                                                       ^
2025-10-02T07:07:12.2434910Z src/qt/VersionToolsMainWindow.cpp:201:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2435389Z     connect(m_gitWorker, &GitWorker::statusChanged,
2025-10-02T07:07:12.2435653Z                                                    ^
2025-10-02T07:07:12.2436083Z src/qt/VersionToolsMainWindow.cpp:203:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2436568Z     connect(m_gitWorker, &GitWorker::operationStarted,
2025-10-02T07:07:12.2437017Z                                                       ^
2025-10-02T07:07:12.2437450Z src/qt/VersionToolsMainWindow.cpp:205:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2437920Z     connect(m_gitWorker, &GitWorker::operationFinished,
2025-10-02T07:07:12.2438184Z                                                        ^
2025-10-02T07:07:12.2438624Z src/qt/VersionToolsMainWindow.cpp:209:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2439093Z void VersionToolsMainWindow::openRepository()
2025-10-02T07:07:12.2439511Z                                              ^
2025-10-02T07:07:12.2439933Z src/qt/VersionToolsMainWindow.cpp:211:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2440420Z     QString dir = QFileDialog::getExistingDirectory(
2025-10-02T07:07:12.2440682Z                                                     ^
2025-10-02T07:07:12.2441237Z src/qt/VersionToolsMainWindow.cpp:212:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2441663Z         this,
2025-10-02T07:07:12.2441809Z              ^
2025-10-02T07:07:12.2442175Z src/qt/VersionToolsMainWindow.cpp:213:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2442610Z         tr("Open Git Repository"),
2025-10-02T07:07:12.2442827Z                                   ^
2025-10-02T07:07:12.2443233Z src/qt/VersionToolsMainWindow.cpp:214:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2443704Z         QDir::homePath(),
2025-10-02T07:07:12.2443890Z                          ^
2025-10-02T07:07:12.2444275Z src/qt/VersionToolsMainWindow.cpp:215:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2444792Z         QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks
2025-10-02T07:07:12.2445110Z                                                                     ^
2025-10-02T07:07:12.2445564Z src/qt/VersionToolsMainWindow.cpp:216:7: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2445981Z     );
2025-10-02T07:07:12.2446124Z       ^
2025-10-02T07:07:12.2446484Z src/qt/VersionToolsMainWindow.cpp:223:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2446953Z void VersionToolsMainWindow::cloneRepository()
2025-10-02T07:07:12.2447209Z                                               ^
2025-10-02T07:07:12.2447630Z src/qt/VersionToolsMainWindow.cpp:226:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2448121Z     QMessageBox::information(this, tr("Clone Repository"), 
2025-10-02T07:07:12.2448401Z                                                           ^
2025-10-02T07:07:12.2448837Z src/qt/VersionToolsMainWindow.cpp:230:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2449463Z void VersionToolsMainWindow::refreshRepository()
2025-10-02T07:07:12.2449727Z                                                 ^
2025-10-02T07:07:12.2450158Z src/qt/VersionToolsMainWindow.cpp:237:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2450617Z void VersionToolsMainWindow::showSettings()
2025-10-02T07:07:12.2450865Z                                            ^
2025-10-02T07:07:12.2451283Z src/qt/VersionToolsMainWindow.cpp:243:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2451741Z void VersionToolsMainWindow::showAbout()
2025-10-02T07:07:12.2451979Z                                         ^
2025-10-02T07:07:12.2452397Z src/qt/VersionToolsMainWindow.cpp:245:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2452877Z     QMessageBox::about(this, tr("About Version Tools"),
2025-10-02T07:07:12.2453140Z                                                        ^
2025-10-02T07:07:12.2453897Z src/qt/VersionToolsMainWindow.cpp:246:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2454333Z         tr("<h2>Version Tools 1.0.0</h2>"
2025-10-02T07:07:12.2454556Z                                          ^
2025-10-02T07:07:12.2454976Z src/qt/VersionToolsMainWindow.cpp:247:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2455471Z            "<p>A modern Git GUI application built with Qt and C++.</p>"
2025-10-02T07:07:12.2455773Z                                                                        ^
2025-10-02T07:07:12.2456216Z src/qt/VersionToolsMainWindow.cpp:248:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2456918Z            "<p>Copyright © 2024 VersionTools Project</p>"
2025-10-02T07:07:12.2457390Z src/qt/VersionToolsMainWindow.cpp:249:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2457973Z            "<p>Built with Qt %1</p>").arg(QT_VERSION_STR));
2025-10-02T07:07:12.2458238Z                                      ^
2025-10-02T07:07:12.2458672Z src/qt/VersionToolsMainWindow.cpp:252:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2459203Z void VersionToolsMainWindow::onSidebarSelectionChanged(int index)
2025-10-02T07:07:12.2459675Z                                                                  ^
2025-10-02T07:07:12.2460114Z src/qt/VersionToolsMainWindow.cpp:255:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2460576Z         m_contentStack->setCurrentIndex(index);
2025-10-02T07:07:12.2460819Z                                                ^
2025-10-02T07:07:12.2461245Z src/qt/VersionToolsMainWindow.cpp:265:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2461781Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-10-02T07:07:12.2462117Z                                                              ^
2025-10-02T07:07:12.2462563Z src/qt/VersionToolsMainWindow.cpp:265:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2463092Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-10-02T07:07:12.2463429Z                                                                ^
2025-10-02T07:07:12.2463867Z src/qt/VersionToolsMainWindow.cpp:265:69: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2464397Z void VersionToolsMainWindow::onRepositoryOpened(const QString &path)
2025-10-02T07:07:12.2464728Z                                                                     ^
2025-10-02T07:07:12.2465166Z src/qt/VersionToolsMainWindow.cpp:269:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2465603Z     updateStatusBar();
2025-10-02T07:07:12.2465776Z                       ^
2025-10-02T07:07:12.2466162Z src/qt/VersionToolsMainWindow.cpp:273:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2466628Z     settings.setValue("lastRepository", path);
2025-10-02T07:07:12.2466869Z                                               ^
2025-10-02T07:07:12.2467296Z src/qt/VersionToolsMainWindow.cpp:276:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2467752Z     m_sidebarWidget->setRepositoryPath(path);
2025-10-02T07:07:12.2467994Z                                              ^
2025-10-02T07:07:12.2468412Z src/qt/VersionToolsMainWindow.cpp:281:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2468867Z     m_branchesWidget->setRepository(path);
2025-10-02T07:07:12.2469102Z                                           ^
2025-10-02T07:07:12.2469621Z src/qt/VersionToolsMainWindow.cpp:287:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2470123Z void VersionToolsMainWindow::onRepositoryStatusChanged()
2025-10-02T07:07:12.2470416Z                                                         ^
2025-10-02T07:07:12.2470984Z src/qt/VersionToolsMainWindow.cpp:290:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2471413Z     updateStatusBar();
2025-10-02T07:07:12.2471589Z                       ^
2025-10-02T07:07:12.2471972Z src/qt/VersionToolsMainWindow.cpp:297:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2472534Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-10-02T07:07:12.2472965Z                                                                 ^
2025-10-02T07:07:12.2473406Z src/qt/VersionToolsMainWindow.cpp:297:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2473967Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-10-02T07:07:12.2474330Z                                                                   ^
2025-10-02T07:07:12.2474878Z src/qt/VersionToolsMainWindow.cpp:297:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2475447Z void VersionToolsMainWindow::onGitOperationStarted(const QString &operation)
2025-10-02T07:07:12.2475800Z                                                                             ^
2025-10-02T07:07:12.2476249Z src/qt/VersionToolsMainWindow.cpp:304:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2476853Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-10-02T07:07:12.2477266Z                                                                  ^
2025-10-02T07:07:12.2477709Z src/qt/VersionToolsMainWindow.cpp:304:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2478312Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-10-02T07:07:12.2478719Z                                                                    ^
2025-10-02T07:07:12.2479159Z src/qt/VersionToolsMainWindow.cpp:304:92: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2479922Z void VersionToolsMainWindow::onGitOperationFinished(const QString &operation, bool success)
2025-10-02T07:07:12.2480338Z                                                                                            ^
2025-10-02T07:07:12.2480791Z src/qt/VersionToolsMainWindow.cpp:306:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2481225Z     Q_UNUSED(operation)
2025-10-02T07:07:12.2481401Z                        ^
2025-10-02T07:07:12.2481793Z src/qt/VersionToolsMainWindow.cpp:313:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2482363Z         QTimer::singleShot(3000, [this]() {
2025-10-02T07:07:12.2482757Z                                            ^
2025-10-02T07:07:12.2483511Z src/qt/VersionToolsMainWindow.cpp:314:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2484315Z             m_statusLabel->setText(tr("Ready"));
2025-10-02T07:07:12.2484730Z                                                 ^
2025-10-02T07:07:12.2485486Z src/qt/VersionToolsMainWindow.cpp:319:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2486328Z void VersionToolsMainWindow::updateWindowTitle()
2025-10-02T07:07:12.2486776Z                                                 ^
2025-10-02T07:07:12.2487229Z src/qt/VersionToolsMainWindow.cpp:321:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2487670Z     QString title = "Version Tools";
2025-10-02T07:07:12.2487883Z                                     ^
2025-10-02T07:07:12.2488302Z src/qt/VersionToolsMainWindow.cpp:325:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2488748Z         title += " - " + dir.dirName();
2025-10-02T07:07:12.2488970Z                                        ^
2025-10-02T07:07:12.2489538Z src/qt/VersionToolsMainWindow.cpp:330:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2490147Z     }
2025-10-02T07:07:12.2490291Z      ^
2025-10-02T07:07:12.2490655Z src/qt/VersionToolsMainWindow.cpp:335:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2491135Z void VersionToolsMainWindow::updateStatusBar()
2025-10-02T07:07:12.2491384Z                                               ^
2025-10-02T07:07:12.2491815Z src/qt/VersionToolsMainWindow.cpp:347:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2492274Z void VersionToolsMainWindow::loadSettings()
2025-10-02T07:07:12.2492520Z                                            ^
2025-10-02T07:07:12.2492938Z src/qt/VersionToolsMainWindow.cpp:350:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2493391Z     settings.beginGroup("MainWindow");
2025-10-02T07:07:12.2493618Z                                       ^
2025-10-02T07:07:12.2494147Z src/qt/VersionToolsMainWindow.cpp:354:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2494634Z     restoreState(settings.value("state").toByteArray());
2025-10-02T07:07:12.2494908Z                                                         ^
2025-10-02T07:07:12.2495348Z src/qt/VersionToolsMainWindow.cpp:359:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2495764Z     }
2025-10-02T07:07:12.2495901Z      ^
2025-10-02T07:07:12.2496258Z src/qt/VersionToolsMainWindow.cpp:364:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2496714Z void VersionToolsMainWindow::saveSettings()
2025-10-02T07:07:12.2496955Z                                            ^
2025-10-02T07:07:12.2497370Z src/qt/VersionToolsMainWindow.cpp:367:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2497815Z     settings.beginGroup("MainWindow");
2025-10-02T07:07:12.2498043Z                                       ^
2025-10-02T07:07:12.2498463Z src/qt/VersionToolsMainWindow.cpp:371:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2498923Z     settings.setValue("state", saveState());
2025-10-02T07:07:12.2499153Z                                             ^
2025-10-02T07:07:12.2499715Z src/qt/VersionToolsMainWindow.cpp:376:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2500132Z     }
2025-10-02T07:07:12.2500268Z      ^
2025-10-02T07:07:12.2500619Z src/qt/VersionToolsMainWindow.cpp:381:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2501121Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-10-02T07:07:12.2501411Z                                                    ^
2025-10-02T07:07:12.2501848Z src/qt/VersionToolsMainWindow.cpp:381:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2502362Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-10-02T07:07:12.2502655Z                                                      ^
2025-10-02T07:07:12.2503088Z src/qt/VersionToolsMainWindow.cpp:381:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2503584Z void VersionToolsMainWindow::closeEvent(QCloseEvent *event)
2025-10-02T07:07:12.2503913Z                                                            ^
2025-10-02T07:07:12.2504341Z src/qt/VersionToolsMainWindow.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2504762Z #include <QMainWindow>
2025-10-02T07:07:12.2504934Z ^
2025-10-02T07:07:12.2505276Z src/qt/VersionToolsMainWindow.h:29:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2505737Z class VersionToolsMainWindow : public QMainWindow
2025-10-02T07:07:12.2505994Z                                                  ^
2025-10-02T07:07:12.2506416Z src/qt/VersionToolsMainWindow.h:31:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2506941Z     Q_OBJECT
2025-10-02T07:07:12.2507093Z             ^
2025-10-02T07:07:12.2507447Z src/qt/VersionToolsMainWindow.h:34:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2507910Z     VersionToolsMainWindow(QWidget *parent = nullptr);
2025-10-02T07:07:12.2508173Z                                   ^
2025-10-02T07:07:12.2508580Z src/qt/VersionToolsMainWindow.h:34:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2509053Z     VersionToolsMainWindow(QWidget *parent = nullptr);
2025-10-02T07:07:12.2509499Z                                     ^
2025-10-02T07:07:12.2509910Z src/qt/VersionToolsMainWindow.h:35:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2510344Z     ~VersionToolsMainWindow();
2025-10-02T07:07:12.2510540Z                               ^
2025-10-02T07:07:12.2511039Z src/qt/VersionToolsMainWindow.h:38:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2511494Z     void closeEvent(QCloseEvent *event) override;
2025-10-02T07:07:12.2511744Z                                ^
2025-10-02T07:07:12.2512132Z src/qt/VersionToolsMainWindow.h:38:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2512578Z     void closeEvent(QCloseEvent *event) override;
2025-10-02T07:07:12.2512823Z                                  ^
2025-10-02T07:07:12.2513215Z src/qt/VersionToolsMainWindow.h:38:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2513660Z     void closeEvent(QCloseEvent *event) override;
2025-10-02T07:07:12.2513904Z                                                  ^
2025-10-02T07:07:12.2514317Z src/qt/VersionToolsMainWindow.h:47:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2514761Z     void onRepositoryOpened(const QString &path);
2025-10-02T07:07:12.2515022Z                                          ^
2025-10-02T07:07:12.2515433Z src/qt/VersionToolsMainWindow.h:47:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2515879Z     void onRepositoryOpened(const QString &path);
2025-10-02T07:07:12.2516126Z                                            ^
2025-10-02T07:07:12.2516527Z src/qt/VersionToolsMainWindow.h:49:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2516999Z     void onGitOperationStarted(const QString &operation);
2025-10-02T07:07:12.2517268Z                                             ^
2025-10-02T07:07:12.2517678Z src/qt/VersionToolsMainWindow.h:49:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2518147Z     void onGitOperationStarted(const QString &operation);
2025-10-02T07:07:12.2518416Z                                               ^
2025-10-02T07:07:12.2518846Z src/qt/VersionToolsMainWindow.h:50:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2519479Z     void onGitOperationFinished(const QString &operation, bool success);
2025-10-02T07:07:12.2519800Z                                              ^
2025-10-02T07:07:12.2520211Z src/qt/VersionToolsMainWindow.h:50:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2520730Z     void onGitOperationFinished(const QString &operation, bool success);
2025-10-02T07:07:12.2521051Z                                                ^
2025-10-02T07:07:12.2521669Z src/qt/VersionToolsMainWindow.h:50:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2522603Z     void onGitOperationFinished(const QString &operation, bool success);
2025-10-02T07:07:12.2523182Z                                                                         ^
2025-10-02T07:07:12.2523946Z src/qt/VersionToolsMainWindow.h:65:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2524873Z     QSplitter *m_centralSplitter;
2025-10-02T07:07:12.2525225Z              ^
2025-10-02T07:07:12.2525856Z src/qt/VersionToolsMainWindow.h:65:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2526611Z     QSplitter *m_centralSplitter;
2025-10-02T07:07:12.2526957Z                ^
2025-10-02T07:07:12.2527586Z src/qt/VersionToolsMainWindow.h:66:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2528335Z     QStackedWidget *m_contentStack;
2025-10-02T07:07:12.2528689Z                   ^
2025-10-02T07:07:12.2529488Z src/qt/VersionToolsMainWindow.h:66:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2530254Z     QStackedWidget *m_contentStack;
2025-10-02T07:07:12.2530608Z                     ^
2025-10-02T07:07:12.2531259Z src/qt/VersionToolsMainWindow.h:67:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2532154Z     SidebarWidget *m_sidebarWidget;
2025-10-02T07:07:12.2532524Z                  ^
2025-10-02T07:07:12.2533158Z src/qt/VersionToolsMainWindow.h:67:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2533919Z     SidebarWidget *m_sidebarWidget;
2025-10-02T07:07:12.2534268Z                    ^
2025-10-02T07:07:12.2534862Z src/qt/VersionToolsMainWindow.h:68:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2535291Z     ChangesWidget *m_changesWidget;
2025-10-02T07:07:12.2535489Z                  ^
2025-10-02T07:07:12.2535848Z src/qt/VersionToolsMainWindow.h:68:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2536338Z     ChangesWidget *m_changesWidget;
2025-10-02T07:07:12.2536540Z                    ^
2025-10-02T07:07:12.2536896Z src/qt/VersionToolsMainWindow.h:69:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2537319Z     HistoryWidget *m_historyWidget;
2025-10-02T07:07:12.2537524Z                  ^
2025-10-02T07:07:12.2537883Z src/qt/VersionToolsMainWindow.h:69:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2538307Z     HistoryWidget *m_historyWidget;
2025-10-02T07:07:12.2538505Z                    ^
2025-10-02T07:07:12.2538874Z src/qt/VersionToolsMainWindow.h:70:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2539436Z     BranchesWidget *m_branchesWidget;
2025-10-02T07:07:12.2539652Z                   ^
2025-10-02T07:07:12.2540006Z src/qt/VersionToolsMainWindow.h:70:21: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2540437Z     BranchesWidget *m_branchesWidget;
2025-10-02T07:07:12.2540652Z                     ^
2025-10-02T07:07:12.2541012Z src/qt/VersionToolsMainWindow.h:70:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2541442Z     BranchesWidget *m_branchesWidget;
2025-10-02T07:07:12.2541671Z                                      ^
2025-10-02T07:07:12.2542078Z src/qt/VersionToolsMainWindow.h:73:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2542488Z     QMenu *m_fileMenu;
2025-10-02T07:07:12.2542663Z          ^
2025-10-02T07:07:12.2543008Z src/qt/VersionToolsMainWindow.h:73:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2543425Z     QMenu *m_fileMenu;
2025-10-02T07:07:12.2543591Z            ^
2025-10-02T07:07:12.2543937Z src/qt/VersionToolsMainWindow.h:74:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2544349Z     QMenu *m_viewMenu;
2025-10-02T07:07:12.2544514Z          ^
2025-10-02T07:07:12.2544859Z src/qt/VersionToolsMainWindow.h:74:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2545266Z     QMenu *m_viewMenu;
2025-10-02T07:07:12.2545430Z            ^
2025-10-02T07:07:12.2545781Z src/qt/VersionToolsMainWindow.h:75:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2546329Z     QMenu *m_gitMenu;
2025-10-02T07:07:12.2546496Z          ^
2025-10-02T07:07:12.2546837Z src/qt/VersionToolsMainWindow.h:75:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2547250Z     QMenu *m_gitMenu;
2025-10-02T07:07:12.2547407Z            ^
2025-10-02T07:07:12.2547755Z src/qt/VersionToolsMainWindow.h:76:10: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2548389Z     QMenu *m_helpMenu;
2025-10-02T07:07:12.2548674Z          ^
2025-10-02T07:07:12.2549415Z src/qt/VersionToolsMainWindow.h:76:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2550164Z     QMenu *m_helpMenu;
2025-10-02T07:07:12.2550442Z            ^
2025-10-02T07:07:12.2551061Z src/qt/VersionToolsMainWindow.h:76:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2551800Z     QMenu *m_helpMenu;
2025-10-02T07:07:12.2552243Z                       ^
2025-10-02T07:07:12.2552905Z src/qt/VersionToolsMainWindow.h:78:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2553646Z     QAction *m_openAction;
2025-10-02T07:07:12.2553955Z            ^
2025-10-02T07:07:12.2554571Z src/qt/VersionToolsMainWindow.h:78:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2555312Z     QAction *m_openAction;
2025-10-02T07:07:12.2555624Z              ^
2025-10-02T07:07:12.2556247Z src/qt/VersionToolsMainWindow.h:79:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2556992Z     QAction *m_cloneAction;
2025-10-02T07:07:12.2557297Z            ^
2025-10-02T07:07:12.2557918Z src/qt/VersionToolsMainWindow.h:79:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2558657Z     QAction *m_cloneAction;
2025-10-02T07:07:12.2558983Z              ^
2025-10-02T07:07:12.2559546Z src/qt/VersionToolsMainWindow.h:80:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2559975Z     QAction *m_refreshAction;
2025-10-02T07:07:12.2560168Z            ^
2025-10-02T07:07:12.2560512Z src/qt/VersionToolsMainWindow.h:80:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2560938Z     QAction *m_refreshAction;
2025-10-02T07:07:12.2561120Z              ^
2025-10-02T07:07:12.2561472Z src/qt/VersionToolsMainWindow.h:81:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2561891Z     QAction *m_settingsAction;
2025-10-02T07:07:12.2562084Z            ^
2025-10-02T07:07:12.2562432Z src/qt/VersionToolsMainWindow.h:81:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2562848Z     QAction *m_settingsAction;
2025-10-02T07:07:12.2563045Z              ^
2025-10-02T07:07:12.2563394Z src/qt/VersionToolsMainWindow.h:82:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2563819Z     QAction *m_exitAction;
2025-10-02T07:07:12.2563994Z            ^
2025-10-02T07:07:12.2564341Z src/qt/VersionToolsMainWindow.h:82:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2564754Z     QAction *m_exitAction;
2025-10-02T07:07:12.2564934Z              ^
2025-10-02T07:07:12.2565289Z src/qt/VersionToolsMainWindow.h:83:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2565712Z     QAction *m_aboutAction;
2025-10-02T07:07:12.2565900Z            ^
2025-10-02T07:07:12.2566245Z src/qt/VersionToolsMainWindow.h:83:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2566664Z     QAction *m_aboutAction;
2025-10-02T07:07:12.2566836Z              ^
2025-10-02T07:07:12.2567186Z src/qt/VersionToolsMainWindow.h:84:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2567605Z     QAction *m_aboutQtAction;
2025-10-02T07:07:12.2567796Z            ^
2025-10-02T07:07:12.2568289Z src/qt/VersionToolsMainWindow.h:84:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2568885Z     QAction *m_aboutQtAction;
2025-10-02T07:07:12.2569478Z              ^
2025-10-02T07:07:12.2570112Z src/qt/VersionToolsMainWindow.h:84:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2570864Z     QAction *m_aboutQtAction;
2025-10-02T07:07:12.2571188Z                              ^
2025-10-02T07:07:12.2571872Z src/qt/VersionToolsMainWindow.h:87:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2572625Z     QToolBar *m_mainToolBar;
2025-10-02T07:07:12.2572941Z             ^
2025-10-02T07:07:12.2573567Z src/qt/VersionToolsMainWindow.h:87:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2574177Z     QToolBar *m_mainToolBar;
2025-10-02T07:07:12.2574368Z               ^
2025-10-02T07:07:12.2574917Z src/qt/VersionToolsMainWindow.h:87:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2575350Z     QToolBar *m_mainToolBar;
2025-10-02T07:07:12.2575534Z                             ^
2025-10-02T07:07:12.2575921Z src/qt/VersionToolsMainWindow.h:90:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2576346Z     QLabel *m_repositoryLabel;
2025-10-02T07:07:12.2576532Z           ^
2025-10-02T07:07:12.2576885Z src/qt/VersionToolsMainWindow.h:90:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2577303Z     QLabel *m_repositoryLabel;
2025-10-02T07:07:12.2577491Z             ^
2025-10-02T07:07:12.2577842Z src/qt/VersionToolsMainWindow.h:91:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2578263Z     QLabel *m_branchLabel;
2025-10-02T07:07:12.2578437Z           ^
2025-10-02T07:07:12.2578796Z src/qt/VersionToolsMainWindow.h:91:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2579365Z     QLabel *m_branchLabel;
2025-10-02T07:07:12.2579546Z             ^
2025-10-02T07:07:12.2579897Z src/qt/VersionToolsMainWindow.h:92:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2580308Z     QLabel *m_statusLabel;
2025-10-02T07:07:12.2580483Z           ^
2025-10-02T07:07:12.2580824Z src/qt/VersionToolsMainWindow.h:92:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2581241Z     QLabel *m_statusLabel;
2025-10-02T07:07:12.2581411Z             ^
2025-10-02T07:07:12.2581763Z src/qt/VersionToolsMainWindow.h:93:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2582193Z     QProgressBar *m_progressBar;
2025-10-02T07:07:12.2582387Z                 ^
2025-10-02T07:07:12.2582747Z src/qt/VersionToolsMainWindow.h:93:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2583169Z     QProgressBar *m_progressBar;
2025-10-02T07:07:12.2583380Z                   ^
2025-10-02T07:07:12.2584006Z src/qt/VersionToolsMainWindow.h:93:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2584757Z     QProgressBar *m_progressBar;
2025-10-02T07:07:12.2585104Z                                 ^
2025-10-02T07:07:12.2585795Z src/qt/VersionToolsMainWindow.h:97:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2586543Z     GitWorker *m_gitWorker;
2025-10-02T07:07:12.2586854Z              ^
2025-10-02T07:07:12.2587483Z src/qt/VersionToolsMainWindow.h:97:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2588221Z     GitWorker *m_gitWorker;
2025-10-02T07:07:12.2588533Z                ^
2025-10-02T07:07:12.2588888Z src/qt/widgets/ChangesWidget.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2589493Z #include <QWidget>
2025-10-02T07:07:12.2589653Z ^
2025-10-02T07:07:12.2589989Z src/qt/widgets/ChangesWidget.h:26:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2590554Z class ChangesWidget : public QWidget
2025-10-02T07:07:12.2590769Z                                     ^
2025-10-02T07:07:12.2591167Z src/qt/widgets/ChangesWidget.h:28:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2591566Z     Q_OBJECT
2025-10-02T07:07:12.2591714Z             ^
2025-10-02T07:07:12.2592051Z src/qt/widgets/ChangesWidget.h:31:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2592645Z     explicit ChangesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2593040Z                                                    ^
2025-10-02T07:07:12.2593450Z src/qt/widgets/ChangesWidget.h:31:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2594025Z     explicit ChangesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2594525Z                                                      ^
2025-10-02T07:07:12.2594944Z src/qt/widgets/ChangesWidget.h:31:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2595517Z     explicit ChangesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2595903Z                                                                         ^
2025-10-02T07:07:12.2596333Z src/qt/widgets/ChangesWidget.h:31:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2596897Z     explicit ChangesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2597289Z                                                                           ^
2025-10-02T07:07:12.2597718Z src/qt/widgets/ChangesWidget.h:33:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2598151Z     void setRepository(const QString &path);
2025-10-02T07:07:12.2598418Z                                     ^
2025-10-02T07:07:12.2599145Z src/qt/widgets/ChangesWidget.h:33:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2600041Z     void setRepository(const QString &path);
2025-10-02T07:07:12.2600445Z                                       ^
2025-10-02T07:07:12.2601155Z src/qt/widgets/ChangesWidget.h:34:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2601849Z     void refreshChanges();
2025-10-02T07:07:12.2602036Z                           ^
2025-10-02T07:07:12.2602413Z src/qt/widgets/ChangesWidget.h:40:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2602857Z     void onFileItemChanged(QListWidgetItem *item);
2025-10-02T07:07:12.2603115Z                                           ^
2025-10-02T07:07:12.2603515Z src/qt/widgets/ChangesWidget.h:40:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2604004Z     void onFileItemChanged(QListWidgetItem *item);
2025-10-02T07:07:12.2604264Z                                             ^
2025-10-02T07:07:12.2604664Z src/qt/widgets/ChangesWidget.h:42:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2605084Z     void showCommitDialog();
2025-10-02T07:07:12.2605278Z                             ^
2025-10-02T07:07:12.2605654Z src/qt/widgets/ChangesWidget.h:48:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2606081Z     void stageFile(const QString &filePath);
2025-10-02T07:07:12.2606313Z                                 ^
2025-10-02T07:07:12.2606702Z src/qt/widgets/ChangesWidget.h:48:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2607129Z     void stageFile(const QString &filePath);
2025-10-02T07:07:12.2607362Z                                   ^
2025-10-02T07:07:12.2607756Z src/qt/widgets/ChangesWidget.h:49:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2608350Z     void unstageFile(const QString &filePath);
2025-10-02T07:07:12.2608585Z                                   ^
2025-10-02T07:07:12.2608975Z src/qt/widgets/ChangesWidget.h:49:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2609558Z     void unstageFile(const QString &filePath);
2025-10-02T07:07:12.2609792Z                                     ^
2025-10-02T07:07:12.2610185Z src/qt/widgets/ChangesWidget.h:51:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2610622Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:07:12.2610851Z                             ^
2025-10-02T07:07:12.2611224Z src/qt/widgets/ChangesWidget.h:51:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2611655Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:07:12.2611919Z                               ^
2025-10-02T07:07:12.2612759Z src/qt/widgets/ChangesWidget.h:55:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2613511Z     QVBoxLayout *m_layout;
2025-10-02T07:07:12.2613818Z                ^
2025-10-02T07:07:12.2614396Z src/qt/widgets/ChangesWidget.h:55:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2614807Z     QVBoxLayout *m_layout;
2025-10-02T07:07:12.2614986Z                  ^
2025-10-02T07:07:12.2615332Z src/qt/widgets/ChangesWidget.h:56:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2615744Z     QToolBar *m_toolbar;
2025-10-02T07:07:12.2615918Z             ^
2025-10-02T07:07:12.2616262Z src/qt/widgets/ChangesWidget.h:56:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2616669Z     QToolBar *m_toolbar;
2025-10-02T07:07:12.2616840Z               ^
2025-10-02T07:07:12.2617189Z src/qt/widgets/ChangesWidget.h:57:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2617606Z     QSplitter *m_splitter;
2025-10-02T07:07:12.2617789Z              ^
2025-10-02T07:07:12.2618129Z src/qt/widgets/ChangesWidget.h:57:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2618545Z     QSplitter *m_splitter;
2025-10-02T07:07:12.2618722Z                ^
2025-10-02T07:07:12.2619071Z src/qt/widgets/ChangesWidget.h:57:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2619639Z     QSplitter *m_splitter;
2025-10-02T07:07:12.2619819Z                           ^
2025-10-02T07:07:12.2620193Z src/qt/widgets/ChangesWidget.h:60:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2620605Z     QWidget *m_fileListPanel;
2025-10-02T07:07:12.2620797Z            ^
2025-10-02T07:07:12.2621132Z src/qt/widgets/ChangesWidget.h:60:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2621553Z     QWidget *m_fileListPanel;
2025-10-02T07:07:12.2621771Z              ^
2025-10-02T07:07:12.2622312Z src/qt/widgets/ChangesWidget.h:61:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2640226Z     QListWidget *m_stagedList;
2025-10-02T07:07:12.2640545Z                ^
2025-10-02T07:07:12.2640943Z src/qt/widgets/ChangesWidget.h:61:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2641389Z     QListWidget *m_stagedList;
2025-10-02T07:07:12.2641583Z                  ^
2025-10-02T07:07:12.2641945Z src/qt/widgets/ChangesWidget.h:62:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2642380Z     QListWidget *m_unstagedList;
2025-10-02T07:07:12.2642582Z                ^
2025-10-02T07:07:12.2642940Z src/qt/widgets/ChangesWidget.h:62:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2643351Z     QListWidget *m_unstagedList;
2025-10-02T07:07:12.2643586Z                  ^
2025-10-02T07:07:12.2643937Z src/qt/widgets/ChangesWidget.h:62:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2644537Z     QListWidget *m_unstagedList;
2025-10-02T07:07:12.2644743Z                                 ^
2025-10-02T07:07:12.2645123Z src/qt/widgets/ChangesWidget.h:65:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2645536Z     QWidget *m_diffPanel;
2025-10-02T07:07:12.2645723Z            ^
2025-10-02T07:07:12.2646075Z src/qt/widgets/ChangesWidget.h:65:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2646486Z     QWidget *m_diffPanel;
2025-10-02T07:07:12.2646675Z              ^
2025-10-02T07:07:12.2647014Z src/qt/widgets/ChangesWidget.h:66:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2647424Z     QTextEdit *m_diffView;
2025-10-02T07:07:12.2647617Z              ^
2025-10-02T07:07:12.2648074Z src/qt/widgets/ChangesWidget.h:66:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2648498Z     QTextEdit *m_diffView;
2025-10-02T07:07:12.2648676Z                ^
2025-10-02T07:07:12.2649023Z src/qt/widgets/ChangesWidget.h:66:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2649753Z     QTextEdit *m_diffView;
2025-10-02T07:07:12.2649943Z                           ^
2025-10-02T07:07:12.2650311Z src/qt/widgets/ChangesWidget.h:69:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2650738Z     QPushButton *m_stageAllButton;
2025-10-02T07:07:12.2650949Z                ^
2025-10-02T07:07:12.2651292Z src/qt/widgets/ChangesWidget.h:69:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2651839Z     QPushButton *m_stageAllButton;
2025-10-02T07:07:12.2652188Z                  ^
2025-10-02T07:07:12.2652802Z src/qt/widgets/ChangesWidget.h:70:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2653544Z     QPushButton *m_unstageAllButton;
2025-10-02T07:07:12.2653918Z                ^
2025-10-02T07:07:12.2654527Z src/qt/widgets/ChangesWidget.h:70:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2655372Z     QPushButton *m_unstageAllButton;
2025-10-02T07:07:12.2655738Z                  ^
2025-10-02T07:07:12.2656355Z src/qt/widgets/ChangesWidget.h:71:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2657092Z     QPushButton *m_commitButton;
2025-10-02T07:07:12.2657429Z                ^
2025-10-02T07:07:12.2658039Z src/qt/widgets/ChangesWidget.h:71:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2658758Z     QPushButton *m_commitButton;
2025-10-02T07:07:12.2659025Z                  ^
2025-10-02T07:07:12.2659568Z src/qt/widgets/ChangesWidget.h:71:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2659984Z     QPushButton *m_commitButton;
2025-10-02T07:07:12.2660202Z                                 ^
2025-10-02T07:07:12.2660587Z src/qt/widgets/ChangesWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2661008Z #include "ChangesWidget.h"
2025-10-02T07:07:12.2661189Z ^
2025-10-02T07:07:12.2661535Z src/qt/widgets/ChangesWidget.cpp:6:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2662130Z ChangesWidget::ChangesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2662513Z                                                      ^
2025-10-02T07:07:12.2662944Z src/qt/widgets/ChangesWidget.cpp:6:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2663780Z ChangesWidget::ChangesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2664305Z                                                        ^
2025-10-02T07:07:12.2664834Z src/qt/widgets/ChangesWidget.cpp:6:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2665729Z ChangesWidget::ChangesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2666119Z                                                                           ^
2025-10-02T07:07:12.2666556Z src/qt/widgets/ChangesWidget.cpp:6:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2667114Z ChangesWidget::ChangesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2667484Z                                                                             ^
2025-10-02T07:07:12.2667914Z src/qt/widgets/ChangesWidget.cpp:7:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2668343Z     : QWidget(parent)
2025-10-02T07:07:12.2668513Z                      ^
2025-10-02T07:07:12.2668879Z src/qt/widgets/ChangesWidget.cpp:8:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2669554Z     , m_gitManager(gitManager)
2025-10-02T07:07:12.2669772Z                               ^
2025-10-02T07:07:12.2670155Z src/qt/widgets/ChangesWidget.cpp:10:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2670586Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:07:12.2670806Z         ^
2025-10-02T07:07:12.2671155Z src/qt/widgets/ChangesWidget.cpp:10:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2671581Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:07:12.2671798Z           ^
2025-10-02T07:07:12.2672151Z src/qt/widgets/ChangesWidget.cpp:14:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2672628Z void ChangesWidget::setRepository(const QString &path)
2025-10-02T07:07:12.2673207Z                                                ^
2025-10-02T07:07:12.2673677Z src/qt/widgets/ChangesWidget.cpp:14:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2674179Z void ChangesWidget::setRepository(const QString &path)
2025-10-02T07:07:12.2674458Z                                                  ^
2025-10-02T07:07:12.2674874Z src/qt/widgets/ChangesWidget.cpp:14:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2675345Z void ChangesWidget::setRepository(const QString &path)
2025-10-02T07:07:12.2675618Z                                                       ^
2025-10-02T07:07:12.2676049Z src/qt/widgets/ChangesWidget.cpp:20:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2676490Z void ChangesWidget::refreshChanges()
2025-10-02T07:07:12.2676717Z                                     ^
2025-10-02T07:07:12.2677129Z src/qt/widgets/ChangesWidget.cpp:28:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2677614Z void ChangesWidget::onFileItemChanged(QListWidgetItem *) {}
2025-10-02T07:07:12.2677910Z                                                      ^
2025-10-02T07:07:12.2678340Z src/qt/widgets/ChangesWidget.cpp:34:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2678961Z void ChangesWidget::stageFile(const QString &) {}
2025-10-02T07:07:12.2679337Z                                            ^
2025-10-02T07:07:12.2679750Z src/qt/widgets/ChangesWidget.cpp:35:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2680210Z void ChangesWidget::unstageFile(const QString &) {}
2025-10-02T07:07:12.2680468Z                                              ^
2025-10-02T07:07:12.2680876Z src/qt/widgets/HistoryWidget.h:13:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2681279Z     Q_OBJECT
2025-10-02T07:07:12.2681435Z             ^
2025-10-02T07:07:12.2681781Z src/qt/widgets/HistoryWidget.h:16:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2682376Z     explicit HistoryWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2682916Z                                                    ^
2025-10-02T07:07:12.2683322Z src/qt/widgets/HistoryWidget.h:16:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2684168Z     explicit HistoryWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2684562Z                                                      ^
2025-10-02T07:07:12.2684974Z src/qt/widgets/HistoryWidget.h:16:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2685551Z     explicit HistoryWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2685937Z                                                                         ^
2025-10-02T07:07:12.2686354Z src/qt/widgets/HistoryWidget.h:16:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2687040Z     explicit HistoryWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2687449Z                                                                           ^
2025-10-02T07:07:12.2687872Z src/qt/widgets/HistoryWidget.h:18:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2688299Z     void setRepository(const QString &path);
2025-10-02T07:07:12.2688535Z                                     ^
2025-10-02T07:07:12.2688920Z src/qt/widgets/HistoryWidget.h:18:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2689497Z     void setRepository(const QString &path);
2025-10-02T07:07:12.2689725Z                                       ^
2025-10-02T07:07:12.2690123Z src/qt/widgets/HistoryWidget.h:18:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2690544Z     void setRepository(const QString &path);
2025-10-02T07:07:12.2690772Z                                             ^
2025-10-02T07:07:12.2691176Z src/qt/widgets/HistoryWidget.h:21:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2691628Z     void commitSelected(const QString& commitHash);
2025-10-02T07:07:12.2691895Z                                                    ^
2025-10-02T07:07:12.2692303Z src/qt/widgets/HistoryWidget.h:24:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2692741Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:07:12.2692969Z                             ^
2025-10-02T07:07:12.2693346Z src/qt/widgets/HistoryWidget.h:24:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2693771Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:07:12.2693993Z                               ^
2025-10-02T07:07:12.2694437Z src/qt/widgets/BranchesWidget.h:9:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2694860Z class BranchesWidget : public QWidget
2025-10-02T07:07:12.2695093Z                                      ^
2025-10-02T07:07:12.2695507Z src/qt/widgets/BranchesWidget.h:11:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2695912Z     Q_OBJECT
2025-10-02T07:07:12.2696064Z             ^
2025-10-02T07:07:12.2696406Z src/qt/widgets/BranchesWidget.h:14:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2696984Z     explicit BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2697373Z                                                     ^
2025-10-02T07:07:12.2697788Z src/qt/widgets/BranchesWidget.h:14:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2698367Z     explicit BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2698750Z                                                       ^
2025-10-02T07:07:12.2699168Z src/qt/widgets/BranchesWidget.h:14:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2699981Z     explicit BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2700378Z                                                                          ^
2025-10-02T07:07:12.2700804Z src/qt/widgets/BranchesWidget.h:14:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2701371Z     explicit BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent = nullptr);
2025-10-02T07:07:12.2701764Z                                                                            ^
2025-10-02T07:07:12.2702187Z src/qt/widgets/BranchesWidget.h:17:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2702626Z     void setRepository(const QString &path);
2025-10-02T07:07:12.2702853Z                                     ^
2025-10-02T07:07:12.2703357Z src/qt/widgets/BranchesWidget.h:17:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2703834Z     void setRepository(const QString &path);
2025-10-02T07:07:12.2704058Z                                       ^
2025-10-02T07:07:12.2704457Z src/qt/widgets/BranchesWidget.h:17:45: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2704883Z     void setRepository(const QString &path);
2025-10-02T07:07:12.2705113Z                                             ^
2025-10-02T07:07:12.2705510Z src/qt/widgets/BranchesWidget.h:20:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2705955Z     void branchChanged(const QString &branchName);
2025-10-02T07:07:12.2706203Z                                     ^
2025-10-02T07:07:12.2706589Z src/qt/widgets/BranchesWidget.h:20:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2707030Z     void branchChanged(const QString &branchName);
2025-10-02T07:07:12.2707268Z                                       ^
2025-10-02T07:07:12.2707676Z src/qt/widgets/BranchesWidget.h:20:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2708110Z     void branchChanged(const QString &branchName);
2025-10-02T07:07:12.2708355Z                                                   ^
2025-10-02T07:07:12.2708766Z src/qt/widgets/BranchesWidget.h:23:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2709203Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:07:12.2709537Z                             ^
2025-10-02T07:07:12.2709920Z src/qt/widgets/BranchesWidget.h:23:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2710344Z     VersionTools::GitManager *m_gitManager;
2025-10-02T07:07:12.2710583Z                               ^
2025-10-02T07:07:12.2710968Z src/qt/widgets/SidebarWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2711393Z #include "SidebarWidget.h"
2025-10-02T07:07:12.2711578Z ^
2025-10-02T07:07:12.2711933Z src/qt/widgets/SidebarWidget.cpp:11:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2712394Z SidebarWidget::SidebarWidget(QWidget *parent)
2025-10-02T07:07:12.2712630Z                                     ^
2025-10-02T07:07:12.2713029Z src/qt/widgets/SidebarWidget.cpp:11:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2713475Z SidebarWidget::SidebarWidget(QWidget *parent)
2025-10-02T07:07:12.2713711Z                                       ^
2025-10-02T07:07:12.2714114Z src/qt/widgets/SidebarWidget.cpp:12:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2714534Z     : QWidget(parent)
2025-10-02T07:07:12.2714703Z                      ^
2025-10-02T07:07:12.2715068Z src/qt/widgets/SidebarWidget.cpp:13:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2715487Z     , m_layout(nullptr)
2025-10-02T07:07:12.2715665Z                        ^
2025-10-02T07:07:12.2716157Z src/qt/widgets/SidebarWidget.cpp:14:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2716579Z     , m_repositoryLabel(nullptr)
2025-10-02T07:07:12.2716788Z                                 ^
2025-10-02T07:07:12.2717173Z src/qt/widgets/SidebarWidget.cpp:15:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2717594Z     , m_branchLabel(nullptr)
2025-10-02T07:07:12.2717789Z                             ^
2025-10-02T07:07:12.2718167Z src/qt/widgets/SidebarWidget.cpp:16:32: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2718593Z     , m_navigationList(nullptr)
2025-10-02T07:07:12.2718788Z                                ^
2025-10-02T07:07:12.2719184Z src/qt/widgets/SidebarWidget.cpp:17:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2719702Z     , m_statusLabel(nullptr)
2025-10-02T07:07:12.2719890Z      ^
2025-10-02T07:07:12.2720348Z src/qt/widgets/SidebarWidget.cpp:17:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2720771Z     , m_statusLabel(nullptr)
2025-10-02T07:07:12.2720963Z                             ^
2025-10-02T07:07:12.2721339Z src/qt/widgets/SidebarWidget.cpp:18:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2721756Z     , m_changesItem(nullptr)
2025-10-02T07:07:12.2721939Z                             ^
2025-10-02T07:07:12.2722316Z src/qt/widgets/SidebarWidget.cpp:19:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2722728Z     , m_historyItem(nullptr)
2025-10-02T07:07:12.2722915Z                             ^
2025-10-02T07:07:12.2723293Z src/qt/widgets/SidebarWidget.cpp:20:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2723709Z     , m_branchesItem(nullptr)
2025-10-02T07:07:12.2723901Z                              ^
2025-10-02T07:07:12.2724287Z src/qt/widgets/SidebarWidget.cpp:21:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2724709Z     , m_remotesItem(nullptr)
2025-10-02T07:07:12.2724888Z      ^
2025-10-02T07:07:12.2725235Z src/qt/widgets/SidebarWidget.cpp:21:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2725650Z     , m_remotesItem(nullptr)
2025-10-02T07:07:12.2725839Z                             ^
2025-10-02T07:07:12.2726221Z src/qt/widgets/SidebarWidget.cpp:22:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2726632Z     , m_tagsItem(nullptr)
2025-10-02T07:07:12.2726816Z                          ^
2025-10-02T07:07:12.2727190Z src/qt/widgets/SidebarWidget.cpp:23:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2727609Z     , m_stashesItem(nullptr)
2025-10-02T07:07:12.2727791Z                             ^
2025-10-02T07:07:12.2728176Z src/qt/widgets/SidebarWidget.cpp:29:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2728606Z void SidebarWidget::setupUI()
2025-10-02T07:07:12.2728799Z                              ^
2025-10-02T07:07:12.2729192Z src/qt/widgets/SidebarWidget.cpp:117:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2729795Z     connect(m_navigationList, &QListWidget::itemClicked,
2025-10-02T07:07:12.2730074Z                                                         ^
2025-10-02T07:07:12.2730489Z src/qt/widgets/SidebarWidget.cpp:121:44: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2730943Z void SidebarWidget::createNavigationItems()
2025-10-02T07:07:12.2731190Z                                            ^
2025-10-02T07:07:12.2731611Z src/qt/widgets/SidebarWidget.cpp:159:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2732103Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-10-02T07:07:12.2732560Z                                                    ^
2025-10-02T07:07:12.2732988Z src/qt/widgets/SidebarWidget.cpp:159:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2733473Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-10-02T07:07:12.2733768Z                                                      ^
2025-10-02T07:07:12.2734185Z src/qt/widgets/SidebarWidget.cpp:159:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2734663Z void SidebarWidget::setRepositoryPath(const QString &path)
2025-10-02T07:07:12.2734949Z                                                           ^
2025-10-02T07:07:12.2735370Z src/qt/widgets/SidebarWidget.cpp:172:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2735892Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-10-02T07:07:12.2736222Z                                                               ^
2025-10-02T07:07:12.2736768Z src/qt/widgets/SidebarWidget.cpp:172:65: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2737297Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-10-02T07:07:12.2737625Z                                                                 ^
2025-10-02T07:07:12.2738058Z src/qt/widgets/SidebarWidget.cpp:172:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2738579Z void SidebarWidget::updateStatus(const VersionTools::GitStatus &status)
2025-10-02T07:07:12.2738908Z                                                                        ^
2025-10-02T07:07:12.2739451Z src/qt/widgets/SidebarWidget.cpp:180:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2740075Z             branchText += QString(" (%1↑ %2↓)")
2025-10-02T07:07:12.2740507Z src/qt/widgets/SidebarWidget.cpp:181:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2740954Z                          .arg(status.aheadCount)
2025-10-02T07:07:12.2741187Z                                                 ^
2025-10-02T07:07:12.2741600Z src/qt/widgets/SidebarWidget.cpp:193:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2742050Z void SidebarWidget::updateStatusCounts()
2025-10-02T07:07:12.2742285Z                                         ^
2025-10-02T07:07:12.2742691Z src/qt/widgets/SidebarWidget.cpp:199:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2743162Z     for (const auto &change : m_currentStatus.changes) {
2025-10-02T07:07:12.2743420Z                    ^
2025-10-02T07:07:12.2743790Z src/qt/widgets/SidebarWidget.cpp:199:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2744251Z     for (const auto &change : m_currentStatus.changes) {
2025-10-02T07:07:12.2744508Z                      ^
2025-10-02T07:07:12.2744885Z src/qt/widgets/SidebarWidget.cpp:232:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2745364Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-10-02T07:07:12.2745643Z                                                  ^
2025-10-02T07:07:12.2746060Z src/qt/widgets/SidebarWidget.cpp:232:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2746539Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-10-02T07:07:12.2746810Z                                                    ^
2025-10-02T07:07:12.2747230Z src/qt/widgets/SidebarWidget.cpp:232:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2747709Z void SidebarWidget::onItemClicked(QListWidgetItem *item)
2025-10-02T07:07:12.2747989Z                                                         ^
2025-10-02T07:07:12.2748404Z src/qt/widgets/SidebarWidget.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2748808Z #include <QWidget>
2025-10-02T07:07:12.2749102Z ^
2025-10-02T07:07:12.2749549Z src/qt/widgets/SidebarWidget.h:15:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2749997Z class SidebarWidget : public QWidget
2025-10-02T07:07:12.2750217Z                                     ^
2025-10-02T07:07:12.2750614Z src/qt/widgets/SidebarWidget.h:17:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2751018Z     Q_OBJECT
2025-10-02T07:07:12.2751164Z             ^
2025-10-02T07:07:12.2751508Z src/qt/widgets/SidebarWidget.h:20:35: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2751956Z     explicit SidebarWidget(QWidget *parent = nullptr);
2025-10-02T07:07:12.2752216Z                                   ^
2025-10-02T07:07:12.2752603Z src/qt/widgets/SidebarWidget.h:20:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2753050Z     explicit SidebarWidget(QWidget *parent = nullptr);
2025-10-02T07:07:12.2753430Z                                     ^
2025-10-02T07:07:12.2753825Z src/qt/widgets/SidebarWidget.h:22:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2754264Z     void setRepositoryPath(const QString &path);
2025-10-02T07:07:12.2754510Z                                         ^
2025-10-02T07:07:12.2754908Z src/qt/widgets/SidebarWidget.h:22:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2755342Z     void setRepositoryPath(const QString &path);
2025-10-02T07:07:12.2755592Z                                           ^
2025-10-02T07:07:12.2755996Z src/qt/widgets/SidebarWidget.h:23:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2756469Z     void updateStatus(const VersionTools::GitStatus &status);
2025-10-02T07:07:12.2756756Z                                                    ^
2025-10-02T07:07:12.2757166Z src/qt/widgets/SidebarWidget.h:23:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2757641Z     void updateStatus(const VersionTools::GitStatus &status);
2025-10-02T07:07:12.2757920Z                                                      ^
2025-10-02T07:07:12.2758326Z src/qt/widgets/SidebarWidget.h:23:62: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2758791Z     void updateStatus(const VersionTools::GitStatus &status);
2025-10-02T07:07:12.2759075Z                                                              ^
2025-10-02T07:07:12.2759599Z src/qt/widgets/SidebarWidget.h:26:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2760014Z     void selectionChanged(int index);
2025-10-02T07:07:12.2760233Z                                      ^
2025-10-02T07:07:12.2760620Z src/qt/widgets/SidebarWidget.h:29:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2761054Z     void onItemClicked(QListWidgetItem *item);
2025-10-02T07:07:12.2761304Z                                       ^
2025-10-02T07:07:12.2761692Z src/qt/widgets/SidebarWidget.h:29:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2762129Z     void onItemClicked(QListWidgetItem *item);
2025-10-02T07:07:12.2762367Z                                         ^
2025-10-02T07:07:12.2762766Z src/qt/widgets/SidebarWidget.h:29:47: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2763194Z     void onItemClicked(QListWidgetItem *item);
2025-10-02T07:07:12.2763436Z                                               ^
2025-10-02T07:07:12.2763843Z src/qt/widgets/SidebarWidget.h:36:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2764252Z     QVBoxLayout *m_layout;
2025-10-02T07:07:12.2764437Z                ^
2025-10-02T07:07:12.2764779Z src/qt/widgets/SidebarWidget.h:36:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2765193Z     QVBoxLayout *m_layout;
2025-10-02T07:07:12.2765486Z                  ^
2025-10-02T07:07:12.2765840Z src/qt/widgets/SidebarWidget.h:37:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2766258Z     QLabel *m_repositoryLabel;
2025-10-02T07:07:12.2766453Z           ^
2025-10-02T07:07:12.2766791Z src/qt/widgets/SidebarWidget.h:37:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2767201Z     QLabel *m_repositoryLabel;
2025-10-02T07:07:12.2767394Z             ^
2025-10-02T07:07:12.2767732Z src/qt/widgets/SidebarWidget.h:38:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2768139Z     QLabel *m_branchLabel;
2025-10-02T07:07:12.2768315Z           ^
2025-10-02T07:07:12.2768649Z src/qt/widgets/SidebarWidget.h:38:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2769057Z     QLabel *m_branchLabel;
2025-10-02T07:07:12.2769331Z             ^
2025-10-02T07:07:12.2769794Z src/qt/widgets/SidebarWidget.h:39:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2770213Z     QListWidget *m_navigationList;
2025-10-02T07:07:12.2770420Z                ^
2025-10-02T07:07:12.2770762Z src/qt/widgets/SidebarWidget.h:39:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2771180Z     QListWidget *m_navigationList;
2025-10-02T07:07:12.2771381Z                  ^
2025-10-02T07:07:12.2771738Z src/qt/widgets/SidebarWidget.h:40:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2772147Z     QLabel *m_statusLabel;
2025-10-02T07:07:12.2772322Z           ^
2025-10-02T07:07:12.2772659Z src/qt/widgets/SidebarWidget.h:40:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2773063Z     QLabel *m_statusLabel;
2025-10-02T07:07:12.2773242Z             ^
2025-10-02T07:07:12.2773582Z src/qt/widgets/SidebarWidget.h:46:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2774012Z     QListWidgetItem *m_changesItem;
2025-10-02T07:07:12.2774220Z                    ^
2025-10-02T07:07:12.2774575Z src/qt/widgets/SidebarWidget.h:46:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2775001Z     QListWidgetItem *m_changesItem;
2025-10-02T07:07:12.2775209Z                      ^
2025-10-02T07:07:12.2775567Z src/qt/widgets/SidebarWidget.h:47:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2775978Z     QListWidgetItem *m_historyItem;
2025-10-02T07:07:12.2776185Z                    ^
2025-10-02T07:07:12.2776528Z src/qt/widgets/SidebarWidget.h:47:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2776942Z     QListWidgetItem *m_historyItem;
2025-10-02T07:07:12.2777147Z                      ^
2025-10-02T07:07:12.2777501Z src/qt/widgets/SidebarWidget.h:48:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2777923Z     QListWidgetItem *m_branchesItem;
2025-10-02T07:07:12.2778130Z                    ^
2025-10-02T07:07:12.2778480Z src/qt/widgets/SidebarWidget.h:48:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2778893Z     QListWidgetItem *m_branchesItem;
2025-10-02T07:07:12.2779165Z                      ^
2025-10-02T07:07:12.2779785Z src/qt/widgets/SidebarWidget.h:49:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2780207Z     QListWidgetItem *m_remotesItem;
2025-10-02T07:07:12.2780421Z                    ^
2025-10-02T07:07:12.2780773Z src/qt/widgets/SidebarWidget.h:49:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2781181Z     QListWidgetItem *m_remotesItem;
2025-10-02T07:07:12.2781389Z                      ^
2025-10-02T07:07:12.2781735Z src/qt/widgets/SidebarWidget.h:50:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2782294Z     QListWidgetItem *m_tagsItem;
2025-10-02T07:07:12.2782487Z                    ^
2025-10-02T07:07:12.2782835Z src/qt/widgets/SidebarWidget.h:50:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2783249Z     QListWidgetItem *m_tagsItem;
2025-10-02T07:07:12.2783443Z                      ^
2025-10-02T07:07:12.2783798Z src/qt/widgets/SidebarWidget.h:51:20: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2784207Z     QListWidgetItem *m_stashesItem;
2025-10-02T07:07:12.2784413Z                    ^
2025-10-02T07:07:12.2784756Z src/qt/widgets/SidebarWidget.h:51:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2785170Z     QListWidgetItem *m_stashesItem;
2025-10-02T07:07:12.2785369Z                      ^
2025-10-02T07:07:12.2785741Z src/qt/widgets/BranchesWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2786283Z #include "BranchesWidget.h"
2025-10-02T07:07:12.2786477Z ^
2025-10-02T07:07:12.2786828Z src/qt/widgets/BranchesWidget.cpp:6:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2787415Z BranchesWidget::BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2787803Z                                                        ^
2025-10-02T07:07:12.2788229Z src/qt/widgets/BranchesWidget.cpp:6:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2788804Z BranchesWidget::BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2789185Z                                                          ^
2025-10-02T07:07:12.2789834Z src/qt/widgets/BranchesWidget.cpp:6:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2790402Z BranchesWidget::BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2790791Z                                                                             ^
2025-10-02T07:07:12.2791234Z src/qt/widgets/BranchesWidget.cpp:6:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2791802Z BranchesWidget::BranchesWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2792182Z                                                                               ^
2025-10-02T07:07:12.2792622Z src/qt/widgets/BranchesWidget.cpp:7:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2793039Z     : QWidget(parent)
2025-10-02T07:07:12.2793214Z                      ^
2025-10-02T07:07:12.2793580Z src/qt/widgets/BranchesWidget.cpp:8:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2794006Z     , m_gitManager(gitManager)
2025-10-02T07:07:12.2794198Z                               ^
2025-10-02T07:07:12.2794594Z src/qt/widgets/BranchesWidget.cpp:10:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2795035Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:07:12.2795251Z         ^
2025-10-02T07:07:12.2795605Z src/qt/widgets/BranchesWidget.cpp:10:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2796038Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:07:12.2796254Z           ^
2025-10-02T07:07:12.2796605Z src/qt/widgets/BranchesWidget.cpp:14:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2797088Z void BranchesWidget::setRepository(const QString &path)
2025-10-02T07:07:12.2797371Z                                                 ^
2025-10-02T07:07:12.2797788Z src/qt/widgets/BranchesWidget.cpp:14:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2798432Z void BranchesWidget::setRepository(const QString &path)
2025-10-02T07:07:12.2798902Z                                                   ^
2025-10-02T07:07:12.2799801Z src/qt/widgets/BranchesWidget.cpp:14:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2800958Z void BranchesWidget::setRepository(const QString &path)
2025-10-02T07:07:12.2801433Z                                                        ^
2025-10-02T07:07:12.2802167Z src/qt/widgets/HistoryWidget.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2802717Z #include "HistoryWidget.h"
2025-10-02T07:07:12.2802901Z ^
2025-10-02T07:07:12.2803240Z src/qt/widgets/HistoryWidget.cpp:6:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2803840Z HistoryWidget::HistoryWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2804212Z                                                      ^
2025-10-02T07:07:12.2804633Z src/qt/widgets/HistoryWidget.cpp:6:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2805312Z HistoryWidget::HistoryWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2805687Z                                                        ^
2025-10-02T07:07:12.2806105Z src/qt/widgets/HistoryWidget.cpp:6:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2806658Z HistoryWidget::HistoryWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2807035Z                                                                           ^
2025-10-02T07:07:12.2807463Z src/qt/widgets/HistoryWidget.cpp:6:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2808010Z HistoryWidget::HistoryWidget(VersionTools::GitManager *gitManager, QWidget *parent)
2025-10-02T07:07:12.2808383Z                                                                             ^
2025-10-02T07:07:12.2808816Z src/qt/widgets/HistoryWidget.cpp:7:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2809381Z     : QWidget(parent)
2025-10-02T07:07:12.2809566Z                      ^
2025-10-02T07:07:12.2809930Z src/qt/widgets/HistoryWidget.cpp:8:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2810353Z     , m_gitManager(gitManager)
2025-10-02T07:07:12.2810546Z                               ^
2025-10-02T07:07:12.2810930Z src/qt/widgets/HistoryWidget.cpp:10:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2811358Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:07:12.2811576Z         ^
2025-10-02T07:07:12.2811919Z src/qt/widgets/HistoryWidget.cpp:10:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2812351Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:07:12.2812565Z           ^
2025-10-02T07:07:12.2812916Z src/qt/widgets/HistoryWidget.cpp:14:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2813393Z void HistoryWidget::setRepository(const QString &path)
2025-10-02T07:07:12.2813670Z                                                ^
2025-10-02T07:07:12.2814096Z src/qt/widgets/HistoryWidget.cpp:14:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2814564Z void HistoryWidget::setRepository(const QString &path)
2025-10-02T07:07:12.2814838Z                                                  ^
2025-10-02T07:07:12.2815252Z src/qt/widgets/HistoryWidget.cpp:14:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2815717Z void HistoryWidget::setRepository(const QString &path)
2025-10-02T07:07:12.2815985Z                                                       ^
2025-10-02T07:07:12.2816327Z src/qt/main.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2816684Z #include <QApplication>
2025-10-02T07:07:12.2816857Z ^
2025-10-02T07:07:12.2817125Z src/qt/main.cpp:8:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2817486Z int main(int argc, char *argv[])
2025-10-02T07:07:12.2817815Z                        ^
2025-10-02T07:07:12.2818109Z src/qt/main.cpp:8:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2818463Z int main(int argc, char *argv[])
2025-10-02T07:07:12.2818664Z                          ^
2025-10-02T07:07:12.2818967Z src/qt/main.cpp:8:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2819462Z int main(int argc, char *argv[])
2025-10-02T07:07:12.2819666Z                                 ^
2025-10-02T07:07:12.2819991Z src/qt/main.cpp:10:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2820347Z     QApplication app(argc, argv);
2025-10-02T07:07:12.2820556Z                                  ^
2025-10-02T07:07:12.2820878Z src/qt/main.cpp:16:51: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2821263Z     app.setOrganizationDomain("versiontools.dev");
2025-10-02T07:07:12.2821650Z                                                   ^
2025-10-02T07:07:12.2822084Z src/qt/main.cpp:19:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2822597Z     app.setWindowIcon(QIcon(":/icons/versiontools.png"));
2025-10-02T07:07:12.2822873Z                                                          ^
2025-10-02T07:07:12.2823228Z src/qt/main.cpp:22:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2823693Z     ThemeManager::applyModernTheme(&app);
2025-10-02T07:07:12.2823968Z                                          ^
2025-10-02T07:07:12.2824309Z src/qt/main.cpp:26:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2824778Z     window.show();
2025-10-02T07:07:12.2824943Z                   ^
2025-10-02T07:07:12.2825319Z src/qt/dialogs/SettingsDialog.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2825860Z #include "SettingsDialog.h"
2025-10-02T07:07:12.2826123Z ^
2025-10-02T07:07:12.2826476Z src/qt/dialogs/SettingsDialog.cpp:6:39: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2826945Z SettingsDialog::SettingsDialog(QWidget *parent)
2025-10-02T07:07:12.2827198Z                                       ^
2025-10-02T07:07:12.2827613Z src/qt/dialogs/SettingsDialog.cpp:6:41: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2828069Z SettingsDialog::SettingsDialog(QWidget *parent)
2025-10-02T07:07:12.2828317Z                                         ^
2025-10-02T07:07:12.2828723Z src/qt/dialogs/SettingsDialog.cpp:6:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2829176Z SettingsDialog::SettingsDialog(QWidget *parent)
2025-10-02T07:07:12.2829560Z                                                ^
2025-10-02T07:07:12.2829974Z src/qt/dialogs/SettingsDialog.cpp:7:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2830401Z     : QDialog(parent)
2025-10-02T07:07:12.2830575Z                      ^
2025-10-02T07:07:12.2830945Z src/qt/dialogs/SettingsDialog.cpp:11:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2831377Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:07:12.2831599Z         ^
2025-10-02T07:07:12.2831949Z src/qt/dialogs/SettingsDialog.cpp:11:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2832396Z     auto *layout = new QVBoxLayout(this);
2025-10-02T07:07:12.2832620Z           ^
2025-10-02T07:07:12.2832975Z src/qt/dialogs/SettingsDialog.cpp:14:9: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2833585Z     auto *buttonBox = new QDialogButtonBox(QDialogButtonBox::Ok | QDialogButtonBox::Cancel, this);
2025-10-02T07:07:12.2833968Z         ^
2025-10-02T07:07:12.2834326Z src/qt/dialogs/SettingsDialog.cpp:14:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2835064Z     auto *buttonBox = new QDialogButtonBox(QDialogButtonBox::Ok | QDialogButtonBox::Cancel, this);
2025-10-02T07:07:12.2835440Z           ^
2025-10-02T07:07:12.2835793Z src/qt/dialogs/SettingsDialog.h:5:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2836223Z class SettingsDialog : public QDialog
2025-10-02T07:07:12.2836448Z                                      ^
2025-10-02T07:07:12.2836843Z src/qt/dialogs/SettingsDialog.h:7:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2837251Z     Q_OBJECT
2025-10-02T07:07:12.2837396Z             ^
2025-10-02T07:07:12.2837750Z src/qt/dialogs/SettingsDialog.h:10:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2838215Z     explicit SettingsDialog(QWidget *parent = nullptr);
2025-10-02T07:07:12.2838476Z                                    ^
2025-10-02T07:07:12.2838985Z src/qt/dialogs/SettingsDialog.h:10:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2839575Z     explicit SettingsDialog(QWidget *parent = nullptr);
2025-10-02T07:07:12.2839834Z                                      ^
2025-10-02T07:07:12.2840182Z src/core/GitUtils.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2840544Z #include <string>
2025-10-02T07:07:12.2840705Z ^
2025-10-02T07:07:12.2840992Z src/core/GitUtils.h:12:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2841356Z class GitUtils {
2025-10-02T07:07:12.2841515Z                 ^
2025-10-02T07:07:12.2841820Z src/core/GitUtils.h:23:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2842224Z     static std::string toUpper(const std::string& str);
2025-10-02T07:07:12.2842489Z                                                        ^
2025-10-02T07:07:12.2842852Z src/core/GitUtils.h:32:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2843361Z     static std::string makeRelativePath(const std::string& from, const std::string& to);
2025-10-02T07:07:12.2843738Z                                                                                         ^
2025-10-02T07:07:12.2844117Z src/core/GitUtils.h:41:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2844523Z     static std::string formatFileSize(size_t bytes);
2025-10-02T07:07:12.2844781Z                                                     ^
2025-10-02T07:07:12.2845146Z src/core/GitUtils.h:48:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2845608Z     static std::string getRemoteFromBranch(const std::string& branchName);
2025-10-02T07:07:12.2845943Z                                                                           ^
2025-10-02T07:07:12.2846328Z src/core/GitUtils.h:55:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2846726Z     static bool isSshUrl(const std::string& url);
2025-10-02T07:07:12.2846982Z                                                  ^
2025-10-02T07:07:12.2847343Z src/core/GitUtils.h:61:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2847781Z     static std::string extractHunkHeader(const std::string& line);
2025-10-02T07:07:12.2848083Z                                                                   ^
2025-10-02T07:07:12.2848451Z src/core/GitUtils.h:66:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2848958Z     static std::vector<std::string> parseGitConfigLine(const std::string& line);
2025-10-02T07:07:12.2849595Z                                                                                 ^
2025-10-02T07:07:12.2850284Z src/core/GitUtils.h:72:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2851100Z     static std::string detectFileEncoding(const std::string& filePath);
2025-10-02T07:07:12.2851664Z                                                                        ^
2025-10-02T07:07:12.2852492Z src/core/GitUtils.h:77:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2853340Z     static std::string formatDuration(const std::chrono::milliseconds& duration);
2025-10-02T07:07:12.2853956Z                                                                                  ^
2025-10-02T07:07:12.2854628Z src/core/GitUtils.h:85:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2855248Z }
2025-10-02T07:07:12.2855473Z  ^
2025-10-02T07:07:12.2856004Z src/core/GitTypes.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2856635Z #include <string>
2025-10-02T07:07:12.2856901Z ^
2025-10-02T07:07:12.2857401Z src/core/GitTypes.h:11:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2858052Z enum class FileStatus {
2025-10-02T07:07:12.2858346Z                        ^
2025-10-02T07:07:12.2859112Z src/core/GitTypes.h:12:15: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2859916Z     Untracked,
2025-10-02T07:07:12.2860178Z               ^
2025-10-02T07:07:12.2860707Z src/core/GitTypes.h:13:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2861337Z     Modified,
2025-10-02T07:07:12.2861589Z              ^
2025-10-02T07:07:12.2862110Z src/core/GitTypes.h:14:11: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2862736Z     Added,
2025-10-02T07:07:12.2862972Z           ^
2025-10-02T07:07:12.2863488Z src/core/GitTypes.h:15:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2864114Z     Deleted,
2025-10-02T07:07:12.2864365Z             ^
2025-10-02T07:07:12.2864884Z src/core/GitTypes.h:16:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2864992Z     Renamed,
2025-10-02T07:07:12.2865090Z             ^
2025-10-02T07:07:12.2865476Z src/core/GitTypes.h:17:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2865583Z     Copied,
2025-10-02T07:07:12.2865680Z            ^
2025-10-02T07:07:12.2866050Z src/core/GitTypes.h:18:16: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2866155Z     Conflicted,
2025-10-02T07:07:12.2866259Z                ^
2025-10-02T07:07:12.2866631Z src/core/GitTypes.h:19:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2866730Z     Ignored
2025-10-02T07:07:12.2866832Z            ^
2025-10-02T07:07:12.2867204Z src/core/GitTypes.h:22:24: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2867325Z enum class ChangeType {
2025-10-02T07:07:12.2867429Z                        ^
2025-10-02T07:07:12.2867808Z src/core/GitTypes.h:23:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2867909Z     Addition,
2025-10-02T07:07:12.2868016Z              ^
2025-10-02T07:07:12.2868393Z src/core/GitTypes.h:24:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2868494Z     Deletion,
2025-10-02T07:07:12.2868591Z              ^
2025-10-02T07:07:12.2868969Z src/core/GitTypes.h:25:17: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2869076Z     Modification
2025-10-02T07:07:12.2869175Z                 ^
2025-10-02T07:07:12.2869675Z src/core/GitTypes.h:37:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2869905Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-10-02T07:07:12.2870012Z                           ^
2025-10-02T07:07:12.2870384Z src/core/GitTypes.h:37:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2870598Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-10-02T07:07:12.2870733Z                                                           ^
2025-10-02T07:07:12.2871277Z src/core/GitTypes.h:117:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2871455Z     std::string date;  // Date string for display
2025-10-02T07:07:12.2871560Z                      ^
2025-10-02T07:07:12.2871940Z src/core/GitTypes.h:146:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2872037Z }
2025-10-02T07:07:12.2872141Z  ^
2025-10-02T07:07:12.2872528Z src/core/GitManager.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2872645Z #include "GitTypes.h"
2025-10-02T07:07:12.2872744Z ^
2025-10-02T07:07:12.2873136Z src/core/GitManager.h:12:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2873270Z enum class GitCommandResult {
2025-10-02T07:07:12.2873379Z                              ^
2025-10-02T07:07:12.2873776Z src/core/GitManager.h:13:13: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2874029Z     Success,
2025-10-02T07:07:12.2874132Z             ^
2025-10-02T07:07:12.2874532Z src/core/GitManager.h:14:12: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2874632Z     Failed,
2025-10-02T07:07:12.2874728Z            ^
2025-10-02T07:07:12.2875125Z src/core/GitManager.h:15:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2875227Z     NotFound,
2025-10-02T07:07:12.2875325Z              ^
2025-10-02T07:07:12.2875713Z src/core/GitManager.h:16:23: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2875839Z     InvalidRepository,
2025-10-02T07:07:12.2875940Z                       ^
2025-10-02T07:07:12.2876328Z src/core/GitManager.h:17:18: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2876443Z     NetworkError,
2025-10-02T07:07:12.2876541Z                  ^
2025-10-02T07:07:12.2876937Z src/core/GitManager.h:18:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2877062Z     PermissionDenied,
2025-10-02T07:07:12.2877168Z                      ^
2025-10-02T07:07:12.2877558Z src/core/GitManager.h:19:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2877660Z     Cancelled
2025-10-02T07:07:12.2877763Z              ^
2025-10-02T07:07:12.2878152Z src/core/GitManager.h:26:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2878265Z     int exitCode = 0;
2025-10-02T07:07:12.2878366Z                      ^
2025-10-02T07:07:12.2878764Z src/core/GitManager.h:28:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2879102Z     bool isSuccess() const { return result == GitCommandResult::Success; }
2025-10-02T07:07:12.2879208Z                             ^
2025-10-02T07:07:12.2879749Z src/core/GitManager.h:28:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2880054Z     bool isSuccess() const { return result == GitCommandResult::Success; }
2025-10-02T07:07:12.2880145Z                                                                         ^
2025-10-02T07:07:12.2880380Z src/core/GitManager.h:29:28: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2880530Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-10-02T07:07:12.2880596Z                            ^
2025-10-02T07:07:12.2880825Z src/core/GitManager.h:29:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2880964Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-10-02T07:07:12.2881044Z                                                                    ^
2025-10-02T07:07:12.2881269Z src/core/GitManager.h:35:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2881336Z class GitManager {
2025-10-02T07:07:12.2881396Z                   ^
2025-10-02T07:07:12.2881758Z src/core/GitManager.h:42:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2881993Z     GitOperationResult cloneRepository(const std::string& url, const std::string& path, 
2025-10-02T07:07:12.2882077Z                                                                                        ^
2025-10-02T07:07:12.2882298Z src/core/GitManager.h:45:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2882433Z     bool isValidRepository(const std::string& path) const;
2025-10-02T07:07:12.2882511Z                                                           ^
2025-10-02T07:07:12.2882732Z src/core/GitManager.h:51:43: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2882829Z     std::string getRepositoryPath() const;
2025-10-02T07:07:12.2882898Z                                           ^
2025-10-02T07:07:12.2883321Z src/core/GitManager.h:60:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2883492Z     GitOperationResult commitWithFiles(const std::string& message, 
2025-10-02T07:07:12.2883569Z                                                                   ^
2025-10-02T07:07:12.2883789Z src/core/GitManager.h:61:77: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2883893Z                                      const std::vector<std::string>& files);
2025-10-02T07:07:12.2883974Z                                                                             ^
2025-10-02T07:07:12.2884191Z src/core/GitManager.h:64:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2884334Z     std::vector<GitCommit> getCommitHistory(int maxCount = 100, 
2025-10-02T07:07:12.2884411Z                                                                ^
2025-10-02T07:07:12.2884627Z src/core/GitManager.h:65:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2884757Z                                           GitLogOptions options = GitLogOptions::None,
2025-10-02T07:07:12.2884846Z                                                                                       ^
2025-10-02T07:07:12.2885063Z src/core/GitManager.h:66:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2885164Z                                           const std::string& branch = "",
2025-10-02T07:07:12.2885243Z                                                                          ^
2025-10-02T07:07:12.2885461Z src/core/GitManager.h:69:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2885623Z     std::vector<GitCommit> getCommitRange(const std::string& fromHash, 
2025-10-02T07:07:12.2885701Z                                                                       ^
2025-10-02T07:07:12.2885919Z src/core/GitManager.h:70:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2886023Z                                         const std::string& toHash) const;
2025-10-02T07:07:12.2886104Z                                                                          ^
2025-10-02T07:07:12.2886321Z src/core/GitManager.h:74:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2886462Z     GitOperationResult createBranch(const std::string& name, 
2025-10-02T07:07:12.2886543Z                                                             ^
2025-10-02T07:07:12.2886759Z src/core/GitManager.h:80:68: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2886915Z     GitOperationResult rebaseBranch(const std::string& branchName);
2025-10-02T07:07:12.2887001Z                                                                    ^
2025-10-02T07:07:12.2887217Z src/core/GitManager.h:87:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2887368Z     GitOperationResult fetch(const std::string& remote = "origin", 
2025-10-02T07:07:12.2887532Z                                                                   ^
2025-10-02T07:07:12.2887749Z src/core/GitManager.h:89:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2887899Z     GitOperationResult pull(const std::string& remote = "origin", 
2025-10-02T07:07:12.2887981Z                                                                  ^
2025-10-02T07:07:12.2888199Z src/core/GitManager.h:90:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2888289Z                           const std::string& branch = "",
2025-10-02T07:07:12.2888370Z                                                          ^
2025-10-02T07:07:12.2888588Z src/core/GitManager.h:92:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2888734Z     GitOperationResult push(const std::string& remote = "origin", 
2025-10-02T07:07:12.2888808Z                                                                  ^
2025-10-02T07:07:12.2889108Z src/core/GitManager.h:93:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2889202Z                           const std::string& branch = "",
2025-10-02T07:07:12.2889432Z                                                          ^
2025-10-02T07:07:12.2889658Z src/core/GitManager.h:94:46: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2889738Z                           bool force = false,
2025-10-02T07:07:12.2889810Z                                              ^
2025-10-02T07:07:12.2890030Z src/core/GitManager.h:95:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2890146Z                           ProgressCallback progressCallback = nullptr);
2025-10-02T07:07:12.2890228Z                                                                        ^
2025-10-02T07:07:12.2890461Z src/core/GitManager.h:102:63: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2890618Z     GitDiff getDiffBetweenCommits(const std::string& fromHash, 
2025-10-02T07:07:12.2890694Z                                                               ^
2025-10-02T07:07:12.2890948Z src/core/GitManager.h:103:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2891112Z                                 const std::string& toHash,
2025-10-02T07:07:12.2891233Z                                                           ^
2025-10-02T07:07:12.2891461Z src/core/GitManager.h:104:73: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2891568Z                                 const std::string& filePath = "") const;
2025-10-02T07:07:12.2891648Z                                                                         ^
2025-10-02T07:07:12.2891867Z src/core/GitManager.h:108:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2892100Z     GitOperationResult createTag(const std::string& name, const std::string& message = "",
2025-10-02T07:07:12.2892193Z                                                                                           ^
2025-10-02T07:07:12.2892414Z src/core/GitManager.h:111:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2892585Z     GitOperationResult pushTags(const std::string& remote = "origin");
2025-10-02T07:07:12.2892662Z                                                                       ^
2025-10-02T07:07:12.2892887Z src/core/GitManager.h:119:37: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2892979Z     GitOperationResult stashClear();
2025-10-02T07:07:12.2893048Z                                     ^
2025-10-02T07:07:12.2893271Z src/core/GitManager.h:122:83: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2893480Z     GitOperationResult setConfig(const std::string& key, const std::string& value, 
2025-10-02T07:07:12.2893567Z                                                                                   ^
2025-10-02T07:07:12.2894064Z src/core/GitManager.h:125:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2894278Z     GitOperationResult setUserInfo(const std::string& name, const std::string& email,
2025-10-02T07:07:12.2894363Z                                                                                      ^
2025-10-02T07:07:12.2894581Z src/core/GitManager.h:126:55: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2894664Z                                  bool global = false);
2025-10-02T07:07:12.2894744Z                                                       ^
2025-10-02T07:07:12.2894963Z src/core/GitManager.h:132:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2895045Z     std::string getLastError() const;
2025-10-02T07:07:12.2895118Z                                      ^
2025-10-02T07:07:12.2895467Z src/core/GitManager.h:135:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2895767Z     std::future<GitOperationResult> cloneRepositoryAsync(const std::string& url, 
2025-10-02T07:07:12.2895900Z                                                                                 ^
2025-10-02T07:07:12.2896131Z src/core/GitManager.h:136:80: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2896232Z                                                        const std::string& path,
2025-10-02T07:07:12.2896320Z                                                                                ^
2025-10-02T07:07:12.2896539Z src/core/GitManager.h:138:85: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2896737Z     std::future<GitOperationResult> fetchAsync(const std::string& remote = "origin",
2025-10-02T07:07:12.2896826Z                                                                                     ^
2025-10-02T07:07:12.2897054Z src/core/GitManager.h:140:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2897250Z     std::future<GitOperationResult> pullAsync(const std::string& remote = "origin",
2025-10-02T07:07:12.2897330Z                                                                                    ^
2025-10-02T07:07:12.2897556Z src/core/GitManager.h:141:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2897653Z                                             const std::string& branch = "",
2025-10-02T07:07:12.2897735Z                                                                            ^
2025-10-02T07:07:12.2897961Z src/core/GitManager.h:143:84: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2898150Z     std::future<GitOperationResult> pushAsync(const std::string& remote = "origin",
2025-10-02T07:07:12.2898230Z                                                                                    ^
2025-10-02T07:07:12.2898463Z src/core/GitManager.h:144:76: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2898559Z                                             const std::string& branch = "",
2025-10-02T07:07:12.2898639Z                                                                            ^
2025-10-02T07:07:12.2898868Z src/core/GitManager.h:145:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2898953Z                                             bool force = false,
2025-10-02T07:07:12.2899030Z                                                                ^
2025-10-02T07:07:12.2899374Z src/core/GitManager.h:146:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2899498Z                                             ProgressCallback progressCallback = nullptr);
2025-10-02T07:07:12.2899592Z                                                                                          ^
2025-10-02T07:07:12.2899819Z src/core/GitManager.h:150:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2900074Z     void setProgressCallback(ProgressCallback callback);
2025-10-02T07:07:12.2900149Z                                                         ^
2025-10-02T07:07:12.2900368Z src/core/GitManager.h:154:33: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2900458Z     std::unique_ptr<Impl> pImpl;
2025-10-02T07:07:12.2900524Z                                 ^
2025-10-02T07:07:12.2900743Z src/core/GitManager.h:156:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2900943Z     GitOperationResult executeGitCommand(const std::vector<std::string>& args,
2025-10-02T07:07:12.2901026Z                                                                               ^
2025-10-02T07:07:12.2901247Z src/core/GitManager.h:157:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2901450Z                                        const std::string& workingDir = "",
2025-10-02T07:07:12.2901536Z                                                                           ^
2025-10-02T07:07:12.2901760Z src/core/GitManager.h:158:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2901900Z                                        ProgressCallback progressCallback = nullptr) const;
2025-10-02T07:07:12.2901991Z                                                                                           ^
2025-10-02T07:07:12.2902212Z src/core/GitManager.h:160:71: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2902367Z     std::vector<std::string> parseGitOutput(const std::string& output, 
2025-10-02T07:07:12.2902443Z                                                                       ^
2025-10-02T07:07:12.2902668Z src/core/GitManager.h:168:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.2902727Z }
2025-10-02T07:07:12.2902798Z  ^
2025-10-02T07:07:12.3067934Z src/core/GitManager.cpp:1:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3068092Z #include "GitManager.h"
2025-10-02T07:07:12.3068225Z ^
2025-10-02T07:07:12.3068744Z src/core/GitManager.cpp:20:25: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3068914Z class GitManager::Impl {
2025-10-02T07:07:12.3069052Z                         ^
2025-10-02T07:07:12.3069909Z src/core/GitManager.cpp:59:58: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3070155Z GitManager::GitManager(const std::string& repositoryPath) 
2025-10-02T07:07:12.3070300Z                                                          ^
2025-10-02T07:07:12.3070705Z src/core/GitManager.cpp:60:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3070898Z     : pImpl(std::make_unique<Impl>(repositoryPath)) {
2025-10-02T07:07:12.3071033Z                                                      ^
2025-10-02T07:07:12.3071451Z src/core/GitManager.cpp:70:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3071577Z     args.push_back(path);
2025-10-02T07:07:12.3071682Z                          ^
2025-10-02T07:07:12.3072090Z src/core/GitManager.cpp:79:96: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3072549Z GitOperationResult GitManager::cloneRepository(const std::string& url, const std::string& path,
2025-10-02T07:07:12.3072694Z                                                                                                ^
2025-10-02T07:07:12.3073105Z src/core/GitManager.cpp:81:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3073353Z     std::vector<std::string> args = {"clone", "--progress", url, path};
2025-10-02T07:07:12.3073490Z                                                                        ^
2025-10-02T07:07:12.3073905Z src/core/GitManager.cpp:93:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3074179Z     }
2025-10-02T07:07:12.3074276Z      ^
2025-10-02T07:07:12.3074689Z src/core/GitManager.cpp:118:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3075219Z     return std::filesystem::exists(headPath) && std::filesystem::exists(objectsPath) && std::filesystem::exists(refsPath);
2025-10-02T07:07:12.3075378Z                                                                                        ^
2025-10-02T07:07:12.3075793Z src/core/GitManager.cpp:155:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3075890Z     }
2025-10-02T07:07:12.3075987Z      ^
2025-10-02T07:07:12.3076393Z src/core/GitManager.cpp:158:48: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3076566Z     auto lines = parseGitOutput(result.output);
2025-10-02T07:07:12.3076686Z                                                ^
2025-10-02T07:07:12.3077254Z src/core/GitManager.cpp:161:53: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3077438Z         std::string branchLine = lines[0].substr(3);
2025-10-02T07:07:12.3077563Z                                                     ^
2025-10-02T07:07:12.3077981Z src/core/GitManager.cpp:165:29: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3078111Z         std::smatch matches;
2025-10-02T07:07:12.3078219Z                             ^
2025-10-02T07:07:12.3078629Z src/core/GitManager.cpp:171:14: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3078735Z             }
2025-10-02T07:07:12.3078835Z              ^
2025-10-02T07:07:12.3079383Z src/core/GitManager.cpp:177:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3079527Z                 std::sregex_iterator end;
2025-10-02T07:07:12.3079649Z                                          ^
2025-10-02T07:07:12.3080080Z src/core/GitManager.cpp:188:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3080178Z     }
2025-10-02T07:07:12.3080280Z      ^
2025-10-02T07:07:12.3080683Z src/core/GitManager.cpp:206:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3080782Z     }
2025-10-02T07:07:12.3080878Z      ^
2025-10-02T07:07:12.3081284Z src/core/GitManager.cpp:215:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3081380Z     }
2025-10-02T07:07:12.3081480Z      ^
2025-10-02T07:07:12.3081890Z src/core/GitManager.cpp:221:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3081986Z     }
2025-10-02T07:07:12.3082081Z      ^
2025-10-02T07:07:12.3082487Z src/core/GitManager.cpp:227:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3082583Z     }
2025-10-02T07:07:12.3082678Z      ^
2025-10-02T07:07:12.3083083Z src/core/GitManager.cpp:239:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3083192Z     }
2025-10-02T07:07:12.3083286Z      ^
2025-10-02T07:07:12.3083692Z src/core/GitManager.cpp:242:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3083894Z     args.insert(args.end(), files.begin(), files.end());
2025-10-02T07:07:12.3084022Z                                                         ^
2025-10-02T07:07:12.3084423Z src/core/GitManager.cpp:254:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3084519Z     }
2025-10-02T07:07:12.3084621Z      ^
2025-10-02T07:07:12.3085026Z src/core/GitManager.cpp:260:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3085215Z     args.insert(args.end(), files.begin(), files.end());
2025-10-02T07:07:12.3085343Z                                                         ^
2025-10-02T07:07:12.3085748Z src/core/GitManager.cpp:268:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3085994Z     }
2025-10-02T07:07:12.3086096Z      ^
2025-10-02T07:07:12.3086500Z src/core/GitManager.cpp:271:57: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3086711Z     args.insert(args.end(), files.begin(), files.end());
2025-10-02T07:07:12.3086840Z                                                         ^
2025-10-02T07:07:12.3087242Z src/core/GitManager.cpp:284:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3087337Z     }
2025-10-02T07:07:12.3087438Z      ^
2025-10-02T07:07:12.3087840Z src/core/GitManager.cpp:289:75: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3088210Z GitOperationResult GitManager::commitWithFiles(const std::string& message, 
2025-10-02T07:07:12.3088349Z                                                                           ^
2025-10-02T07:07:12.3088889Z src/core/GitManager.cpp:295:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3088993Z     }
2025-10-02T07:07:12.3089089Z      ^
2025-10-02T07:07:12.3089641Z src/core/GitManager.cpp:301:66: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3089914Z std::vector<GitCommit> GitManager::getCommitHistory(int maxCount,
2025-10-02T07:07:12.3090045Z                                                                  ^
2025-10-02T07:07:12.3090465Z src/core/GitManager.cpp:302:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3090624Z                                                    GitLogOptions options,
2025-10-02T07:07:12.3090758Z                                                                          ^
2025-10-02T07:07:12.3091168Z src/core/GitManager.cpp:303:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3091329Z                                                    const std::string& branch,
2025-10-02T07:07:12.3091479Z                                                                              ^
2025-10-02T07:07:12.3091889Z src/core/GitManager.cpp:305:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3092213Z     std::vector<std::string> args = {"log", "--pretty=format:%H|%h|%an|%ae|%s|%ct|%P", "-z"};
2025-10-02T07:07:12.3092359Z                                                                                              ^
2025-10-02T07:07:12.3092775Z src/core/GitManager.cpp:309:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3092871Z     }
2025-10-02T07:07:12.3092967Z      ^
2025-10-02T07:07:12.3093369Z src/core/GitManager.cpp:313:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3093472Z     }
2025-10-02T07:07:12.3093567Z      ^
2025-10-02T07:07:12.3093967Z src/core/GitManager.cpp:317:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3094067Z     }
2025-10-02T07:07:12.3094172Z      ^
2025-10-02T07:07:12.3094575Z src/core/GitManager.cpp:321:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3094671Z     }
2025-10-02T07:07:12.3094773Z      ^
2025-10-02T07:07:12.3095172Z src/core/GitManager.cpp:325:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3095268Z     }
2025-10-02T07:07:12.3095368Z      ^
2025-10-02T07:07:12.3095767Z src/core/GitManager.cpp:330:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3095862Z     }
2025-10-02T07:07:12.3095957Z      ^
2025-10-02T07:07:12.3096368Z src/core/GitManager.cpp:351:91: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3096724Z     auto result = executeGitCommand({"show", "--pretty=format:%H|%h|%an|%ae|%s|%B|%ct|%P", 
2025-10-02T07:07:12.3096868Z                                                                                           ^
2025-10-02T07:07:12.3097436Z src/core/GitManager.cpp:355:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3097539Z     }
2025-10-02T07:07:12.3097639Z      ^
2025-10-02T07:07:12.3097875Z src/core/GitManager.cpp:360:87: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3098112Z GitOperationResult GitManager::executeGitCommand(const std::vector<std::string>& args,
2025-10-02T07:07:12.3098196Z                                                                                       ^
2025-10-02T07:07:12.3098442Z src/core/GitManager.cpp:361:78: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3098550Z                                                const std::string& workingDir,
2025-10-02T07:07:12.3098630Z                                                                              ^
2025-10-02T07:07:12.3098876Z src/core/GitManager.cpp:364:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3099353Z     std::string dir = workingDir.empty() ? pImpl->repositoryPath : workingDir;
2025-10-02T07:07:12.3099442Z                                                                               ^
2025-10-02T07:07:12.3099675Z src/core/GitManager.cpp:367:54: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3099790Z     auto result = cmd.execute(gitCommand, args, dir);
2025-10-02T07:07:12.3099872Z                                                      ^
2025-10-02T07:07:12.3100100Z src/core/GitManager.cpp:378:6: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3100162Z     }
2025-10-02T07:07:12.3100218Z      ^
2025-10-02T07:07:12.3100441Z src/core/GitManager.cpp:383:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3100622Z std::vector<std::string> GitManager::parseGitOutput(const std::string& output, 
2025-10-02T07:07:12.3100709Z                                                                               ^
2025-10-02T07:07:12.3100944Z src/core/GitManager.cpp:400:31: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3101091Z     commit.message = parts[4];  // Use the subject as the full message
2025-10-02T07:07:12.3101162Z                               ^
2025-10-02T07:07:12.3101390Z src/core/GitManager.cpp:501:89: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3101627Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url, 
2025-10-02T07:07:12.3101812Z                                                                                         ^
2025-10-02T07:07:12.3102078Z src/core/GitManager.cpp:502:88: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3102210Z                                                                const std::string& path,
2025-10-02T07:07:12.3102380Z                                                                                        ^
2025-10-02T07:07:12.3102651Z src/core/GitManager.cpp:504:42: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3102987Z     return std::async(std::launch::async, [this, url, path, progressCallback]() {
2025-10-02T07:07:12.3103109Z                                          ^
2025-10-02T07:07:12.3103404Z src/core/GitManager.cpp:504:82: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3103610Z     return std::async(std::launch::async, [this, url, path, progressCallback]() {
2025-10-02T07:07:12.3103726Z                                                                                  ^
2025-10-02T07:07:12.3104051Z src/core/GitManager.cpp:505:61: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3104266Z         return cloneRepository(url, path, progressCallback);
2025-10-02T07:07:12.3104391Z                                                             ^
2025-10-02T07:07:12.3104700Z src/core/GitManager.cpp:520:117: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3105296Z     std::vector<std::string> args = {"for-each-ref", "--format=%(refname:short)|%(objectname:short)|%(committerdate:iso)|%(upstream:short)|%(upstream:track)|%(subject)"};
2025-10-02T07:07:12.3105428Z                                                                                                                     ^
2025-10-02T07:07:12.3105718Z src/core/GitManager.cpp:536:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3105889Z         if (line.empty()) continue;
2025-10-02T07:07:12.3106009Z                          ^
2025-10-02T07:07:12.3106278Z src/core/GitManager.cpp:539:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3106427Z         if (parts.size() < 6) continue;
2025-10-02T07:07:12.3106560Z                              ^
2025-10-02T07:07:12.3107005Z src/core/GitManager.cpp:645:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3155612Z         if (line.empty()) continue;
2025-10-02T07:07:12.3155770Z                          ^
2025-10-02T07:07:12.3156231Z src/core/GitManager.cpp:648:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3156373Z         if (parts.size() < 4) continue;
2025-10-02T07:07:12.3156498Z                              ^
2025-10-02T07:07:12.3156927Z src/core/GitManager.cpp:769:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3157067Z         if (line.empty()) continue;
2025-10-02T07:07:12.3157153Z                          ^
2025-10-02T07:07:12.3157412Z src/core/GitManager.cpp:796:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3157567Z             } else if (line.substr(0, 4) == "diff" || line.substr(0, 5) == "index" ||
2025-10-02T07:07:12.3157654Z                                                                                      ^
2025-10-02T07:07:12.3157915Z src/core/GitManager.cpp:797:52: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3158037Z                       line.substr(0, 3) == "+++" || line.substr(0, 3) == "---") {
2025-10-02T07:07:12.3158116Z                                                    ^
2025-10-02T07:07:12.3158352Z src/core/GitManager.cpp:822:26: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3158429Z         if (file.empty()) continue;
2025-10-02T07:07:12.3158491Z                          ^
2025-10-02T07:07:12.3158729Z src/core/GitManager.cpp:825:34: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3158813Z         if (fileParts.size() < 2) continue;
2025-10-02T07:07:12.3158878Z                                  ^
2025-10-02T07:07:12.3159107Z src/core/GitManager.cpp:862:30: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3159182Z             if (line.empty()) continue;
2025-10-02T07:07:12.3159381Z                              ^
2025-10-02T07:07:12.3159609Z src/core/GitManager.cpp:895:90: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3159761Z                 } else if (line.substr(0, 4) == "diff" || line.substr(0, 5) == "index" ||
2025-10-02T07:07:12.3159849Z                                                                                          ^
2025-10-02T07:07:12.3160096Z src/core/GitManager.cpp:896:56: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3160228Z                           line.substr(0, 3) == "+++" || line.substr(0, 3) == "---") {
2025-10-02T07:07:12.3160306Z                                                        ^
2025-10-02T07:07:12.3160554Z src/core/GitManager.cpp:1001:112: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3160806Z         "for-each-ref --format='%(refname:short)|%(objectname:short)|%(taggerdate:short)|%(subject)' refs/tags"
2025-10-02T07:07:12.3161088Z                                                                                                                ^
2025-10-02T07:07:12.3161337Z src/core/GitManager.cpp:1039:94: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3161612Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-10-02T07:07:12.3161704Z                                                                                              ^
2025-10-02T07:07:12.3161946Z src/core/GitManager.cpp:1082:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3162013Z }
2025-10-02T07:07:12.3162070Z  ^
2025-10-02T07:07:12.3162338Z src/core/SystemCommand.h:3:1: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3162410Z #include <string>
2025-10-02T07:07:12.3162467Z ^
2025-10-02T07:07:12.3162697Z src/core/SystemCommand.h:14:27: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3162923Z     bool success() const { return exitCode == 0; }
2025-10-02T07:07:12.3162991Z                           ^
2025-10-02T07:07:12.3163226Z src/core/SystemCommand.h:14:49: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3163331Z     bool success() const { return exitCode == 0; }
2025-10-02T07:07:12.3163404Z                                                 ^
2025-10-02T07:07:12.3163631Z src/core/SystemCommand.h:19:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3163702Z class SystemCommand {
2025-10-02T07:07:12.3163768Z                      ^
2025-10-02T07:07:12.3163992Z src/core/SystemCommand.h:22:22: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3164060Z     ~SystemCommand();
2025-10-02T07:07:12.3164124Z                      ^
2025-10-02T07:07:12.3164346Z src/core/SystemCommand.h:25:60: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3164500Z     SystemCommandResult execute(const std::string& command, 
2025-10-02T07:07:12.3164581Z                                                            ^
2025-10-02T07:07:12.3164807Z src/core/SystemCommand.h:26:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3164918Z                                const std::vector<std::string>& args = {},
2025-10-02T07:07:12.3165000Z                                                                          ^
2025-10-02T07:07:12.3165231Z src/core/SystemCommand.h:27:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3165333Z                                const std::string& workingDirectory = "");
2025-10-02T07:07:12.3165410Z                                                                          ^
2025-10-02T07:07:12.3165638Z src/core/SystemCommand.h:30:72: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3165823Z     SystemCommandResult executeWithCallback(const std::string& command,
2025-10-02T07:07:12.3165908Z                                                                        ^
2025-10-02T07:07:12.3166158Z src/core/SystemCommand.h:31:81: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3166264Z                                            const std::vector<std::string>& args,
2025-10-02T07:07:12.3166351Z                                                                                 ^
2025-10-02T07:07:12.3166676Z src/core/SystemCommand.h:32:74: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3166772Z                                            OutputCallback outputCallback,
2025-10-02T07:07:12.3166850Z                                                                          ^
2025-10-02T07:07:12.3167080Z src/core/SystemCommand.h:33:86: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3167194Z                                            const std::string& workingDirectory = "");
2025-10-02T07:07:12.3167367Z                                                                                      ^
2025-10-02T07:07:12.3167602Z src/core/SystemCommand.h:36:50: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3167704Z     void executeAsync(const std::string& command,
2025-10-02T07:07:12.3167774Z                                                  ^
2025-10-02T07:07:12.3167999Z src/core/SystemCommand.h:37:59: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3168099Z                      const std::vector<std::string>& args,
2025-10-02T07:07:12.3168177Z                                                           ^
2025-10-02T07:07:12.3168402Z src/core/SystemCommand.h:38:79: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3168541Z                      std::function<void(const SystemCommandResult&)> callback,
2025-10-02T07:07:12.3168698Z                                                                               ^
2025-10-02T07:07:12.3168931Z src/core/SystemCommand.h:39:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3169041Z                      const std::string& workingDirectory = "");
2025-10-02T07:07:12.3169119Z                                                                ^
2025-10-02T07:07:12.3169480Z src/core/SystemCommand.h:42:19: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3169554Z     void cancel();
2025-10-02T07:07:12.3169613Z                   ^
2025-10-02T07:07:12.3169843Z src/core/SystemCommand.h:46:38: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3169932Z     void clearEnvironmentVariables();
2025-10-02T07:07:12.3170004Z                                      ^
2025-10-02T07:07:12.3170231Z src/core/SystemCommand.h:49:36: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3170317Z     void setTimeout(int timeoutMs);
2025-10-02T07:07:12.3170395Z                                    ^
2025-10-02T07:07:12.3170621Z src/core/SystemCommand.h:52:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3170761Z     static bool isCommandAvailable(const std::string& command);
2025-10-02T07:07:12.3170844Z                                                                ^
2025-10-02T07:07:12.3171071Z src/core/SystemCommand.h:55:40: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3171158Z     static std::string getGitCommand();
2025-10-02T07:07:12.3171235Z                                        ^
2025-10-02T07:07:12.3171460Z src/core/SystemCommand.h:62:67: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3171614Z     SystemCommandResult executeWindows(const std::string& command,
2025-10-02T07:07:12.3171695Z                                                                   ^
2025-10-02T07:07:12.3171939Z src/core/SystemCommand.h:66:64: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3172078Z     SystemCommandResult executeUnix(const std::string& command,
2025-10-02T07:07:12.3172152Z                                                                ^
2025-10-02T07:07:12.3172389Z src/core/SystemCommand.h:72:2: error: code should be clang-formatted [-Wclang-format-violations]
2025-10-02T07:07:12.3172446Z }
2025-10-02T07:07:12.3172502Z  ^
2025-10-02T07:07:12.4376594Z ##[group]Run cppcheck --enable=all --suppress=missingIncludeSystem src/core/ || true
2025-10-02T07:07:12.4376857Z [36;1mcppcheck --enable=all --suppress=missingIncludeSystem src/core/ || true[0m
2025-10-02T07:07:12.4409191Z shell: /usr/bin/bash -e {0}
2025-10-02T07:07:12.4409456Z ##[endgroup]
2025-10-02T07:07:12.4686138Z Checking src/core/GitManager.cpp ...
2025-10-02T07:07:13.1591537Z src/core/GitManager.cpp:27:5: style: Class 'Impl' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
2025-10-02T07:07:13.1593582Z     Impl(const std::string& repoPath) : repositoryPath(repoPath) {
2025-10-02T07:07:13.1594351Z     ^
2025-10-02T07:07:13.1703008Z src/core/GitManager.cpp:785:35: style: Condition '!line.empty()' is always true [knownConditionTrueFalse]
2025-10-02T07:07:13.1703997Z         } else if (currentHunk && !line.empty()) {
2025-10-02T07:07:13.1704490Z                                   ^
2025-10-02T07:07:13.1705043Z src/core/GitManager.cpp:769:23: note: Assuming that condition 'line.empty()' is not redundant
2025-10-02T07:07:13.1705545Z         if (line.empty()) continue;
2025-10-02T07:07:13.1705822Z                       ^
2025-10-02T07:07:13.1706199Z src/core/GitManager.cpp:785:35: note: Condition '!line.empty()' is always true
2025-10-02T07:07:13.1706616Z         } else if (currentHunk && !line.empty()) {
2025-10-02T07:07:13.1706870Z                                   ^
2025-10-02T07:07:13.1707308Z src/core/GitManager.cpp:880:39: style: Condition '!line.empty()' is always true [knownConditionTrueFalse]
2025-10-02T07:07:13.1707779Z             } else if (currentHunk && !line.empty()) {
2025-10-02T07:07:13.1708033Z                                       ^
2025-10-02T07:07:13.1708430Z src/core/GitManager.cpp:862:27: note: Assuming that condition 'line.empty()' is not redundant
2025-10-02T07:07:13.1708831Z             if (line.empty()) continue;
2025-10-02T07:07:13.1709053Z                           ^
2025-10-02T07:07:13.1709656Z src/core/GitManager.cpp:880:39: note: Condition '!line.empty()' is always true
2025-10-02T07:07:13.1710036Z             } else if (currentHunk && !line.empty()) {
2025-10-02T07:07:13.1710278Z                                       ^
2025-10-02T07:07:13.1754678Z src/core/GitManager.cpp:394:15: style: Local variable 'commit' shadows outer function [shadowFunction]
2025-10-02T07:07:13.1755584Z     GitCommit commit;
2025-10-02T07:07:13.1755924Z               ^
2025-10-02T07:07:13.1756211Z src/core/GitManager.h:59:24: note: Shadowed declaration
2025-10-02T07:07:13.1756803Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-10-02T07:07:13.1757531Z                        ^
2025-10-02T07:07:13.1758017Z src/core/GitManager.cpp:394:15: note: Shadow variable
2025-10-02T07:07:13.1758345Z     GitCommit commit;
2025-10-02T07:07:13.1758557Z               ^
2025-10-02T07:07:13.1759017Z src/core/GitManager.cpp:580:23: style: Local variable 'commit' shadows outer function [shadowFunction]
2025-10-02T07:07:13.1759821Z             GitCommit commit;
2025-10-02T07:07:13.1760065Z                       ^
2025-10-02T07:07:13.1760348Z src/core/GitManager.h:59:24: note: Shadowed declaration
2025-10-02T07:07:13.1760842Z     GitOperationResult commit(const std::string& message, bool amend = false);
2025-10-02T07:07:13.1761252Z                        ^
2025-10-02T07:07:13.1761537Z src/core/GitManager.cpp:580:23: note: Shadow variable
2025-10-02T07:07:13.1761862Z             GitCommit commit;
2025-10-02T07:07:13.1762100Z                       ^
2025-10-02T07:07:13.1762546Z src/core/GitManager.cpp:650:18: style: Local variable 'stash' shadows outer function [shadowFunction]
2025-10-02T07:07:13.1763052Z         GitStash stash;
2025-10-02T07:07:13.1763269Z                  ^
2025-10-02T07:07:13.1763553Z src/core/GitManager.h:115:24: note: Shadowed declaration
2025-10-02T07:07:13.1764137Z     GitOperationResult stash(const std::string& message = "", bool includeUntracked = false);
2025-10-02T07:07:13.1764611Z                        ^
2025-10-02T07:07:13.1765210Z src/core/GitManager.cpp:650:18: note: Shadow variable
2025-10-02T07:07:13.1765547Z         GitStash stash;
2025-10-02T07:07:13.1765761Z                  ^
2025-10-02T07:07:13.1766758Z src/core/GitManager.cpp:546:20: performance: Inefficient usage of string::find() in condition; string::starts_with() could be faster. [stlIfStrFind]
2025-10-02T07:07:13.1767569Z         if (branch.name.find("origin/") == 0 || branch.name.find("remotes/") == 0) {
2025-10-02T07:07:13.1767890Z                    ^
2025-10-02T07:07:13.1768547Z src/core/GitManager.cpp:549:24: performance: Inefficient usage of string::find() in condition; string::starts_with() could be faster. [stlIfStrFind]
2025-10-02T07:07:13.1769106Z             if (branch.name.find("remotes/") == 0) {
2025-10-02T07:07:13.1769463Z                        ^
2025-10-02T07:07:13.1876814Z Checking src/core/GitManager.cpp: USE_LIBGIT2...
2025-10-02T07:07:13.8957906Z Checking src/core/GitManager.cpp: _WIN32...
2025-10-02T07:07:14.6051000Z 1/3 files checked 56% done
2025-10-02T07:07:14.6051400Z Checking src/core/GitUtils.cpp ...
2025-10-02T07:07:14.6522564Z src/core/GitUtils.cpp:339:18: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use resize() or pop_back() instead. [uselessCallsSubstr]
2025-10-02T07:07:14.6524190Z         result = result.substr(0, result.length() - 4);
2025-10-02T07:07:14.6524744Z                  ^
2025-10-02T07:07:14.6525721Z src/core/GitUtils.cpp:226:5: style: Consider using std::all_of or std::none_of algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:07:14.6526851Z     for (const auto& invalid : INVALID_BRANCH_CHARS) {
2025-10-02T07:07:14.6527203Z     ^
2025-10-02T07:07:14.6527720Z src/core/GitUtils.cpp:434:21: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:07:14.6528328Z         if (c == 0) {
2025-10-02T07:07:14.6528560Z                     ^
2025-10-02T07:07:14.6529119Z src/core/GitUtils.cpp:468:13: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:07:14.6530066Z             count++;
2025-10-02T07:07:14.6530298Z             ^
2025-10-02T07:07:14.6530834Z src/core/GitUtils.cpp:481:13: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:07:14.6531447Z             count++;
2025-10-02T07:07:14.6531671Z             ^
2025-10-02T07:07:14.6552110Z 2/3 files checked 80% done
2025-10-02T07:07:14.6552505Z Checking src/core/SystemCommand.cpp ...
2025-10-02T07:07:14.6723364Z src/core/SystemCommand.cpp:305:21: style: Local variable 'bytesRead' shadows outer variable [shadowVariable]
2025-10-02T07:07:14.6724099Z             ssize_t bytesRead;
2025-10-02T07:07:14.6724383Z                     ^
2025-10-02T07:07:14.6724747Z src/core/SystemCommand.cpp:293:17: note: Shadowed declaration
2025-10-02T07:07:14.6725184Z         ssize_t bytesRead;
2025-10-02T07:07:14.6725438Z                 ^
2025-10-02T07:07:14.6725828Z src/core/SystemCommand.cpp:305:21: note: Shadow variable
2025-10-02T07:07:14.6726233Z             ssize_t bytesRead;
2025-10-02T07:07:14.6726668Z                     ^
2025-10-02T07:07:14.6727395Z src/core/SystemCommand.cpp:320:33: style: Local variable 'result' shadows outer variable [shadowVariable]
2025-10-02T07:07:14.6728016Z             SystemCommandResult result;
2025-10-02T07:07:14.6728332Z                                 ^
2025-10-02T07:07:14.6728714Z src/core/SystemCommand.cpp:290:15: note: Shadowed declaration
2025-10-02T07:07:14.6729179Z         pid_t result = waitpid(pid, &status, WNOHANG);
2025-10-02T07:07:14.6729827Z               ^
2025-10-02T07:07:14.6730141Z src/core/SystemCommand.cpp:320:33: note: Shadow variable
2025-10-02T07:07:14.6730538Z             SystemCommandResult result;
2025-10-02T07:07:14.6730847Z                                 ^
2025-10-02T07:07:14.6731505Z src/core/SystemCommand.cpp:244:19: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:07:14.6732605Z             cArgs.push_back(const_cast<char*>(arg.c_str()));
2025-10-02T07:07:14.6732976Z                   ^
2025-10-02T07:07:14.6746066Z Checking src/core/SystemCommand.cpp: _WIN32...
2025-10-02T07:07:14.6890119Z src/core/SystemCommand.cpp:416:73: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
2025-10-02T07:07:14.6890799Z         if (GetFileAttributes(path.c_str()) != INVALID_FILE_ATTRIBUTES) {
2025-10-02T07:07:14.6891188Z                                                                         ^
2025-10-02T07:07:14.6902263Z 3/3 files checked 100% done
2025-10-02T07:07:14.6904431Z src/core/GitManager.cpp:65:0: style: The function 'initRepository' is never used. [unusedFunction]
2025-10-02T07:07:14.6905492Z GitOperationResult GitManager::initRepository(const std::string& path, bool bare) {
2025-10-02T07:07:14.6906178Z ^
2025-10-02T07:07:14.6906767Z src/core/GitManager.cpp:90:0: style: The function 'openRepository' is never used. [unusedFunction]
2025-10-02T07:07:14.6907731Z GitOperationResult GitManager::openRepository(const std::string& path) {
2025-10-02T07:07:14.6908320Z ^
2025-10-02T07:07:14.6908922Z src/core/GitManager.cpp:121:0: style: The function 'getRepositoryInfo' is never used. [unusedFunction]
2025-10-02T07:07:14.6910177Z GitRepository GitManager::getRepositoryInfo() const {
2025-10-02T07:07:14.6910651Z ^
2025-10-02T07:07:14.6911261Z src/core/GitManager.cpp:232:0: style: The function 'getRepositoryPath' is never used. [unusedFunction]
2025-10-02T07:07:14.6912080Z std::string GitManager::getRepositoryPath() const {
2025-10-02T07:07:14.6912570Z ^
2025-10-02T07:07:14.6913125Z src/core/GitManager.cpp:247:0: style: The function 'addAllFiles' is never used. [unusedFunction]
2025-10-02T07:07:14.6913889Z GitOperationResult GitManager::addAllFiles() {
2025-10-02T07:07:14.6914321Z ^
2025-10-02T07:07:14.6914856Z src/core/GitManager.cpp:251:0: style: The function 'removeFiles' is never used. [unusedFunction]
2025-10-02T07:07:14.6915942Z GitOperationResult GitManager::removeFiles(const std::vector<std::string>& files, bool cached) {
2025-10-02T07:07:14.6916675Z ^
2025-10-02T07:07:14.6917224Z src/core/GitManager.cpp:265:0: style: The function 'resetFiles' is never used. [unusedFunction]
2025-10-02T07:07:14.6918168Z GitOperationResult GitManager::resetFiles(const std::vector<std::string>& files) {
2025-10-02T07:07:14.6918809Z ^
2025-10-02T07:07:14.6919520Z src/core/GitManager.cpp:276:0: style: The function 'resetHard' is never used. [unusedFunction]
2025-10-02T07:07:14.6920411Z GitOperationResult GitManager::resetHard(const std::string& commitHash) {
2025-10-02T07:07:14.6921013Z ^
2025-10-02T07:07:14.6921600Z src/core/GitManager.cpp:289:0: style: The function 'commitWithFiles' is never used. [unusedFunction]
2025-10-02T07:07:14.6922547Z GitOperationResult GitManager::commitWithFiles(const std::string& message,
2025-10-02T07:07:14.6923149Z ^
2025-10-02T07:07:14.6923750Z src/core/GitManager.cpp:301:0: style: The function 'getCommitHistory' is never used. [unusedFunction]
2025-10-02T07:07:14.6924643Z std::vector<GitCommit> GitManager::getCommitHistory(int maxCount,
2025-10-02T07:07:14.6925159Z ^
2025-10-02T07:07:14.6925701Z src/core/GitManager.cpp:350:0: style: The function 'getCommit' is never used. [unusedFunction]
2025-10-02T07:07:14.6926598Z std::optional<GitCommit> GitManager::getCommit(const std::string& hash) const {
2025-10-02T07:07:14.6927186Z ^
2025-10-02T07:07:14.6927751Z src/core/GitManager.cpp:477:0: style: The function 'getLastError' is never used. [unusedFunction]
2025-10-02T07:07:14.6928530Z std::string GitManager::getLastError() const {
2025-10-02T07:07:14.6928974Z ^
2025-10-02T07:07:14.6929933Z src/core/GitManager.cpp:481:0: style: The function 'hasUncommittedChanges' is never used. [unusedFunction]
2025-10-02T07:07:14.6930802Z bool GitManager::hasUncommittedChanges() const {
2025-10-02T07:07:14.6931234Z ^
2025-10-02T07:07:14.6931849Z src/core/GitManager.cpp:485:0: style: The function 'hasUnstagedChanges' is never used. [unusedFunction]
2025-10-02T07:07:14.6932914Z bool GitManager::hasUnstagedChanges() const {
2025-10-02T07:07:14.6933351Z ^
2025-10-02T07:07:14.6933952Z src/core/GitManager.cpp:489:0: style: The function 'hasStagedChanges' is never used. [unusedFunction]
2025-10-02T07:07:14.6934832Z bool GitManager::hasStagedChanges() const {
2025-10-02T07:07:14.6935237Z ^
2025-10-02T07:07:14.6935806Z src/core/GitManager.cpp:493:0: style: The function 'setLogCallback' is never used. [unusedFunction]
2025-10-02T07:07:14.6936595Z void GitManager::setLogCallback(LogCallback callback) {
2025-10-02T07:07:14.6937202Z ^
2025-10-02T07:07:14.6937783Z src/core/GitManager.cpp:497:0: style: The function 'setProgressCallback' is never used. [unusedFunction]
2025-10-02T07:07:14.6938699Z void GitManager::setProgressCallback(ProgressCallback callback) {
2025-10-02T07:07:14.6939430Z ^
2025-10-02T07:07:14.6940096Z src/core/GitManager.cpp:501:0: style: The function 'cloneRepositoryAsync' is never used. [unusedFunction]
2025-10-02T07:07:14.6941170Z std::future<GitOperationResult> GitManager::cloneRepositoryAsync(const std::string& url,
2025-10-02T07:07:14.6941717Z ^
2025-10-02T07:07:14.6942154Z src/core/GitManager.cpp:513:0: style: The function 'getBranches' is never used. [unusedFunction]
2025-10-02T07:07:14.6942872Z std::vector<GitBranch> GitManager::getBranches(bool includeRemote) const {
2025-10-02T07:07:14.6943369Z ^
2025-10-02T07:07:14.6943801Z src/core/GitManager.cpp:606:0: style: The function 'createBranch' is never used. [unusedFunction]
2025-10-02T07:07:14.6944726Z GitOperationResult GitManager::createBranch(const std::string& name, const std::string& startPoint) {
2025-10-02T07:07:14.6945373Z ^
2025-10-02T07:07:14.6945917Z src/core/GitManager.cpp:617:0: style: The function 'deleteBranch' is never used. [unusedFunction]
2025-10-02T07:07:14.6946814Z GitOperationResult GitManager::deleteBranch(const std::string& name, bool force) {
2025-10-02T07:07:14.6947383Z ^
2025-10-02T07:07:14.6947918Z src/core/GitManager.cpp:627:0: style: The function 'checkoutBranch' is never used. [unusedFunction]
2025-10-02T07:07:14.6948778Z GitOperationResult GitManager::checkoutBranch(const std::string& name) {
2025-10-02T07:07:14.6949502Z ^
2025-10-02T07:07:14.6949987Z src/core/GitManager.cpp:632:0: style: The function 'getStashes' is never used. [unusedFunction]
2025-10-02T07:07:14.6950716Z std::vector<GitStash> GitManager::getStashes() const {
2025-10-02T07:07:14.6951106Z ^
2025-10-02T07:07:14.6951556Z src/core/GitManager.cpp:677:0: style: The function 'stash' is never used. [unusedFunction]
2025-10-02T07:07:14.6952401Z GitOperationResult GitManager::stash(const std::string& message, bool includeUntracked) {
2025-10-02T07:07:14.6953002Z ^
2025-10-02T07:07:14.6953526Z src/core/GitManager.cpp:692:0: style: The function 'stashPop' is never used. [unusedFunction]
2025-10-02T07:07:14.6954234Z GitOperationResult GitManager::stashPop(int index) {
2025-10-02T07:07:14.6954679Z ^
2025-10-02T07:07:14.6955185Z src/core/GitManager.cpp:702:0: style: The function 'stashApply' is never used. [unusedFunction]
2025-10-02T07:07:14.6955914Z GitOperationResult GitManager::stashApply(int index) {
2025-10-02T07:07:14.6956369Z ^
2025-10-02T07:07:14.6956875Z src/core/GitManager.cpp:712:0: style: The function 'stashDrop' is never used. [unusedFunction]
2025-10-02T07:07:14.6957594Z GitOperationResult GitManager::stashDrop(int index) {
2025-10-02T07:07:14.6957995Z ^
2025-10-02T07:07:14.6958461Z src/core/GitManager.cpp:722:0: style: The function 'stashClear' is never used. [unusedFunction]
2025-10-02T07:07:14.6959139Z GitOperationResult GitManager::stashClear() {
2025-10-02T07:07:14.6959730Z ^
2025-10-02T07:07:14.6960273Z src/core/GitManager.cpp:727:0: style: The function 'getCommitDiff' is never used. [unusedFunction]
2025-10-02T07:07:14.6961146Z GitDiff GitManager::getCommitDiff(const std::string& commitHash) const {
2025-10-02T07:07:14.6961692Z ^
2025-10-02T07:07:14.6962256Z src/core/GitManager.cpp:810:0: style: The function 'getCommitDiffAll' is never used. [unusedFunction]
2025-10-02T07:07:14.6963394Z std::vector<GitDiff> GitManager::getCommitDiffAll(const std::string& commitHash) const {
2025-10-02T07:07:14.6964016Z ^
2025-10-02T07:07:14.6964507Z src/core/GitManager.cpp:913:0: style: The function 'getRemotes' is never used. [unusedFunction]
2025-10-02T07:07:14.6964949Z std::vector<GitRemote> GitManager::getRemotes() const {
2025-10-02T07:07:14.6965190Z ^
2025-10-02T07:07:14.6965485Z src/core/GitManager.cpp:959:0: style: The function 'addRemote' is never used. [unusedFunction]
2025-10-02T07:07:14.6966070Z GitOperationResult GitManager::addRemote(const std::string& name, const std::string& url) {
2025-10-02T07:07:14.6966622Z ^
2025-10-02T07:07:14.6966947Z src/core/GitManager.cpp:971:0: style: The function 'removeRemote' is never used. [unusedFunction]
2025-10-02T07:07:14.6967440Z GitOperationResult GitManager::removeRemote(const std::string& name) {
2025-10-02T07:07:14.6967756Z ^
2025-10-02T07:07:14.6968095Z src/core/GitManager.cpp:983:0: style: The function 'renameRemote' is never used. [unusedFunction]
2025-10-02T07:07:14.6969122Z GitOperationResult GitManager::renameRemote(const std::string& oldName, const std::string& newName) {
2025-10-02T07:07:14.6970156Z ^
2025-10-02T07:07:14.6970673Z src/core/GitManager.cpp:996:0: style: The function 'getTags' is never used. [unusedFunction]
2025-10-02T07:07:14.6971233Z std::vector<GitTag> GitManager::getTags() const {
2025-10-02T07:07:14.6971469Z ^
2025-10-02T07:07:14.6971779Z src/core/GitManager.cpp:1039:0: style: The function 'createTag' is never used. [unusedFunction]
2025-10-02T07:07:14.6972328Z GitOperationResult GitManager::createTag(const std::string& name, const std::string& message,
2025-10-02T07:07:14.6972723Z ^
2025-10-02T07:07:14.6973014Z src/core/GitManager.cpp:1065:0: style: The function 'deleteTag' is never used. [unusedFunction]
2025-10-02T07:07:14.6973501Z GitOperationResult GitManager::deleteTag(const std::string& name) {
2025-10-02T07:07:14.6973814Z ^
2025-10-02T07:07:14.6974111Z src/core/GitManager.cpp:1077:0: style: The function 'pushTags' is never used. [unusedFunction]
2025-10-02T07:07:14.6974605Z GitOperationResult GitManager::pushTags(const std::string& remote) {
2025-10-02T07:07:14.6974911Z ^
2025-10-02T07:07:14.6975198Z src/core/GitManager.h:29:0: style: The function 'hasError' is never used. [unusedFunction]
2025-10-02T07:07:14.6975631Z     bool hasError() const { return !error.empty() || exitCode != 0; }
2025-10-02T07:07:14.6975918Z ^
2025-10-02T07:07:14.6976188Z src/core/GitTypes.h:37:0: style: The function 'isMerge' is never used. [unusedFunction]
2025-10-02T07:07:14.6976593Z     bool isMerge() const { return parentHashes.size() > 1; }
2025-10-02T07:07:14.6976860Z ^
2025-10-02T07:07:14.6977125Z src/core/GitUtils.cpp:48:0: style: The function 'join' is never used. [unusedFunction]
2025-10-02T07:07:14.6977632Z std::string GitUtils::join(const std::vector<std::string>& parts, const std::string& delimiter) {
2025-10-02T07:07:14.6978001Z ^
2025-10-02T07:07:14.6978278Z src/core/GitUtils.cpp:73:0: style: The function 'toUpper' is never used. [unusedFunction]
2025-10-02T07:07:14.6978688Z std::string GitUtils::toUpper(const std::string& str) {
2025-10-02T07:07:14.6978935Z ^
2025-10-02T07:07:14.6979438Z src/core/GitUtils.cpp:80:0: style: The function 'normalizePath' is never used. [unusedFunction]
2025-10-02T07:07:14.6979957Z std::string GitUtils::normalizePath(const std::string& path) {
2025-10-02T07:07:14.6980230Z ^
2025-10-02T07:07:14.6980519Z src/core/GitUtils.cpp:89:0: style: The function 'getFileName' is never used. [unusedFunction]
2025-10-02T07:07:14.6980950Z std::string GitUtils::getFileName(const std::string& path) {
2025-10-02T07:07:14.6981216Z ^
2025-10-02T07:07:14.6981508Z src/core/GitUtils.cpp:99:0: style: The function 'getDirectory' is never used. [unusedFunction]
2025-10-02T07:07:14.6981939Z std::string GitUtils::getDirectory(const std::string& path) {
2025-10-02T07:07:14.6982211Z ^
2025-10-02T07:07:14.6982487Z src/core/GitUtils.cpp:104:0: style: The function 'joinPaths' is never used. [unusedFunction]
2025-10-02T07:07:14.6983131Z std::string GitUtils::joinPaths(const std::string& path1, const std::string& path2) {
2025-10-02T07:07:14.6983476Z ^
2025-10-02T07:07:14.6983780Z src/core/GitUtils.cpp:109:0: style: The function 'isAbsolutePath' is never used. [unusedFunction]
2025-10-02T07:07:14.6984223Z bool GitUtils::isAbsolutePath(const std::string& path) {
2025-10-02T07:07:14.6984475Z ^
2025-10-02T07:07:14.6984792Z src/core/GitUtils.cpp:114:0: style: The function 'makeRelativePath' is never used. [unusedFunction]
2025-10-02T07:07:14.6985325Z std::string GitUtils::makeRelativePath(const std::string& from, const std::string& to) {
2025-10-02T07:07:14.6985832Z ^
2025-10-02T07:07:14.6986119Z src/core/GitUtils.cpp:124:0: style: The function 'shortenHash' is never used. [unusedFunction]
2025-10-02T07:07:14.6986589Z std::string GitUtils::shortenHash(const std::string& hash, int length) {
2025-10-02T07:07:14.6986898Z ^
2025-10-02T07:07:14.6987190Z src/core/GitUtils.cpp:131:0: style: The function 'isValidHash' is never used. [unusedFunction]
2025-10-02T07:07:14.6987616Z bool GitUtils::isValidHash(const std::string& hash) {
2025-10-02T07:07:14.6987862Z ^
2025-10-02T07:07:14.6988189Z src/core/GitUtils.cpp:139:0: style: The function 'formatCommitMessage' is never used. [unusedFunction]
2025-10-02T07:07:14.6988739Z std::string GitUtils::formatCommitMessage(const std::string& message, int maxLength) {
2025-10-02T07:07:14.6989098Z ^
2025-10-02T07:07:14.6989595Z src/core/GitUtils.cpp:156:0: style: The function 'formatAuthor' is never used. [unusedFunction]
2025-10-02T07:07:14.6990110Z std::string GitUtils::formatAuthor(const std::string& name, const std::string& email) {
2025-10-02T07:07:14.6990459Z ^
2025-10-02T07:07:14.6990770Z src/core/GitUtils.cpp:169:0: style: The function 'formatTimestamp' is never used. [unusedFunction]
2025-10-02T07:07:14.6991327Z std::string GitUtils::formatTimestamp(const std::chrono::system_clock::time_point& timestamp) {
2025-10-02T07:07:14.6991700Z ^
2025-10-02T07:07:14.6992030Z src/core/GitUtils.cpp:176:0: style: The function 'formatRelativeTime' is never used. [unusedFunction]
2025-10-02T07:07:14.6992608Z std::string GitUtils::formatRelativeTime(const std::chrono::system_clock::time_point& timestamp) {
2025-10-02T07:07:14.6992987Z ^
2025-10-02T07:07:14.6993302Z src/core/GitUtils.cpp:221:0: style: The function 'isValidBranchName' is never used. [unusedFunction]
2025-10-02T07:07:14.6993757Z bool GitUtils::isValidBranchName(const std::string& name) {
2025-10-02T07:07:14.6994027Z ^
2025-10-02T07:07:14.6994343Z src/core/GitUtils.cpp:235:0: style: The function 'sanitizeBranchName' is never used. [unusedFunction]
2025-10-02T07:07:14.6994842Z std::string GitUtils::sanitizeBranchName(const std::string& name) {
2025-10-02T07:07:14.6995127Z ^
2025-10-02T07:07:14.6995446Z src/core/GitUtils.cpp:258:0: style: The function 'getShortBranchName' is never used. [unusedFunction]
2025-10-02T07:07:14.6995938Z std::string GitUtils::getShortBranchName(const std::string& fullName) {
2025-10-02T07:07:14.6996235Z ^
2025-10-02T07:07:14.6996550Z src/core/GitUtils.cpp:271:0: style: The function 'isRemoteBranch' is never used. [unusedFunction]
2025-10-02T07:07:14.6997008Z bool GitUtils::isRemoteBranch(const std::string& branchName) {
2025-10-02T07:07:14.6997288Z ^
2025-10-02T07:07:14.6997606Z src/core/GitUtils.cpp:275:0: style: The function 'getRemoteFromBranch' is never used. [unusedFunction]
2025-10-02T07:07:14.6998114Z std::string GitUtils::getRemoteFromBranch(const std::string& branchName) {
2025-10-02T07:07:14.6998432Z ^
2025-10-02T07:07:14.6998730Z src/core/GitUtils.cpp:290:0: style: The function 'isValidGitUrl' is never used. [unusedFunction]
2025-10-02T07:07:14.6999172Z bool GitUtils::isValidGitUrl(const std::string& url) {
2025-10-02T07:07:14.6999637Z ^
2025-10-02T07:07:14.6999977Z src/core/GitUtils.cpp:313:0: style: The function 'extractRepoNameFromUrl' is never used. [unusedFunction]
2025-10-02T07:07:14.7000484Z std::string GitUtils::extractRepoNameFromUrl(const std::string& url) {
2025-10-02T07:07:14.7000792Z ^
2025-10-02T07:07:14.7001229Z src/core/GitUtils.cpp:351:0: style: The function 'normalizeGitUrl' is never used. [unusedFunction]
2025-10-02T07:07:14.7001702Z std::string GitUtils::normalizeGitUrl(const std::string& url) {
2025-10-02T07:07:14.7001979Z ^
2025-10-02T07:07:14.7002265Z src/core/GitUtils.cpp:371:0: style: The function 'isHttpsUrl' is never used. [unusedFunction]
2025-10-02T07:07:14.7002677Z bool GitUtils::isHttpsUrl(const std::string& url) {
2025-10-02T07:07:14.7002917Z ^
2025-10-02T07:07:14.7003198Z src/core/GitUtils.cpp:375:0: style: The function 'isSshUrl' is never used. [unusedFunction]
2025-10-02T07:07:14.7003754Z bool GitUtils::isSshUrl(const std::string& url) {
2025-10-02T07:07:14.7003997Z ^
2025-10-02T07:07:14.7004302Z src/core/GitUtils.cpp:380:0: style: The function 'isValidEmail' is never used. [unusedFunction]
2025-10-02T07:07:14.7004740Z bool GitUtils::isValidEmail(const std::string& email) {
2025-10-02T07:07:14.7004999Z ^
2025-10-02T07:07:14.7005326Z src/core/GitUtils.cpp:385:0: style: The function 'isValidCommitMessage' is never used. [unusedFunction]
2025-10-02T07:07:14.7005828Z bool GitUtils::isValidCommitMessage(const std::string& message) {
2025-10-02T07:07:14.7006117Z ^
2025-10-02T07:07:14.7006411Z src/core/GitUtils.cpp:399:0: style: The function 'isBinaryFile' is never used. [unusedFunction]
2025-10-02T07:07:14.7006840Z bool GitUtils::isBinaryFile(const std::string& filePath) {
2025-10-02T07:07:14.7007104Z ^
2025-10-02T07:07:14.7007422Z src/core/GitUtils.cpp:404:0: style: The function 'detectFileEncoding' is never used. [unusedFunction]
2025-10-02T07:07:14.7007915Z std::string GitUtils::detectFileEncoding(const std::string& filePath) {
2025-10-02T07:07:14.7008224Z ^
2025-10-02T07:07:14.7008524Z src/core/GitUtils.cpp:443:0: style: The function 'colorizeGitDiff' is never used. [unusedFunction]
2025-10-02T07:07:14.7008988Z std::string GitUtils::colorizeGitDiff(const std::string& diff) {
2025-10-02T07:07:14.7009448Z ^
2025-10-02T07:07:14.7009803Z src/core/GitUtils.cpp:462:0: style: The function 'countLinesAdded' is never used. [unusedFunction]
2025-10-02T07:07:14.7010251Z int GitUtils::countLinesAdded(const std::string& diff) {
2025-10-02T07:07:14.7010503Z ^
2025-10-02T07:07:14.7010816Z src/core/GitUtils.cpp:475:0: style: The function 'countLinesRemoved' is never used. [unusedFunction]
2025-10-02T07:07:14.7011265Z int GitUtils::countLinesRemoved(const std::string& diff) {
2025-10-02T07:07:14.7011533Z ^
2025-10-02T07:07:14.7011840Z src/core/GitUtils.cpp:488:0: style: The function 'extractHunkHeader' is never used. [unusedFunction]
2025-10-02T07:07:14.7012316Z std::string GitUtils::extractHunkHeader(const std::string& line) {
2025-10-02T07:07:14.7012602Z ^
2025-10-02T07:07:14.7012906Z src/core/GitUtils.cpp:499:0: style: The function 'formatProgress' is never used. [unusedFunction]
2025-10-02T07:07:14.7013448Z std::string GitUtils::formatProgress(int current, int total, const std::string& operation) {
2025-10-02T07:07:14.7013806Z ^
2025-10-02T07:07:14.7014148Z src/core/GitUtils.cpp:515:0: style: The function 'formatTransferSpeed' is never used. [unusedFunction]
2025-10-02T07:07:14.7014645Z std::string GitUtils::formatTransferSpeed(size_t bytesPerSecond) {
2025-10-02T07:07:14.7014934Z ^
2025-10-02T07:07:14.7015235Z src/core/GitUtils.cpp:519:0: style: The function 'formatDuration' is never used. [unusedFunction]
2025-10-02T07:07:14.7015745Z std::string GitUtils::formatDuration(const std::chrono::milliseconds& duration) {
2025-10-02T07:07:14.7016080Z ^
2025-10-02T07:07:14.7016431Z src/core/SystemCommand.cpp:343:0: style: The function 'executeWithCallback' is never used. [unusedFunction]
2025-10-02T07:07:14.7017125Z SystemCommandResult SystemCommand::executeWithCallback(const std::string& command, const std::vector<std::string>& args,
2025-10-02T07:07:14.7017593Z ^
2025-10-02T07:07:14.7017912Z src/core/SystemCommand.cpp:358:0: style: The function 'executeAsync' is never used. [unusedFunction]
2025-10-02T07:07:14.7018479Z void SystemCommand::executeAsync(const std::string& command, const std::vector<std::string>& args,
2025-10-02T07:07:14.7018867Z ^
2025-10-02T07:07:14.7019579Z src/core/SystemCommand.cpp:383:0: style: The function 'setEnvironmentVariable' is never used. [unusedFunction]
2025-10-02T07:07:14.7020258Z void SystemCommand::setEnvironmentVariable(const std::string& name, const std::string& value) {
2025-10-02T07:07:14.7020656Z ^
2025-10-02T07:07:14.7021036Z src/core/SystemCommand.cpp:387:0: style: The function 'clearEnvironmentVariables' is never used. [unusedFunction]
2025-10-02T07:07:14.7021540Z void SystemCommand::clearEnvironmentVariables() {
2025-10-02T07:07:14.7021785Z ^
2025-10-02T07:07:14.7022215Z src/core/SystemCommand.cpp:391:0: style: The function 'setTimeout' is never used. [unusedFunction]
2025-10-02T07:07:14.7022645Z void SystemCommand::setTimeout(int timeoutMs) {
2025-10-02T07:07:14.7022878Z ^
2025-10-02T07:07:14.7023209Z src/core/SystemCommand.cpp:405:0: style: The function 'getGitCommand' is never used. [unusedFunction]
2025-10-02T07:07:14.7023724Z std::string SystemCommand::getGitCommand() {
2025-10-02T07:07:14.7023953Z ^
2025-10-02T07:07:14.7024256Z src/core/SystemCommand.h:14:0: style: The function 'success' is never used. [unusedFunction]
2025-10-02T07:07:14.7024663Z     bool success() const { return exitCode == 0; }
2025-10-02T07:07:14.7024895Z ^
2025-10-02T07:07:14.7025269Z nofile:0:0: information: Active checkers: 161/592 (use --checkers-report=<filename> to see details) [checkersReport]
2025-10-02T07:07:14.7025647Z 
2025-10-02T07:07:14.7095353Z Post job cleanup.
2025-10-02T07:07:14.8023302Z [command]/usr/bin/git version
2025-10-02T07:07:14.8059120Z git version 2.51.0
2025-10-02T07:07:14.8103818Z Temporarily overriding HOME='/home/runner/work/_temp/d6f4c317-a5b8-4e66-be53-18becf1c5e7d' before making global git config changes
2025-10-02T07:07:14.8105094Z Adding repository directory to the temporary git global config as a safe directory
2025-10-02T07:07:14.8116871Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/VersionTools/VersionTools
2025-10-02T07:07:14.8151039Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-10-02T07:07:14.8183348Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-10-02T07:07:14.8408301Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-10-02T07:07:14.8428250Z http.https://github.com/.extraheader
2025-10-02T07:07:14.8440357Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-10-02T07:07:14.8470285Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-10-02T07:07:14.8789927Z Cleaning up orphan processes
